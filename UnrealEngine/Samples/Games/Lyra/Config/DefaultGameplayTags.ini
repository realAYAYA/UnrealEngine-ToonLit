[/Script/GameplayTags.GameplayTagsSettings]
ImportTagsFromConfig=True
WarnOnInvalidTags=True
ClearInvalidTags=False
FastReplication=True
InvalidTagCharacters="\"\',"
+GameplayTagTableList=/Game/ContextEffects/DT_AnimEffectTags.DT_AnimEffectTags
+GameplayTagTableList=/Game/ContextEffects/DT_SurfaceTypes.DT_SurfaceTypes
NumBitsForContainerSize=6
NetIndexFirstBitSegment=16
+GameplayTagList=(Tag="Ability.Dash.Duration.Message",DevComment="Dash Cooldown Duration")
+GameplayTagList=(Tag="Ability.Grenade.Duration.Message",DevComment="Cooldown Grenade")
+GameplayTagList=(Tag="Ability.Interaction.Activate",DevComment="")
+GameplayTagList=(Tag="Ability.Respawn.Completed.Message",DevComment="Message tag broadcast when a respawn process is completed.")
+GameplayTagList=(Tag="Ability.Respawn.Duration.Message",DevComment="")
+GameplayTagList=(Tag="Ability.Type",DevComment="Applied to Gameplay Abilities to indicate a functional category")
+GameplayTagList=(Tag="Ability.Type.Action",DevComment="Action type abilities cause the avatar to perform an action in the game world, possibly involving equipment such as a weapon")
+GameplayTagList=(Tag="Ability.Type.Action.ADS",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Dash",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Drop",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Emote",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Grenade",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Jump",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Melee",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.Reload",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Action.WeaponFire",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Info",DevComment="Info abilities are used to summon information for the players, and do not directly affect gameplay")
+GameplayTagList=(Tag="Ability.Type.Info.ShowLeaderboard",DevComment="")
+GameplayTagList=(Tag="Ability.Type.Passive",DevComment="Passive abilities are always active on the owner")
+GameplayTagList=(Tag="Ability.Type.Passive.AutoReload",DevComment="Polls for active weapon to be empty, triggers reload input if enough time has elapsed")
+GameplayTagList=(Tag="Ability.Type.Passive.AutoRespawn",DevComment="Passive ability that listens for a player\'s pawn to die or otherwise be removed from play, and automatically respawns.")
+GameplayTagList=(Tag="Ability.Type.Passive.ChangeQuickbarSlot",DevComment="Handles requests for any type of slot change, whether directly indexed or cycling forward/backward")
+GameplayTagList=(Tag="Ability.Type.StatusChange",DevComment="Abilities of this type are used when a status if imposed on the avatar or owner, such as death or spawning")
+GameplayTagList=(Tag="Ability.Type.StatusChange.Death",DevComment="Covers the transition period when health goes to 0 until the avatar is removed from the world")
+GameplayTagList=(Tag="Ability.Type.StatusChange.Spawning",DevComment="Covers the time when a new hero is created, spawning into the world, and when it\'s actively controllable")
+GameplayTagList=(Tag="Cosmetic",DevComment="")
+GameplayTagList=(Tag="Cosmetic.AnimationStyle.Feminine",DevComment="")
+GameplayTagList=(Tag="Cosmetic.AnimationStyle.Masculine",DevComment="")
+GameplayTagList=(Tag="Cosmetic.BodyStyle.Medium",DevComment="")
+GameplayTagList=(Tag="Gameplay.Zone.WeakSpot",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Character.DamageTaken",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Character.Dash",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Character.Dash.Cooldown",DevComment="Cooldown for character dash")
+GameplayTagList=(Tag="GameplayCue.Character.Death",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Character.Heal",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Character.Melee.Cooldown",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Test.Burst",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Test.BurstLatent",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Test.Looping",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Weapon.Grenade.Cooldown",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Weapon.Grenade.Detonate",DevComment="Grenade Explosion")
+GameplayTagList=(Tag="GameplayCue.Weapon.Melee.Hit",DevComment="hit melee CS, placed on default as the GCN is there -needs to move to Shooter")
+GameplayTagList=(Tag="GameplayCue.Weapon.Pistol.Fire",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Weapon.Rifle.Fire",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Weapon.Rifle.Impact",DevComment="")
+GameplayTagList=(Tag="GameplayCue.Weapon.Shotgun.Fire",DevComment="")
+GameplayTagList=(Tag="GameplayCue.World.Launcher.Activate",DevComment="Fires when Launcher (Up or Forward) activates")
+GameplayTagList=(Tag="GameplayCue.World.Teleporter.Activate",DevComment="Triggered when teleporter is activated")
+GameplayTagList=(Tag="GameplayEffect.DamageTrait.Instant",DevComment="")
+GameplayTagList=(Tag="GameplayEffect.DamageTrait.Periodic",DevComment="")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Basic",DevComment="")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Grenade",DevComment="Damage effect coming from a grenade explosion")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Melee",DevComment="Damage effect coming from a melee strike")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Pistol",DevComment="Damage effect coming from a pistol bullet")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Rifle",DevComment="Damage effect coming from a rifle bullet")
+GameplayTagList=(Tag="GameplayEffect.DamageType.Shotgun",DevComment="Damage effect coming from shotgun pellets")
+GameplayTagList=(Tag="GameplayEffect.Heal.Instant",DevComment="")
+GameplayTagList=(Tag="GameplayEffect.Heal.Periodic",DevComment="")
+GameplayTagList=(Tag="GameplayEvent.MeleeHit",DevComment="")
+GameplayTagList=(Tag="GameSettings.Action.EditSafeZone",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.ExtraEquipment",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.InfrequentAbilities",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.LeftSideTouchInputs",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.LeftSideTouchRegion",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.RightSideTouchInputs",DevComment="")
+GameplayTagList=(Tag="HUD.Slot.RightSideTouchRegion",DevComment="")
+GameplayTagList=(Tag="InputTag.Ability.Dash",DevComment="")
+GameplayTagList=(Tag="InputTag.Ability.Heal",DevComment="")
+GameplayTagList=(Tag="InputTag.Ability.Melee",DevComment="Melee Input")
+GameplayTagList=(Tag="InputTag.Ability.Quickslot.Drop",DevComment="")
+GameplayTagList=(Tag="InputTag.Jump",DevComment="")
+GameplayTagList=(Tag="InputTag.Weapon.ADS",DevComment="")
+GameplayTagList=(Tag="InputTag.Weapon.Fire",DevComment="")
+GameplayTagList=(Tag="InputTag.Weapon.FireAuto",DevComment="")
+GameplayTagList=(Tag="InputTag.Weapon.Grenade",DevComment="")
+GameplayTagList=(Tag="InputTag.Weapon.Reload",DevComment="")
+GameplayTagList=(Tag="Lyra.Damage.Taken.Message",DevComment="")
+GameplayTagList=(Tag="Lyra.HUD.PlayerHUD",DevComment="")
+GameplayTagList=(Tag="Lyra.HUD.TempTopWidgets",DevComment="")
+GameplayTagList=(Tag="Lyra.Player",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.BinauralSettingControlledByOS",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.CanExitApplication",DevComment="Can we show a quit option to exit the application?")
+GameplayTagList=(Tag="Platform.Trait.Input.PrimarlyController",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.Input.PrimarlyTouchScreen",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.Input.SupportsMouseAndKeyboard",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.Input.HardwareCursor",DevComment="Does this platform use a hardware mouse cursor?")
+GameplayTagList=(Tag="Platform.Trait.SupportsBackgroundAudio",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.SupportsChangingAudioOutputDevice",DevComment="")
+GameplayTagList=(Tag="Platform.Trait.SupportsWindowedMode",DevComment="Can we switch between fullscreen and windowed modes?")
+GameplayTagList=(Tag="ShooterGame.GamePhase.MatchBeginCountdown",DevComment="When this tag is used in a gameplay message, an expected duration is included in the payload.")
+GameplayTagList=(Tag="Status.SpawningIn",DevComment="Covers the time when the pawn is created until it is controlled and unlocked for play")
+GameplayTagList=(Tag="UI.Action.Back",DevComment="")
+GameplayTagList=(Tag="UI.Layer.Game",DevComment="")
+GameplayTagList=(Tag="UI.Layer.GameMenu",DevComment="")
+GameplayTagList=(Tag="UI.Layer.Menu",DevComment="")
+GameplayTagList=(Tag="UI.Layer.Modal",DevComment="")

