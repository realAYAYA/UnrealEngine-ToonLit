// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#define INITGUID
#include <guiddef.h>

namespace Electra
{

#if (WINVER < _WIN32_WINNT_WIN8)
//const GUID MF_SA_D3D11_AWARE = { 0x206b4fc8, 0xfcf9, 0x4c51, { 0xaf, 0xe3, 0x97, 0x64, 0x36, 0x9e, 0x33, 0xa0 } };
DEFINE_GUID(MF_SA_D3D11_AWARE, 0x206b4fc8, 0xfcf9, 0x4c51, 0xaf, 0xe3, 0x97, 0x64, 0x36, 0x9e, 0x33, 0xa0);
#endif


// Define the H.264 class GUID ourselves. Using the CLSID_CMSH264DecoderMFT from wmcodecdsp.h requires linking with some lib again...
//const GUID MFTmsH264Decoder					= { 0x62CE7E72, 0x4C71, 0x4D20, { 0xB1, 0x5D, 0x45, 0x28, 0x31, 0xA8, 0x7D, 0x9D } };
DEFINE_GUID(MFTmsH264Decoder, 0x62CE7E72, 0x4C71, 0x4D20, 0xB1, 0x5D, 0x45, 0x28, 0x31, 0xA8, 0x7D, 0x9D);

//const GUID CODECAPI_AVLowLatencyMode		= { 0x9c27891a, 0xed7a, 0x40e1, { 0x88, 0xe8, 0xb2, 0x27, 0x27, 0xa0, 0x24, 0xee } };
DEFINE_GUID(CODECAPI_AVLowLatencyMode, 0x9c27891a, 0xed7a, 0x40e1, 0x88, 0xe8, 0xb2, 0x27, 0x27, 0xa0, 0x24, 0xee);

//const GUID MF_MT_DECODER_USE_MAX_RESOLUTION	= { 0x4c547c24, 0xaf9a, 0x4f38, { 0x96, 0xad, 0x97, 0x87, 0x73, 0xcf, 0x53, 0xe7 } };
DEFINE_GUID(MF_MT_DECODER_USE_MAX_RESOLUTION, 0x4c547c24, 0xaf9a, 0x4f38, 0x96, 0xad, 0x97, 0x87, 0x73, 0xcf, 0x53, 0xe7);


//DEFINE_GUID(MF_MT_DEFAULT_STRIDE,    0x644b4e48, 0x1e02, 0x4516, 0xb0, 0xeb, 0xc0, 0x1c, 0xa9, 0xd4, 0x9a, 0xc6);
//static const GUID AVDecVideoMaxCodedWidth   = { 0x5ae557b8, 0x77af, 0x41f5, { 0x9f, 0xa6, 0x4d, 0xb2, 0xfe, 0x1d, 0x4b, 0xca } };
//static const GUID AVDecVideoMaxCodedHeight  = { 0x7262a16a, 0xd2dc, 0x4e75, { 0x9b, 0xa8, 0x65, 0xc0, 0xc6, 0xd3, 0x2b, 0x13 } };

//#define MFSampleExtension_ClosedCaption_CEA708_MAX_SIZE	256
//DEFINE_GUID(MFSampleExtension_ClosedCaption_CEA708, 0x26f09068, 0xe744, 0x47dc, 0xaa,0x03,0xdb,0xf2,0x04,0x03,0xbd,0xe6);
//DEFINE_GUID(MF_USER_DATA_PAYLOAD,	0xd1d4985d, 0xdc92, 0x457a, 0xb3,0xa0,0x65,0x1a,0x33,0xa3,0x10,0x47);

}
