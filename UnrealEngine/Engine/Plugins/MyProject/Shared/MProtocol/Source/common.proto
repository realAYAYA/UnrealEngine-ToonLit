// PB2BP: BP_FILE_NAME=ZPbCommon
syntax = "proto3";
package idlepb;

import "defines.proto";
import "net.proto";

message Int64Data {
	int64 value = 1;
}

message Vector2 {
	float x = 1;
	float y = 2;
}

message Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}

message Color {
	float r = 1;
	float g = 2;
	float b = 3;
	float a = 4;
}

message Int64Pair {
	int64 key = 1;
	int64 value = 2;
}

message StringKeyInt32ValueEntry {
	string key = 1;
	int32 value = 2;
}

message MapValueInt32 {
	int32 key = 1;
	int32 value = 2;
}

message StringInt64Pair {
	string str = 1;
	int64 value = 2;
}

message AbilityEffectData {
    int32 type = 1;
	float duration = 2;
	float period = 3;
	int32 duration_policy = 4;
	float starttime_world = 5;
	int64 starttime_utc = 6;
	float x = 10;
	float y = 11;
	float z = 12;
	float m = 13;
	float n = 14;
}

// Replication Target Type
enum ReplicationTargetType {
	RTT_Self = 0;   // 自己所在客户端
	RTT_World = 1;  // 当前场景
}

// 系统信息显示样式
enum SystemNoticeStyle { 
	SystemNoticeStyle_None = 0;  // 未知
	SystemNoticeStyle_Dialog = 1;  // 弹框提示
	SystemNoticeStyle_ScreenCenter = 2;  // 屏幕中央提示
}

enum SystemNoticeId {
	SystemNoticeId_None = 0;  // 未知
	SystemNoticeId_AddItem = 7;  // 添加道具
}


message GameStatData {
	int32 type = 1;  // 属性类型 GameStatType
	float value = 2;  // 属性数值
}

message GameStatsData {
	repeated GameStatData stats = 1;
}

// 属性集
message GameStatsModuleData {
	int32 type = 1;  // 模块类型 (GameStatsModuleType or ItemStatsModuleType)
	GameStatsData stats = 2;  // 模块属性
}

// 属性集模块
message GameStatsAllModuleData {
	repeated GameStatsModuleData all_module = 1;
}

// 角色属性 -- 本结构仅只为兼容性存在，新版请使用 GameStatsData
message RoleAttribute {
	float health = 1;  /** 气血 */
	float max_health = 2;  /** 气血上限 */
	float mana = 3;  /** 真元 */
	float max_mana = 4;	 /** 真元上限 */
	float mind = 5;  /** 神识 */
	float strength = 6;  /** 体魄 */
	float intellect = 7;  /** 内息 */
	float agility = 8;  /** 身法 */
	float move_speed = 9;  /** 移动速度 */	
	float phy_att = 10;  /** 物攻 */
	float phy_def = 11;  /** 物防 */
	float mag_att = 12;  /** 法攻 */
	float mag_def = 13;  /** 法防 */
	float phy_dodge = 14;  /** 物理闪避 */
	float mag_dodge = 15;  /** 魔法闪避 */
	float phy_hit = 16;  /** 物理命中 */
	float mag_hit = 17;  /** 魔法命中 */
	float crit = 18;  /** 会心 */
	float crit_def = 19;  /** 会心抵抗 */
	float hp_recover_percent = 20;  /** 气血回复百分比 */
	float mp_recover_percent = 21;  /** 真元回复百分比 */
	float crit_coef = 22;  /** 会心倍率 */
	float crit_block = 23;  /** 会心格挡 */	
	float crit_additional_damage = 24;  /** 会心附伤 */
	float arena_money_add_percent = 25;  /** 秘境获得灵石加成 */
	float mag_break = 26;  // 法术破防
	float phy_break = 27;  // 物理破防
	float mag_block = 28;  // 法术格挡
	float phy_block = 29;  // 物理格挡
	float fen_qi = 30;  // 奋起

	float tuna_num = 200;  /** 每日吐纳次数上限 */
	float tuna_add_percent = 201;  /** 吐纳加成 */
	float medicine_num = 202;  /** 每日修为丹药服用次数上限 */
	float medicine_add_percent = 203;  /** 修为丹药服用加成 */
	float baseqi_add_percent = 204;  /** 洞府灵气加成 */	
	float shen_tong_damage_to_player_add_percent = 205;  /** 攻击修士神通伤害加成 */
	float shen_tong_damage_to_player_reduce_percent = 206;  /** 受到修士神通伤害减免 */
	float fa_bao_damage_to_player_add_percent = 207;  /** 攻击修士法宝伤害加成 */
	float fa_bao_damage_to_player_reduce_percent = 208;  /** 受到修士法宝伤害减免 */
	float phy_damage_add_percent = 209;  // 造成物理伤害增加
	float mag_damage_add_percent = 210;  // 造成法术伤害增加
	float phy_damage_reduce_percent = 211;  // 受到物理伤害减少
	float mag_damage_reduce_percent = 212;  // 受到法术伤害减少
	float attack_monster_damage_add_percent = 213;  // 攻击怪物伤害加成
	float take_monster_damage_reduce_percent = 214;  // 受怪物伤害减免
	float base_hp_add_percent = 215;  // 基础气血加成
	float base_mp_add_percent = 216;  // 基础真元加成
	float base_phy_att_add_percent = 217;  // 基础物攻加成
	float base_mag_att_add_percent = 218;  // 基础法攻加成
	float base_phy_def_add_percent = 219;  // 基础物防加成
	float base_mag_def_add_percent = 220;  // 基础法防加成
	float base_phy_hit_add_percent = 221;  // 基础物理命中加成
	float base_mag_hit_add_percent = 222;  // 基础法术命中加成
	float base_phy_dodge_add_percent = 223;  // 基础物理闪避加成 
	float base_mag_dodge_add_percent = 224;  // 基础法术闪避加成
	float base_crit_add_percent = 225;  // 基础会心值加成
	float base_crit_def_add_percent = 226;  // 基础会心抗性值加成

}

message RankData {
	int32 rank = 1;  // 等级
	float exp = 2;  // 经验
	int32 layer = 3;  // 级别 - 重
	int32 stage = 4;  // 级别 - 期
	int32 degree = 5;  // 级别 - 境
	BreakthroughType breakthrough_type = 6;  // 需突破类型
	int32 lose_add_probability = 7;  // 突破失败增加的成功率
	int64 lose_recover_timestamp = 8;  // 突破失败恢复时间
	int64 stage_add_att = 9;  // 加经验获得的攻击力（物/魔）
}

// 每日吐纳奖励
message BreathingReward {
	int32 index = 1; // 生成奖励下标
	repeated int32 item_id = 2; // 奖励道具id
	repeated int32 num = 3; // 奖励数目
	int32 dir = 4; // 生成时的修炼方向，用于颜色显示
	bool received = 5; // 已领取
}

// 公共修炼数据，独立于修炼方向
message CommonCultivationData {
	repeated BreathingReward breathing_rewards = 1;
	bool merge_breathing = 2;// 是否合并吐纳
}

message CultivationData {
	RankData rank_data = 1;  /** 等级经验数据 */
}

// ============================================================================

// 本日计数
enum RoleDailyCounterType {
	RDCT_BreathingExerciseTimes = 0;  // 今日吐纳次数
	RDCT_TakeMedicineTimes = 1;  // 今日服药次数
	RDCT_LeaderboardClickLikeNum = 2;  // 排行榜今日已点赞次数
	RDCT_AlchemyTimes = 3;  // 今日炼丹次数
	RDCT_ForgeTimes = 4;  // 今日炼器次数
	RDCT_UseExtraMaterialsTimes = 5;  // 今日炼器使用辅材次数
	RDCT_TotalBreathingExerciseTimes = 6;  // 今日总共吐纳次数
	RDCT_ForgeProduceQuality_None = 7;  // 今日炼制产出品质统计-其他
	RDCT_ForgeProduceQuality_White = 8;  // 今日炼制产出品质统计-白
	RDCT_ForgeProduceQuality_Green = 9;  // 今日炼制产出品质统计-绿
	RDCT_ForgeProduceQuality_Blue = 10;  // 今日炼制产出品质统计-蓝
	RDCT_ForgeProduceQuality_Purple = 11;  // 今日炼制产出品质统计-紫
	RDCT_ForgeProduceQuality_Orange = 12;  // 今日炼制产出品质统计-橙
	RDCT_ForgeProduceQuality_Red = 13;  // 今日炼制产出品质统计-红
	RDCT_GiftPackage_Other = 14;  		// 今日礼包打开数目统计-其它
	RDCT_GiftPackage_Phy = 15;  		// 今日礼包打开数目统计-炼体福袋
	RDCT_GiftPackage_Magic = 16;  		// 今日礼包打开数目统计-修法福袋
	RDCT_GiftPackage_Money = 17;  		// 今日礼包打开数目统计-灵石宝箱
	RDCT_GiftPackage_Weapon = 18;  		// 今日礼包打开数目统计-仙品武器
	RDCT_GiftPackage_Treasure = 19;  	// 今日礼包打开数目统计-仙品法宝
	RDCT_GiftPackage_Materials = 20;	// 今日礼包打开数目统计-古宝注灵材料
	RDCT_GiftPackage_GrabBag = 21;  	// 今日礼包打开数目统计-福袋
	RDCT_GiftPackage_MonsterInvasion = 22;  // 今日礼包打开数目统计-神兽入侵宝箱
	RDCT_GiftPackage_StorageBag = 23;  	// 今日礼包打开数目统计-储物袋
	RDCT_GiftPackage_Select = 24;  		// 今日礼包打开数目统计-自选礼包
	RDCT_MonsterTowerChallengeTimes = 25;	// 今日挑战镇妖塔次数
	RDCT_MonsterTowerClosedDoorTrainingTimes = 26;  // 今日镇妖塔闭关次数
	RDCT_FriendlySoloTimes = 27;  // 今日切磋次数
	RDCT_SwordPkTimes = 28;  // 今日论剑台次数
	RDCT_ExchangeHeroCard = 29;  // 今日兑换英雄帖次数
	RDCT_TodaySeptConstructTimes = 30;  // 今日宗门建设次数
	RDCT_TodaySearchSeptByNameTimes = 31;  // 今日使用名字搜索宗门次数
	RDCT_GatherSeptStoneSeconds = 32;  // 本日采集矿脉时长(秒)
	RDCT_MonsterTowerClickLikeNum = 33;  // 镇妖塔排行榜今日已点赞次数
	RDCT_FarmlandWatering = 34;  // 药园本日浇灌次数
	RDCT_FriendRequestNum = 35;  // 本日好友请求次数
	RDCT_FriendSearchNum = 36;  // 本日道友查找次数
	RDCT_FuZeReward = 37;		// 本日领取福泽
}

message RoleDailyCounterEntry {
	RoleDailyCounterType type = 1;
	int32 num = 2;
}

message RoleDailyCounter {
	repeated RoleDailyCounterEntry entries = 1;
	int64 last_reset_time = 4;
}

// ============================================================================

// 本周计数
enum RoleWeeklyCounterType {
	RWCT_GatherSeptStoneSeconds = 0;  // 本周采集矿脉时长(秒)
}

message RoleWeeklyCounterEntry {
	RoleWeeklyCounterType type = 1;
	int32 num = 2;
}

message RoleWeeklyCounter {
	repeated RoleWeeklyCounterEntry entries = 1;
	int64 last_reset_time = 4;
}

// ============================================================================

message CurrencyEntry {
	CurrencyType type = 1;
	int64 num = 2;
}

message CurrencyData {
	repeated CurrencyEntry currencies = 10;
}


// 装备词条
message EquipPerkEntry {
	int32 id = 1;  // 词条ID
	ItemQuality quality = 2;  // 词条品质
	int32 num = 3;  // 词条数值
}

// 法宝属性
message SkillEquipmentAttributes {
	float cool_down = 1;  // 神通冷却
	int32 target_num = 2;  // 目标数量
	int32 attack_count = 3;  // 攻击次数
	float phy_coefficient = 4;  // 每次攻击物理百分比加成系数
	float phy_damage = 5;  // 每次攻击固定物理伤害
	float mag_coefficient = 6;  // 每次攻击法术百分比加成系数
	float mag_damage = 7;  // 每次攻击固定法术伤害
	float max_damage = 8;  // 伤害上限	
	repeated AbilityEffectData effects = 9;
	repeated AbilityEffectData shield_effects = 10;
}

// 法宝专属数据
message SkillEquipmentData {
	SkillEquipmentAttributes attributes = 1;
	SkillEquipmentAttributes reinforce_attributes = 2;	// 强化属性提升
	SkillEquipmentAttributes qiwen_attributes = 3; 		// 器纹属性提升
	SkillEquipmentAttributes jinglian_attributes = 4; 	// 精炼属性提升
}

// 古宝数据
message CollectionEntry {
	int32 id = 1;  // 古宝道具配置ID
	int32 level = 2;  // 注灵等级
	int32 star = 3;  // 星级
	bool is_activated = 4;  // 是否已激活
	int32 piece_num = 5;  // 碎片数量
	int32 life_num = 6;  // 生涯计数
	float combat_power = 7;  // 战力
}

// 装备数据
message EquipmentData {
	int32 slot_index = 1;  /** 穿戴格子编号，0表示没有穿戴，取值参见 EquipmentGrid.xlsx */
	int64 combat_power = 3;  // 战力
	string maker_name = 4;  // 铸器师名称
	int64 maker_roleid = 5;  // 铸器师ID

	repeated EquipPerkEntry perks = 10;  // 词条
	SkillEquipmentData skill_equipment_data = 11;  // 法宝数据
	CollectionEntry collection_data = 12;  // 古宝数据

	int32 reinforce_level = 30;	// 强化等级
	int32 refine_level = 31;		// 精炼等级

	int32 qiwen_a_level = 50;	 // 甲字器纹等级
	int32 qiwen_b_level = 51; // 乙字器纹等级
	int32 qiwen_c_level = 52; // 丙字器纹等级
	int32 qiwen_extra_effect_num = 53;			// 器纹额外属性激活数量
	int32 qiwen_moneycast = 54;					// 器纹花费累计
	int32 qiwen_current_exp_a = 55;				// 甲字器纹当前经验值
	int32 qiwen_current_exp_b = 56;				// 乙字器纹当前经验值
	int32 qiwen_current_exp_c = 57;				// 丙字器纹当前经验值
	int32 qiwen_total_exp_a = 58;				// 甲字器纹总经验值
	int32 qiwen_total_exp_b = 59;				// 乙字器纹总经验值
	int32 qiwen_total_exp_c = 60;				// 丙字器纹总经验值

	GameStatsData base_stats = 100;  // 基础属性
	GameStatsData reinforce_stats = 101;	// 强化属性提升
	GameStatsData qiwen_stats = 102;	// 器纹属性提升
	GameStatsData refine_stats = 103;	// 精炼属性提升
	GameStatsData perk_stats = 104;  // 词条属性提升
	GameStatsData qiwen_resonance_stats = 105;  // 器纹共鸣属性提升
}

// 道具数据
message ItemData {
	int64 id = 1;  // 道具唯一ID
	int32 cfg_id = 2;  // 道具配置ID
	int32 num = 3;  // 数量
	bool locked = 4;	// 锁定状态
	
	EquipmentData equipment_data = 10;  // 装备数据
}

// 简易道具数据，用于多种数据组织
message SimpleItemData {
	int32 cfg_id = 1;	// 道具配置ID
	int32 num = 2;		// 数量
}

// 临时包裹中的道具
message TemporaryPackageItem {
	int64 id = 1;  // 唯一ID
	int32 cfg_id = 2;  // 道具配置ID
	int32 num = 3;  // 道具数量
}

// 秘境探索统计数据
message ArenaExplorationStatisticalItem {
	int64 time = 1; // 记录时间
	string mapname = 2; // 地图名
	int32 killnum = 3; 	// 击杀数量
	int32 deathnum = 4;	// 重伤数量
	int64 itemnum = 5;	// 非灵石道具数量
	int64 moneynum = 6; // 灵石数量
}

message ShopItemBase {
	int32 index = 1;
	int32 item_id = 2;
	int32 num = 3;

	int32 price = 4;		// 价格
	int32 count = 5;		// 库存
	int32 bought_count = 6;	// 已买次数

	int32 cfg_id = 7;		// 配置id
	bool must_buy = 8;		// 推荐必买
	float discount = 9;		// 折扣
}

message ShopItem {
	int32 index = 1;
	int32 cfg_id = 2;  // 道具配置ID
	int32 num = 3;  // 数量
	int32 money = 4;  // 价格
	bool is_sold_out = 5;  // 是否售空
	ItemData item_data = 6;  // 道具数据
}

message DeluxeShopItem {
	int32 index = 1;
	int32 cfg_id = 2;  // 道具配置ID
	int32 num = 3;  // 数量
	int32 sellcount = 4; // 购买次数
	int32 discount = 5; // 折扣
	int32 money = 6;  // 价格
	bool is_sold_out = 7;  // 是否售空
	ItemData item_data = 8;  // 道具数据
	bool must_buy = 9;// 推荐必买
}

// 角色仙阁商店数据
message RoleVipShopData {
	repeated ShopItemBase shop_items = 1;  // 货架道具
	
	int64 last_day_refresh_time = 2;	// 昨日自动刷新时间戳
	int64 last_week_refresh_time = 3;	// 上周自动刷新时间戳
}

message CharacterModelConfig {
	int32 skeleton_type = 51;			// 当前体型，上面的字段日后会被弃用
	repeated int32 model_slots = 52;	// 外观插槽
}

// 角色外观商店
message RoleAppearanceShopData {
	repeated ShopItemBase goods1 = 1;  // 货架1道具
	
	int64 last_auto_refresh_time = 5;  // 最后一次自动刷新时间戳
}

message AppearanceCollection {
	int32 group_id = 1;		// 当前体型
	int64 duration = 3;		// 持续时间
	int64 begin_date = 4;	// 激活时间
}

message RoleAppearanceData {
	int64 last_change_skeleton_time = 1;// 上次使用化形丹的时间
	repeated AppearanceCollection collection = 2;	// 装扮收集
	CharacterModelConfig current_model = 3;	// 当前穿戴外观

	RoleAppearanceShopData shop_data = 11;			// 外观商店
}


// 炼金包裹中的道具
message AlchemyPackageItem {
	int32 cfg_id = 1;  // 道具配置ID
	int32 num = 2;  // 道具数量
}

message AlchemyMakeData {
	int32 recipe_id = 1;  // 配方ID
	int32 recipe_degree = 2;  // 配方等级
	int32 material_id = 3;  // 材料ID
	ItemQuality material_quality = 4;  // 材料品质
	int32 target_num = 5;  // 目标数量
	int32 cur_num = 6;  // 已炼制数量
	int64 next_done_time = 7;  // 下次完成时间戳(单次)
	repeated AlchemyPackageItem items = 8;  // 已经炼出的道具
	int32 last_produce_item_cfg_id = 10;  // 最近一次产出的道具配置ID
	int32 last_produce_item_num = 11;  // 最近一次产出的道具数量
	int64 total_start_time = 12;  // 总开始时间戳
	int64 total_done_time = 13;  // 预计总完成时间戳
	int32 add_exp = 14;  // 本次炼丹合计获得经验
	int32 cur_successed_num = 15;  // 已炼制成功数量
	int32 cur_failed_num = 16;  // 已炼制失败数量	
}

message AlchemyRecipeData {
	int32 recipe_id = 1;  // 配方ID
	int32 big_chance = 2;  // 大保底 
	int32 small_chance = 3;  // 小保底
}

message RoleAlchemyData {
	int32 rank = 1;  // 丹师等级
	int32 exp = 2;  // 丹师经验	
	AlchemyMakeData cur_make_data = 4;  // 正在制造的丹药数据
	int32 total_refine_num = 7;  // 累计炼丹数量(终身累计)
	repeated int32 produce_quality_stats = 8;   // 产出品质统计
	repeated AlchemyRecipeData recipes = 9;  // 学会的配方
}


// 炼器包裹中的道具
message ForgePackageItem {
	int32 cfg_id = 1;  // 道具配置ID
	int32 num = 2;  // 道具数量
}

message ForgeMakeData {
	int32 recipe_id = 1;  // 配方ID
	int32 recipe_degree = 2;  // 配方等级
	int32 material_id = 3;  // 材料ID
	ItemQuality material_quality = 4;  // 材料品质
	int32 target_num = 5;  // 目标数量
	int32 cur_num = 6;  // 已炼制数量
	int64 next_done_time = 7;  // 下次完成时间戳(单次)
	repeated ForgePackageItem items = 8;  // 已经炼出的道具
	int32 last_produce_item_cfg_id = 10;  // 最近一次产出的道具配置ID
	int32 last_produce_item_num = 11;  // 最近一次产出的道具数量
	int64 total_start_time = 12;  // 总开始时间戳
	int64 total_done_time = 13;  // 预计总完成时间戳
	int32 add_exp = 14;  // 本次炼丹合计获得经验
	int32 cur_successed_num = 15;  // 已炼制成功数量
	int32 cur_failed_num = 16;  // 已炼制失败数量
	int32 ext_material_id = 17;  // 辅助材料ID
	bool auto_sell_poor = 18;  // 自动出售“下品”道具
	bool auto_sell_middle = 19;  // 自动出售“中品”道具
}

message ForgeRecipeData {
	int32 recipe_id = 1;  // 配方ID
	int32 big_chance = 2;  // 大保底 
	int32 small_chance = 3;  // 小保底
}

// 消失装备数据（出售、熔炼）
message LostEquipmentData {
	int32 uid = 1;
	int32 tag = 2;// 销毁缘由标记
	int64 lost_date = 3;// 销毁时间
	ItemData item_data = 4;// 装备数据
}

message RoleForgeData {
	int32 rank = 1;  // 器师等级
	int32 exp = 2;  // 器师经验
	ForgeMakeData cur_make_data = 4;  // 正在制造的装备数据
	int32 total_refine_num = 7;  // 累计炼器数量(终身累计)
	repeated int32 produce_equip_quality_stats = 8;   // 产出装备品质统计
	repeated int32 produce_skillequip_quality_stats = 9;   // 产出法宝品质统计
	repeated ForgeRecipeData recipes = 10;  // 学会的配方

	repeated LostEquipmentData lost_equipment_data = 21;// 装备找回数据
	int32 destroy_num = 22;// 用于摧毁道具计数，生成uid
}

// 属性丹数据
message PillPropertyData {
	int32 item_id = 1;
	int32 consumed_num = 3;
}

message GongFaData {
	int32 cfg_id = 1;
	int32 level = 2;
	int64 begin_time = 3;
	GongFaState state = 4;
	float combat_power = 6;
}

message RoleGongFaData {
	repeated GongFaData data = 1;
	repeated int32 active_max_effect = 2;	// 已经激活的功法圆满效果
	int32 gongfa_point_use_num = 3;			// 功法点生涯使用计数
}

// 古宝数据
message CollectionEntrySaveData {
	int32 id = 1;  // 古宝道具配置ID
	int32 level = 2;  // 注灵等级
	int32 star = 3;  // 星级
	bool is_activated = 4;  // 是否已激活
	int32 piece_num = 5;  // 碎片数量
}

// 古宝通用碎片
message CommonCollectionPieceData {
	ItemQuality quality = 1;
	int32 piece_num = 2;
}

message CollectionZoneActiveAwardData {
	CollectionZoneType zone_type = 1;
	int32 num = 2;
}

// 角色古宝存档数据
message RoleCollectionSaveData {
	repeated CollectionEntrySaveData all_entries = 1;
	repeated CommonCollectionPieceData common_pieces = 2;
	repeated int32 draw_award_done_histories = 3;  // 已领取完毕奖励的渊源ID
	repeated CollectionZoneActiveAwardData zone_active_awards = 4;  // 已领取到累计收集奖励
	int64 next_reset_enhance_ticks = 5;  // 下次可重置强化的时间
}

// 福赠领取记录元组
message FuZengTuple {
	int32 cfg_id = 1;// 配置id
	repeated int64 num = 2;// 领取过的数目
}

// 福赠单种功能类数据
message FuZengData {
	FuZengType type = 1;
	repeated FuZengTuple received_record = 2;// 领取记录
	int64 max_num = 3;// 记录生涯最高值
}

message RoleFuZengData {
	repeated FuZengData data = 1;
}

// 角色战斗模式
message RoleFightModeData {
	FightMode cur_mode = 1;  // 当前战斗模式
	int64 last_attack_ticks = 2;  // 最后一次攻击时间
	int64 last_defence_ticks = 3;  // 最后一次受击时间
}

// 角色普通设置
message RoleNormalSettings {
	AttackLockType attack_lock_type = 1;  /** 攻击锁定方式 */	
	AttackUnlockType attack_unlock_type = 2;  /** 攻击解锁方式 */
	bool show_unlock_button = 3;  /** 是否显示取消锁定按钮 */
}

message RoleData {
	uint64 user_id = 1;
	uint64 role_id = 2;
	string role_name = 3;
	CurrencyData currency_data = 4;  // 货币
	CultivationData physics_data = 5;  // 炼体数据
	CultivationData magic_data = 6;  // 修法数据
	CultivationDirection cultivation_dir = 7;  // 当前修炼方向
	int64 last_exp_cycle_timestamp = 8;  // 最后一次 ExpTick 的时间戳
	RoleDailyCounter daily_counter = 9;  // 每日计数器 
	CharacterModelConfig model_config = 10;  // 外观
	int32 last_world_cfgid = 11;
	Vector3 last_world_pos = 12;
	int64 next_teleport_time = 14;  /** 下次可传送时间戳 */
	int32 last_unlock_arena_id = 15;  /** 最后解锁到的秘境地图CfgId */
	int64 combat_power = 16;  /** 战力 */
	int32 login_count = 17;  /** 登录次数 */
	repeated int32 unlocked_modules = 18;  /** 已解锁模块列表 */    
	int64 create_time = 19;  /** 角色创建时间(UTC) */
	repeated PillPropertyData pill_property_data = 21;	// 属性丹数据
	RoleFightModeData fight_mode = 22; /** 战斗模式 */
	int32 qi_collector_rank = 23;  /** 聚灵阵等级 */	
	RoleNormalSettings normal_settings = 26;  /** 普通设置 */	
	int64 offline_time = 27;  /** 角色最后一次离线时间点(UTC) */
	RoleWeeklyCounter weekly_counter = 28;  // 每周计数器
	int32 last_arena_world_cfgid = 29;
	Vector3 last_arena_world_pos = 30;	
	GameStatsData game_stats = 31;
	int32 last_all_arena_world_cfgid = 32; // 普通秘境 + 中立秘境
	Vector3 last_all_arena_world_pos = 33;
}

message SimpleAbilityData {
	int32 id = 1;
	int32 grade = 2;
	int32 study_grade = 3;
}

message SimpleGongFaData {
	int32 id = 1;
	int32 level = 2;
	bool is_full = 3;
}

// 玩家预览信息，RoleData的简化
message RoleInfo {
	uint64 user_id = 1;
	uint64 role_id = 2;
	string role_name = 3;
	int64 create_time = 4;
	CultivationDirection cultivation_main_dir = 5;		// 主修方向
	int32 cultivation_main_rank = 6;	// 主修境界
	CultivationDirection cultivation_second_dir = 7;	// 辅修方向
	int32 cultivation_second_rank = 8;	// 主修境界
	CharacterModelConfig character_model = 10;
	repeated int32 title = 11;			// 称号
	int64 combat_power = 12;			// 总战力
	repeated ItemData equipments = 13;	// 当前装备
	repeated int32 unlocked_equipment_slots = 14;		// 已解锁装备格子
	uint64 sept_id = 15;
	SeptPosition sept_position = 16;
	string sept_name = 17;
	int32 sept_logo = 18;
	GameStatsAllModuleData all_stats_data = 19;
	repeated SimpleAbilityData slotted_abilities = 20;  // 已装配技能列表
	repeated SimpleAbilityData unslotted_abilities = 21;  // 未装配技能列表
	repeated SimpleGongFaData gong_fa_entries = 22;  // 功法
}

message RoleInventoryData {
	int64 next_item_id = 2;
	repeated ItemData items = 3;
	int64 hp_pill_cooldown_expire_time = 4;
	int64 mp_pill_cooldown_expire_time = 5;
	repeated int32 unlocked_equipment_slots = 6;  /** 已解锁装备格子 */
	int32 inventory_space_num = 7; /** 背包空间 */ 
}

// 临时包裹
message RoleTemporaryPackageData {
	repeated TemporaryPackageItem items = 1;
	int64 last_extract_time = 2;  // 最后一次提取的时间
	int64 next_item_id = 3;
}

// 角色秘境探索统计数据
message RoleArenaExplorationStatisticalData {
	repeated ArenaExplorationStatisticalItem items = 1;
}

message QuestProgress {
	int32 id = 1;
	repeated int32 progress = 2;
	int32 state = 3;
}

message RoleQuestData {
	repeated int32 accepted_quests = 1;
	repeated int32 finished_quests = 2;
	repeated QuestProgress quests_progress = 3;
}

message RoleShopData {
	repeated ShopItem items = 2;  // 坊市货架道具
	int32 today_manual_refresh_num = 3;  // 今日已手动刷新次数
	int64 last_auto_refresh_time = 4;  // 最后一次自动刷新时间戳
	int64 last_reset_time = 5;  // 最后一次重置时间戳
	int32 guarantee_refresh_num = 6;  // 保底计数
}

message RoleDeluxeShopData {
	repeated DeluxeShopItem items = 2;  // 天机阁货架道具
	int32 today_manual_refresh_num_item = 3;  // 今日已手动刷新次数，通过天机令
	int32 today_manual_refresh_num_gold = 4;  // 今日已手动刷新次数，通过机缘
	int64 last_auto_refresh_time = 5;  // 最后一次自动刷新时间戳
	int64 last_reset_time = 6;  // 最后一次重置时间戳
}

message MailAttachment {
	int32 id = 1;
	int32 num = 2;
	bool received = 3;
}

message Mail {
	int32 id = 1;
	MailType type = 2;
	string title = 3;
	string subtitle = 4;
	string body_text = 5;
	string sender = 6;
	repeated MailAttachment attachments = 7;
	int64 begin_date = 8;
	int32 keep_time = 9;
	bool is_read = 10;
	bool is_received = 11;

	repeated ItemData equipments = 12;// 装备数据类附件
}

message RoleMailData {
	repeated Mail mail_box = 1;
	int32 total_num = 3;// 生涯收到的邮件数，用于生产邮件唯一id
	repeated MapValueInt32 system_mail_counter = 4;// 计数领取过的系统邮件
}

message OfflineAwardSummary {
	CultivationDirection dir = 1;
	int64 time_during = 2;  /** 离线累计时长 */
	int64 add_exp = 3;  /** 离线累计经验 */
	int64 add_attr = 4;	 /** 离线累计属性 */
}

message RoleOfflineData {
	int64 last_exp_value = 1;
	int64 last_attr_value = 2;
	OfflineAwardSummary last_award_summary = 3;
}

// 单种秘药数据
message PillElixirData {
	int32 item_id = 1;
	int32 holding_num = 2;
}

// 秘药/属性丹 数据
message RolePillElixirData {
	repeated PillElixirData pill_data = 1;	// 秘药数据
	int32 limit_double = 2;
	int32 limit_exp = 3;
	int32 limit_property = 4;
}


//
// 神通相关(BEGIN)

message AbilityEffectDefData {
    int32 type = 1;
	float duration = 2;
	float period = 3;
	int32 duration_policy = 4;
	float x = 10;
	float y = 11;
	float z = 12;
	float m = 13;
	float n = 14;
}


message AbilityData {
    int32 id = 1;
    int32 grade = 2;
	int64 activetime_utc = 3;
	float activetime_world = 4;
	int32 unique_id = 5;
	int32 study_grade = 6;

	float cooldown = 100;
	float target_num = 101;
	float target_distance = 102;
	float target_catchdistance = 103;
	float attack_count = 104;
	float phy_coefficient = 105;
	float phy_damage = 106;
	float mana_coefficient = 107;
	float mana_damage = 108;
	int64 item_id = 109;
	float item_maxdamage = 110;
	int32 item_cfgid = 111;

	repeated AbilityEffectDefData effect_defs = 200;
}

message PlayerAbilityData {
    repeated AbilityData abilities = 1;
	repeated MapValueInt32 slotted_abilites = 2;
	repeated int32 active_queue = 3;
	bool is_shiled_first = 4;
	int64 revert_all_skill_cooldown = 5;  // 神通一键重置冷却时间
}

// ZAS数据
message RoleZasData {
	int32 zas_version = 1;						// 技能系统数据版本号
	PlayerAbilityData zas_ability = 2;			// 角色技能数据
	int32 shentong_upgrade_point_use_num = 11;	// 角色神通心得生涯使用数量
}

// 技能一次结算的结果(FZPKResult)
message AbilityPKResult {
	uint64 instigator = 1;        // 攻方
	uint64 target = 2;            // 守方
	float damage = 10;            // 伤害值
	float additional_damage = 11; // 附加伤害
	bool is_hit = 12;             // 是否命中
	bool is_critical = 13;        // 是否会心
	bool is_countered = 14;       // 是否反击
	bool is_extremedamage = 15;   // 是否极限伤害
	float countereddamage = 16;   // 反击伤害值
	int32 currentattackcount = 17; // 当前攻击次数
	float shield_suckdamage = 18;  // 护盾吸收的伤害
	bool is_countered_critical = 19; // 是否反击会心
	float countered_shield_suckdamage = 20;  // 反击护盾吸收伤害
} 

// 释放技能结果码
enum AbilityActiveErrorCode {
	AbilityActiveErrorCode_Success = 0;        // 正常
	AbilityActiveErrorCode_Timeout = 1;        // 超时
	AbilityActiveErrorCode_InvalidAbility = 2; // 无效技能
	AbilityActiveErrorCode_Cooldown = 11;      // CD不满足
	AbilityActiveErrorCode_CostNotEnough = 12; // 消耗不够
	AbilityActiveErrorCode_Silent = 13;        // 沉默状态
	AbilityActiveErrorCode_Freezing = 14;      // 冰冻状态
	AbilityActiveErrorCode_Death = 15;         // 死亡状态
	AbilityActiveErrorCode_OwnerCheck = 16;    // Owner非法
	AbilityActiveErrorCode_CommonCooldown = 17; // 公共CD不满足
}

// 释放技能的结果
message AbilityActiveResult {
	uint64  eid = 1;                      // 技能释放者
	int32 ability = 2;                    // 技能
	int32 ability_unique_id = 3;          // 技能唯一ID
	AbilityActiveErrorCode error = 4;     // 错误码
	repeated AbilityPKResult results = 5; // 伤害结果 
	repeated int32 effects = 6;			   // 添加上的EffectID
}


// 神通相关(END)
//

// 山河图相关

message ShanhetuItem {
	int32 item_id = 1;
	int32 num = 2;
	int32 weight = 3;
	int32 score = 4;
}

message ShanhetuRecord {
	int64 uid = 1;
	int32 item_id = 2;	// 图纸道具id
	int32 scale_id = 3;	// 规模
	int32 score = 4;	// 收获评分->评分称号
	repeated ShanhetuItem items = 5;	// 产出道具
	int64 use_time = 6;	// 使用时间
}

// 山河图地块
message ShanhetuBlock {
	int32 type = 1;				// 地块类型
	int32 quality =2;			// 地块品质
	ShanhetuItem item = 3;		// 产出道具
	int32 event_cfg_id = 11;	// 地块事件
}

// 一行山河图地块
message ShanhetuBlockRow {
	repeated ShanhetuBlock blocks = 1;
}

message ShanhetuMap {
	bool done = 1;				// 是否探索完成
	int32 current_row = 2;		// 当前进度 
	ShanhetuRecord record = 3;	// 当前记录 
	repeated ShanhetuBlockRow map = 4;	// 生成地图
}

message RoleShanhetuData {
	bool auto_skip_green = 1;
	bool auto_skip_blue = 2;
	bool auto_skip_perpo = 3;
	bool auto_skip_gold = 4;
	bool auto_skip_red = 5;

	int32 auto_select = 6;

	ShanhetuMap current_map = 7;	// 当前开包内容，及其进度，如果异常下线，则下次上限通过邮件发送
	int64 total_num = 8;			// 生涯开包次数

	repeated ShanhetuRecord records = 9;

	int64 last_update_date = 12;		// 清空每周记录时间戳
}
// 山河图相关(End)


// 排行榜玩家功能数据
message RoleLeaderboardData {
	int64 role_id = 1;
	int32 blike_num = 2; // 获赞次数
	int64 last_reset_time = 4;  // 最后一次重置时间戳
	string rank_message = 5;	// 上榜留言

	ItemData weapon = 6;		// 最强武器
	ItemData ammor = 7;			// 最强防具
	ItemData jewlery = 8;		// 最强饰品
	ItemData skill_weapon = 9;	// 最强法宝

	ShanhetuRecord shanhetu_history = 10;	// 历史最高
	ShanhetuRecord shanhetu_week = 11;		// 本周最高

	int32 monster_tower_blike_num = 22; // 镇妖塔获赞次数
	repeated int32 has_received_challange_reward = 23;// 已经领取的挑战奖励
	int32 fuze_rank = 24;// 福泽定格时的玩家主修方向等级
	int32 fuze_days = 25;// 累计福泽天数
	int64 fuze_exp = 26;// 福泽定格时的玩家主修方向经验值
	int32 fuze_leaderboard_rank = 27;// 当天服务器计数的福泽排名
}

// 镇妖塔数据
message RoleMonsterTowerData {
	int32 last_floor = 1;  /** 最后通关的镇妖塔层数 */
	int64 idle_during_ticks = 2;  // 挂机 - 已持续时间，领取后清零
}

// 剿灭副本数据
message RoleDungeonKillAllData {
	repeated int32 done_uid = 1;  /** 最后通关的剿灭副本 */
}

// 生存副本数据
message RoleDungeonSurviveData {
	repeated int32 done_uid = 1;  /** 最后通关的剿灭副本 */
}

message BossInvasionRewardEntry {
	int64 unique_id = 1;
	int32 arena_cfg_id = 2;
	int32 rank = 3;
}

// 尾刀奖励
message BossInvasionKillRewardData {
	int64 start_ticks = 1;  // 本轮入侵开始时间
	repeated BossInvasionRewardEntry rewards = 2;
	bool is_draw_done = 3;  // 奖励是否已领取
	int64 drawed_unique_id = 4;  // 已领取的奖励 UniqueId
}

// 伤害排行奖励
message BossInvasionDamageRewardData {
	int64 start_ticks = 1;  // 入侵日期
	repeated BossInvasionRewardEntry rewards = 2;
}

// BOSS入侵数据
message RoleBossInvasionData {
	int64 last_reset_ticks = 1;
	BossInvasionKillRewardData kill_reward = 10;  // 尾刀奖励
	repeated BossInvasionDamageRewardData damage_reward = 12;  // 伤害排行奖励
	int64 drawed_unique_id = 14;  // 已领取的伤害排行奖励 UniqueId
}

message RoleMasiveData {
	repeated StringKeyInt32ValueEntry user_vars = 1;
	int64 next_self_unique_id = 2;
}

message CheckTask {
	int32 task_id = 1;
	int32 type = 2;
	int32 need_num = 3;
	int32 point = 4; // 提供的活跃点数
	int32 progress = 5;
	bool is_submitted = 6;
}

message RoleChecklistData {
	int32 day_point = 1; // 活跃点数
	int32 week_point = 2; // 活跃点数
	repeated CheckTask day_tasks = 3; // 任务
	repeated CheckTask week_tasks = 4; // 任务
	int32 day_received_time = 5; // 领取次数
	int32 week_received_time = 6; // 领取次数
	int64 last_reset_day_time = 7;
	int64 last_reset_week_time = 8;

	int64 boss_invasion_time = 9;// 本日参与神兽入侵时间戳
	int32 degree_locked_day = 10;	// 锁定用于生成本日奖励的Degree
	int32 degree_locked_week = 11;	// 锁定用于生成本周奖励的Degree
}

// 角色道具兑换功能数据
message RoleCommonItemExchangeData {
	int64 last_reset_day = 2;
	int64 last_reset_week = 3;
	repeated MapValueInt32 item_exchange_day = 4;// 每日兑换
	repeated MapValueInt32 item_exchange_week = 5;// 每周兑换
}

// 宝藏阁相关 Begin

message RoleTreasuryChestData {
	repeated int32 today_open_times = 1;// 每种宝箱的今日开箱次数
	repeated int32 guarantee_count = 2;// 保底计数
}

message RoleTreasuryGachaData {
	repeated int32 today_open_times = 1;// 每种卡池的今日开奖次数
	repeated int32 free_open_times = 2;	// 免费单开次数
	repeated int32 guarantee_count = 3;// 保底计数

	int32 total_open_time = 6;// 生涯开启次数，用于福赠计数，仅限Type == 1的宝箱
}

message TreasuryShopItem {
	int32 index = 1;
	int32 item_id = 2;
	int32 num = 3;

	int32 price = 4;		// 价格
	int32 count = 5;		// 库存 
	int32 bought_count = 6;	// 已买次数

	int32 cfg_id = 7;		// 配置id
}

message RoleTreasuryShopData {
	repeated TreasuryShopItem shop_items = 1;
	int32 today_refresh_time = 2;
	bool shop_refresh_flag = 3;	// 刷新标记，用于功能红点提示
}

// 宝藏阁功能整体数据
message RoleTreasurySaveData {
	RoleTreasuryChestData treasury_chest_data = 1;
	RoleTreasuryGachaData treasury_gacha_data = 2;
	RoleTreasuryShopData treasury_shop_data = 3;

	int64 last_reset_time = 6;	// 重置时间戳，设计宝藏阁多个功能
}

// 宝藏阁相关 End

// 秘境探索事件相关 Begin
message  ArenaCheckListData {
	int32 checklist_id = 1;
	int32 checklist_num = 2;
	ArenaCheckListState checklist_state = 3;
}

message  ArenaCheckListRewardData {
	int32 reward_id = 1;
	ArenaCheckListRewardState reward_state = 2;
}


message RoleArenaCheckListData {
	repeated ArenaCheckListData arena_check_data = 1;
	repeated ArenaCheckListRewardData check_reward_data = 2;
}

// 秘境探索事件相关 End

message RoleSeptInviteEntry {
	SeptPosition position = 1;
	int32 num = 2;
}

message SeptQuest {
	int32 uid = 4;
	int32 quest_id = 1;
	int64 begin_time = 2;
	bool received = 3;
	
	int32 level = 11;// 接取任务时等级
	int32 money_num = 12;// 任务生成时就确定灵石数量
}

message RoleSeptQuestData {
	repeated SeptQuest quests = 1;
	int32 today_manual_refresh_num = 2;

	int32 level = 3;
	int32 current_exp = 4;
	int32 total_num = 5;// 用于产生唯一id
}

message RoleSeptShopData {
	int64 last_reset_time_sept_shop = 1;
	repeated SimpleItemData exchange_history = 2;// 宗门商店兑换记录
}

message RoleSeptData {
	int64 next_join_ticks = 1;  // 下次能加入宗门的时间点
	repeated RoleSeptInviteEntry daily_invite_entries = 2;  // 本日招募次数	

	RoleSeptShopData sept_shop_data = 6;// 藏经阁

	RoleSeptQuestData sept_quest_data = 11;// 宗门事务
	
	int32 sept_demon_cumulative_time = 12; // 镇魔深渊累积时间
	int32 sept_demon_stage_reward_num = 13; // 镇魔深渊宝库奖励剩余开启次数 
	int32 sept_demon_stage_reward_use_num = 14; // 镇魔深渊宝库奖励已开启次数 
	
	repeated int32 sept_demon_damage_reward_received = 15; // 镇魔深渊挑战奖励已领取
	repeated int32 sept_demon_damage_reward_finished = 16; // 镇魔深渊挑战奖励已完成未领取
}

message SeptDemonWorldData {
	bool is_started = 1; // 当前是否开启
	int64 cur_end_ticks = 2; // 本次结束时间戳
	int64 next_open_ticks = 3; // 下次开启时间戳
	int32 cur_stage = 4; // 当前所在重数
	float cur_stage_hp = 5; // 本重剩余血量
	float cur_stage_maxhp = 6; // 本重最大血量
	int32 last_stage = 7; // 上次活动的重数
	repeated int64 player_ids = 8; // 此时在镇魔深渊中的玩家id
}

message SimpleCounter {
	int32 id = 1;
	int64 num = 2;
}

message FunctionCounter {
	int32 function_type = 1;
	repeated SimpleCounter counters = 2;
}

message RoleLifeCounterData {
	repeated FunctionCounter function_counter = 2;
}

// 药园药株计划信息，用于一件催熟和药园打理
message FarmlandManagementInfo {
	int32 plant_uid = 1;	// 对应药园打理功能上，这里当作种子的configId使用
	int32 target_stage = 2;
	bool auto_seed = 3;
	bool auto_harvest = 4;
}

// 药园药株状态数据
message FarmlandPlantData {
	int32 plant_uid = 1;
	int32 x = 2;
	int32 y = 3;
	int32 rotation = 4;		// 种植旋转设置
	int32 config_id = 5;	// 种子配置
	int32 shenling = 6;		// 升灵次数
	int64 begin_date = 7;	// 种植时间
	int32 speed_up = 8;		// 催熟加速时长
}

// 玩家药园数据
message RoleFarmlandData {
	repeated FarmlandPlantData current_plants = 1;		// 当前药株状态
	repeated FarmlandManagementInfo managment_plan = 2;	// 打理设置
	repeated Vector2 unlock_blocks = 3;					// 已解锁地块
	int32 farmer_grade = 4;								// 药童等级
	int32 farmer_friendship_exp = 5;					// 药童好感
	repeated SimpleItemData ripe_items = 6;				// 角色持有催熟道具
}

// 玩家化身数据
message RoleAvatarData {
	int32 rank = 1;
	int32 current_world_index = 2;
	int64 begin_time = 3;
	int64 last_draw_time = 4;// 上一次物资抽取结算时间
	repeated SimpleItemData temp_package = 5;
	int32 last_wrold_index = 6;// 上次化身所在秘境Id
}

// 纪念功能-角色日志
message BiographyRoleLog {
	int32 dao_year = 1;
	int32 log_type = 2;
	int32 poem_seed = 3;
	string zone_name = 4;
	string role_name = 5;
	string content = 6;
}

// 玩家传记数据(包括史记，纪念)
message RoleBiographyData {
	repeated int32 received_cfg_ids = 1;// 已经领取的传记
	repeated int32 received_event_cfg_ids = 2;// 已经领取的史记
	repeated BiographyRoleLog role_logs = 3;// 纪念记录
}

// 社交功能相关消息 Begin--------------------------------------------------

// 聊天玩家信息
message SimpleRoleInfo {
	uint64 role_id = 1;
	string role_name = 2;
	CharacterModelConfig model_config = 3;
	int32 rank = 4;
	CultivationDirection role_cultivation_direction = 5;

	string sept_name = 6;// 所属宗门
	SeptPosition sept_position = 7;// 宗门职位

	int64 last_online_timespan = 21;// 上次在线时间
	int64 server_id = 22;// 区服号
}

// 单个聊天消息
message ChatMessage {
	uint64 role_id = 1;
	string text = 2;
	SimpleRoleInfo role_info = 3;
	ChatMessageType type = 4;
	int64 time = 5;
}

// 私聊记录，与单个玩家
message PrivateChatRecord {
	uint64 role_id = 1;
	repeated ChatMessage chat_record = 2;
	int32 unread_num = 3;
}

// 私聊记录，一个玩家的与多个玩家的，用于玩家Rpc
message RolePrivateChatRecord {
	uint64 role_id = 1;
	repeated PrivateChatRecord data = 2;
}

// 公频聊天数据，仅用于服务器存储
message ChatData {
	repeated ChatMessage colony_servers = 1;	// 集群区服聊天记录（万仙）
	repeated ChatMessage quad_servers = 2;	// 较小区服聊天记录（异界）
	repeated ChatMessage local_server = 3;	// 本区聊天记录
}

// 好友关系类型
enum FriendRelationshipType {
	FRT_None = 0;		// 无关系
	FRT_Friend = 1;		// 一般好友关系
	FRT_Partner = 2;	// 道侣关系
	FRT_Blocked = 3;	// 被对方拉黑
}

// 好友名单元素
message FriendListItem {
	int64 role_id = 1;
	int32 relationship = 2;// 关系值
	FriendRelationshipType type = 3;// 关系类型(道侣、结义)
}

// 道友功能
message RoleFriendData {
	repeated FriendListItem friend_list = 1;
	repeated int64 request_list = 2;// 申请列表
	repeated int64 block_list = 3;// 黑名单,离线数据的该字段用于通知被玩家拉黑
	repeated int64 my_request = 4;// 玩家自己的申请列表
	repeated FriendListItem history_list = 5;// 绝交后仍保存关系值
}

// 角色离线功能点数据
message RoleOfflineFunctionData {
	int64 role_id = 1;
	repeated Mail mails = 2;							// 离线邮件
	RoleFriendData friend_data = 3;						// 离线好友功能数据
	repeated PrivateChatRecord private_chat_data = 4;	// 私聊聊天记录
	repeated BiographyRoleLog role_logs = 5;			// 离线纪念日志
	RoleLeaderboardData leaderboard_data = 6;			// 离线排行榜数据

	string role_name = 11;// 玩家名字，用于模糊查找
	int32 rank = 12;
	int32 degree = 13;
	int64 total_exp = 14;// 主修方向总经验值
}

// 服务器计数器（史记功能等）
message ServerCounterData {
	repeated FunctionCounter function_counter = 1;
}

// 社交服务器公共数据中继，存储一些玩家离线数据或请求
message SocialFunctionCommonSaveData {
	repeated RoleOfflineFunctionData offline_role_datas = 1;// 角色离线功能点数据
	ServerCounterData server_counter_data = 2;// 服务器计数器
	repeated StringInt64Pair role_list = 3;// 玩家名册
}

// 社交功能相关消息 End----------------------------------------------------

message RoleSaveData {
	RoleData role_data = 1;
	GameStatsAllModuleData all_stats_data = 2;
	float hp = 3;
	float mp = 4;
	RoleQuestData quest = 5;			// 任务系统数据
	RoleShopData shop = 6;				// 坊市系统数据
	RoleTemporaryPackageData temporary_package = 7;  // 临时包裹
	RoleInventoryData inventory = 8;  // 包裹
	RoleOfflineData offline_data = 16;  /** 最近离线数据 */
	RoleAlchemyData alchemy_data = 17; /** 炼丹系统数据 */
	RoleDeluxeShopData deluxe_shop = 18;// 天机阁数据
	RoleLeaderboardData leaderboard_data = 19; // 排行功能榜数据
	RoleMailData mail_data = 20;		// 邮箱数据
	RoleForgeData forge_data = 21; /** 炼器系统数据 */
	RolePillElixirData pillelixir_data = 22; // 秘药数据
	CommonCultivationData common_cultivation_data = 23; // 公共修炼数据
	RoleZasData zas_data = 24;  // 技能数据
	RoleMonsterTowerData monster_tower_data = 25;  // 镇妖塔数据
	RoleShanhetuData shanhetu_data = 26;	// 山河图数据
	RoleBossInvasionData boss_invasion_data = 27;  // BOSS入侵数据
	RoleMasiveData massive_data = 28;
	RoleChecklistData checklist_data = 29;			// 福缘数据
	RoleCommonItemExchangeData common_item_exchange_data = 30; // 通用道具兑换数据
	RoleSeptData sept_data = 31;  // 宗门个人数据
	RoleTreasurySaveData treasury_chest_data = 33;// 宝藏阁功能数据
	RoleGongFaData gongfa_data = 34;  // 功法
	RoleFuZengData fuzeng_data = 35;  // 福赠
	RoleCollectionSaveData collection_data = 36;  // 古宝
	RoleLifeCounterData life_counter_data = 37;// 角色生涯计数器
	RoleAppearanceData appearance_data = 38;	// 角色外观
	RoleArenaCheckListData arena_check_list_data = 39; // 角色秘境探索事件
	RoleDungeonKillAllData dungeon_kill_all_data = 40; // 剿灭副本的数据
	RoleFarmlandData farmland_data = 41;		// 药园数据
	RoleDungeonSurviveData dungeon_survive_data = 42;  // 生存副本的数据
	RoleFriendData friend_data = 43;
	RoleAvatarData avatar_data = 44;// 化身数据
	RoleArenaExplorationStatisticalData arena_statistical_data = 45; // 秘境探索统计数据
	RoleBiographyData biography_data = 46;// 传记数据
	RoleVipShopData vip_shop_data = 47;	// 仙阁数据
}

// ========================================================

message BattleHistoryRecord {
	int32 index = 1;  // 序号
	float world_seconds = 2;  // 发送时间
	uint64 source_entity_id = 3;  // 源 EntityId	
	uint64 target_entity_id = 4;  // 目标 EntityId	
	uint64 message_type_id = 5;  // 消息 TypeId
	bytes message_body = 6;  // 消息内容
}

// 战斗角色信息
message BattleRoleInfo {
	int64 role_id = 1;
	string role_name = 2;
	int32 zone_id = 3;
	int32 score_delta = 8;  // 分数变动值
	int32 score = 9;  // 最终分数
	int32 rank_delta = 10;  // 名次变化
	int32 rank = 11;  // 最终名次
	int64 combat_power = 12;  // 战力
	CharacterModelConfig model_config = 13;  // 角色外形数据
	CultivationDirection cultivation_main_dir = 14;  // 主修方向
	int32 cultivation_main_rank = 15;  // 主修方向等级
	int32 npc_cfg_id = 16;  // NPC配置ID
}

// 战斗信息提要
message BattleInfo {
	int64 world_id = 1;
	bool attacker_win = 2;  // 攻击方是否取胜
	BattleRoleInfo attacker = 10;  // 攻击方信息
	BattleRoleInfo defender = 11;  // 防守方信息
	int64 begin_ticks = 12;  // 开始时间 (ticks)
	int64 end_ticks = 13;  // 结束时间 (ticks)
	SoloType solo_type = 14;  // 对战类型
}

message BattleHistory {
	BattleInfo info = 1;
	repeated BattleHistoryRecord records = 4;
}

// 角色的战斗信息提要
message RoleBattleInfo {
	BattleInfo base = 1;
	bool can_revenge = 2;  // 本场战斗是否可复仇
	int32 round_num = 3;  // 所属赛季
}

message RoleBattleHistorySaveData {
	repeated RoleBattleInfo histories = 5;
}

// ========================================================


message CompressedData {
	int32 original_size = 1;  // 原始数据大小
	bytes compressed_data = 2;  // 压缩后数据
}

// ========================================================


message DoBreathingExerciseResult {
	bool ok = 1;
	bool perfect = 2;
	float exp = 3;
	int32 rate = 4;
}

enum LoginGameRetCode {
	LoginGameRetCode_Ok = 0;  // 正常登陆
	LoginGameRetCode_Unknown = 1;  // 未知错误
	LoginGameRetCode_NoRole = 2;  // 没有角色
	LoginGameRetCode_DuplicateLogin = 3;  // 已经在线
	LoginGameRetCode_AccountInvalid = 4;  // 帐号非法
	LoginGameRetCode_VersionError = 5;  // 版本错误
}

enum GotoType {
	GotoType_None = 0;  // 未知类型
	GotoType_Relive = 1;  // 复活
	GotoType_Teleport = 2;  // 传送
}

message SystemNoticeParams {
	string s1 = 1;
	string s2 = 2;
	string s3 = 3;
	string s4 = 4;
	int64 n1 = 5;
	int64 n2 = 6;
	int64 n3 = 7;
	int64 n4 = 8;
}

// 掉落数据
message DropItem {
	int32 item_id = 1;
	int32 item_num = 2;
}

// 传送类型
enum TravelWorldType {
	TravelWorldType_Normal = 0;  // 普通
	TravelWorldType_Force = 1;  // 强制传送(客户端必须切换关卡)
	TravelWorldType_ClientNoOpen = 2;  // 客户端不要切换关卡
	TravelWorldType_ClientCityNoOpen = 3;  // 客户端在主城的话就不切换，其它强制切换
}


// 史记事件类型
enum BiographyEventType {
	BET_Degree = 0;			// 境界排名
	BET_FullDegree = 1; 	// 境界圆满排名
	BET_KillMonster = 2;	// 击杀妖兽数量
	BET_SeptDonation = 3;	// 限时宗门建设值
	BET_CombatPower = 4;	// 限时玩家战力排行
	BET_ImmortalRoad = 5;	// 飞升之路
}

// 史记榜单，用于各种事件榜单数据，参数以通用风格命名，用于多种事件情形
message BiographyEventLeaderboardItem {
	int64 uid = 1;
	string name = 2;
	int32 param_d1 = 6;// 宗门Logo、玩家外观数据（骨骼类型）
	int64 param_n1 = 7;// 时间戳、战力值、建设值
	repeated int64 params_n1 = 8;// 宗门上榜时保存当时成员列表
	repeated int32 params_d1 = 9;// 玩家外观数据（ModelType）
}

message BiographyEventLeaderboardList {
	repeated BiographyEventLeaderboardItem list_data = 1;
	int32 cfg_id = 2;// 榜单配置id
	int64 begin_date = 3;// 起始日期，限时榜单
	bool finished = 4;// 是否已经完成
}

// 排行榜单个玩家数据
message LeaderboardListItem {
	int64 role_id = 1;
	string user_name = 2;
	int64 property_num = 3; // 属性值：战斗力、财富值等等
	int64 time = 4;			// 上榜时间

	int32 d1 = 5;			// 自定义参数，宗门logo等
}


// 排行榜宗门数据
message SeptDataOnLeaderboard {
	int64 sept_id = 1;		// 宗门唯一ID
	string sept_name = 2; 	// 宗门名称
	int32 logo_index = 3;	// 宗门logo
	int64 property_num = 4;	// 战力
}

// 单个排行榜单数据
message LeaderboardList {
	repeated LeaderboardListItem list_data = 1;
	int32 type_id = 2;// 榜单类型，或配置或其它id
}

// 排行榜存档
message LeaderboardSaveData {
	repeated LeaderboardList lists_data = 1;			// 多榜单数据
	repeated SeptDataOnLeaderboard sept_list = 3;		// 宗门榜

	repeated LeaderboardList monster_tower_challange = 11;// 镇妖塔挑战榜

	int64 last_reset_week_time = 21;// 周刷新计时
	int64 last_reset_day_time = 22;// 日刷新计时

	repeated BiographyEventLeaderboardList biography_lists = 31;// 史记排行榜

	int64 fuze_exp = 32;// 福泽功能计算后的经验均值
	repeated int64 fuze_mail_list = 33;// 离线人员福泽奖励补发邮件清单
}

// 角色脏标记
enum RoleDirtyFlag {
	RoleDirtyFlag_Save = 0;  // 存档
}

message SeptDemonDamageHistoryEntry {
	int64 role_id = 1;
	string role_name = 2;
	float total_damage = 3;
	int32 rank = 4;
	CharacterModelConfig role_model = 5;
}

message SeptDemonDamageHistoryData {
	repeated SeptDemonDamageHistoryEntry all_entries = 4;  // 伤害排行榜
}

message SelfSeptInfo {
	int64 sept_id = 1;  // 宗门唯一ID
	string sept_name = 2;  // 宗门名称
	SeptPosition sept_position = 3;  // 宗门职位
	int64 next_join_ticks = 4;  // 下次可加入宗门的时间戳
	bool land_fighting = 5;  // 宗门领地是否被攻击
}

message CreatePlayerParams {
	int64 role_id = 1;
	string role_name = 2;
	RankData physics_rank_data = 3;  // 炼体
	RankData magic_rank_data = 4;  // 修法
	CharacterModelConfig model_config = 5;  // 外观
	PlayerAbilityData ability_data = 12; // 玩家技能相关数据 
	FightMode fight_mode = 13;
	bool is_dummy = 14;  // 是否创建为替身
	RoleNormalSettings normal_settings = 15;
	SelfSeptInfo self_sept_info = 16;  // 宗门信息
	int64 combat_power = 17;  // 战力
	GameStatsAllModuleData all_stats_data = 20;
}

// 地图运行时数据
message WorldRuntimeData {
	uint64 world_id = 1;
	float world_seconds = 2;
	float time_dilation = 3;
}

// 礼包结果通知
message NotifyGiftPackageResult {
	repeated SimpleItemData items = 1;
	int32 gift_item_id = 2;				// 礼包道具id
	repeated int32 config_id = 6;		// 礼包配置id，如果有
}

// 使用属性丹药通知
message NotifyUsePillProperty {
	int32 item_id = 1;
	int32 num = 2;
	int32 property_type = 3;
	float property_num = 4;
}

// 修炼信息
message EntityCultivationDirData {
	CultivationDirection dir = 1;  // 修炼方向
	int32 rank = 2;  // 等级
	int32 layer = 3;  // 级别 - 重
	int32 stage = 4;  // 级别 - 期
	int32 degree = 5;  // 级别 - 境	
}

message EntityCultivationData {
	EntityCultivationDirData major = 1;  // 主修
	EntityCultivationDirData minor = 2;  // 辅修	
}


message SwordPkTopListEntry {
	int64 role_id = 1;  // 角色唯一ID
	string role_name = 2;  // 角色名称
	CharacterModelConfig role_model = 3;  // 角色外形数据
	int32 score = 4;  // 分数
	int64 score_update_ticks = 5;
	int32 rank = 6;  // 名次
	int64 combat_power = 7;  // 战力
}


message SwordPkGlobalSaveData {
	int32 round_num = 1;  // 序号
	int64 begin_local_ticks = 2;  // 开启时间
	int64 end_local_ticks = 3;  // 结束时间
	bool is_over = 4;  // 是否结束
	int64 next_daily_reward_local_ticks = 5;  // 下轮每日奖励时间
	repeated SwordPkTopListEntry top_list = 6;  // 排行榜
}

