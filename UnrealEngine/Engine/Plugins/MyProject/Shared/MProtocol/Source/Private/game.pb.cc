// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace idlepb {
PROTOBUF_CONSTEXPR Ping::Ping(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingDefaultTypeInternal() {}
  union {
    Ping _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingDefaultTypeInternal _Ping_default_instance_;
PROTOBUF_CONSTEXPR Pong::Pong(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_ticks_)*/int64_t{0}
  , /*decltype(_impl_.rsp_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PongDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PongDefaultTypeInternal() {}
  union {
    Pong _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PongDefaultTypeInternal _Pong_default_instance_;
PROTOBUF_CONSTEXPR DoGmCommand::DoGmCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoGmCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoGmCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoGmCommandDefaultTypeInternal() {}
  union {
    DoGmCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoGmCommandDefaultTypeInternal _DoGmCommand_default_instance_;
PROTOBUF_CONSTEXPR ReportError::ReportError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportErrorDefaultTypeInternal() {}
  union {
    ReportError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportErrorDefaultTypeInternal _ReportError_default_instance_;
PROTOBUF_CONSTEXPR LoginGameReq::LoginGameReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.client_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginGameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginGameReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginGameReqDefaultTypeInternal() {}
  union {
    LoginGameReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginGameReqDefaultTypeInternal _LoginGameReq_default_instance_;
PROTOBUF_CONSTEXPR LoginGameAck::LoginGameAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_data_)*/nullptr
  , /*decltype(_impl_.offline_award_summary_)*/nullptr
  , /*decltype(_impl_.sept_info_)*/nullptr
  , /*decltype(_impl_.ret_)*/0
  , /*decltype(_impl_.is_relogin_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginGameAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginGameAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginGameAckDefaultTypeInternal() {}
  union {
    LoginGameAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginGameAckDefaultTypeInternal _LoginGameAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshInventoryData::RefreshInventoryData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshInventoryDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshInventoryDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshInventoryDataDefaultTypeInternal() {}
  union {
    RefreshInventoryData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshInventoryDataDefaultTypeInternal _RefreshInventoryData_default_instance_;
PROTOBUF_CONSTEXPR SetCurrentCultivationDirectionReq::SetCurrentCultivationDirectionReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetCurrentCultivationDirectionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrentCultivationDirectionReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrentCultivationDirectionReqDefaultTypeInternal() {}
  union {
    SetCurrentCultivationDirectionReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrentCultivationDirectionReqDefaultTypeInternal _SetCurrentCultivationDirectionReq_default_instance_;
PROTOBUF_CONSTEXPR SetCurrentCultivationDirectionAck::SetCurrentCultivationDirectionAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetCurrentCultivationDirectionAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCurrentCultivationDirectionAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCurrentCultivationDirectionAckDefaultTypeInternal() {}
  union {
    SetCurrentCultivationDirectionAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCurrentCultivationDirectionAckDefaultTypeInternal _SetCurrentCultivationDirectionAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshCurrentCultivationDirection::RefreshCurrentCultivationDirection(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshCurrentCultivationDirectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshCurrentCultivationDirectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshCurrentCultivationDirectionDefaultTypeInternal() {}
  union {
    RefreshCurrentCultivationDirection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshCurrentCultivationDirectionDefaultTypeInternal _RefreshCurrentCultivationDirection_default_instance_;
PROTOBUF_CONSTEXPR RefreshCultivationRankData::RefreshCultivationRankData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rank_data_)*/nullptr
  , /*decltype(_impl_.last_exp_cycle_timestamp_)*/int64_t{0}
  , /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshCultivationRankDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshCultivationRankDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshCultivationRankDataDefaultTypeInternal() {}
  union {
    RefreshCultivationRankData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshCultivationRankDataDefaultTypeInternal _RefreshCultivationRankData_default_instance_;
PROTOBUF_CONSTEXPR RefreshCultivationData::RefreshCultivationData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cultivation_data_)*/nullptr
  , /*decltype(_impl_.dir_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshCultivationDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshCultivationDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshCultivationDataDefaultTypeInternal() {}
  union {
    RefreshCultivationData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshCultivationDataDefaultTypeInternal _RefreshCultivationData_default_instance_;
PROTOBUF_CONSTEXPR RefreshCurrencyData::RefreshCurrencyData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshCurrencyDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshCurrencyDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshCurrencyDataDefaultTypeInternal() {}
  union {
    RefreshCurrencyData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshCurrencyDataDefaultTypeInternal _RefreshCurrencyData_default_instance_;
PROTOBUF_CONSTEXPR RefreshDailyCounterData::RefreshDailyCounterData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.daily_counter_)*/nullptr
  , /*decltype(_impl_.weekly_counter_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshDailyCounterDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshDailyCounterDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshDailyCounterDataDefaultTypeInternal() {}
  union {
    RefreshDailyCounterData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshDailyCounterDataDefaultTypeInternal _RefreshDailyCounterData_default_instance_;
PROTOBUF_CONSTEXPR RefreshLastUnlockArenaId::RefreshLastUnlockArenaId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.last_unlock_arena_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshLastUnlockArenaIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshLastUnlockArenaIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshLastUnlockArenaIdDefaultTypeInternal() {}
  union {
    RefreshLastUnlockArenaId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshLastUnlockArenaIdDefaultTypeInternal _RefreshLastUnlockArenaId_default_instance_;
PROTOBUF_CONSTEXPR RefreshUnlockedEquipmentSlots::RefreshUnlockedEquipmentSlots(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.slots_)*/{}
  , /*decltype(_impl_._slots_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshUnlockedEquipmentSlotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshUnlockedEquipmentSlotsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshUnlockedEquipmentSlotsDefaultTypeInternal() {}
  union {
    RefreshUnlockedEquipmentSlots _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshUnlockedEquipmentSlotsDefaultTypeInternal _RefreshUnlockedEquipmentSlots_default_instance_;
PROTOBUF_CONSTEXPR UnlockEquipmentSlotReq::UnlockEquipmentSlotReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockEquipmentSlotReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockEquipmentSlotReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockEquipmentSlotReqDefaultTypeInternal() {}
  union {
    UnlockEquipmentSlotReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockEquipmentSlotReqDefaultTypeInternal _UnlockEquipmentSlotReq_default_instance_;
PROTOBUF_CONSTEXPR UnlockEquipmentSlotAck::UnlockEquipmentSlotAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockEquipmentSlotAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockEquipmentSlotAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockEquipmentSlotAckDefaultTypeInternal() {}
  union {
    UnlockEquipmentSlotAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockEquipmentSlotAckDefaultTypeInternal _UnlockEquipmentSlotAck_default_instance_;
PROTOBUF_CONSTEXPR ThunderTestRoundData::ThunderTestRoundData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.round_)*/0
  , /*decltype(_impl_.damage_)*/0
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.mp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ThunderTestRoundDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThunderTestRoundDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThunderTestRoundDataDefaultTypeInternal() {}
  union {
    ThunderTestRoundData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThunderTestRoundDataDefaultTypeInternal _ThunderTestRoundData_default_instance_;
PROTOBUF_CONSTEXPR ThunderTestData::ThunderTestData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rounds_)*/{}
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_.mp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ThunderTestDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThunderTestDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThunderTestDataDefaultTypeInternal() {}
  union {
    ThunderTestData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThunderTestDataDefaultTypeInternal _ThunderTestData_default_instance_;
PROTOBUF_CONSTEXPR DoBreakthroughReq::DoBreakthroughReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoBreakthroughReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoBreakthroughReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoBreakthroughReqDefaultTypeInternal() {}
  union {
    DoBreakthroughReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoBreakthroughReqDefaultTypeInternal _DoBreakthroughReq_default_instance_;
PROTOBUF_CONSTEXPR DoBreakthroughAck::DoBreakthroughAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.thunder_test_data_)*/nullptr
  , /*decltype(_impl_.old_type_)*/0
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_.is_bottleneck_)*/false
  , /*decltype(_impl_.new_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoBreakthroughAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoBreakthroughAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoBreakthroughAckDefaultTypeInternal() {}
  union {
    DoBreakthroughAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoBreakthroughAckDefaultTypeInternal _DoBreakthroughAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshItems::RefreshItems(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.junks_)*/{}
  , /*decltype(_impl_._junks_cached_byte_size_)*/{0}
  , /*decltype(_impl_.others_)*/{}
  , /*decltype(_impl_.quiet_items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshItemsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshItemsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshItemsDefaultTypeInternal() {}
  union {
    RefreshItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshItemsDefaultTypeInternal _RefreshItems_default_instance_;
PROTOBUF_CONSTEXPR RefreshTemporaryPackageItems::RefreshTemporaryPackageItems(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.last_extract_time_)*/int64_t{0}
  , /*decltype(_impl_.total_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshTemporaryPackageItemsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshTemporaryPackageItemsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshTemporaryPackageItemsDefaultTypeInternal() {}
  union {
    RefreshTemporaryPackageItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshTemporaryPackageItemsDefaultTypeInternal _RefreshTemporaryPackageItems_default_instance_;
PROTOBUF_CONSTEXPR ExtractTemporaryPackageItemsReq::ExtractTemporaryPackageItemsReq(
    ::_pbi::ConstantInitialized) {}
struct ExtractTemporaryPackageItemsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtractTemporaryPackageItemsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtractTemporaryPackageItemsReqDefaultTypeInternal() {}
  union {
    ExtractTemporaryPackageItemsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtractTemporaryPackageItemsReqDefaultTypeInternal _ExtractTemporaryPackageItemsReq_default_instance_;
PROTOBUF_CONSTEXPR ExtractTemporaryPackageItemsAck::ExtractTemporaryPackageItemsAck(
    ::_pbi::ConstantInitialized) {}
struct ExtractTemporaryPackageItemsAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtractTemporaryPackageItemsAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtractTemporaryPackageItemsAckDefaultTypeInternal() {}
  union {
    ExtractTemporaryPackageItemsAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtractTemporaryPackageItemsAckDefaultTypeInternal _ExtractTemporaryPackageItemsAck_default_instance_;
PROTOBUF_CONSTEXPR GetTemporaryPackageDataReq::GetTemporaryPackageDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetTemporaryPackageDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTemporaryPackageDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTemporaryPackageDataReqDefaultTypeInternal() {}
  union {
    GetTemporaryPackageDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTemporaryPackageDataReqDefaultTypeInternal _GetTemporaryPackageDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetTemporaryPackageDataAck::GetTemporaryPackageDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.last_extract_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTemporaryPackageDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTemporaryPackageDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTemporaryPackageDataAckDefaultTypeInternal() {}
  union {
    GetTemporaryPackageDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTemporaryPackageDataAckDefaultTypeInternal _GetTemporaryPackageDataAck_default_instance_;
PROTOBUF_CONSTEXPR GetArenaExplorationStatisticalDataReq::GetArenaExplorationStatisticalDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetArenaExplorationStatisticalDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArenaExplorationStatisticalDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArenaExplorationStatisticalDataReqDefaultTypeInternal() {}
  union {
    GetArenaExplorationStatisticalDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArenaExplorationStatisticalDataReqDefaultTypeInternal _GetArenaExplorationStatisticalDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetArenaExplorationStatisticalDataAck::GetArenaExplorationStatisticalDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArenaExplorationStatisticalDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArenaExplorationStatisticalDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArenaExplorationStatisticalDataAckDefaultTypeInternal() {}
  union {
    GetArenaExplorationStatisticalDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArenaExplorationStatisticalDataAckDefaultTypeInternal _GetArenaExplorationStatisticalDataAck_default_instance_;
PROTOBUF_CONSTEXPR DoBreathingExerciseReq::DoBreathingExerciseReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.percet_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoBreathingExerciseReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoBreathingExerciseReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoBreathingExerciseReqDefaultTypeInternal() {}
  union {
    DoBreathingExerciseReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoBreathingExerciseReqDefaultTypeInternal _DoBreathingExerciseReq_default_instance_;
PROTOBUF_CONSTEXPR DoBreathingExerciseAck::DoBreathingExerciseAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoBreathingExerciseAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoBreathingExerciseAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoBreathingExerciseAckDefaultTypeInternal() {}
  union {
    DoBreathingExerciseAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoBreathingExerciseAckDefaultTypeInternal _DoBreathingExerciseAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickMergeBreathingReq::OneClickMergeBreathingReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickMergeBreathingReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickMergeBreathingReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickMergeBreathingReqDefaultTypeInternal() {}
  union {
    OneClickMergeBreathingReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickMergeBreathingReqDefaultTypeInternal _OneClickMergeBreathingReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickMergeBreathingAck::OneClickMergeBreathingAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.exp_)*/{}
  , /*decltype(_impl_.ret_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickMergeBreathingAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickMergeBreathingAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickMergeBreathingAckDefaultTypeInternal() {}
  union {
    OneClickMergeBreathingAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickMergeBreathingAckDefaultTypeInternal _OneClickMergeBreathingAck_default_instance_;
PROTOBUF_CONSTEXPR RequestCommonCultivationDataReq::RequestCommonCultivationDataReq(
    ::_pbi::ConstantInitialized) {}
struct RequestCommonCultivationDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestCommonCultivationDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestCommonCultivationDataReqDefaultTypeInternal() {}
  union {
    RequestCommonCultivationDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestCommonCultivationDataReqDefaultTypeInternal _RequestCommonCultivationDataReq_default_instance_;
PROTOBUF_CONSTEXPR RequestCommonCultivationDataAck::RequestCommonCultivationDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestCommonCultivationDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestCommonCultivationDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestCommonCultivationDataAckDefaultTypeInternal() {}
  union {
    RequestCommonCultivationDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestCommonCultivationDataAckDefaultTypeInternal _RequestCommonCultivationDataAck_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBreathingExerciseRewardReq::ReceiveBreathingExerciseRewardReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBreathingExerciseRewardReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBreathingExerciseRewardReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBreathingExerciseRewardReqDefaultTypeInternal() {}
  union {
    ReceiveBreathingExerciseRewardReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBreathingExerciseRewardReqDefaultTypeInternal _ReceiveBreathingExerciseRewardReq_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBreathingExerciseRewardAck::ReceiveBreathingExerciseRewardAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBreathingExerciseRewardAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBreathingExerciseRewardAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBreathingExerciseRewardAckDefaultTypeInternal() {}
  union {
    ReceiveBreathingExerciseRewardAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBreathingExerciseRewardAckDefaultTypeInternal _ReceiveBreathingExerciseRewardAck_default_instance_;
PROTOBUF_CONSTEXPR UseItemReq::UseItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseItemReqDefaultTypeInternal() {}
  union {
    UseItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseItemReqDefaultTypeInternal _UseItemReq_default_instance_;
PROTOBUF_CONSTEXPR UseItemAck::UseItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseItemAckDefaultTypeInternal() {}
  union {
    UseItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseItemAckDefaultTypeInternal _UseItemAck_default_instance_;
PROTOBUF_CONSTEXPR UseSelectGiftReq::UseSelectGiftReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/int64_t{0}
  , /*decltype(_impl_.choose_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseSelectGiftReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseSelectGiftReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseSelectGiftReqDefaultTypeInternal() {}
  union {
    UseSelectGiftReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseSelectGiftReqDefaultTypeInternal _UseSelectGiftReq_default_instance_;
PROTOBUF_CONSTEXPR UseSelectGiftAck::UseSelectGiftAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseSelectGiftAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseSelectGiftAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseSelectGiftAckDefaultTypeInternal() {}
  union {
    UseSelectGiftAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseSelectGiftAckDefaultTypeInternal _UseSelectGiftAck_default_instance_;
PROTOBUF_CONSTEXPR SellItemInfo::SellItemInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/int64_t{0}
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SellItemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SellItemInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SellItemInfoDefaultTypeInternal() {}
  union {
    SellItemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SellItemInfoDefaultTypeInternal _SellItemInfo_default_instance_;
PROTOBUF_CONSTEXPR SellItemReq::SellItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SellItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SellItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SellItemReqDefaultTypeInternal() {}
  union {
    SellItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SellItemReqDefaultTypeInternal _SellItemReq_default_instance_;
PROTOBUF_CONSTEXPR SellItemAck::SellItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SellItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SellItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SellItemAckDefaultTypeInternal() {}
  union {
    SellItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SellItemAckDefaultTypeInternal _SellItemAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshAlchemyData::RefreshAlchemyData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshAlchemyDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshAlchemyDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshAlchemyDataDefaultTypeInternal() {}
  union {
    RefreshAlchemyData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshAlchemyDataDefaultTypeInternal _RefreshAlchemyData_default_instance_;
PROTOBUF_CONSTEXPR NotifyAlchemyRefineResult::NotifyAlchemyRefineResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quality_)*/0
  , /*decltype(_impl_.item_cfg_id_)*/0
  , /*decltype(_impl_.item_num_)*/0
  , /*decltype(_impl_.exp_)*/0
  , /*decltype(_impl_.chance_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyAlchemyRefineResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyAlchemyRefineResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyAlchemyRefineResultDefaultTypeInternal() {}
  union {
    NotifyAlchemyRefineResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyAlchemyRefineResultDefaultTypeInternal _NotifyAlchemyRefineResult_default_instance_;
PROTOBUF_CONSTEXPR RefreshForgeData::RefreshForgeData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshForgeDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshForgeDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshForgeDataDefaultTypeInternal() {}
  union {
    RefreshForgeData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshForgeDataDefaultTypeInternal _RefreshForgeData_default_instance_;
PROTOBUF_CONSTEXPR NotifyForgeRefineResult::NotifyForgeRefineResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quality_)*/0
  , /*decltype(_impl_.item_cfg_id_)*/0
  , /*decltype(_impl_.item_num_)*/0
  , /*decltype(_impl_.exp_)*/0
  , /*decltype(_impl_.chance_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyForgeRefineResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyForgeRefineResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyForgeRefineResultDefaultTypeInternal() {}
  union {
    NotifyForgeRefineResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyForgeRefineResultDefaultTypeInternal _NotifyForgeRefineResult_default_instance_;
PROTOBUF_CONSTEXPR EquipmentPutOnReq::EquipmentPutOnReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/uint64_t{0u}
  , /*decltype(_impl_.slot_idx_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipmentPutOnReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentPutOnReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentPutOnReqDefaultTypeInternal() {}
  union {
    EquipmentPutOnReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentPutOnReqDefaultTypeInternal _EquipmentPutOnReq_default_instance_;
PROTOBUF_CONSTEXPR EquipmentPutOnAck::EquipmentPutOnAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipmentPutOnAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentPutOnAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentPutOnAckDefaultTypeInternal() {}
  union {
    EquipmentPutOnAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentPutOnAckDefaultTypeInternal _EquipmentPutOnAck_default_instance_;
PROTOBUF_CONSTEXPR EquipmentTakeOffReq::EquipmentTakeOffReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.slot_idx_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipmentTakeOffReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentTakeOffReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentTakeOffReqDefaultTypeInternal() {}
  union {
    EquipmentTakeOffReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentTakeOffReqDefaultTypeInternal _EquipmentTakeOffReq_default_instance_;
PROTOBUF_CONSTEXPR EquipmentTakeOffAck::EquipmentTakeOffAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipmentTakeOffAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentTakeOffAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentTakeOffAckDefaultTypeInternal() {}
  union {
    EquipmentTakeOffAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentTakeOffAckDefaultTypeInternal _EquipmentTakeOffAck_default_instance_;
PROTOBUF_CONSTEXPR GetInventoryDataReq::GetInventoryDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetInventoryDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInventoryDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInventoryDataReqDefaultTypeInternal() {}
  union {
    GetInventoryDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInventoryDataReqDefaultTypeInternal _GetInventoryDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetInventoryDataAck::GetInventoryDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.unlocked_equipment_slots_)*/{}
  , /*decltype(_impl_._unlocked_equipment_slots_cached_byte_size_)*/{0}
  , /*decltype(_impl_.inventory_space_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetInventoryDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInventoryDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInventoryDataAckDefaultTypeInternal() {}
  union {
    GetInventoryDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInventoryDataAckDefaultTypeInternal _GetInventoryDataAck_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineStartReq::AlchemyRefineStartReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.recipe_id_)*/0
  , /*decltype(_impl_.material_id_)*/0
  , /*decltype(_impl_.target_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlchemyRefineStartReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineStartReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineStartReqDefaultTypeInternal() {}
  union {
    AlchemyRefineStartReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineStartReqDefaultTypeInternal _AlchemyRefineStartReq_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineStartAck::AlchemyRefineStartAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlchemyRefineStartAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineStartAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineStartAckDefaultTypeInternal() {}
  union {
    AlchemyRefineStartAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineStartAckDefaultTypeInternal _AlchemyRefineStartAck_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineCancelReq::AlchemyRefineCancelReq(
    ::_pbi::ConstantInitialized) {}
struct AlchemyRefineCancelReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineCancelReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineCancelReqDefaultTypeInternal() {}
  union {
    AlchemyRefineCancelReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineCancelReqDefaultTypeInternal _AlchemyRefineCancelReq_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineCancelAck::AlchemyRefineCancelAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlchemyRefineCancelAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineCancelAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineCancelAckDefaultTypeInternal() {}
  union {
    AlchemyRefineCancelAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineCancelAckDefaultTypeInternal _AlchemyRefineCancelAck_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineExtractReq::AlchemyRefineExtractReq(
    ::_pbi::ConstantInitialized) {}
struct AlchemyRefineExtractReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineExtractReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineExtractReqDefaultTypeInternal() {}
  union {
    AlchemyRefineExtractReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineExtractReqDefaultTypeInternal _AlchemyRefineExtractReq_default_instance_;
PROTOBUF_CONSTEXPR AlchemyRefineExtractAck::AlchemyRefineExtractAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AlchemyRefineExtractAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlchemyRefineExtractAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlchemyRefineExtractAckDefaultTypeInternal() {}
  union {
    AlchemyRefineExtractAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlchemyRefineExtractAckDefaultTypeInternal _AlchemyRefineExtractAck_default_instance_;
PROTOBUF_CONSTEXPR CreateCharacterReq::CreateCharacterReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_data_)*/{}
  , /*decltype(_impl_._model_data_cached_byte_size_)*/{0}
  , /*decltype(_impl_.hero_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.skeleton_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateCharacterReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterReqDefaultTypeInternal() {}
  union {
    CreateCharacterReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterReqDefaultTypeInternal _CreateCharacterReq_default_instance_;
PROTOBUF_CONSTEXPR CreateCharacterAck::CreateCharacterAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateCharacterAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterAckDefaultTypeInternal() {}
  union {
    CreateCharacterAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterAckDefaultTypeInternal _CreateCharacterAck_default_instance_;
PROTOBUF_CONSTEXPR SystemNotice::SystemNotice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.s1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.s2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.s3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.n1_)*/int64_t{0}
  , /*decltype(_impl_.n2_)*/int64_t{0}
  , /*decltype(_impl_.n3_)*/int64_t{0}
  , /*decltype(_impl_.style_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SystemNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemNoticeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemNoticeDefaultTypeInternal() {}
  union {
    SystemNotice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemNoticeDefaultTypeInternal _SystemNotice_default_instance_;
PROTOBUF_CONSTEXPR GetRoleShopDataReq::GetRoleShopDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleShopDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleShopDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleShopDataReqDefaultTypeInternal() {}
  union {
    GetRoleShopDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleShopDataReqDefaultTypeInternal _GetRoleShopDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleShopDataAck::GetRoleShopDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleShopDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleShopDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleShopDataAckDefaultTypeInternal() {}
  union {
    GetRoleShopDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleShopDataAckDefaultTypeInternal _GetRoleShopDataAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshShopReq::RefreshShopReq(
    ::_pbi::ConstantInitialized) {}
struct RefreshShopReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshShopReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshShopReqDefaultTypeInternal() {}
  union {
    RefreshShopReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshShopReqDefaultTypeInternal _RefreshShopReq_default_instance_;
PROTOBUF_CONSTEXPR RefreshShopAck::RefreshShopAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshShopAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshShopAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshShopAckDefaultTypeInternal() {}
  union {
    RefreshShopAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshShopAckDefaultTypeInternal _RefreshShopAck_default_instance_;
PROTOBUF_CONSTEXPR BuyShopItemReq::BuyShopItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuyShopItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyShopItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyShopItemReqDefaultTypeInternal() {}
  union {
    BuyShopItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyShopItemReqDefaultTypeInternal _BuyShopItemReq_default_instance_;
PROTOBUF_CONSTEXPR BuyShopItemAck::BuyShopItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuyShopItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyShopItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyShopItemAckDefaultTypeInternal() {}
  union {
    BuyShopItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyShopItemAckDefaultTypeInternal _BuyShopItemAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleDeluxeShopDataReq::GetRoleDeluxeShopDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleDeluxeShopDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleDeluxeShopDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleDeluxeShopDataReqDefaultTypeInternal() {}
  union {
    GetRoleDeluxeShopDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleDeluxeShopDataReqDefaultTypeInternal _GetRoleDeluxeShopDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleDeluxeShopDataAck::GetRoleDeluxeShopDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleDeluxeShopDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleDeluxeShopDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleDeluxeShopDataAckDefaultTypeInternal() {}
  union {
    GetRoleDeluxeShopDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleDeluxeShopDataAckDefaultTypeInternal _GetRoleDeluxeShopDataAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshDeluxeShopReq::RefreshDeluxeShopReq(
    ::_pbi::ConstantInitialized) {}
struct RefreshDeluxeShopReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshDeluxeShopReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshDeluxeShopReqDefaultTypeInternal() {}
  union {
    RefreshDeluxeShopReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshDeluxeShopReqDefaultTypeInternal _RefreshDeluxeShopReq_default_instance_;
PROTOBUF_CONSTEXPR RefreshDeluxeShopAck::RefreshDeluxeShopAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshDeluxeShopAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshDeluxeShopAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshDeluxeShopAckDefaultTypeInternal() {}
  union {
    RefreshDeluxeShopAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshDeluxeShopAckDefaultTypeInternal _RefreshDeluxeShopAck_default_instance_;
PROTOBUF_CONSTEXPR BuyDeluxeShopItemReq::BuyDeluxeShopItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuyDeluxeShopItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyDeluxeShopItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyDeluxeShopItemReqDefaultTypeInternal() {}
  union {
    BuyDeluxeShopItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyDeluxeShopItemReqDefaultTypeInternal _BuyDeluxeShopItemReq_default_instance_;
PROTOBUF_CONSTEXPR BuyDeluxeShopItemAck::BuyDeluxeShopItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuyDeluxeShopItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyDeluxeShopItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyDeluxeShopItemAckDefaultTypeInternal() {}
  union {
    BuyDeluxeShopItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyDeluxeShopItemAckDefaultTypeInternal _BuyDeluxeShopItemAck_default_instance_;
PROTOBUF_CONSTEXPR UnlockDeluxeShopReq::UnlockDeluxeShopReq(
    ::_pbi::ConstantInitialized) {}
struct UnlockDeluxeShopReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockDeluxeShopReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockDeluxeShopReqDefaultTypeInternal() {}
  union {
    UnlockDeluxeShopReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockDeluxeShopReqDefaultTypeInternal _UnlockDeluxeShopReq_default_instance_;
PROTOBUF_CONSTEXPR UnlockDeluxeShopAck::UnlockDeluxeShopAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockDeluxeShopAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockDeluxeShopAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockDeluxeShopAckDefaultTypeInternal() {}
  union {
    UnlockDeluxeShopAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockDeluxeShopAckDefaultTypeInternal _UnlockDeluxeShopAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshDeluxeShopUnlocked::RefreshDeluxeShopUnlocked(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_unlocked_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshDeluxeShopUnlockedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshDeluxeShopUnlockedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshDeluxeShopUnlockedDefaultTypeInternal() {}
  union {
    RefreshDeluxeShopUnlocked _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshDeluxeShopUnlockedDefaultTypeInternal _RefreshDeluxeShopUnlocked_default_instance_;
PROTOBUF_CONSTEXPR UnlockArenaReq::UnlockArenaReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arena_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockArenaReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockArenaReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockArenaReqDefaultTypeInternal() {}
  union {
    UnlockArenaReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockArenaReqDefaultTypeInternal _UnlockArenaReq_default_instance_;
PROTOBUF_CONSTEXPR UnlockArenaAck::UnlockArenaAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockArenaAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockArenaAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockArenaAckDefaultTypeInternal() {}
  union {
    UnlockArenaAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockArenaAckDefaultTypeInternal _UnlockArenaAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyUnlockArenaChallengeResult::NotifyUnlockArenaChallengeResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.arena_id_)*/0
  , /*decltype(_impl_.door_id_)*/0
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyUnlockArenaChallengeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyUnlockArenaChallengeResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyUnlockArenaChallengeResultDefaultTypeInternal() {}
  union {
    NotifyUnlockArenaChallengeResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyUnlockArenaChallengeResultDefaultTypeInternal _NotifyUnlockArenaChallengeResult_default_instance_;
PROTOBUF_CONSTEXPR RequestRefreshRoleCombatPower::RequestRefreshRoleCombatPower(
    ::_pbi::ConstantInitialized) {}
struct RequestRefreshRoleCombatPowerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestRefreshRoleCombatPowerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestRefreshRoleCombatPowerDefaultTypeInternal() {}
  union {
    RequestRefreshRoleCombatPower _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestRefreshRoleCombatPowerDefaultTypeInternal _RequestRefreshRoleCombatPower_default_instance_;
PROTOBUF_CONSTEXPR NotifyRoleCombatPower::NotifyRoleCombatPower(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.old_value_)*/int64_t{0}
  , /*decltype(_impl_.new_value_)*/int64_t{0}
  , /*decltype(_impl_.show_notice_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyRoleCombatPowerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyRoleCombatPowerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyRoleCombatPowerDefaultTypeInternal() {}
  union {
    NotifyRoleCombatPower _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyRoleCombatPowerDefaultTypeInternal _NotifyRoleCombatPower_default_instance_;
PROTOBUF_CONSTEXPR GameSystemChatMessage::GameSystemChatMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chat_content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.chat_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GameSystemChatMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameSystemChatMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameSystemChatMessageDefaultTypeInternal() {}
  union {
    GameSystemChatMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameSystemChatMessageDefaultTypeInternal _GameSystemChatMessage_default_instance_;
PROTOBUF_CONSTEXPR ReplicateQuestProgressChange::ReplicateQuestProgressChange(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quest_id_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.target_id_)*/0
  , /*decltype(_impl_.amount_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplicateQuestProgressChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplicateQuestProgressChangeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplicateQuestProgressChangeDefaultTypeInternal() {}
  union {
    ReplicateQuestProgressChange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplicateQuestProgressChangeDefaultTypeInternal _ReplicateQuestProgressChange_default_instance_;
PROTOBUF_CONSTEXPR QuestOpReq::QuestOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_.quest_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuestOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuestOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuestOpReqDefaultTypeInternal() {}
  union {
    QuestOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuestOpReqDefaultTypeInternal _QuestOpReq_default_instance_;
PROTOBUF_CONSTEXPR QuestOpAck::QuestOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.init_progress_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuestOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuestOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuestOpAckDefaultTypeInternal() {}
  union {
    QuestOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuestOpAckDefaultTypeInternal _QuestOpAck_default_instance_;
PROTOBUF_CONSTEXPR GetQuestDataReq::GetQuestDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetQuestDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQuestDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQuestDataReqDefaultTypeInternal() {}
  union {
    GetQuestDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQuestDataReqDefaultTypeInternal _GetQuestDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetQuestDataAck::GetQuestDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetQuestDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetQuestDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetQuestDataAckDefaultTypeInternal() {}
  union {
    GetQuestDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetQuestDataAckDefaultTypeInternal _GetQuestDataAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleLeaderboardDataReq::GetRoleLeaderboardDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleLeaderboardDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleLeaderboardDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleLeaderboardDataReqDefaultTypeInternal() {}
  union {
    GetRoleLeaderboardDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleLeaderboardDataReqDefaultTypeInternal _GetRoleLeaderboardDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleLeaderboardDataAck::GetRoleLeaderboardDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.leaderboard_rank_)*/{}
  , /*decltype(_impl_._leaderboard_rank_cached_byte_size_)*/{0}
  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.param_n1_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleLeaderboardDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleLeaderboardDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleLeaderboardDataAckDefaultTypeInternal() {}
  union {
    GetRoleLeaderboardDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleLeaderboardDataAckDefaultTypeInternal _GetRoleLeaderboardDataAck_default_instance_;
PROTOBUF_CONSTEXPR GetLeaderboardPreviewReq::GetLeaderboardPreviewReq(
    ::_pbi::ConstantInitialized) {}
struct GetLeaderboardPreviewReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLeaderboardPreviewReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLeaderboardPreviewReqDefaultTypeInternal() {}
  union {
    GetLeaderboardPreviewReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLeaderboardPreviewReqDefaultTypeInternal _GetLeaderboardPreviewReq_default_instance_;
PROTOBUF_CONSTEXPR GetLeaderboardPreviewAck::GetLeaderboardPreviewAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.champions_)*/{}
  , /*decltype(_impl_.role_model_configs_)*/{}
  , /*decltype(_impl_.equipments_)*/{}
  , /*decltype(_impl_.my_data_)*/nullptr
  , /*decltype(_impl_.sept_)*/nullptr
  , /*decltype(_impl_.last_refresh_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLeaderboardPreviewAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLeaderboardPreviewAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLeaderboardPreviewAckDefaultTypeInternal() {}
  union {
    GetLeaderboardPreviewAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLeaderboardPreviewAckDefaultTypeInternal _GetLeaderboardPreviewAck_default_instance_;
PROTOBUF_CONSTEXPR GetLeaderboardDataReq::GetLeaderboardDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLeaderboardDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLeaderboardDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLeaderboardDataReqDefaultTypeInternal() {}
  union {
    GetLeaderboardDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLeaderboardDataReqDefaultTypeInternal _GetLeaderboardDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetLeaderboardDataAck::GetLeaderboardDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.role_model_configs_)*/{}
  , /*decltype(_impl_.equipments_)*/{}
  , /*decltype(_impl_.shanghetu_records_)*/{}
  , /*decltype(_impl_.top3_clicklike_num_)*/{}
  , /*decltype(_impl_._top3_clicklike_num_cached_byte_size_)*/{0}
  , /*decltype(_impl_.septs_)*/{}
  , /*decltype(_impl_.rank1_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.last_refresh_time_)*/int64_t{0}
  , /*decltype(_impl_.my_rank_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLeaderboardDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLeaderboardDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLeaderboardDataAckDefaultTypeInternal() {}
  union {
    GetLeaderboardDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLeaderboardDataAckDefaultTypeInternal _GetLeaderboardDataAck_default_instance_;
PROTOBUF_CONSTEXPR LeaderboardClickLikeReq::LeaderboardClickLikeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LeaderboardClickLikeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaderboardClickLikeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaderboardClickLikeReqDefaultTypeInternal() {}
  union {
    LeaderboardClickLikeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaderboardClickLikeReqDefaultTypeInternal _LeaderboardClickLikeReq_default_instance_;
PROTOBUF_CONSTEXPR LeaderboardClickLikeAck::LeaderboardClickLikeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LeaderboardClickLikeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaderboardClickLikeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaderboardClickLikeAckDefaultTypeInternal() {}
  union {
    LeaderboardClickLikeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaderboardClickLikeAckDefaultTypeInternal _LeaderboardClickLikeAck_default_instance_;
PROTOBUF_CONSTEXPR LeaderboardUpdateMessageReq::LeaderboardUpdateMessageReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.new_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LeaderboardUpdateMessageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaderboardUpdateMessageReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaderboardUpdateMessageReqDefaultTypeInternal() {}
  union {
    LeaderboardUpdateMessageReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaderboardUpdateMessageReqDefaultTypeInternal _LeaderboardUpdateMessageReq_default_instance_;
PROTOBUF_CONSTEXPR LeaderboardUpdateMessageAck::LeaderboardUpdateMessageAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LeaderboardUpdateMessageAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaderboardUpdateMessageAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaderboardUpdateMessageAckDefaultTypeInternal() {}
  union {
    LeaderboardUpdateMessageAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaderboardUpdateMessageAckDefaultTypeInternal _LeaderboardUpdateMessageAck_default_instance_;
PROTOBUF_CONSTEXPR GetMonsterTowerChallengeListReq::GetMonsterTowerChallengeListReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.challenge_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMonsterTowerChallengeListReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMonsterTowerChallengeListReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMonsterTowerChallengeListReqDefaultTypeInternal() {}
  union {
    GetMonsterTowerChallengeListReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMonsterTowerChallengeListReqDefaultTypeInternal _GetMonsterTowerChallengeListReq_default_instance_;
PROTOBUF_CONSTEXPR GetMonsterTowerChallengeListAck::GetMonsterTowerChallengeListAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_.model_configs_)*/{}
  , /*decltype(_impl_.all_list_progress_)*/{}
  , /*decltype(_impl_._all_list_progress_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMonsterTowerChallengeListAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMonsterTowerChallengeListAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMonsterTowerChallengeListAckDefaultTypeInternal() {}
  union {
    GetMonsterTowerChallengeListAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMonsterTowerChallengeListAckDefaultTypeInternal _GetMonsterTowerChallengeListAck_default_instance_;
PROTOBUF_CONSTEXPR GetMonsterTowerChallengeRewardReq::GetMonsterTowerChallengeRewardReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.challenge_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMonsterTowerChallengeRewardReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMonsterTowerChallengeRewardReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMonsterTowerChallengeRewardReqDefaultTypeInternal() {}
  union {
    GetMonsterTowerChallengeRewardReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMonsterTowerChallengeRewardReqDefaultTypeInternal _GetMonsterTowerChallengeRewardReq_default_instance_;
PROTOBUF_CONSTEXPR GetMonsterTowerChallengeRewardAck::GetMonsterTowerChallengeRewardAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMonsterTowerChallengeRewardAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMonsterTowerChallengeRewardAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMonsterTowerChallengeRewardAckDefaultTypeInternal() {}
  union {
    GetMonsterTowerChallengeRewardAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMonsterTowerChallengeRewardAckDefaultTypeInternal _GetMonsterTowerChallengeRewardAck_default_instance_;
PROTOBUF_CONSTEXPR GetFuZeRewardReq::GetFuZeRewardReq(
    ::_pbi::ConstantInitialized) {}
struct GetFuZeRewardReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFuZeRewardReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFuZeRewardReqDefaultTypeInternal() {}
  union {
    GetFuZeRewardReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFuZeRewardReqDefaultTypeInternal _GetFuZeRewardReq_default_instance_;
PROTOBUF_CONSTEXPR GetFuZeRewardAck::GetFuZeRewardAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFuZeRewardAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFuZeRewardAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFuZeRewardAckDefaultTypeInternal() {}
  union {
    GetFuZeRewardAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFuZeRewardAckDefaultTypeInternal _GetFuZeRewardAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleMailDataReq::GetRoleMailDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.only_num_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleMailDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleMailDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleMailDataReqDefaultTypeInternal() {}
  union {
    GetRoleMailDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleMailDataReqDefaultTypeInternal _GetRoleMailDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleMailDataAck::GetRoleMailDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mail_box_)*/{}
  , /*decltype(_impl_.unread_mail_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleMailDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleMailDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleMailDataAckDefaultTypeInternal() {}
  union {
    GetRoleMailDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleMailDataAckDefaultTypeInternal _GetRoleMailDataAck_default_instance_;
PROTOBUF_CONSTEXPR UpdateRoleMail::UpdateRoleMail(
    ::_pbi::ConstantInitialized) {}
struct UpdateRoleMailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRoleMailDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRoleMailDefaultTypeInternal() {}
  union {
    UpdateRoleMail _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRoleMailDefaultTypeInternal _UpdateRoleMail_default_instance_;
PROTOBUF_CONSTEXPR ReadMailReq::ReadMailReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadMailReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMailReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMailReqDefaultTypeInternal() {}
  union {
    ReadMailReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMailReqDefaultTypeInternal _ReadMailReq_default_instance_;
PROTOBUF_CONSTEXPR ReadMailAck::ReadMailAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mail_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadMailAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMailAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMailAckDefaultTypeInternal() {}
  union {
    ReadMailAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMailAckDefaultTypeInternal _ReadMailAck_default_instance_;
PROTOBUF_CONSTEXPR GetMailAttachmentReq::GetMailAttachmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMailAttachmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMailAttachmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMailAttachmentReqDefaultTypeInternal() {}
  union {
    GetMailAttachmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMailAttachmentReqDefaultTypeInternal _GetMailAttachmentReq_default_instance_;
PROTOBUF_CONSTEXPR GetMailAttachmentAck::GetMailAttachmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mail_data_)*/nullptr
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetMailAttachmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMailAttachmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMailAttachmentAckDefaultTypeInternal() {}
  union {
    GetMailAttachmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMailAttachmentAckDefaultTypeInternal _GetMailAttachmentAck_default_instance_;
PROTOBUF_CONSTEXPR DeleteMailReq::DeleteMailReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteMailReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMailReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMailReqDefaultTypeInternal() {}
  union {
    DeleteMailReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMailReqDefaultTypeInternal _DeleteMailReq_default_instance_;
PROTOBUF_CONSTEXPR DeleteMailAck::DeleteMailAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteMailAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMailAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMailAckDefaultTypeInternal() {}
  union {
    DeleteMailAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMailAckDefaultTypeInternal _DeleteMailAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickGetMailAttachmentReq::OneClickGetMailAttachmentReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickGetMailAttachmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickGetMailAttachmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickGetMailAttachmentReqDefaultTypeInternal() {}
  union {
    OneClickGetMailAttachmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickGetMailAttachmentReqDefaultTypeInternal _OneClickGetMailAttachmentReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickGetMailAttachmentAck::OneClickGetMailAttachmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mail_box_)*/{}
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.unread_mail_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickGetMailAttachmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickGetMailAttachmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickGetMailAttachmentAckDefaultTypeInternal() {}
  union {
    OneClickGetMailAttachmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickGetMailAttachmentAckDefaultTypeInternal _OneClickGetMailAttachmentAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickReadMailReq::OneClickReadMailReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickReadMailReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickReadMailReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickReadMailReqDefaultTypeInternal() {}
  union {
    OneClickReadMailReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickReadMailReqDefaultTypeInternal _OneClickReadMailReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickReadMailAck::OneClickReadMailAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickReadMailAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickReadMailAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickReadMailAckDefaultTypeInternal() {}
  union {
    OneClickReadMailAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickReadMailAckDefaultTypeInternal _OneClickReadMailAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickDeleteMailReq::OneClickDeleteMailReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickDeleteMailReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickDeleteMailReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickDeleteMailReqDefaultTypeInternal() {}
  union {
    OneClickDeleteMailReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickDeleteMailReqDefaultTypeInternal _OneClickDeleteMailReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickDeleteMailAck::OneClickDeleteMailAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.deleted_index_)*/{}
  , /*decltype(_impl_._deleted_index_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickDeleteMailAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickDeleteMailAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickDeleteMailAckDefaultTypeInternal() {}
  union {
    OneClickDeleteMailAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickDeleteMailAckDefaultTypeInternal _OneClickDeleteMailAck_default_instance_;
PROTOBUF_CONSTEXPR UnlockFunctionModuleReq::UnlockFunctionModuleReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockFunctionModuleReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockFunctionModuleReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockFunctionModuleReqDefaultTypeInternal() {}
  union {
    UnlockFunctionModuleReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockFunctionModuleReqDefaultTypeInternal _UnlockFunctionModuleReq_default_instance_;
PROTOBUF_CONSTEXPR UnlockFunctionModuleAck::UnlockFunctionModuleAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnlockFunctionModuleAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockFunctionModuleAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockFunctionModuleAckDefaultTypeInternal() {}
  union {
    UnlockFunctionModuleAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockFunctionModuleAckDefaultTypeInternal _UnlockFunctionModuleAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyUnlockedModuels::NotifyUnlockedModuels(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unlocked_modules_)*/{}
  , /*decltype(_impl_._unlocked_modules_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyUnlockedModuelsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyUnlockedModuelsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyUnlockedModuelsDefaultTypeInternal() {}
  union {
    NotifyUnlockedModuels _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyUnlockedModuelsDefaultTypeInternal _NotifyUnlockedModuels_default_instance_;
PROTOBUF_CONSTEXPR UpdateChat::UpdateChat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chat_message_)*/nullptr
  , /*decltype(_impl_.channel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateChatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateChatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateChatDefaultTypeInternal() {}
  union {
    UpdateChat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateChatDefaultTypeInternal _UpdateChat_default_instance_;
PROTOBUF_CONSTEXPR SendChatMessageReq::SendChatMessageReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.role_id_)*/uint64_t{0u}
  , /*decltype(_impl_.channel_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendChatMessageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendChatMessageReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendChatMessageReqDefaultTypeInternal() {}
  union {
    SendChatMessageReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendChatMessageReqDefaultTypeInternal _SendChatMessageReq_default_instance_;
PROTOBUF_CONSTEXPR SendChatMessageAck::SendChatMessageAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendChatMessageAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendChatMessageAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendChatMessageAckDefaultTypeInternal() {}
  union {
    SendChatMessageAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendChatMessageAckDefaultTypeInternal _SendChatMessageAck_default_instance_;
PROTOBUF_CONSTEXPR GetChatRecordReq::GetChatRecordReq(
    ::_pbi::ConstantInitialized) {}
struct GetChatRecordReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChatRecordReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChatRecordReqDefaultTypeInternal() {}
  union {
    GetChatRecordReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChatRecordReqDefaultTypeInternal _GetChatRecordReq_default_instance_;
PROTOBUF_CONSTEXPR GetChatRecordAck::GetChatRecordAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sept_record_)*/{}
  , /*decltype(_impl_.public_chat_record_)*/nullptr
  , /*decltype(_impl_.private_chat_record_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetChatRecordAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChatRecordAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChatRecordAckDefaultTypeInternal() {}
  union {
    GetChatRecordAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChatRecordAckDefaultTypeInternal _GetChatRecordAck_default_instance_;
PROTOBUF_CONSTEXPR DeletePrivateChatRecordReq::DeletePrivateChatRecordReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeletePrivateChatRecordReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePrivateChatRecordReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePrivateChatRecordReqDefaultTypeInternal() {}
  union {
    DeletePrivateChatRecordReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePrivateChatRecordReqDefaultTypeInternal _DeletePrivateChatRecordReq_default_instance_;
PROTOBUF_CONSTEXPR DeletePrivateChatRecordAck::DeletePrivateChatRecordAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeletePrivateChatRecordAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePrivateChatRecordAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePrivateChatRecordAckDefaultTypeInternal() {}
  union {
    DeletePrivateChatRecordAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePrivateChatRecordAckDefaultTypeInternal _DeletePrivateChatRecordAck_default_instance_;
PROTOBUF_CONSTEXPR ClearChatUnreadNumReq::ClearChatUnreadNumReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ClearChatUnreadNumReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearChatUnreadNumReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearChatUnreadNumReqDefaultTypeInternal() {}
  union {
    ClearChatUnreadNumReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearChatUnreadNumReqDefaultTypeInternal _ClearChatUnreadNumReq_default_instance_;
PROTOBUF_CONSTEXPR ClearChatUnreadNumAck::ClearChatUnreadNumAck(
    ::_pbi::ConstantInitialized) {}
struct ClearChatUnreadNumAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearChatUnreadNumAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearChatUnreadNumAckDefaultTypeInternal() {}
  union {
    ClearChatUnreadNumAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearChatUnreadNumAckDefaultTypeInternal _ClearChatUnreadNumAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleInfoCacheReq::GetRoleInfoCacheReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_ids_)*/{}
  , /*decltype(_impl_._role_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleInfoCacheReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleInfoCacheReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleInfoCacheReqDefaultTypeInternal() {}
  union {
    GetRoleInfoCacheReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleInfoCacheReqDefaultTypeInternal _GetRoleInfoCacheReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleInfoCacheAck::GetRoleInfoCacheAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_infos_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleInfoCacheAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleInfoCacheAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleInfoCacheAckDefaultTypeInternal() {}
  union {
    GetRoleInfoCacheAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleInfoCacheAckDefaultTypeInternal _GetRoleInfoCacheAck_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineStartReq::ForgeRefineStartReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.recipe_id_)*/0
  , /*decltype(_impl_.material_id_)*/0
  , /*decltype(_impl_.ext_material_id_)*/0
  , /*decltype(_impl_.target_num_)*/0
  , /*decltype(_impl_.auto_sell_poor_)*/false
  , /*decltype(_impl_.auto_sell_middle_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeRefineStartReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineStartReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineStartReqDefaultTypeInternal() {}
  union {
    ForgeRefineStartReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineStartReqDefaultTypeInternal _ForgeRefineStartReq_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineStartAck::ForgeRefineStartAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeRefineStartAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineStartAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineStartAckDefaultTypeInternal() {}
  union {
    ForgeRefineStartAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineStartAckDefaultTypeInternal _ForgeRefineStartAck_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineCancelReq::ForgeRefineCancelReq(
    ::_pbi::ConstantInitialized) {}
struct ForgeRefineCancelReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineCancelReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineCancelReqDefaultTypeInternal() {}
  union {
    ForgeRefineCancelReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineCancelReqDefaultTypeInternal _ForgeRefineCancelReq_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineCancelAck::ForgeRefineCancelAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeRefineCancelAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineCancelAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineCancelAckDefaultTypeInternal() {}
  union {
    ForgeRefineCancelAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineCancelAckDefaultTypeInternal _ForgeRefineCancelAck_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineExtractReq::ForgeRefineExtractReq(
    ::_pbi::ConstantInitialized) {}
struct ForgeRefineExtractReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineExtractReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineExtractReqDefaultTypeInternal() {}
  union {
    ForgeRefineExtractReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineExtractReqDefaultTypeInternal _ForgeRefineExtractReq_default_instance_;
PROTOBUF_CONSTEXPR ForgeRefineExtractAck::ForgeRefineExtractAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._items_cached_byte_size_)*/{0}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeRefineExtractAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeRefineExtractAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeRefineExtractAckDefaultTypeInternal() {}
  union {
    ForgeRefineExtractAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeRefineExtractAckDefaultTypeInternal _ForgeRefineExtractAck_default_instance_;
PROTOBUF_CONSTEXPR GetForgeLostEquipmentDataReq::GetForgeLostEquipmentDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetForgeLostEquipmentDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForgeLostEquipmentDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForgeLostEquipmentDataReqDefaultTypeInternal() {}
  union {
    GetForgeLostEquipmentDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForgeLostEquipmentDataReqDefaultTypeInternal _GetForgeLostEquipmentDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetForgeLostEquipmentDataAck::GetForgeLostEquipmentDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetForgeLostEquipmentDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetForgeLostEquipmentDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetForgeLostEquipmentDataAckDefaultTypeInternal() {}
  union {
    GetForgeLostEquipmentDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetForgeLostEquipmentDataAckDefaultTypeInternal _GetForgeLostEquipmentDataAck_default_instance_;
PROTOBUF_CONSTEXPR ForgeDestroyReq::ForgeDestroyReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeDestroyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeDestroyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeDestroyReqDefaultTypeInternal() {}
  union {
    ForgeDestroyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeDestroyReqDefaultTypeInternal _ForgeDestroyReq_default_instance_;
PROTOBUF_CONSTEXPR ForgeDestroyAck::ForgeDestroyAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeDestroyAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeDestroyAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeDestroyAckDefaultTypeInternal() {}
  union {
    ForgeDestroyAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeDestroyAckDefaultTypeInternal _ForgeDestroyAck_default_instance_;
PROTOBUF_CONSTEXPR ForgeFindBackReq::ForgeFindBackReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeFindBackReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeFindBackReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeFindBackReqDefaultTypeInternal() {}
  union {
    ForgeFindBackReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeFindBackReqDefaultTypeInternal _ForgeFindBackReq_default_instance_;
PROTOBUF_CONSTEXPR ForgeFindBackAck::ForgeFindBackAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ForgeFindBackAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForgeFindBackAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForgeFindBackAckDefaultTypeInternal() {}
  union {
    ForgeFindBackAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForgeFindBackAckDefaultTypeInternal _ForgeFindBackAck_default_instance_;
PROTOBUF_CONSTEXPR RequestPillElixirDataReq::RequestPillElixirDataReq(
    ::_pbi::ConstantInitialized) {}
struct RequestPillElixirDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestPillElixirDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestPillElixirDataReqDefaultTypeInternal() {}
  union {
    RequestPillElixirDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestPillElixirDataReqDefaultTypeInternal _RequestPillElixirDataReq_default_instance_;
PROTOBUF_CONSTEXPR RequestPillElixirDataAck::RequestPillElixirDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestPillElixirDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestPillElixirDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestPillElixirDataAckDefaultTypeInternal() {}
  union {
    RequestPillElixirDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestPillElixirDataAckDefaultTypeInternal _RequestPillElixirDataAck_default_instance_;
PROTOBUF_CONSTEXPR GetOnePillElixirDataReq::GetOnePillElixirDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOnePillElixirDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOnePillElixirDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOnePillElixirDataReqDefaultTypeInternal() {}
  union {
    GetOnePillElixirDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOnePillElixirDataReqDefaultTypeInternal _GetOnePillElixirDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetOnePillElixirDataAck::GetOnePillElixirDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOnePillElixirDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOnePillElixirDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOnePillElixirDataAckDefaultTypeInternal() {}
  union {
    GetOnePillElixirDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOnePillElixirDataAckDefaultTypeInternal _GetOnePillElixirDataAck_default_instance_;
PROTOBUF_CONSTEXPR RequestModifyPillElixirFilterReq::RequestModifyPillElixirFilterReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.limit_double_)*/0
  , /*decltype(_impl_.limit_exp_)*/0
  , /*decltype(_impl_.limit_property_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestModifyPillElixirFilterReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestModifyPillElixirFilterReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestModifyPillElixirFilterReqDefaultTypeInternal() {}
  union {
    RequestModifyPillElixirFilterReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestModifyPillElixirFilterReqDefaultTypeInternal _RequestModifyPillElixirFilterReq_default_instance_;
PROTOBUF_CONSTEXPR RequestModifyPillElixirFilterAck::RequestModifyPillElixirFilterAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestModifyPillElixirFilterAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestModifyPillElixirFilterAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestModifyPillElixirFilterAckDefaultTypeInternal() {}
  union {
    RequestModifyPillElixirFilterAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestModifyPillElixirFilterAckDefaultTypeInternal _RequestModifyPillElixirFilterAck_default_instance_;
PROTOBUF_CONSTEXPR UsePillElixirReport::UsePillElixirReport(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_.property_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UsePillElixirReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UsePillElixirReportDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UsePillElixirReportDefaultTypeInternal() {}
  union {
    UsePillElixirReport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UsePillElixirReportDefaultTypeInternal _UsePillElixirReport_default_instance_;
PROTOBUF_CONSTEXPR UsePillElixirReq::UsePillElixirReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UsePillElixirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UsePillElixirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UsePillElixirReqDefaultTypeInternal() {}
  union {
    UsePillElixirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UsePillElixirReqDefaultTypeInternal _UsePillElixirReq_default_instance_;
PROTOBUF_CONSTEXPR UsePillElixirAck::UsePillElixirAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UsePillElixirAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UsePillElixirAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UsePillElixirAckDefaultTypeInternal() {}
  union {
    UsePillElixirAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UsePillElixirAckDefaultTypeInternal _UsePillElixirAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickUsePillElixirReq::OneClickUsePillElixirReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickUsePillElixirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickUsePillElixirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickUsePillElixirReqDefaultTypeInternal() {}
  union {
    OneClickUsePillElixirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickUsePillElixirReqDefaultTypeInternal _OneClickUsePillElixirReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickUsePillElixirAck::OneClickUsePillElixirAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.report_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickUsePillElixirAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickUsePillElixirAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickUsePillElixirAckDefaultTypeInternal() {}
  union {
    OneClickUsePillElixirAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickUsePillElixirAckDefaultTypeInternal _OneClickUsePillElixirAck_default_instance_;
PROTOBUF_CONSTEXPR TradePillElixirReq::TradePillElixirReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TradePillElixirReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradePillElixirReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradePillElixirReqDefaultTypeInternal() {}
  union {
    TradePillElixirReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradePillElixirReqDefaultTypeInternal _TradePillElixirReq_default_instance_;
PROTOBUF_CONSTEXPR TradePillElixirAck::TradePillElixirAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TradePillElixirAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradePillElixirAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradePillElixirAckDefaultTypeInternal() {}
  union {
    TradePillElixirAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradePillElixirAckDefaultTypeInternal _TradePillElixirAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyAutoModeStatus::NotifyAutoModeStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyAutoModeStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyAutoModeStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyAutoModeStatusDefaultTypeInternal() {}
  union {
    NotifyAutoModeStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyAutoModeStatusDefaultTypeInternal _NotifyAutoModeStatus_default_instance_;
PROTOBUF_CONSTEXPR SetAutoMode::SetAutoMode(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAutoModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAutoModeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAutoModeDefaultTypeInternal() {}
  union {
    SetAutoMode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAutoModeDefaultTypeInternal _SetAutoMode_default_instance_;
PROTOBUF_CONSTEXPR ReinforceEquipmentReq::ReinforceEquipmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReinforceEquipmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinforceEquipmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinforceEquipmentReqDefaultTypeInternal() {}
  union {
    ReinforceEquipmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinforceEquipmentReqDefaultTypeInternal _ReinforceEquipmentReq_default_instance_;
PROTOBUF_CONSTEXPR ReinforceEquipmentAck::ReinforceEquipmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReinforceEquipmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinforceEquipmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinforceEquipmentAckDefaultTypeInternal() {}
  union {
    ReinforceEquipmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinforceEquipmentAckDefaultTypeInternal _ReinforceEquipmentAck_default_instance_;
PROTOBUF_CONSTEXPR QiWenEquipmentReq::QiWenEquipmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.commit_materials_)*/{}
  , /*decltype(_impl_._commit_materials_cached_byte_size_)*/{0}
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.select_abc_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QiWenEquipmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QiWenEquipmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QiWenEquipmentReqDefaultTypeInternal() {}
  union {
    QiWenEquipmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QiWenEquipmentReqDefaultTypeInternal _QiWenEquipmentReq_default_instance_;
PROTOBUF_CONSTEXPR QiWenEquipmentAck::QiWenEquipmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QiWenEquipmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QiWenEquipmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QiWenEquipmentAckDefaultTypeInternal() {}
  union {
    QiWenEquipmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QiWenEquipmentAckDefaultTypeInternal _QiWenEquipmentAck_default_instance_;
PROTOBUF_CONSTEXPR RefineEquipmentReq::RefineEquipmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefineEquipmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefineEquipmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefineEquipmentReqDefaultTypeInternal() {}
  union {
    RefineEquipmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefineEquipmentReqDefaultTypeInternal _RefineEquipmentReq_default_instance_;
PROTOBUF_CONSTEXPR RefineEquipmentAck::RefineEquipmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefineEquipmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefineEquipmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefineEquipmentAckDefaultTypeInternal() {}
  union {
    RefineEquipmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefineEquipmentAckDefaultTypeInternal _RefineEquipmentAck_default_instance_;
PROTOBUF_CONSTEXPR ResetEquipmentReq::ResetEquipmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{}
  , /*decltype(_impl_._id_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResetEquipmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetEquipmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetEquipmentReqDefaultTypeInternal() {}
  union {
    ResetEquipmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetEquipmentReqDefaultTypeInternal _ResetEquipmentReq_default_instance_;
PROTOBUF_CONSTEXPR ResetEquipmentAck::ResetEquipmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResetEquipmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetEquipmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetEquipmentAckDefaultTypeInternal() {}
  union {
    ResetEquipmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetEquipmentAckDefaultTypeInternal _ResetEquipmentAck_default_instance_;
PROTOBUF_CONSTEXPR InheritEquipmentReq::InheritEquipmentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.equipment_from_)*/int64_t{0}
  , /*decltype(_impl_.equipment_to_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InheritEquipmentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InheritEquipmentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InheritEquipmentReqDefaultTypeInternal() {}
  union {
    InheritEquipmentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InheritEquipmentReqDefaultTypeInternal _InheritEquipmentReq_default_instance_;
PROTOBUF_CONSTEXPR InheritEquipmentAck::InheritEquipmentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InheritEquipmentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InheritEquipmentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InheritEquipmentAckDefaultTypeInternal() {}
  union {
    InheritEquipmentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InheritEquipmentAckDefaultTypeInternal _InheritEquipmentAck_default_instance_;
PROTOBUF_CONSTEXPR LockItemReq::LockItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LockItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LockItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LockItemReqDefaultTypeInternal() {}
  union {
    LockItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LockItemReqDefaultTypeInternal _LockItemReq_default_instance_;
PROTOBUF_CONSTEXPR LockItemAck::LockItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LockItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LockItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LockItemAckDefaultTypeInternal() {}
  union {
    LockItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LockItemAckDefaultTypeInternal _LockItemAck_default_instance_;
PROTOBUF_CONSTEXPR CollectionActivatedSuit::CollectionActivatedSuit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_.combat_power_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionActivatedSuitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionActivatedSuitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionActivatedSuitDefaultTypeInternal() {}
  union {
    CollectionActivatedSuit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionActivatedSuitDefaultTypeInternal _CollectionActivatedSuit_default_instance_;
PROTOBUF_CONSTEXPR GetRoleCollectionDataReq::GetRoleCollectionDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleCollectionDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleCollectionDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleCollectionDataReqDefaultTypeInternal() {}
  union {
    GetRoleCollectionDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleCollectionDataReqDefaultTypeInternal _GetRoleCollectionDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleCollectionDataRsp::GetRoleCollectionDataRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entries_)*/{}
  , /*decltype(_impl_.common_pieces_)*/{}
  , /*decltype(_impl_.actived_suite_)*/{}
  , /*decltype(_impl_.draw_award_done_histories_)*/{}
  , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
  , /*decltype(_impl_.can_award_histories_)*/{}
  , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
  , /*decltype(_impl_.zone_active_awards_)*/{}
  , /*decltype(_impl_.next_reset_enhance_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleCollectionDataRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleCollectionDataRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleCollectionDataRspDefaultTypeInternal() {}
  union {
    GetRoleCollectionDataRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleCollectionDataRspDefaultTypeInternal _GetRoleCollectionDataRsp_default_instance_;
PROTOBUF_CONSTEXPR RoleCollectionOpReq::RoleCollectionOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.consume_list_)*/{}
  , /*decltype(_impl_.op_type_)*/0
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.is_preview_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoleCollectionOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoleCollectionOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoleCollectionOpReqDefaultTypeInternal() {}
  union {
    RoleCollectionOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoleCollectionOpReqDefaultTypeInternal _RoleCollectionOpReq_default_instance_;
PROTOBUF_CONSTEXPR RoleCollectionOpAck::RoleCollectionOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.op_type_)*/0
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoleCollectionOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoleCollectionOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoleCollectionOpAckDefaultTypeInternal() {}
  union {
    RoleCollectionOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoleCollectionOpAckDefaultTypeInternal _RoleCollectionOpAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyRoleCollectionData::NotifyRoleCollectionData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entry_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyRoleCollectionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyRoleCollectionDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyRoleCollectionDataDefaultTypeInternal() {}
  union {
    NotifyRoleCollectionData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyRoleCollectionDataDefaultTypeInternal _NotifyRoleCollectionData_default_instance_;
PROTOBUF_CONSTEXPR NotifyCommonCollectionPieceData::NotifyCommonCollectionPieceData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_pieces_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyCommonCollectionPieceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyCommonCollectionPieceDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyCommonCollectionPieceDataDefaultTypeInternal() {}
  union {
    NotifyCommonCollectionPieceData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyCommonCollectionPieceDataDefaultTypeInternal _NotifyCommonCollectionPieceData_default_instance_;
PROTOBUF_CONSTEXPR NotifyCollectionActivatedSuit::NotifyCollectionActivatedSuit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.actived_suite_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyCollectionActivatedSuitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyCollectionActivatedSuitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyCollectionActivatedSuitDefaultTypeInternal() {}
  union {
    NotifyCollectionActivatedSuit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyCollectionActivatedSuitDefaultTypeInternal _NotifyCollectionActivatedSuit_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfRoleCollectionReq::ShareSelfRoleCollectionReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfRoleCollectionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfRoleCollectionReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfRoleCollectionReqDefaultTypeInternal() {}
  union {
    ShareSelfRoleCollectionReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfRoleCollectionReqDefaultTypeInternal _ShareSelfRoleCollectionReq_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfRoleCollectionRsp::ShareSelfRoleCollectionRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfRoleCollectionRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfRoleCollectionRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfRoleCollectionRspDefaultTypeInternal() {}
  union {
    ShareSelfRoleCollectionRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfRoleCollectionRspDefaultTypeInternal _ShareSelfRoleCollectionRsp_default_instance_;
PROTOBUF_CONSTEXPR GetShareRoleCollectionDataReq::GetShareRoleCollectionDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShareRoleCollectionDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShareRoleCollectionDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShareRoleCollectionDataReqDefaultTypeInternal() {}
  union {
    GetShareRoleCollectionDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShareRoleCollectionDataReqDefaultTypeInternal _GetShareRoleCollectionDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetShareRoleCollectionDataRsp::GetShareRoleCollectionDataRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.collection_data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShareRoleCollectionDataRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShareRoleCollectionDataRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShareRoleCollectionDataRspDefaultTypeInternal() {}
  union {
    GetShareRoleCollectionDataRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShareRoleCollectionDataRspDefaultTypeInternal _GetShareRoleCollectionDataRsp_default_instance_;
PROTOBUF_CONSTEXPR NotifyRoleCollectionHistories::NotifyRoleCollectionHistories(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.draw_award_done_histories_)*/{}
  , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
  , /*decltype(_impl_.can_award_histories_)*/{}
  , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyRoleCollectionHistoriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyRoleCollectionHistoriesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyRoleCollectionHistoriesDefaultTypeInternal() {}
  union {
    NotifyRoleCollectionHistories _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyRoleCollectionHistoriesDefaultTypeInternal _NotifyRoleCollectionHistories_default_instance_;
PROTOBUF_CONSTEXPR NotifyCollectionZoneActiveAwards::NotifyCollectionZoneActiveAwards(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.zone_active_awards_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyCollectionZoneActiveAwardsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyCollectionZoneActiveAwardsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyCollectionZoneActiveAwardsDefaultTypeInternal() {}
  union {
    NotifyCollectionZoneActiveAwards _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyCollectionZoneActiveAwardsDefaultTypeInternal _NotifyCollectionZoneActiveAwards_default_instance_;
PROTOBUF_CONSTEXPR NotifyRoleCollectionNextResetEnhanceTicks::NotifyRoleCollectionNextResetEnhanceTicks(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.next_reset_enhance_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyRoleCollectionNextResetEnhanceTicksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyRoleCollectionNextResetEnhanceTicksDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyRoleCollectionNextResetEnhanceTicksDefaultTypeInternal() {}
  union {
    NotifyRoleCollectionNextResetEnhanceTicks _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyRoleCollectionNextResetEnhanceTicksDefaultTypeInternal _NotifyRoleCollectionNextResetEnhanceTicks_default_instance_;
PROTOBUF_CONSTEXPR RoleBattleHistoryList::RoleBattleHistoryList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entries_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoleBattleHistoryListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoleBattleHistoryListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoleBattleHistoryListDefaultTypeInternal() {}
  union {
    RoleBattleHistoryList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoleBattleHistoryListDefaultTypeInternal _RoleBattleHistoryList_default_instance_;
PROTOBUF_CONSTEXPR NotifySoloArenaChallengeOver::NotifySoloArenaChallengeOver(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.win_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifySoloArenaChallengeOverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifySoloArenaChallengeOverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifySoloArenaChallengeOverDefaultTypeInternal() {}
  union {
    NotifySoloArenaChallengeOver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifySoloArenaChallengeOverDefaultTypeInternal _NotifySoloArenaChallengeOver_default_instance_;
PROTOBUF_CONSTEXPR SoloArenaChallengeReq::SoloArenaChallengeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.target_role_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SoloArenaChallengeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoloArenaChallengeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoloArenaChallengeReqDefaultTypeInternal() {}
  union {
    SoloArenaChallengeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoloArenaChallengeReqDefaultTypeInternal _SoloArenaChallengeReq_default_instance_;
PROTOBUF_CONSTEXPR SoloArenaChallengeAck::SoloArenaChallengeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SoloArenaChallengeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoloArenaChallengeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoloArenaChallengeAckDefaultTypeInternal() {}
  union {
    SoloArenaChallengeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoloArenaChallengeAckDefaultTypeInternal _SoloArenaChallengeAck_default_instance_;
PROTOBUF_CONSTEXPR SoloArenaQuickEndReq::SoloArenaQuickEndReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_exit_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SoloArenaQuickEndReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoloArenaQuickEndReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoloArenaQuickEndReqDefaultTypeInternal() {}
  union {
    SoloArenaQuickEndReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoloArenaQuickEndReqDefaultTypeInternal _SoloArenaQuickEndReq_default_instance_;
PROTOBUF_CONSTEXPR SoloArenaQuickEndAck::SoloArenaQuickEndAck(
    ::_pbi::ConstantInitialized) {}
struct SoloArenaQuickEndAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoloArenaQuickEndAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoloArenaQuickEndAckDefaultTypeInternal() {}
  union {
    SoloArenaQuickEndAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoloArenaQuickEndAckDefaultTypeInternal _SoloArenaQuickEndAck_default_instance_;
PROTOBUF_CONSTEXPR GetSoloArenaHistoryListReq::GetSoloArenaHistoryListReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSoloArenaHistoryListReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSoloArenaHistoryListReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSoloArenaHistoryListReqDefaultTypeInternal() {}
  union {
    GetSoloArenaHistoryListReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSoloArenaHistoryListReqDefaultTypeInternal _GetSoloArenaHistoryListReq_default_instance_;
PROTOBUF_CONSTEXPR GetSoloArenaHistoryListAck::GetSoloArenaHistoryListAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSoloArenaHistoryListAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSoloArenaHistoryListAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSoloArenaHistoryListAckDefaultTypeInternal() {}
  union {
    GetSoloArenaHistoryListAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSoloArenaHistoryListAckDefaultTypeInternal _GetSoloArenaHistoryListAck_default_instance_;
PROTOBUF_CONSTEXPR ReplaySoloArenaHistoryReq::ReplaySoloArenaHistoryReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.history_world_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplaySoloArenaHistoryReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaySoloArenaHistoryReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaySoloArenaHistoryReqDefaultTypeInternal() {}
  union {
    ReplaySoloArenaHistoryReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaySoloArenaHistoryReqDefaultTypeInternal _ReplaySoloArenaHistoryReq_default_instance_;
PROTOBUF_CONSTEXPR ReplaySoloArenaHistoryAck::ReplaySoloArenaHistoryAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplaySoloArenaHistoryAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaySoloArenaHistoryAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaySoloArenaHistoryAckDefaultTypeInternal() {}
  union {
    ReplaySoloArenaHistoryAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaySoloArenaHistoryAckDefaultTypeInternal _ReplaySoloArenaHistoryAck_default_instance_;
PROTOBUF_CONSTEXPR GetBattleHistoryInfoReq::GetBattleHistoryInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.history_world_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBattleHistoryInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBattleHistoryInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBattleHistoryInfoReqDefaultTypeInternal() {}
  union {
    GetBattleHistoryInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBattleHistoryInfoReqDefaultTypeInternal _GetBattleHistoryInfoReq_default_instance_;
PROTOBUF_CONSTEXPR GetBattleHistoryInfoAck::GetBattleHistoryInfoAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBattleHistoryInfoAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBattleHistoryInfoAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBattleHistoryInfoAckDefaultTypeInternal() {}
  union {
    GetBattleHistoryInfoAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBattleHistoryInfoAckDefaultTypeInternal _GetBattleHistoryInfoAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyEnterOpenClientWorld::NotifyEnterOpenClientWorld(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.world_cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyEnterOpenClientWorldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyEnterOpenClientWorldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyEnterOpenClientWorldDefaultTypeInternal() {}
  union {
    NotifyEnterOpenClientWorld _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyEnterOpenClientWorldDefaultTypeInternal _NotifyEnterOpenClientWorld_default_instance_;
PROTOBUF_CONSTEXPR NotifyMonsterTowerData::NotifyMonsterTowerData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyMonsterTowerDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyMonsterTowerDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyMonsterTowerDataDefaultTypeInternal() {}
  union {
    NotifyMonsterTowerData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyMonsterTowerDataDefaultTypeInternal _NotifyMonsterTowerData_default_instance_;
PROTOBUF_CONSTEXPR NotifyMonsterTowerChallengeOver::NotifyMonsterTowerChallengeOver(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.floor_)*/0
  , /*decltype(_impl_.win_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyMonsterTowerChallengeOverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyMonsterTowerChallengeOverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyMonsterTowerChallengeOverDefaultTypeInternal() {}
  union {
    NotifyMonsterTowerChallengeOver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyMonsterTowerChallengeOverDefaultTypeInternal _NotifyMonsterTowerChallengeOver_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerChallengeReq::MonsterTowerChallengeReq(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerChallengeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerChallengeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerChallengeReqDefaultTypeInternal() {}
  union {
    MonsterTowerChallengeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerChallengeReqDefaultTypeInternal _MonsterTowerChallengeReq_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerChallengeAck::MonsterTowerChallengeAck(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerChallengeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerChallengeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerChallengeAckDefaultTypeInternal() {}
  union {
    MonsterTowerChallengeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerChallengeAckDefaultTypeInternal _MonsterTowerChallengeAck_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerDrawIdleAwardReq::MonsterTowerDrawIdleAwardReq(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerDrawIdleAwardReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerDrawIdleAwardReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerDrawIdleAwardReqDefaultTypeInternal() {}
  union {
    MonsterTowerDrawIdleAwardReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerDrawIdleAwardReqDefaultTypeInternal _MonsterTowerDrawIdleAwardReq_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerDrawIdleAwardAck::MonsterTowerDrawIdleAwardAck(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerDrawIdleAwardAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerDrawIdleAwardAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerDrawIdleAwardAckDefaultTypeInternal() {}
  union {
    MonsterTowerDrawIdleAwardAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerDrawIdleAwardAckDefaultTypeInternal _MonsterTowerDrawIdleAwardAck_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerClosedDoorTrainingReq::MonsterTowerClosedDoorTrainingReq(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerClosedDoorTrainingReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerClosedDoorTrainingReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerClosedDoorTrainingReqDefaultTypeInternal() {}
  union {
    MonsterTowerClosedDoorTrainingReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerClosedDoorTrainingReqDefaultTypeInternal _MonsterTowerClosedDoorTrainingReq_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerClosedDoorTrainingAck::MonsterTowerClosedDoorTrainingAck(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerClosedDoorTrainingAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerClosedDoorTrainingAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerClosedDoorTrainingAckDefaultTypeInternal() {}
  union {
    MonsterTowerClosedDoorTrainingAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerClosedDoorTrainingAckDefaultTypeInternal _MonsterTowerClosedDoorTrainingAck_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerQuickEndReq::MonsterTowerQuickEndReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_exit_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MonsterTowerQuickEndReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerQuickEndReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerQuickEndReqDefaultTypeInternal() {}
  union {
    MonsterTowerQuickEndReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerQuickEndReqDefaultTypeInternal _MonsterTowerQuickEndReq_default_instance_;
PROTOBUF_CONSTEXPR MonsterTowerQuickEndAck::MonsterTowerQuickEndAck(
    ::_pbi::ConstantInitialized) {}
struct MonsterTowerQuickEndAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterTowerQuickEndAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterTowerQuickEndAckDefaultTypeInternal() {}
  union {
    MonsterTowerQuickEndAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterTowerQuickEndAckDefaultTypeInternal _MonsterTowerQuickEndAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyFightModeData::NotifyFightModeData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyFightModeDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyFightModeDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyFightModeDataDefaultTypeInternal() {}
  union {
    NotifyFightModeData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyFightModeDataDefaultTypeInternal _NotifyFightModeData_default_instance_;
PROTOBUF_CONSTEXPR SetFightModeReq::SetFightModeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetFightModeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFightModeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFightModeReqDefaultTypeInternal() {}
  union {
    SetFightModeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFightModeReqDefaultTypeInternal _SetFightModeReq_default_instance_;
PROTOBUF_CONSTEXPR SetFightModeAck::SetFightModeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_.error_code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetFightModeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFightModeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFightModeAckDefaultTypeInternal() {}
  union {
    SetFightModeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFightModeAckDefaultTypeInternal _SetFightModeAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyInventorySpaceNum::NotifyInventorySpaceNum(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyInventorySpaceNumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyInventorySpaceNumDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyInventorySpaceNumDefaultTypeInternal() {}
  union {
    NotifyInventorySpaceNum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyInventorySpaceNumDefaultTypeInternal _NotifyInventorySpaceNum_default_instance_;
PROTOBUF_CONSTEXPR NotifyInventoryFullMailItem::NotifyInventoryFullMailItem(
    ::_pbi::ConstantInitialized) {}
struct NotifyInventoryFullMailItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyInventoryFullMailItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyInventoryFullMailItemDefaultTypeInternal() {}
  union {
    NotifyInventoryFullMailItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyInventoryFullMailItemDefaultTypeInternal _NotifyInventoryFullMailItem_default_instance_;
PROTOBUF_CONSTEXPR NotifyQiCollectorRank::NotifyQiCollectorRank(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rank_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyQiCollectorRankDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyQiCollectorRankDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyQiCollectorRankDefaultTypeInternal() {}
  union {
    NotifyQiCollectorRank _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyQiCollectorRankDefaultTypeInternal _NotifyQiCollectorRank_default_instance_;
PROTOBUF_CONSTEXPR UpgradeQiCollectorReq::UpgradeQiCollectorReq(
    ::_pbi::ConstantInitialized) {}
struct UpgradeQiCollectorReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpgradeQiCollectorReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpgradeQiCollectorReqDefaultTypeInternal() {}
  union {
    UpgradeQiCollectorReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpgradeQiCollectorReqDefaultTypeInternal _UpgradeQiCollectorReq_default_instance_;
PROTOBUF_CONSTEXPR UpgradeQiCollectorAck::UpgradeQiCollectorAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpgradeQiCollectorAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpgradeQiCollectorAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpgradeQiCollectorAckDefaultTypeInternal() {}
  union {
    UpgradeQiCollectorAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpgradeQiCollectorAckDefaultTypeInternal _UpgradeQiCollectorAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleAllStatsReq::GetRoleAllStatsReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleAllStatsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleAllStatsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleAllStatsReqDefaultTypeInternal() {}
  union {
    GetRoleAllStatsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleAllStatsReqDefaultTypeInternal _GetRoleAllStatsReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleAllStatsAck::GetRoleAllStatsAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.all_stats_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleAllStatsAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleAllStatsAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleAllStatsAckDefaultTypeInternal() {}
  union {
    GetRoleAllStatsAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleAllStatsAckDefaultTypeInternal _GetRoleAllStatsAck_default_instance_;
PROTOBUF_CONSTEXPR GetShanhetuDataReq::GetShanhetuDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetShanhetuDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShanhetuDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShanhetuDataReqDefaultTypeInternal() {}
  union {
    GetShanhetuDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShanhetuDataReqDefaultTypeInternal _GetShanhetuDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetShanhetuDataAck::GetShanhetuDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShanhetuDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShanhetuDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShanhetuDataAckDefaultTypeInternal() {}
  union {
    GetShanhetuDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShanhetuDataAckDefaultTypeInternal _GetShanhetuDataAck_default_instance_;
PROTOBUF_CONSTEXPR SetShanhetuUseConfigReq::SetShanhetuUseConfigReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.auto_skip_green_)*/false
  , /*decltype(_impl_.auto_skip_blue_)*/false
  , /*decltype(_impl_.auto_skip_perpo_)*/false
  , /*decltype(_impl_.auto_skip_gold_)*/false
  , /*decltype(_impl_.auto_skip_red_)*/false
  , /*decltype(_impl_.auto_select_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetShanhetuUseConfigReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetShanhetuUseConfigReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetShanhetuUseConfigReqDefaultTypeInternal() {}
  union {
    SetShanhetuUseConfigReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetShanhetuUseConfigReqDefaultTypeInternal _SetShanhetuUseConfigReq_default_instance_;
PROTOBUF_CONSTEXPR SetShanhetuUseConfigAck::SetShanhetuUseConfigAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetShanhetuUseConfigAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetShanhetuUseConfigAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetShanhetuUseConfigAckDefaultTypeInternal() {}
  union {
    SetShanhetuUseConfigAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetShanhetuUseConfigAckDefaultTypeInternal _SetShanhetuUseConfigAck_default_instance_;
PROTOBUF_CONSTEXPR UseShanhetuReq::UseShanhetuReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_.skip_)*/false
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseShanhetuReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseShanhetuReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseShanhetuReqDefaultTypeInternal() {}
  union {
    UseShanhetuReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseShanhetuReqDefaultTypeInternal _UseShanhetuReq_default_instance_;
PROTOBUF_CONSTEXPR UseShanhetuAck::UseShanhetuAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.map_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UseShanhetuAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UseShanhetuAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UseShanhetuAckDefaultTypeInternal() {}
  union {
    UseShanhetuAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UseShanhetuAckDefaultTypeInternal _UseShanhetuAck_default_instance_;
PROTOBUF_CONSTEXPR StepShanhetuReq::StepShanhetuReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.choose_event_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StepShanhetuReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepShanhetuReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepShanhetuReqDefaultTypeInternal() {}
  union {
    StepShanhetuReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepShanhetuReqDefaultTypeInternal _StepShanhetuReq_default_instance_;
PROTOBUF_CONSTEXPR StepShanhetuAck::StepShanhetuAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.record_)*/nullptr
  , /*decltype(_impl_.done_)*/false
  , /*decltype(_impl_.current_row_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StepShanhetuAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepShanhetuAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepShanhetuAckDefaultTypeInternal() {}
  union {
    StepShanhetuAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepShanhetuAckDefaultTypeInternal _StepShanhetuAck_default_instance_;
PROTOBUF_CONSTEXPR GetShanhetuUseRecordReq::GetShanhetuUseRecordReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/int64_t{0}
  , /*decltype(_impl_.uid_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShanhetuUseRecordReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShanhetuUseRecordReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShanhetuUseRecordReqDefaultTypeInternal() {}
  union {
    GetShanhetuUseRecordReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShanhetuUseRecordReqDefaultTypeInternal _GetShanhetuUseRecordReq_default_instance_;
PROTOBUF_CONSTEXPR GetShanhetuUseRecordAck::GetShanhetuUseRecordAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.record_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShanhetuUseRecordAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShanhetuUseRecordAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShanhetuUseRecordAckDefaultTypeInternal() {}
  union {
    GetShanhetuUseRecordAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShanhetuUseRecordAckDefaultTypeInternal _GetShanhetuUseRecordAck_default_instance_;
PROTOBUF_CONSTEXPR SetAttackLockTypeReq::SetAttackLockTypeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAttackLockTypeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttackLockTypeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttackLockTypeReqDefaultTypeInternal() {}
  union {
    SetAttackLockTypeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttackLockTypeReqDefaultTypeInternal _SetAttackLockTypeReq_default_instance_;
PROTOBUF_CONSTEXPR SetAttackLockTypeAck::SetAttackLockTypeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAttackLockTypeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttackLockTypeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttackLockTypeAckDefaultTypeInternal() {}
  union {
    SetAttackLockTypeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttackLockTypeAckDefaultTypeInternal _SetAttackLockTypeAck_default_instance_;
PROTOBUF_CONSTEXPR SetAttackUnlockTypeReq::SetAttackUnlockTypeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAttackUnlockTypeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttackUnlockTypeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttackUnlockTypeReqDefaultTypeInternal() {}
  union {
    SetAttackUnlockTypeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttackUnlockTypeReqDefaultTypeInternal _SetAttackUnlockTypeReq_default_instance_;
PROTOBUF_CONSTEXPR SetAttackUnlockTypeAck::SetAttackUnlockTypeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetAttackUnlockTypeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAttackUnlockTypeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAttackUnlockTypeAckDefaultTypeInternal() {}
  union {
    SetAttackUnlockTypeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAttackUnlockTypeAckDefaultTypeInternal _SetAttackUnlockTypeAck_default_instance_;
PROTOBUF_CONSTEXPR SetShowUnlockButtonReq::SetShowUnlockButtonReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.enable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetShowUnlockButtonReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetShowUnlockButtonReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetShowUnlockButtonReqDefaultTypeInternal() {}
  union {
    SetShowUnlockButtonReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetShowUnlockButtonReqDefaultTypeInternal _SetShowUnlockButtonReq_default_instance_;
PROTOBUF_CONSTEXPR SetShowUnlockButtonAck::SetShowUnlockButtonAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetShowUnlockButtonAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetShowUnlockButtonAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetShowUnlockButtonAckDefaultTypeInternal() {}
  union {
    SetShowUnlockButtonAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetShowUnlockButtonAckDefaultTypeInternal _SetShowUnlockButtonAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshRoleNormalSetting::RefreshRoleNormalSetting(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.settings_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshRoleNormalSettingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshRoleNormalSettingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshRoleNormalSettingDefaultTypeInternal() {}
  union {
    RefreshRoleNormalSetting _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshRoleNormalSettingDefaultTypeInternal _RefreshRoleNormalSetting_default_instance_;
PROTOBUF_CONSTEXPR GetUserVarReq::GetUserVarReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserVarReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserVarReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserVarReqDefaultTypeInternal() {}
  union {
    GetUserVarReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserVarReqDefaultTypeInternal _GetUserVarReq_default_instance_;
PROTOBUF_CONSTEXPR GetUserVarRsp::GetUserVarRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserVarRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserVarRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserVarRspDefaultTypeInternal() {}
  union {
    GetUserVarRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserVarRspDefaultTypeInternal _GetUserVarRsp_default_instance_;
PROTOBUF_CONSTEXPR GetUserVarsReq::GetUserVarsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_name_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserVarsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserVarsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserVarsReqDefaultTypeInternal() {}
  union {
    GetUserVarsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserVarsReqDefaultTypeInternal _GetUserVarsReq_default_instance_;
PROTOBUF_CONSTEXPR GetUserVarsRsp::GetUserVarsRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserVarsRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserVarsRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserVarsRspDefaultTypeInternal() {}
  union {
    GetUserVarsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserVarsRspDefaultTypeInternal _GetUserVarsRsp_default_instance_;
PROTOBUF_CONSTEXPR SetUserVar::SetUserVar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.var_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetUserVarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUserVarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUserVarDefaultTypeInternal() {}
  union {
    SetUserVar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUserVarDefaultTypeInternal _SetUserVar_default_instance_;
PROTOBUF_CONSTEXPR DelUserVar::DelUserVar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.var_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DelUserVarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelUserVarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelUserVarDefaultTypeInternal() {}
  union {
    DelUserVar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelUserVarDefaultTypeInternal _DelUserVar_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfItemReq::ShareSelfItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfItemReqDefaultTypeInternal() {}
  union {
    ShareSelfItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfItemReqDefaultTypeInternal _ShareSelfItemReq_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfItemRsp::ShareSelfItemRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfItemRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfItemRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfItemRspDefaultTypeInternal() {}
  union {
    ShareSelfItemRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfItemRspDefaultTypeInternal _ShareSelfItemRsp_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfItemsReq::ShareSelfItemsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/{}
  , /*decltype(_impl_._item_id_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfItemsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfItemsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfItemsReqDefaultTypeInternal() {}
  union {
    ShareSelfItemsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfItemsReqDefaultTypeInternal _ShareSelfItemsReq_default_instance_;
PROTOBUF_CONSTEXPR ShareSelfItemsRsp::ShareSelfItemsRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareSelfItemsRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareSelfItemsRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareSelfItemsRspDefaultTypeInternal() {}
  union {
    ShareSelfItemsRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareSelfItemsRspDefaultTypeInternal _ShareSelfItemsRsp_default_instance_;
PROTOBUF_CONSTEXPR GetShareItemDataReq::GetShareItemDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.share_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShareItemDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShareItemDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShareItemDataReqDefaultTypeInternal() {}
  union {
    GetShareItemDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShareItemDataReqDefaultTypeInternal _GetShareItemDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetShareItemDataRsp::GetShareItemDataRsp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetShareItemDataRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetShareItemDataRspDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetShareItemDataRspDefaultTypeInternal() {}
  union {
    GetShareItemDataRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetShareItemDataRspDefaultTypeInternal _GetShareItemDataRsp_default_instance_;
PROTOBUF_CONSTEXPR GetChecklistDataReq::GetChecklistDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetChecklistDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChecklistDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChecklistDataReqDefaultTypeInternal() {}
  union {
    GetChecklistDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChecklistDataReqDefaultTypeInternal _GetChecklistDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetChecklistDataAck::GetChecklistDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetChecklistDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChecklistDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChecklistDataAckDefaultTypeInternal() {}
  union {
    GetChecklistDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChecklistDataAckDefaultTypeInternal _GetChecklistDataAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyChecklist::NotifyChecklist(
    ::_pbi::ConstantInitialized) {}
struct NotifyChecklistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyChecklistDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyChecklistDefaultTypeInternal() {}
  union {
    NotifyChecklist _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyChecklistDefaultTypeInternal _NotifyChecklist_default_instance_;
PROTOBUF_CONSTEXPR ChecklistOpReq::ChecklistOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sumbmit_or_receive_)*/false
  , /*decltype(_impl_.day_or_week_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChecklistOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChecklistOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChecklistOpReqDefaultTypeInternal() {}
  union {
    ChecklistOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChecklistOpReqDefaultTypeInternal _ChecklistOpReq_default_instance_;
PROTOBUF_CONSTEXPR ChecklistOpAck::ChecklistOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChecklistOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChecklistOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChecklistOpAckDefaultTypeInternal() {}
  union {
    ChecklistOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChecklistOpAckDefaultTypeInternal _ChecklistOpAck_default_instance_;
PROTOBUF_CONSTEXPR UpdateChecklistReq::UpdateChecklistReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateChecklistReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateChecklistReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateChecklistReqDefaultTypeInternal() {}
  union {
    UpdateChecklistReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateChecklistReqDefaultTypeInternal _UpdateChecklistReq_default_instance_;
PROTOBUF_CONSTEXPR UpdateChecklistAck::UpdateChecklistAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateChecklistAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateChecklistAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateChecklistAckDefaultTypeInternal() {}
  union {
    UpdateChecklistAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateChecklistAckDefaultTypeInternal _UpdateChecklistAck_default_instance_;
PROTOBUF_CONSTEXPR GetCommonItemExchangeDataReq::GetCommonItemExchangeDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCommonItemExchangeDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCommonItemExchangeDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCommonItemExchangeDataReqDefaultTypeInternal() {}
  union {
    GetCommonItemExchangeDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCommonItemExchangeDataReqDefaultTypeInternal _GetCommonItemExchangeDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetCommonItemExchangeDataAck::GetCommonItemExchangeDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.today_exchange_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCommonItemExchangeDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCommonItemExchangeDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCommonItemExchangeDataAckDefaultTypeInternal() {}
  union {
    GetCommonItemExchangeDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCommonItemExchangeDataAckDefaultTypeInternal _GetCommonItemExchangeDataAck_default_instance_;
PROTOBUF_CONSTEXPR ExchangeCommonItemReq::ExchangeCommonItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExchangeCommonItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExchangeCommonItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExchangeCommonItemReqDefaultTypeInternal() {}
  union {
    ExchangeCommonItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExchangeCommonItemReqDefaultTypeInternal _ExchangeCommonItemReq_default_instance_;
PROTOBUF_CONSTEXPR ExchangeCommonItemAck::ExchangeCommonItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_.out_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExchangeCommonItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExchangeCommonItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExchangeCommonItemAckDefaultTypeInternal() {}
  union {
    ExchangeCommonItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExchangeCommonItemAckDefaultTypeInternal _ExchangeCommonItemAck_default_instance_;
PROTOBUF_CONSTEXPR SynthesisCommonItemReq::SynthesisCommonItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SynthesisCommonItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SynthesisCommonItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SynthesisCommonItemReqDefaultTypeInternal() {}
  union {
    SynthesisCommonItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SynthesisCommonItemReqDefaultTypeInternal _SynthesisCommonItemReq_default_instance_;
PROTOBUF_CONSTEXPR SynthesisCommonItemAck::SynthesisCommonItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SynthesisCommonItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SynthesisCommonItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SynthesisCommonItemAckDefaultTypeInternal() {}
  union {
    SynthesisCommonItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SynthesisCommonItemAckDefaultTypeInternal _SynthesisCommonItemAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleSeptShopDataReq::GetRoleSeptShopDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleSeptShopDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleSeptShopDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleSeptShopDataReqDefaultTypeInternal() {}
  union {
    GetRoleSeptShopDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleSeptShopDataReqDefaultTypeInternal _GetRoleSeptShopDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleSeptShopDataAck::GetRoleSeptShopDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleSeptShopDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleSeptShopDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleSeptShopDataAckDefaultTypeInternal() {}
  union {
    GetRoleSeptShopDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleSeptShopDataAckDefaultTypeInternal _GetRoleSeptShopDataAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleSeptQuestDataReq::GetRoleSeptQuestDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleSeptQuestDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleSeptQuestDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleSeptQuestDataReqDefaultTypeInternal() {}
  union {
    GetRoleSeptQuestDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleSeptQuestDataReqDefaultTypeInternal _GetRoleSeptQuestDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleSeptQuestDataAck::GetRoleSeptQuestDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleSeptQuestDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleSeptQuestDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleSeptQuestDataAckDefaultTypeInternal() {}
  union {
    GetRoleSeptQuestDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleSeptQuestDataAckDefaultTypeInternal _GetRoleSeptQuestDataAck_default_instance_;
PROTOBUF_CONSTEXPR BuySeptShopItemReq::BuySeptShopItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuySeptShopItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuySeptShopItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuySeptShopItemReqDefaultTypeInternal() {}
  union {
    BuySeptShopItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuySeptShopItemReqDefaultTypeInternal _BuySeptShopItemReq_default_instance_;
PROTOBUF_CONSTEXPR BuySeptShopItemAck::BuySeptShopItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BuySeptShopItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuySeptShopItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuySeptShopItemAckDefaultTypeInternal() {}
  union {
    BuySeptShopItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuySeptShopItemAckDefaultTypeInternal _BuySeptShopItemAck_default_instance_;
PROTOBUF_CONSTEXPR ReqRoleSeptQuestOpReq::ReqRoleSeptQuestOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReqRoleSeptQuestOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqRoleSeptQuestOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqRoleSeptQuestOpReqDefaultTypeInternal() {}
  union {
    ReqRoleSeptQuestOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqRoleSeptQuestOpReqDefaultTypeInternal _ReqRoleSeptQuestOpReq_default_instance_;
PROTOBUF_CONSTEXPR ReqRoleSeptQuestOpAck::ReqRoleSeptQuestOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReqRoleSeptQuestOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqRoleSeptQuestOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqRoleSeptQuestOpAckDefaultTypeInternal() {}
  union {
    ReqRoleSeptQuestOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqRoleSeptQuestOpAckDefaultTypeInternal _ReqRoleSeptQuestOpAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshSeptQuestReq::RefreshSeptQuestReq(
    ::_pbi::ConstantInitialized) {}
struct RefreshSeptQuestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSeptQuestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSeptQuestReqDefaultTypeInternal() {}
  union {
    RefreshSeptQuestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSeptQuestReqDefaultTypeInternal _RefreshSeptQuestReq_default_instance_;
PROTOBUF_CONSTEXPR RefreshSeptQuestAck::RefreshSeptQuestAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshSeptQuestAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshSeptQuestAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshSeptQuestAckDefaultTypeInternal() {}
  union {
    RefreshSeptQuestAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshSeptQuestAckDefaultTypeInternal _RefreshSeptQuestAck_default_instance_;
PROTOBUF_CONSTEXPR ReqSeptQuestRankUpReq::ReqSeptQuestRankUpReq(
    ::_pbi::ConstantInitialized) {}
struct ReqSeptQuestRankUpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqSeptQuestRankUpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqSeptQuestRankUpReqDefaultTypeInternal() {}
  union {
    ReqSeptQuestRankUpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqSeptQuestRankUpReqDefaultTypeInternal _ReqSeptQuestRankUpReq_default_instance_;
PROTOBUF_CONSTEXPR ReqSeptQuestRankUpAck::ReqSeptQuestRankUpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReqSeptQuestRankUpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqSeptQuestRankUpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqSeptQuestRankUpAckDefaultTypeInternal() {}
  union {
    ReqSeptQuestRankUpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqSeptQuestRankUpAckDefaultTypeInternal _ReqSeptQuestRankUpAck_default_instance_;
PROTOBUF_CONSTEXPR GetGongFaDataReq::GetGongFaDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetGongFaDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGongFaDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGongFaDataReqDefaultTypeInternal() {}
  union {
    GetGongFaDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGongFaDataReqDefaultTypeInternal _GetGongFaDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetGongFaDataAck::GetGongFaDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetGongFaDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGongFaDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGongFaDataAckDefaultTypeInternal() {}
  union {
    GetGongFaDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGongFaDataAckDefaultTypeInternal _GetGongFaDataAck_default_instance_;
PROTOBUF_CONSTEXPR GongFaOpReq::GongFaOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.gongfa_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GongFaOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GongFaOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GongFaOpReqDefaultTypeInternal() {}
  union {
    GongFaOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GongFaOpReqDefaultTypeInternal _GongFaOpReq_default_instance_;
PROTOBUF_CONSTEXPR GongFaOpAck::GongFaOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.gongfa_data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GongFaOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GongFaOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GongFaOpAckDefaultTypeInternal() {}
  union {
    GongFaOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GongFaOpAckDefaultTypeInternal _GongFaOpAck_default_instance_;
PROTOBUF_CONSTEXPR ActivateGongFaMaxEffectReq::ActivateGongFaMaxEffectReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActivateGongFaMaxEffectReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateGongFaMaxEffectReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateGongFaMaxEffectReqDefaultTypeInternal() {}
  union {
    ActivateGongFaMaxEffectReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateGongFaMaxEffectReqDefaultTypeInternal _ActivateGongFaMaxEffectReq_default_instance_;
PROTOBUF_CONSTEXPR ActivateGongFaMaxEffectAck::ActivateGongFaMaxEffectAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActivateGongFaMaxEffectAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateGongFaMaxEffectAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateGongFaMaxEffectAckDefaultTypeInternal() {}
  union {
    ActivateGongFaMaxEffectAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateGongFaMaxEffectAckDefaultTypeInternal _ActivateGongFaMaxEffectAck_default_instance_;
PROTOBUF_CONSTEXPR ReceiveFuZengRewardsReq::ReceiveFuZengRewardsReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveFuZengRewardsReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveFuZengRewardsReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveFuZengRewardsReqDefaultTypeInternal() {}
  union {
    ReceiveFuZengRewardsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveFuZengRewardsReqDefaultTypeInternal _ReceiveFuZengRewardsReq_default_instance_;
PROTOBUF_CONSTEXPR ReceiveFuZengRewardsAck::ReceiveFuZengRewardsAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveFuZengRewardsAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveFuZengRewardsAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveFuZengRewardsAckDefaultTypeInternal() {}
  union {
    ReceiveFuZengRewardsAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveFuZengRewardsAckDefaultTypeInternal _ReceiveFuZengRewardsAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleFuZengDataReq::GetRoleFuZengDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleFuZengDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleFuZengDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleFuZengDataReqDefaultTypeInternal() {}
  union {
    GetRoleFuZengDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleFuZengDataReqDefaultTypeInternal _GetRoleFuZengDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleFuZengDataAck::GetRoleFuZengDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleFuZengDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleFuZengDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleFuZengDataAckDefaultTypeInternal() {}
  union {
    GetRoleFuZengDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleFuZengDataAckDefaultTypeInternal _GetRoleFuZengDataAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyFuZeng::NotifyFuZeng(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyFuZengDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyFuZengDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyFuZengDefaultTypeInternal() {}
  union {
    NotifyFuZeng _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyFuZengDefaultTypeInternal _NotifyFuZeng_default_instance_;
PROTOBUF_CONSTEXPR GetRoleTreasuryDataReq::GetRoleTreasuryDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dirty_flag_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleTreasuryDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleTreasuryDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleTreasuryDataReqDefaultTypeInternal() {}
  union {
    GetRoleTreasuryDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleTreasuryDataReqDefaultTypeInternal _GetRoleTreasuryDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleTreasuryDataAck::GetRoleTreasuryDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleTreasuryDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleTreasuryDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleTreasuryDataAckDefaultTypeInternal() {}
  union {
    GetRoleTreasuryDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleTreasuryDataAckDefaultTypeInternal _GetRoleTreasuryDataAck_default_instance_;
PROTOBUF_CONSTEXPR OpenTreasuryChestReq::OpenTreasuryChestReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chest_type_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenTreasuryChestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenTreasuryChestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenTreasuryChestReqDefaultTypeInternal() {}
  union {
    OpenTreasuryChestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenTreasuryChestReqDefaultTypeInternal _OpenTreasuryChestReq_default_instance_;
PROTOBUF_CONSTEXPR OpenTreasuryChestAck::OpenTreasuryChestAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenTreasuryChestAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenTreasuryChestAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenTreasuryChestAckDefaultTypeInternal() {}
  union {
    OpenTreasuryChestAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenTreasuryChestAckDefaultTypeInternal _OpenTreasuryChestAck_default_instance_;
PROTOBUF_CONSTEXPR OneClickOpenTreasuryChestReq::OneClickOpenTreasuryChestReq(
    ::_pbi::ConstantInitialized) {}
struct OneClickOpenTreasuryChestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickOpenTreasuryChestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickOpenTreasuryChestReqDefaultTypeInternal() {}
  union {
    OneClickOpenTreasuryChestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickOpenTreasuryChestReqDefaultTypeInternal _OneClickOpenTreasuryChestReq_default_instance_;
PROTOBUF_CONSTEXPR OneClickOpenTreasuryChestAck::OneClickOpenTreasuryChestAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.today_open_times_)*/{}
  , /*decltype(_impl_._today_open_times_cached_byte_size_)*/{0}
  , /*decltype(_impl_.guarantee_count_)*/{}
  , /*decltype(_impl_._guarantee_count_cached_byte_size_)*/{0}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneClickOpenTreasuryChestAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClickOpenTreasuryChestAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClickOpenTreasuryChestAckDefaultTypeInternal() {}
  union {
    OneClickOpenTreasuryChestAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClickOpenTreasuryChestAckDefaultTypeInternal _OneClickOpenTreasuryChestAck_default_instance_;
PROTOBUF_CONSTEXPR OpenTreasuryGachaReq::OpenTreasuryGachaReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.gacha_type_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenTreasuryGachaReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenTreasuryGachaReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenTreasuryGachaReqDefaultTypeInternal() {}
  union {
    OpenTreasuryGachaReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenTreasuryGachaReqDefaultTypeInternal _OpenTreasuryGachaReq_default_instance_;
PROTOBUF_CONSTEXPR OpenTreasuryGachaAck::OpenTreasuryGachaAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_.free_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OpenTreasuryGachaAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenTreasuryGachaAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenTreasuryGachaAckDefaultTypeInternal() {}
  union {
    OpenTreasuryGachaAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenTreasuryGachaAckDefaultTypeInternal _OpenTreasuryGachaAck_default_instance_;
PROTOBUF_CONSTEXPR RefreshTreasuryShopReq::RefreshTreasuryShopReq(
    ::_pbi::ConstantInitialized) {}
struct RefreshTreasuryShopReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshTreasuryShopReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshTreasuryShopReqDefaultTypeInternal() {}
  union {
    RefreshTreasuryShopReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshTreasuryShopReqDefaultTypeInternal _RefreshTreasuryShopReq_default_instance_;
PROTOBUF_CONSTEXPR RefreshTreasuryShopAck::RefreshTreasuryShopAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RefreshTreasuryShopAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshTreasuryShopAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshTreasuryShopAckDefaultTypeInternal() {}
  union {
    RefreshTreasuryShopAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshTreasuryShopAckDefaultTypeInternal _RefreshTreasuryShopAck_default_instance_;
PROTOBUF_CONSTEXPR TreasuryShopBuyReq::TreasuryShopBuyReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TreasuryShopBuyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TreasuryShopBuyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TreasuryShopBuyReqDefaultTypeInternal() {}
  union {
    TreasuryShopBuyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TreasuryShopBuyReqDefaultTypeInternal _TreasuryShopBuyReq_default_instance_;
PROTOBUF_CONSTEXPR TreasuryShopBuyAck::TreasuryShopBuyAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TreasuryShopBuyAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TreasuryShopBuyAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TreasuryShopBuyAckDefaultTypeInternal() {}
  union {
    TreasuryShopBuyAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TreasuryShopBuyAckDefaultTypeInternal _TreasuryShopBuyAck_default_instance_;
PROTOBUF_CONSTEXPR GetLifeCounterDataReq::GetLifeCounterDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetLifeCounterDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLifeCounterDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLifeCounterDataReqDefaultTypeInternal() {}
  union {
    GetLifeCounterDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLifeCounterDataReqDefaultTypeInternal _GetLifeCounterDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetLifeCounterDataAck::GetLifeCounterDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLifeCounterDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLifeCounterDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLifeCounterDataAckDefaultTypeInternal() {}
  union {
    GetLifeCounterDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLifeCounterDataAckDefaultTypeInternal _GetLifeCounterDataAck_default_instance_;
PROTOBUF_CONSTEXPR UpdateLifeCounter::UpdateLifeCounter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.function_type_)*/0
  , /*decltype(_impl_.target_id_)*/0
  , /*decltype(_impl_.new_num_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateLifeCounterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLifeCounterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLifeCounterDefaultTypeInternal() {}
  union {
    UpdateLifeCounter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLifeCounterDefaultTypeInternal _UpdateLifeCounter_default_instance_;
PROTOBUF_CONSTEXPR DoQuestFightReq::DoQuestFightReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quest_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoQuestFightReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoQuestFightReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoQuestFightReqDefaultTypeInternal() {}
  union {
    DoQuestFightReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoQuestFightReqDefaultTypeInternal _DoQuestFightReq_default_instance_;
PROTOBUF_CONSTEXPR DoQuestFightAck::DoQuestFightAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoQuestFightAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoQuestFightAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoQuestFightAckDefaultTypeInternal() {}
  union {
    DoQuestFightAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoQuestFightAckDefaultTypeInternal _DoQuestFightAck_default_instance_;
PROTOBUF_CONSTEXPR QuestFightQuickEndReq::QuestFightQuickEndReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_exit_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuestFightQuickEndReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuestFightQuickEndReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuestFightQuickEndReqDefaultTypeInternal() {}
  union {
    QuestFightQuickEndReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuestFightQuickEndReqDefaultTypeInternal _QuestFightQuickEndReq_default_instance_;
PROTOBUF_CONSTEXPR QuestFightQuickEndAck::QuestFightQuickEndAck(
    ::_pbi::ConstantInitialized) {}
struct QuestFightQuickEndAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuestFightQuickEndAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuestFightQuickEndAckDefaultTypeInternal() {}
  union {
    QuestFightQuickEndAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuestFightQuickEndAckDefaultTypeInternal _QuestFightQuickEndAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyQuestFightChallengeOver::NotifyQuestFightChallengeOver(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.quest_id_)*/0
  , /*decltype(_impl_.win_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyQuestFightChallengeOverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyQuestFightChallengeOverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyQuestFightChallengeOverDefaultTypeInternal() {}
  union {
    NotifyQuestFightChallengeOver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyQuestFightChallengeOverDefaultTypeInternal _NotifyQuestFightChallengeOver_default_instance_;
PROTOBUF_CONSTEXPR GetAppearanceDataReq::GetAppearanceDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetAppearanceDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAppearanceDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAppearanceDataReqDefaultTypeInternal() {}
  union {
    GetAppearanceDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAppearanceDataReqDefaultTypeInternal _GetAppearanceDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetAppearanceDataAck::GetAppearanceDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAppearanceDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAppearanceDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAppearanceDataAckDefaultTypeInternal() {}
  union {
    GetAppearanceDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAppearanceDataAckDefaultTypeInternal _GetAppearanceDataAck_default_instance_;
PROTOBUF_CONSTEXPR AppearanceAddReq::AppearanceAddReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceAddReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceAddReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceAddReqDefaultTypeInternal() {}
  union {
    AppearanceAddReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceAddReqDefaultTypeInternal _AppearanceAddReq_default_instance_;
PROTOBUF_CONSTEXPR AppearanceAddAck::AppearanceAddAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceAddAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceAddAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceAddAckDefaultTypeInternal() {}
  union {
    AppearanceAddAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceAddAckDefaultTypeInternal _AppearanceAddAck_default_instance_;
PROTOBUF_CONSTEXPR AppearanceActiveReq::AppearanceActiveReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceActiveReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceActiveReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceActiveReqDefaultTypeInternal() {}
  union {
    AppearanceActiveReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceActiveReqDefaultTypeInternal _AppearanceActiveReq_default_instance_;
PROTOBUF_CONSTEXPR AppearanceActiveAck::AppearanceActiveAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceActiveAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceActiveAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceActiveAckDefaultTypeInternal() {}
  union {
    AppearanceActiveAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceActiveAckDefaultTypeInternal _AppearanceActiveAck_default_instance_;
PROTOBUF_CONSTEXPR AppearanceWearReq::AppearanceWearReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.group_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceWearReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceWearReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceWearReqDefaultTypeInternal() {}
  union {
    AppearanceWearReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceWearReqDefaultTypeInternal _AppearanceWearReq_default_instance_;
PROTOBUF_CONSTEXPR AppearanceWearAck::AppearanceWearAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceWearAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceWearAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceWearAckDefaultTypeInternal() {}
  union {
    AppearanceWearAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceWearAckDefaultTypeInternal _AppearanceWearAck_default_instance_;
PROTOBUF_CONSTEXPR AppearanceChangeSkTypeReq::AppearanceChangeSkTypeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sk_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceChangeSkTypeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceChangeSkTypeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceChangeSkTypeReqDefaultTypeInternal() {}
  union {
    AppearanceChangeSkTypeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceChangeSkTypeReqDefaultTypeInternal _AppearanceChangeSkTypeReq_default_instance_;
PROTOBUF_CONSTEXPR AppearanceChangeSkTypeAck::AppearanceChangeSkTypeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceChangeSkTypeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceChangeSkTypeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceChangeSkTypeAckDefaultTypeInternal() {}
  union {
    AppearanceChangeSkTypeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceChangeSkTypeAckDefaultTypeInternal _AppearanceChangeSkTypeAck_default_instance_;
PROTOBUF_CONSTEXPR AppearanceBuyReq::AppearanceBuyReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shop_index_)*/0
  , /*decltype(_impl_.item_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceBuyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceBuyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceBuyReqDefaultTypeInternal() {}
  union {
    AppearanceBuyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceBuyReqDefaultTypeInternal _AppearanceBuyReq_default_instance_;
PROTOBUF_CONSTEXPR AppearanceBuyAck::AppearanceBuyAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AppearanceBuyAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceBuyAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceBuyAckDefaultTypeInternal() {}
  union {
    AppearanceBuyAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceBuyAckDefaultTypeInternal _AppearanceBuyAck_default_instance_;
PROTOBUF_CONSTEXPR GetArenaCheckListDataReq::GetArenaCheckListDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetArenaCheckListDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArenaCheckListDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArenaCheckListDataReqDefaultTypeInternal() {}
  union {
    GetArenaCheckListDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArenaCheckListDataReqDefaultTypeInternal _GetArenaCheckListDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetArenaCheckListDataAck::GetArenaCheckListDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArenaCheckListDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArenaCheckListDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArenaCheckListDataAckDefaultTypeInternal() {}
  union {
    GetArenaCheckListDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArenaCheckListDataAckDefaultTypeInternal _GetArenaCheckListDataAck_default_instance_;
PROTOBUF_CONSTEXPR ArenaCheckListSubmitReq::ArenaCheckListSubmitReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.check_list_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArenaCheckListSubmitReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenaCheckListSubmitReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenaCheckListSubmitReqDefaultTypeInternal() {}
  union {
    ArenaCheckListSubmitReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenaCheckListSubmitReqDefaultTypeInternal _ArenaCheckListSubmitReq_default_instance_;
PROTOBUF_CONSTEXPR ArenaCheckListSubmitAck::ArenaCheckListSubmitAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArenaCheckListSubmitAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenaCheckListSubmitAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenaCheckListSubmitAckDefaultTypeInternal() {}
  union {
    ArenaCheckListSubmitAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenaCheckListSubmitAckDefaultTypeInternal _ArenaCheckListSubmitAck_default_instance_;
PROTOBUF_CONSTEXPR ArenaCheckListRewardSubmitReq::ArenaCheckListRewardSubmitReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reward_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArenaCheckListRewardSubmitReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenaCheckListRewardSubmitReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenaCheckListRewardSubmitReqDefaultTypeInternal() {}
  union {
    ArenaCheckListRewardSubmitReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenaCheckListRewardSubmitReqDefaultTypeInternal _ArenaCheckListRewardSubmitReq_default_instance_;
PROTOBUF_CONSTEXPR ArenaCheckListRewardSubmitAck::ArenaCheckListRewardSubmitAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArenaCheckListRewardSubmitAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArenaCheckListRewardSubmitAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArenaCheckListRewardSubmitAckDefaultTypeInternal() {}
  union {
    ArenaCheckListRewardSubmitAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArenaCheckListRewardSubmitAckDefaultTypeInternal _ArenaCheckListRewardSubmitAck_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllChallengeReq::DungeonKillAllChallengeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dungeon_uid_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllChallengeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllChallengeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllChallengeReqDefaultTypeInternal() {}
  union {
    DungeonKillAllChallengeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllChallengeReqDefaultTypeInternal _DungeonKillAllChallengeReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllChallengeAck::DungeonKillAllChallengeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllChallengeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllChallengeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllChallengeAckDefaultTypeInternal() {}
  union {
    DungeonKillAllChallengeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllChallengeAckDefaultTypeInternal _DungeonKillAllChallengeAck_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllQuickEndReq::DungeonKillAllQuickEndReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_exit_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllQuickEndReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllQuickEndReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllQuickEndReqDefaultTypeInternal() {}
  union {
    DungeonKillAllQuickEndReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllQuickEndReqDefaultTypeInternal _DungeonKillAllQuickEndReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllQuickEndAck::DungeonKillAllQuickEndAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllQuickEndAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllQuickEndAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllQuickEndAckDefaultTypeInternal() {}
  union {
    DungeonKillAllQuickEndAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllQuickEndAckDefaultTypeInternal _DungeonKillAllQuickEndAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyDungeonKillAllChallengeOver::NotifyDungeonKillAllChallengeOver(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_.win_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyDungeonKillAllChallengeOverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDungeonKillAllChallengeOverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDungeonKillAllChallengeOverDefaultTypeInternal() {}
  union {
    NotifyDungeonKillAllChallengeOver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDungeonKillAllChallengeOverDefaultTypeInternal _NotifyDungeonKillAllChallengeOver_default_instance_;
PROTOBUF_CONSTEXPR NotifyDungeonKillAllChallengeCurWaveNum::NotifyDungeonKillAllChallengeCurWaveNum(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_.curnum_)*/0
  , /*decltype(_impl_.maxnum_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyDungeonKillAllChallengeCurWaveNumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDungeonKillAllChallengeCurWaveNumDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDungeonKillAllChallengeCurWaveNumDefaultTypeInternal() {}
  union {
    NotifyDungeonKillAllChallengeCurWaveNum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDungeonKillAllChallengeCurWaveNumDefaultTypeInternal _NotifyDungeonKillAllChallengeCurWaveNum_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllDataReq::DungeonKillAllDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ask_uid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllDataReqDefaultTypeInternal() {}
  union {
    DungeonKillAllDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllDataReqDefaultTypeInternal _DungeonKillAllDataReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonKillAllDataAck::DungeonKillAllDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonKillAllDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonKillAllDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonKillAllDataAckDefaultTypeInternal() {}
  union {
    DungeonKillAllDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonKillAllDataAckDefaultTypeInternal _DungeonKillAllDataAck_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveChallengeReq::DungeonSurviveChallengeReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dungeon_uid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveChallengeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveChallengeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveChallengeReqDefaultTypeInternal() {}
  union {
    DungeonSurviveChallengeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveChallengeReqDefaultTypeInternal _DungeonSurviveChallengeReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveChallengeAck::DungeonSurviveChallengeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveChallengeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveChallengeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveChallengeAckDefaultTypeInternal() {}
  union {
    DungeonSurviveChallengeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveChallengeAckDefaultTypeInternal _DungeonSurviveChallengeAck_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveQuickEndReq::DungeonSurviveQuickEndReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_exit_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveQuickEndReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveQuickEndReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveQuickEndReqDefaultTypeInternal() {}
  union {
    DungeonSurviveQuickEndReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveQuickEndReqDefaultTypeInternal _DungeonSurviveQuickEndReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveQuickEndAck::DungeonSurviveQuickEndAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveQuickEndAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveQuickEndAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveQuickEndAckDefaultTypeInternal() {}
  union {
    DungeonSurviveQuickEndAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveQuickEndAckDefaultTypeInternal _DungeonSurviveQuickEndAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyDungeonSurviveChallengeOver::NotifyDungeonSurviveChallengeOver(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_.win_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyDungeonSurviveChallengeOverDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDungeonSurviveChallengeOverDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDungeonSurviveChallengeOverDefaultTypeInternal() {}
  union {
    NotifyDungeonSurviveChallengeOver _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDungeonSurviveChallengeOverDefaultTypeInternal _NotifyDungeonSurviveChallengeOver_default_instance_;
PROTOBUF_CONSTEXPR NotifyDungeonSurviveChallengeCurWaveNum::NotifyDungeonSurviveChallengeCurWaveNum(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uid_)*/0
  , /*decltype(_impl_.curnum_)*/0
  , /*decltype(_impl_.maxnum_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyDungeonSurviveChallengeCurWaveNumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyDungeonSurviveChallengeCurWaveNumDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyDungeonSurviveChallengeCurWaveNumDefaultTypeInternal() {}
  union {
    NotifyDungeonSurviveChallengeCurWaveNum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyDungeonSurviveChallengeCurWaveNumDefaultTypeInternal _NotifyDungeonSurviveChallengeCurWaveNum_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveDataReq::DungeonSurviveDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ask_uid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveDataReqDefaultTypeInternal() {}
  union {
    DungeonSurviveDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveDataReqDefaultTypeInternal _DungeonSurviveDataReq_default_instance_;
PROTOBUF_CONSTEXPR DungeonSurviveDataAck::DungeonSurviveDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DungeonSurviveDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonSurviveDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonSurviveDataAckDefaultTypeInternal() {}
  union {
    DungeonSurviveDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonSurviveDataAckDefaultTypeInternal _DungeonSurviveDataAck_default_instance_;
PROTOBUF_CONSTEXPR RequestEnterSeptDemonWorldReq::RequestEnterSeptDemonWorldReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sept_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestEnterSeptDemonWorldReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestEnterSeptDemonWorldReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestEnterSeptDemonWorldReqDefaultTypeInternal() {}
  union {
    RequestEnterSeptDemonWorldReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestEnterSeptDemonWorldReqDefaultTypeInternal _RequestEnterSeptDemonWorldReq_default_instance_;
PROTOBUF_CONSTEXPR RequestEnterSeptDemonWorldAck::RequestEnterSeptDemonWorldAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestEnterSeptDemonWorldAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestEnterSeptDemonWorldAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestEnterSeptDemonWorldAckDefaultTypeInternal() {}
  union {
    RequestEnterSeptDemonWorldAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestEnterSeptDemonWorldAckDefaultTypeInternal _RequestEnterSeptDemonWorldAck_default_instance_;
PROTOBUF_CONSTEXPR RequestLeaveSeptDemonWorldReq::RequestLeaveSeptDemonWorldReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sept_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestLeaveSeptDemonWorldReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLeaveSeptDemonWorldReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLeaveSeptDemonWorldReqDefaultTypeInternal() {}
  union {
    RequestLeaveSeptDemonWorldReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLeaveSeptDemonWorldReqDefaultTypeInternal _RequestLeaveSeptDemonWorldReq_default_instance_;
PROTOBUF_CONSTEXPR RequestLeaveSeptDemonWorldAck::RequestLeaveSeptDemonWorldAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestLeaveSeptDemonWorldAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLeaveSeptDemonWorldAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLeaveSeptDemonWorldAckDefaultTypeInternal() {}
  union {
    RequestLeaveSeptDemonWorldAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLeaveSeptDemonWorldAckDefaultTypeInternal _RequestLeaveSeptDemonWorldAck_default_instance_;
PROTOBUF_CONSTEXPR RequestSeptDemonWorldDataReq::RequestSeptDemonWorldDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sept_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestSeptDemonWorldDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestSeptDemonWorldDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestSeptDemonWorldDataReqDefaultTypeInternal() {}
  union {
    RequestSeptDemonWorldDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestSeptDemonWorldDataReqDefaultTypeInternal _RequestSeptDemonWorldDataReq_default_instance_;
PROTOBUF_CONSTEXPR RequestSeptDemonWorldDataAck::RequestSeptDemonWorldDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestSeptDemonWorldDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestSeptDemonWorldDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestSeptDemonWorldDataAckDefaultTypeInternal() {}
  union {
    RequestSeptDemonWorldDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestSeptDemonWorldDataAckDefaultTypeInternal _RequestSeptDemonWorldDataAck_default_instance_;
PROTOBUF_CONSTEXPR RequestInSeptDemonWorldEndTimeReq::RequestInSeptDemonWorldEndTimeReq(
    ::_pbi::ConstantInitialized) {}
struct RequestInSeptDemonWorldEndTimeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestInSeptDemonWorldEndTimeReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestInSeptDemonWorldEndTimeReqDefaultTypeInternal() {}
  union {
    RequestInSeptDemonWorldEndTimeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestInSeptDemonWorldEndTimeReqDefaultTypeInternal _RequestInSeptDemonWorldEndTimeReq_default_instance_;
PROTOBUF_CONSTEXPR RequestInSeptDemonWorldEndTimeAck::RequestInSeptDemonWorldEndTimeAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.end_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestInSeptDemonWorldEndTimeAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestInSeptDemonWorldEndTimeAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestInSeptDemonWorldEndTimeAckDefaultTypeInternal() {}
  union {
    RequestInSeptDemonWorldEndTimeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestInSeptDemonWorldEndTimeAckDefaultTypeInternal _RequestInSeptDemonWorldEndTimeAck_default_instance_;
PROTOBUF_CONSTEXPR GetFarmlandDataReq::GetFarmlandDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetFarmlandDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFarmlandDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFarmlandDataReqDefaultTypeInternal() {}
  union {
    GetFarmlandDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFarmlandDataReqDefaultTypeInternal _GetFarmlandDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetFarmlandDataAck::GetFarmlandDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFarmlandDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFarmlandDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFarmlandDataAckDefaultTypeInternal() {}
  union {
    GetFarmlandDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFarmlandDataAckDefaultTypeInternal _GetFarmlandDataAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandUnlockBlockReq::FarmlandUnlockBlockReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandUnlockBlockReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandUnlockBlockReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandUnlockBlockReqDefaultTypeInternal() {}
  union {
    FarmlandUnlockBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandUnlockBlockReqDefaultTypeInternal _FarmlandUnlockBlockReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandUnlockBlockAck::FarmlandUnlockBlockAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandUnlockBlockAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandUnlockBlockAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandUnlockBlockAckDefaultTypeInternal() {}
  union {
    FarmlandUnlockBlockAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandUnlockBlockAckDefaultTypeInternal _FarmlandUnlockBlockAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandPlantSeedReq::FarmlandPlantSeedReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.rotation_)*/0
  , /*decltype(_impl_.is_delete_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandPlantSeedReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandPlantSeedReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandPlantSeedReqDefaultTypeInternal() {}
  union {
    FarmlandPlantSeedReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandPlantSeedReqDefaultTypeInternal _FarmlandPlantSeedReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandPlantSeedAck::FarmlandPlantSeedAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.plant_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandPlantSeedAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandPlantSeedAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandPlantSeedAckDefaultTypeInternal() {}
  union {
    FarmlandPlantSeedAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandPlantSeedAckDefaultTypeInternal _FarmlandPlantSeedAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandWateringReq::FarmlandWateringReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandWateringReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandWateringReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandWateringReqDefaultTypeInternal() {}
  union {
    FarmlandWateringReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandWateringReqDefaultTypeInternal _FarmlandWateringReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandWateringAck::FarmlandWateringAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.totaol_speed_up_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandWateringAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandWateringAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandWateringAckDefaultTypeInternal() {}
  union {
    FarmlandWateringAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandWateringAckDefaultTypeInternal _FarmlandWateringAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandRipeningReq::FarmlandRipeningReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.one_click_plants_)*/{}
  , /*decltype(_impl_.plant_uid_)*/0
  , /*decltype(_impl_.item_id_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_.one_click_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandRipeningReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandRipeningReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandRipeningReqDefaultTypeInternal() {}
  union {
    FarmlandRipeningReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandRipeningReqDefaultTypeInternal _FarmlandRipeningReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandRipeningAck::FarmlandRipeningAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{}
  , /*decltype(_impl_.used_ripe_items_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandRipeningAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandRipeningAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandRipeningAckDefaultTypeInternal() {}
  union {
    FarmlandRipeningAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandRipeningAckDefaultTypeInternal _FarmlandRipeningAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandHarvestReq::FarmlandHarvestReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.plant_ids_)*/{}
  , /*decltype(_impl_._plant_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.auto_harvest_same_class_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandHarvestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandHarvestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandHarvestReqDefaultTypeInternal() {}
  union {
    FarmlandHarvestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandHarvestReqDefaultTypeInternal _FarmlandHarvestReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandHarvestAck::FarmlandHarvestAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.op_success_plant_id_)*/{}
  , /*decltype(_impl_._op_success_plant_id_cached_byte_size_)*/{0}
  , /*decltype(_impl_.continue_seeds_)*/{}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandHarvestAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandHarvestAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandHarvestAckDefaultTypeInternal() {}
  union {
    FarmlandHarvestAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandHarvestAckDefaultTypeInternal _FarmlandHarvestAck_default_instance_;
PROTOBUF_CONSTEXPR FarmerRankUpReq::FarmerRankUpReq(
    ::_pbi::ConstantInitialized) {}
struct FarmerRankUpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmerRankUpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmerRankUpReqDefaultTypeInternal() {}
  union {
    FarmerRankUpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmerRankUpReqDefaultTypeInternal _FarmerRankUpReq_default_instance_;
PROTOBUF_CONSTEXPR FarmerRankUpAck::FarmerRankUpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmerRankUpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmerRankUpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmerRankUpAckDefaultTypeInternal() {}
  union {
    FarmerRankUpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmerRankUpAckDefaultTypeInternal _FarmerRankUpAck_default_instance_;
PROTOBUF_CONSTEXPR FarmlandSetManagementReq::FarmlandSetManagementReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.plans_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandSetManagementReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandSetManagementReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandSetManagementReqDefaultTypeInternal() {}
  union {
    FarmlandSetManagementReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandSetManagementReqDefaultTypeInternal _FarmlandSetManagementReq_default_instance_;
PROTOBUF_CONSTEXPR FarmlandSetManagementAck::FarmlandSetManagementAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FarmlandSetManagementAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FarmlandSetManagementAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FarmlandSetManagementAckDefaultTypeInternal() {}
  union {
    FarmlandSetManagementAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FarmlandSetManagementAckDefaultTypeInternal _FarmlandSetManagementAck_default_instance_;
PROTOBUF_CONSTEXPR UpdateFarmlandStateReq::UpdateFarmlandStateReq(
    ::_pbi::ConstantInitialized) {}
struct UpdateFarmlandStateReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFarmlandStateReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFarmlandStateReqDefaultTypeInternal() {}
  union {
    UpdateFarmlandStateReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFarmlandStateReqDefaultTypeInternal _UpdateFarmlandStateReq_default_instance_;
PROTOBUF_CONSTEXPR UpdateFarmlandStateAck::UpdateFarmlandStateAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.auto_harvest_plants_)*/{}
  , /*decltype(_impl_._auto_harvest_plants_cached_byte_size_)*/{0}
  , /*decltype(_impl_.continue_seeds_)*/{}
  , /*decltype(_impl_.harvest_items_)*/{}
  , /*decltype(_impl_.farmer_friendship_exp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateFarmlandStateAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFarmlandStateAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFarmlandStateAckDefaultTypeInternal() {}
  union {
    UpdateFarmlandStateAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFarmlandStateAckDefaultTypeInternal _UpdateFarmlandStateAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleInfoReq::GetRoleInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleInfoReqDefaultTypeInternal() {}
  union {
    GetRoleInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleInfoReqDefaultTypeInternal _GetRoleInfoReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleInfoAck::GetRoleInfoAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_info_)*/nullptr
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleInfoAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleInfoAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleInfoAckDefaultTypeInternal() {}
  union {
    GetRoleInfoAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleInfoAckDefaultTypeInternal _GetRoleInfoAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleFriendDataReq::GetRoleFriendDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleFriendDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleFriendDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleFriendDataReqDefaultTypeInternal() {}
  union {
    GetRoleFriendDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleFriendDataReqDefaultTypeInternal _GetRoleFriendDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleFriendDataAck::GetRoleFriendDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_infos_)*/{}
  , /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleFriendDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleFriendDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleFriendDataAckDefaultTypeInternal() {}
  union {
    GetRoleFriendDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleFriendDataAckDefaultTypeInternal _GetRoleFriendDataAck_default_instance_;
PROTOBUF_CONSTEXPR FriendOpReq::FriendOpReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/int64_t{0}
  , /*decltype(_impl_.op_type_)*/0
  , /*decltype(_impl_.reverse_op_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FriendOpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendOpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendOpReqDefaultTypeInternal() {}
  union {
    FriendOpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendOpReqDefaultTypeInternal _FriendOpReq_default_instance_;
PROTOBUF_CONSTEXPR FriendOpAck::FriendOpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_.relationship_ab_)*/0
  , /*decltype(_impl_.relationship_ba_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FriendOpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendOpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendOpAckDefaultTypeInternal() {}
  union {
    FriendOpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendOpAckDefaultTypeInternal _FriendOpAck_default_instance_;
PROTOBUF_CONSTEXPR ReplyFriendRequestReq::ReplyFriendRequestReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_id_)*/int64_t{0}
  , /*decltype(_impl_.agree_)*/false
  , /*decltype(_impl_.one_click_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplyFriendRequestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyFriendRequestReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyFriendRequestReqDefaultTypeInternal() {}
  union {
    ReplyFriendRequestReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyFriendRequestReqDefaultTypeInternal _ReplyFriendRequestReq_default_instance_;
PROTOBUF_CONSTEXPR ReplyFriendRequestAck::ReplyFriendRequestAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relationship_ba_)*/{}
  , /*decltype(_impl_._relationship_ba_cached_byte_size_)*/{0}
  , /*decltype(_impl_.failed_ids_)*/{}
  , /*decltype(_impl_._failed_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplyFriendRequestAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyFriendRequestAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyFriendRequestAckDefaultTypeInternal() {}
  union {
    ReplyFriendRequestAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyFriendRequestAckDefaultTypeInternal _ReplyFriendRequestAck_default_instance_;
PROTOBUF_CONSTEXPR FriendSearchRoleInfoReq::FriendSearchRoleInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FriendSearchRoleInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendSearchRoleInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendSearchRoleInfoReqDefaultTypeInternal() {}
  union {
    FriendSearchRoleInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendSearchRoleInfoReqDefaultTypeInternal _FriendSearchRoleInfoReq_default_instance_;
PROTOBUF_CONSTEXPR FriendSearchRoleInfoAck::FriendSearchRoleInfoAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_infos_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FriendSearchRoleInfoAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendSearchRoleInfoAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendSearchRoleInfoAckDefaultTypeInternal() {}
  union {
    FriendSearchRoleInfoAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendSearchRoleInfoAckDefaultTypeInternal _FriendSearchRoleInfoAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyFriendMessage::NotifyFriendMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.role_info_)*/nullptr
  , /*decltype(_impl_.friend_event_)*/nullptr
  , /*decltype(_impl_.is_update_state_)*/false
  , /*decltype(_impl_.b_refused_)*/false
  , /*decltype(_impl_.online_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NotifyFriendMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyFriendMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyFriendMessageDefaultTypeInternal() {}
  union {
    NotifyFriendMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyFriendMessageDefaultTypeInternal _NotifyFriendMessage_default_instance_;
PROTOBUF_CONSTEXPR GetRoleAvatarDataReq::GetRoleAvatarDataReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.draw_this_time_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleAvatarDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleAvatarDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleAvatarDataReqDefaultTypeInternal() {}
  union {
    GetRoleAvatarDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleAvatarDataReqDefaultTypeInternal _GetRoleAvatarDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleAvatarDataAck::GetRoleAvatarDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleAvatarDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleAvatarDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleAvatarDataAckDefaultTypeInternal() {}
  union {
    GetRoleAvatarDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleAvatarDataAckDefaultTypeInternal _GetRoleAvatarDataAck_default_instance_;
PROTOBUF_CONSTEXPR DispatchAvatarReq::DispatchAvatarReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.world_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DispatchAvatarReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DispatchAvatarReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DispatchAvatarReqDefaultTypeInternal() {}
  union {
    DispatchAvatarReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DispatchAvatarReqDefaultTypeInternal _DispatchAvatarReq_default_instance_;
PROTOBUF_CONSTEXPR DispatchAvatarAck::DispatchAvatarAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DispatchAvatarAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DispatchAvatarAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DispatchAvatarAckDefaultTypeInternal() {}
  union {
    DispatchAvatarAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DispatchAvatarAckDefaultTypeInternal _DispatchAvatarAck_default_instance_;
PROTOBUF_CONSTEXPR AvatarRankUpReq::AvatarRankUpReq(
    ::_pbi::ConstantInitialized) {}
struct AvatarRankUpReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvatarRankUpReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvatarRankUpReqDefaultTypeInternal() {}
  union {
    AvatarRankUpReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvatarRankUpReqDefaultTypeInternal _AvatarRankUpReq_default_instance_;
PROTOBUF_CONSTEXPR AvatarRankUpAck::AvatarRankUpAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AvatarRankUpAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvatarRankUpAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvatarRankUpAckDefaultTypeInternal() {}
  union {
    AvatarRankUpAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvatarRankUpAckDefaultTypeInternal _AvatarRankUpAck_default_instance_;
PROTOBUF_CONSTEXPR ReceiveAvatarTempPackageReq::ReceiveAvatarTempPackageReq(
    ::_pbi::ConstantInitialized) {}
struct ReceiveAvatarTempPackageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveAvatarTempPackageReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveAvatarTempPackageReqDefaultTypeInternal() {}
  union {
    ReceiveAvatarTempPackageReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveAvatarTempPackageReqDefaultTypeInternal _ReceiveAvatarTempPackageReq_default_instance_;
PROTOBUF_CONSTEXPR ReceiveAvatarTempPackageAck::ReceiveAvatarTempPackageAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveAvatarTempPackageAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveAvatarTempPackageAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveAvatarTempPackageAckDefaultTypeInternal() {}
  union {
    ReceiveAvatarTempPackageAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveAvatarTempPackageAckDefaultTypeInternal _ReceiveAvatarTempPackageAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleBiographyDataReq::GetRoleBiographyDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleBiographyDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleBiographyDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleBiographyDataReqDefaultTypeInternal() {}
  union {
    GetRoleBiographyDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleBiographyDataReqDefaultTypeInternal _GetRoleBiographyDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleBiographyDataAck::GetRoleBiographyDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleBiographyDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleBiographyDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleBiographyDataAckDefaultTypeInternal() {}
  union {
    GetRoleBiographyDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleBiographyDataAckDefaultTypeInternal _GetRoleBiographyDataAck_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBiographyItemReq::ReceiveBiographyItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_ids_)*/{}
  , /*decltype(_impl_._cfg_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBiographyItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBiographyItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBiographyItemReqDefaultTypeInternal() {}
  union {
    ReceiveBiographyItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBiographyItemReqDefaultTypeInternal _ReceiveBiographyItemReq_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBiographyItemAck::ReceiveBiographyItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBiographyItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBiographyItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBiographyItemAckDefaultTypeInternal() {}
  union {
    ReceiveBiographyItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBiographyItemAckDefaultTypeInternal _ReceiveBiographyItemAck_default_instance_;
PROTOBUF_CONSTEXPR NotifyBiographyMessage::NotifyBiographyMessage(
    ::_pbi::ConstantInitialized) {}
struct NotifyBiographyMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotifyBiographyMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotifyBiographyMessageDefaultTypeInternal() {}
  union {
    NotifyBiographyMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotifyBiographyMessageDefaultTypeInternal _NotifyBiographyMessage_default_instance_;
PROTOBUF_CONSTEXPR GetBiographyEventDataReq::GetBiographyEventDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetBiographyEventDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBiographyEventDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBiographyEventDataReqDefaultTypeInternal() {}
  union {
    GetBiographyEventDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBiographyEventDataReqDefaultTypeInternal _GetBiographyEventDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetBiographyEventDataAck::GetBiographyEventDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.biography_lists_)*/{}
  , /*decltype(_impl_.server_counter_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBiographyEventDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBiographyEventDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBiographyEventDataAckDefaultTypeInternal() {}
  union {
    GetBiographyEventDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBiographyEventDataAckDefaultTypeInternal _GetBiographyEventDataAck_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBiographyEventItemReq::ReceiveBiographyEventItemReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cfg_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBiographyEventItemReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBiographyEventItemReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBiographyEventItemReqDefaultTypeInternal() {}
  union {
    ReceiveBiographyEventItemReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBiographyEventItemReqDefaultTypeInternal _ReceiveBiographyEventItemReq_default_instance_;
PROTOBUF_CONSTEXPR ReceiveBiographyEventItemAck::ReceiveBiographyEventItemAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReceiveBiographyEventItemAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReceiveBiographyEventItemAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReceiveBiographyEventItemAckDefaultTypeInternal() {}
  union {
    ReceiveBiographyEventItemAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReceiveBiographyEventItemAckDefaultTypeInternal _ReceiveBiographyEventItemAck_default_instance_;
PROTOBUF_CONSTEXPR AddBiographyRoleLogReq::AddBiographyRoleLogReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.log_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddBiographyRoleLogReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBiographyRoleLogReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBiographyRoleLogReqDefaultTypeInternal() {}
  union {
    AddBiographyRoleLogReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBiographyRoleLogReqDefaultTypeInternal _AddBiographyRoleLogReq_default_instance_;
PROTOBUF_CONSTEXPR AddBiographyRoleLogAck::AddBiographyRoleLogAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.log_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddBiographyRoleLogAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddBiographyRoleLogAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddBiographyRoleLogAckDefaultTypeInternal() {}
  union {
    AddBiographyRoleLogAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddBiographyRoleLogAckDefaultTypeInternal _AddBiographyRoleLogAck_default_instance_;
PROTOBUF_CONSTEXPR GetRoleVipShopDataReq::GetRoleVipShopDataReq(
    ::_pbi::ConstantInitialized) {}
struct GetRoleVipShopDataReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleVipShopDataReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleVipShopDataReqDefaultTypeInternal() {}
  union {
    GetRoleVipShopDataReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleVipShopDataReqDefaultTypeInternal _GetRoleVipShopDataReq_default_instance_;
PROTOBUF_CONSTEXPR GetRoleVipShopDataAck::GetRoleVipShopDataAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRoleVipShopDataAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoleVipShopDataAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoleVipShopDataAckDefaultTypeInternal() {}
  union {
    GetRoleVipShopDataAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoleVipShopDataAckDefaultTypeInternal _GetRoleVipShopDataAck_default_instance_;
PROTOBUF_CONSTEXPR VipShopBuyReq::VipShopBuyReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.index_)*/0
  , /*decltype(_impl_.num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VipShopBuyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VipShopBuyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VipShopBuyReqDefaultTypeInternal() {}
  union {
    VipShopBuyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VipShopBuyReqDefaultTypeInternal _VipShopBuyReq_default_instance_;
PROTOBUF_CONSTEXPR VipShopBuyAck::VipShopBuyAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VipShopBuyAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VipShopBuyAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VipShopBuyAckDefaultTypeInternal() {}
  union {
    VipShopBuyAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VipShopBuyAckDefaultTypeInternal _VipShopBuyAck_default_instance_;
}  // namespace idlepb
static ::_pb::Metadata file_level_metadata_game_2eproto[401];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_game_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_game_2eproto = nullptr;

const uint32_t TableStruct_game_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::Ping, _impl_.req_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _impl_.req_ticks_),
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _impl_.rsp_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoGmCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoGmCommand, _impl_.command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReportError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReportError, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _impl_.account_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _impl_.client_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.ret_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.role_data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.is_relogin_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.offline_award_summary_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.sept_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshInventoryData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshInventoryData, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetCurrentCultivationDirectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetCurrentCultivationDirectionReq, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetCurrentCultivationDirectionAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetCurrentCultivationDirectionAck, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCurrentCultivationDirection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCurrentCultivationDirection, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationRankData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationRankData, _impl_.rank_data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationRankData, _impl_.dir_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationRankData, _impl_.last_exp_cycle_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationData, _impl_.cultivation_data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCultivationData, _impl_.dir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCurrencyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshCurrencyData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDailyCounterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDailyCounterData, _impl_.daily_counter_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDailyCounterData, _impl_.weekly_counter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshLastUnlockArenaId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshLastUnlockArenaId, _impl_.last_unlock_arena_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshUnlockedEquipmentSlots, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshUnlockedEquipmentSlots, _impl_.slots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockEquipmentSlotReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockEquipmentSlotReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockEquipmentSlotAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockEquipmentSlotAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestRoundData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestRoundData, _impl_.round_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestRoundData, _impl_.damage_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestRoundData, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestRoundData, _impl_.mp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestData, _impl_.hp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestData, _impl_.mp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ThunderTestData, _impl_.rounds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _impl_.old_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _impl_.new_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _impl_.is_bottleneck_),
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreakthroughAck, _impl_.thunder_test_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshItems, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshItems, _impl_.junks_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshItems, _impl_.others_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshItems, _impl_.quiet_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTemporaryPackageItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTemporaryPackageItems, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTemporaryPackageItems, _impl_.total_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTemporaryPackageItems, _impl_.last_extract_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExtractTemporaryPackageItemsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExtractTemporaryPackageItemsAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetTemporaryPackageDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetTemporaryPackageDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetTemporaryPackageDataAck, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetTemporaryPackageDataAck, _impl_.last_extract_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaExplorationStatisticalDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaExplorationStatisticalDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaExplorationStatisticalDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreathingExerciseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreathingExerciseReq, _impl_.percet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreathingExerciseAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoBreathingExerciseAck, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickMergeBreathingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickMergeBreathingAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickMergeBreathingAck, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickMergeBreathingAck, _impl_.ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestCommonCultivationDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestCommonCultivationDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestCommonCultivationDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBreathingExerciseRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBreathingExerciseRewardReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBreathingExerciseRewardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBreathingExerciseRewardAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemReq, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemReq, _impl_.cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseItemAck, _impl_.error_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftReq, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftReq, _impl_.choose_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseSelectGiftAck, _impl_.error_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemInfo, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemInfo, _impl_.num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemInfo, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemReq, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SellItemAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshAlchemyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshAlchemyData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _impl_.quality_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _impl_.item_cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _impl_.item_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAlchemyRefineResult, _impl_.chance_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshForgeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshForgeData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _impl_.quality_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _impl_.item_cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _impl_.item_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyForgeRefineResult, _impl_.chance_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentPutOnReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentPutOnReq, _impl_.slot_idx_),
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentPutOnReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentPutOnAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentPutOnAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentTakeOffReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentTakeOffReq, _impl_.slot_idx_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentTakeOffAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::EquipmentTakeOffAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetInventoryDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetInventoryDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetInventoryDataAck, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetInventoryDataAck, _impl_.unlocked_equipment_slots_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetInventoryDataAck, _impl_.inventory_space_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartReq, _impl_.recipe_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartReq, _impl_.material_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartReq, _impl_.target_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineStartAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineCancelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineCancelAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineCancelAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineExtractReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineExtractAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AlchemyRefineExtractAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterReq, _impl_.hero_name_),
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterReq, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterReq, _impl_.skeleton_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterReq, _impl_.model_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::CreateCharacterAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.style_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.s1_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.s2_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.s3_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.n1_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.n2_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SystemNotice, _impl_.n3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleShopDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleShopDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleShopDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshShopReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshShopAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshShopAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshShopAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyShopItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyShopItemReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyShopItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyShopItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleDeluxeShopDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleDeluxeShopDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleDeluxeShopDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyDeluxeShopItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyDeluxeShopItemReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyDeluxeShopItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuyDeluxeShopItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockDeluxeShopReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockDeluxeShopAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockDeluxeShopAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockDeluxeShopAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopUnlocked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshDeluxeShopUnlocked, _impl_.is_unlocked_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockArenaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockArenaReq, _impl_.arena_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockArenaAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockArenaAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockArenaChallengeResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockArenaChallengeResult, _impl_.arena_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockArenaChallengeResult, _impl_.door_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockArenaChallengeResult, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestRefreshRoleCombatPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCombatPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCombatPower, _impl_.old_value_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCombatPower, _impl_.new_value_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCombatPower, _impl_.show_notice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GameSystemChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GameSystemChatMessage, _impl_.chat_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GameSystemChatMessage, _impl_.chat_content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplicateQuestProgressChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplicateQuestProgressChange, _impl_.quest_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplicateQuestProgressChange, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplicateQuestProgressChange, _impl_.target_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplicateQuestProgressChange, _impl_.amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpReq, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpReq, _impl_.quest_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestOpAck, _impl_.init_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetQuestDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetQuestDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetQuestDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataReq, _impl_.role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataAck, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataAck, _impl_.param_n1_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleLeaderboardDataAck, _impl_.leaderboard_rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.champions_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.role_model_configs_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.my_data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.equipments_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.sept_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardPreviewAck, _impl_.last_refresh_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.last_refresh_time_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.my_rank_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.rank1_message_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.role_model_configs_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.equipments_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.shanghetu_records_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.top3_clicklike_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLeaderboardDataAck, _impl_.septs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardClickLikeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardClickLikeReq, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardClickLikeReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardClickLikeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardClickLikeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardUpdateMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardUpdateMessageReq, _impl_.new_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardUpdateMessageAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LeaderboardUpdateMessageAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListReq, _impl_.challenge_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListAck, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListAck, _impl_.model_configs_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeListAck, _impl_.all_list_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeRewardReq, _impl_.challenge_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeRewardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMonsterTowerChallengeRewardAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFuZeRewardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFuZeRewardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFuZeRewardAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleMailDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleMailDataReq, _impl_.only_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleMailDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleMailDataAck, _impl_.unread_mail_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleMailDataAck, _impl_.mail_box_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateRoleMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReadMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReadMailReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReadMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReadMailAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReadMailAck, _impl_.mail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMailAttachmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMailAttachmentReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMailAttachmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMailAttachmentAck, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetMailAttachmentAck, _impl_.mail_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeleteMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeleteMailReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeleteMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeleteMailAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickGetMailAttachmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickGetMailAttachmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickGetMailAttachmentAck, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickGetMailAttachmentAck, _impl_.unread_mail_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickGetMailAttachmentAck, _impl_.mail_box_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickReadMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickReadMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickReadMailAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickDeleteMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickDeleteMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickDeleteMailAck, _impl_.deleted_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockFunctionModuleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockFunctionModuleReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockFunctionModuleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UnlockFunctionModuleAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockedModuels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyUnlockedModuels, _impl_.unlocked_modules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChat, _impl_.channel_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChat, _impl_.chat_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageReq, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageReq, _impl_.channel_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageReq, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SendChatMessageAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChatRecordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChatRecordAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChatRecordAck, _impl_.public_chat_record_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChatRecordAck, _impl_.private_chat_record_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChatRecordAck, _impl_.sept_record_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeletePrivateChatRecordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeletePrivateChatRecordReq, _impl_.role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeletePrivateChatRecordAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DeletePrivateChatRecordAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ClearChatUnreadNumReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ClearChatUnreadNumReq, _impl_.role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ClearChatUnreadNumAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoCacheReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoCacheReq, _impl_.role_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoCacheAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoCacheAck, _impl_.role_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.recipe_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.material_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.ext_material_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.target_num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.auto_sell_poor_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartReq, _impl_.auto_sell_middle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineStartAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineCancelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineCancelAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineCancelAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineExtractReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineExtractAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineExtractAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeRefineExtractAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetForgeLostEquipmentDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetForgeLostEquipmentDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetForgeLostEquipmentDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeDestroyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeDestroyReq, _impl_.uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeDestroyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeDestroyAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeFindBackReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeFindBackReq, _impl_.uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeFindBackAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ForgeFindBackAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestPillElixirDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestPillElixirDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestPillElixirDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetOnePillElixirDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetOnePillElixirDataReq, _impl_.item_cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetOnePillElixirDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetOnePillElixirDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterReq, _impl_.limit_double_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterReq, _impl_.limit_exp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterReq, _impl_.limit_property_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestModifyPillElixirFilterAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReport, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReport, _impl_.num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReport, _impl_.property_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UsePillElixirAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickUsePillElixirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickUsePillElixirAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickUsePillElixirAck, _impl_.report_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::TradePillElixirReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::TradePillElixirReq, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::TradePillElixirReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::TradePillElixirAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::TradePillElixirAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAutoModeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyAutoModeStatus, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAutoMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAutoMode, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReinforceEquipmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReinforceEquipmentReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReinforceEquipmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReinforceEquipmentAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentReq, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentReq, _impl_.select_abc_),
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentReq, _impl_.commit_materials_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::QiWenEquipmentAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefineEquipmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefineEquipmentReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefineEquipmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefineEquipmentAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ResetEquipmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ResetEquipmentReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ResetEquipmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ResetEquipmentAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ResetEquipmentAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentReq, _impl_.equipment_from_),
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentReq, _impl_.equipment_to_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::InheritEquipmentAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LockItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LockItemReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LockItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LockItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::CollectionActivatedSuit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::CollectionActivatedSuit, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::CollectionActivatedSuit, _impl_.index_),
  PROTOBUF_FIELD_OFFSET(::idlepb::CollectionActivatedSuit, _impl_.combat_power_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.entries_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.common_pieces_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.actived_suite_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.draw_award_done_histories_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.can_award_histories_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.zone_active_awards_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleCollectionDataRsp, _impl_.next_reset_enhance_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpReq, _impl_.op_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpReq, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpReq, _impl_.consume_list_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpReq, _impl_.is_preview_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpAck, _impl_.op_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleCollectionOpAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionData, _impl_.entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCommonCollectionPieceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCommonCollectionPieceData, _impl_.common_pieces_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCollectionActivatedSuit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCollectionActivatedSuit, _impl_.actived_suite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfRoleCollectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfRoleCollectionReq, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfRoleCollectionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfRoleCollectionRsp, _impl_.share_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareRoleCollectionDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareRoleCollectionDataReq, _impl_.share_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareRoleCollectionDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareRoleCollectionDataRsp, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareRoleCollectionDataRsp, _impl_.collection_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionHistories, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionHistories, _impl_.draw_award_done_histories_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionHistories, _impl_.can_award_histories_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCollectionZoneActiveAwards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyCollectionZoneActiveAwards, _impl_.zone_active_awards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionNextResetEnhanceTicks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyRoleCollectionNextResetEnhanceTicks, _impl_.next_reset_enhance_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleBattleHistoryList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RoleBattleHistoryList, _impl_.entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifySoloArenaChallengeOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifySoloArenaChallengeOver, _impl_.win_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifySoloArenaChallengeOver, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaChallengeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaChallengeReq, _impl_.target_role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaChallengeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaChallengeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaQuickEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaQuickEndReq, _impl_.is_exit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SoloArenaQuickEndAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetSoloArenaHistoryListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetSoloArenaHistoryListReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetSoloArenaHistoryListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetSoloArenaHistoryListAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplaySoloArenaHistoryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplaySoloArenaHistoryReq, _impl_.history_world_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplaySoloArenaHistoryAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplaySoloArenaHistoryAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplaySoloArenaHistoryAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBattleHistoryInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBattleHistoryInfoReq, _impl_.history_world_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBattleHistoryInfoAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBattleHistoryInfoAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBattleHistoryInfoAck, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyEnterOpenClientWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyEnterOpenClientWorld, _impl_.world_cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyMonsterTowerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyMonsterTowerData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyMonsterTowerChallengeOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyMonsterTowerChallengeOver, _impl_.floor_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyMonsterTowerChallengeOver, _impl_.win_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerChallengeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerChallengeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerDrawIdleAwardReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerDrawIdleAwardAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerClosedDoorTrainingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerClosedDoorTrainingAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerQuickEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerQuickEndReq, _impl_.is_exit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::MonsterTowerQuickEndAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFightModeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFightModeData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetFightModeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetFightModeReq, _impl_.mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetFightModeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetFightModeAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetFightModeAck, _impl_.error_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyInventorySpaceNum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyInventorySpaceNum, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyInventoryFullMailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyQiCollectorRank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyQiCollectorRank, _impl_.rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpgradeQiCollectorReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpgradeQiCollectorAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpgradeQiCollectorAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAllStatsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAllStatsAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAllStatsAck, _impl_.all_stats_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_skip_green_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_skip_blue_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_skip_perpo_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_skip_gold_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_skip_red_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigReq, _impl_.auto_select_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShanhetuUseConfigAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuReq, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuReq, _impl_.skip_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuAck, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UseShanhetuAck, _impl_.map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuReq, _impl_.choose_event_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuAck, _impl_.done_),
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuAck, _impl_.current_row_),
  PROTOBUF_FIELD_OFFSET(::idlepb::StepShanhetuAck, _impl_.record_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuUseRecordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuUseRecordReq, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuUseRecordReq, _impl_.uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuUseRecordAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShanhetuUseRecordAck, _impl_.record_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackLockTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackLockTypeReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackLockTypeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackLockTypeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackUnlockTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackUnlockTypeReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackUnlockTypeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetAttackUnlockTypeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShowUnlockButtonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShowUnlockButtonReq, _impl_.enable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShowUnlockButtonAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetShowUnlockButtonAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshRoleNormalSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshRoleNormalSetting, _impl_.settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarReq, _impl_.var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarRsp, _impl_.var_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarsReq, _impl_.var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetUserVarsRsp, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetUserVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SetUserVar, _impl_.var_name_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SetUserVar, _impl_.var_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DelUserVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DelUserVar, _impl_.var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemRsp, _impl_.share_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemsReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemsRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ShareSelfItemsRsp, _impl_.share_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareItemDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareItemDataReq, _impl_.share_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareItemDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareItemDataRsp, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetShareItemDataRsp, _impl_.item_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChecklistDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChecklistDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetChecklistDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyChecklist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpReq, _impl_.sumbmit_or_receive_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpReq, _impl_.day_or_week_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ChecklistOpAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChecklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChecklistReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChecklistAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateChecklistAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetCommonItemExchangeDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetCommonItemExchangeDataReq, _impl_.cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetCommonItemExchangeDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetCommonItemExchangeDataAck, _impl_.today_exchange_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemReq, _impl_.cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ExchangeCommonItemAck, _impl_.out_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SynthesisCommonItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SynthesisCommonItemReq, _impl_.cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::SynthesisCommonItemReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::SynthesisCommonItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::SynthesisCommonItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptShopDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptShopDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptShopDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptQuestDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptQuestDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleSeptQuestDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuySeptShopItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuySeptShopItemReq, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::BuySeptShopItemReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuySeptShopItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::BuySeptShopItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqRoleSeptQuestOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqRoleSeptQuestOpReq, _impl_.uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqRoleSeptQuestOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqRoleSeptQuestOpAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshSeptQuestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshSeptQuestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshSeptQuestAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqSeptQuestRankUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqSeptQuestRankUpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReqSeptQuestRankUpAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetGongFaDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetGongFaDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetGongFaDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GongFaOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GongFaOpReq, _impl_.gongfa_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GongFaOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GongFaOpAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GongFaOpAck, _impl_.gongfa_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ActivateGongFaMaxEffectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ActivateGongFaMaxEffectReq, _impl_.cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ActivateGongFaMaxEffectAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ActivateGongFaMaxEffectAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsReq, _impl_.cfg_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsReq, _impl_.type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveFuZengRewardsAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFuZengDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFuZengDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFuZengDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFuZeng, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFuZeng, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFuZeng, _impl_.num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFuZeng, _impl_.cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleTreasuryDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleTreasuryDataReq, _impl_.dirty_flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleTreasuryDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleTreasuryDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryChestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryChestReq, _impl_.chest_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryChestReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryChestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryChestAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickOpenTreasuryChestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickOpenTreasuryChestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickOpenTreasuryChestAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickOpenTreasuryChestAck, _impl_.today_open_times_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OneClickOpenTreasuryChestAck, _impl_.guarantee_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaReq, _impl_.gacha_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::OpenTreasuryGachaAck, _impl_.free_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTreasuryShopReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTreasuryShopAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTreasuryShopAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::RefreshTreasuryShopAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::TreasuryShopBuyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::TreasuryShopBuyReq, _impl_.index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::TreasuryShopBuyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::TreasuryShopBuyAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLifeCounterDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLifeCounterDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetLifeCounterDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateLifeCounter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateLifeCounter, _impl_.function_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateLifeCounter, _impl_.target_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateLifeCounter, _impl_.new_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoQuestFightReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoQuestFightReq, _impl_.quest_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoQuestFightAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoQuestFightAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestFightQuickEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestFightQuickEndReq, _impl_.is_exit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::QuestFightQuickEndAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyQuestFightChallengeOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyQuestFightChallengeOver, _impl_.quest_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyQuestFightChallengeOver, _impl_.win_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetAppearanceDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetAppearanceDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetAppearanceDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceAddReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceAddReq, _impl_.item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceAddAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceAddAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceActiveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceActiveReq, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceActiveAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceActiveAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceWearReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceWearReq, _impl_.group_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceWearAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceWearAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceChangeSkTypeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceChangeSkTypeReq, _impl_.sk_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceChangeSkTypeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceChangeSkTypeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceBuyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceBuyReq, _impl_.shop_index_),
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceBuyReq, _impl_.item_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceBuyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AppearanceBuyAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaCheckListDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaCheckListDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetArenaCheckListDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListSubmitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListSubmitReq, _impl_.check_list_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListSubmitAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListSubmitAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListSubmitAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListRewardSubmitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListRewardSubmitReq, _impl_.reward_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListRewardSubmitAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListRewardSubmitAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ArenaCheckListRewardSubmitAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllChallengeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllChallengeReq, _impl_.dungeon_uid_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllChallengeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllChallengeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllQuickEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllQuickEndReq, _impl_.is_exit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllQuickEndAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllQuickEndAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeOver, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeOver, _impl_.win_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeCurWaveNum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeCurWaveNum, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeCurWaveNum, _impl_.curnum_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonKillAllChallengeCurWaveNum, _impl_.maxnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllDataReq, _impl_.ask_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonKillAllDataAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveChallengeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveChallengeReq, _impl_.dungeon_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveChallengeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveChallengeAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveQuickEndReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveQuickEndReq, _impl_.is_exit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveQuickEndAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveQuickEndAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeOver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeOver, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeOver, _impl_.win_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeCurWaveNum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeCurWaveNum, _impl_.uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeCurWaveNum, _impl_.curnum_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyDungeonSurviveChallengeCurWaveNum, _impl_.maxnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveDataReq, _impl_.ask_uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DungeonSurviveDataAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestEnterSeptDemonWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestEnterSeptDemonWorldReq, _impl_.sept_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestEnterSeptDemonWorldAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestEnterSeptDemonWorldAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestLeaveSeptDemonWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestLeaveSeptDemonWorldReq, _impl_.sept_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestLeaveSeptDemonWorldAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestLeaveSeptDemonWorldAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestSeptDemonWorldDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestSeptDemonWorldDataReq, _impl_.sept_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestSeptDemonWorldDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestSeptDemonWorldDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestInSeptDemonWorldEndTimeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestInSeptDemonWorldEndTimeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::RequestInSeptDemonWorldEndTimeAck, _impl_.end_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFarmlandDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFarmlandDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetFarmlandDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandUnlockBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandUnlockBlockReq, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandUnlockBlockReq, _impl_.y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandUnlockBlockAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandUnlockBlockAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedReq, _impl_.is_delete_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandPlantSeedAck, _impl_.plant_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandWateringReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandWateringReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandWateringAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandWateringAck, _impl_.totaol_speed_up_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _impl_.plant_uid_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _impl_.num_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _impl_.one_click_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningReq, _impl_.one_click_plants_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningAck, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandRipeningAck, _impl_.used_ripe_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestReq, _impl_.plant_ids_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestReq, _impl_.auto_harvest_same_class_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestAck, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestAck, _impl_.op_success_plant_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandHarvestAck, _impl_.continue_seeds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmerRankUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmerRankUpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmerRankUpAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandSetManagementReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandSetManagementReq, _impl_.plans_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandSetManagementAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FarmlandSetManagementAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateAck, _impl_.farmer_friendship_exp_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateAck, _impl_.auto_harvest_plants_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateAck, _impl_.continue_seeds_),
  PROTOBUF_FIELD_OFFSET(::idlepb::UpdateFarmlandStateAck, _impl_.harvest_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoReq, _impl_.role_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoAck, _impl_.role_info_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleInfoAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFriendDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFriendDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFriendDataAck, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleFriendDataAck, _impl_.role_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpReq, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpReq, _impl_.op_type_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpReq, _impl_.reverse_op_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpAck, _impl_.relationship_ab_),
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendOpAck, _impl_.relationship_ba_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestReq, _impl_.role_id_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestReq, _impl_.agree_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestReq, _impl_.one_click_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestAck, _impl_.ok_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestAck, _impl_.relationship_ba_),
  PROTOBUF_FIELD_OFFSET(::idlepb::ReplyFriendRequestAck, _impl_.failed_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendSearchRoleInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendSearchRoleInfoReq, _impl_.role_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendSearchRoleInfoAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::FriendSearchRoleInfoAck, _impl_.role_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _impl_.role_info_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _impl_.is_update_state_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _impl_.b_refused_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _impl_.friend_event_),
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyFriendMessage, _impl_.online_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAvatarDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAvatarDataReq, _impl_.draw_this_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAvatarDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleAvatarDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DispatchAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DispatchAvatarReq, _impl_.world_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DispatchAvatarAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DispatchAvatarAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AvatarRankUpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AvatarRankUpAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AvatarRankUpAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveAvatarTempPackageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveAvatarTempPackageAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveAvatarTempPackageAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleBiographyDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleBiographyDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleBiographyDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyItemReq, _impl_.cfg_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyItemAck, _impl_.ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::NotifyBiographyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBiographyEventDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBiographyEventDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBiographyEventDataAck, _impl_.biography_lists_),
  PROTOBUF_FIELD_OFFSET(::idlepb::GetBiographyEventDataAck, _impl_.server_counter_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyEventItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyEventItemReq, _impl_.cfg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyEventItemAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReceiveBiographyEventItemAck, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AddBiographyRoleLogReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AddBiographyRoleLogReq, _impl_.log_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::AddBiographyRoleLogAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::AddBiographyRoleLogAck, _impl_.log_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleVipShopDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleVipShopDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::GetRoleVipShopDataAck, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::VipShopBuyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::VipShopBuyReq, _impl_.index_),
  PROTOBUF_FIELD_OFFSET(::idlepb::VipShopBuyReq, _impl_.num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::VipShopBuyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::VipShopBuyAck, _impl_.ok_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::idlepb::Ping)},
  { 7, -1, -1, sizeof(::idlepb::Pong)},
  { 15, -1, -1, sizeof(::idlepb::DoGmCommand)},
  { 22, -1, -1, sizeof(::idlepb::ReportError)},
  { 29, -1, -1, sizeof(::idlepb::LoginGameReq)},
  { 37, -1, -1, sizeof(::idlepb::LoginGameAck)},
  { 48, -1, -1, sizeof(::idlepb::RefreshInventoryData)},
  { 55, -1, -1, sizeof(::idlepb::SetCurrentCultivationDirectionReq)},
  { 62, -1, -1, sizeof(::idlepb::SetCurrentCultivationDirectionAck)},
  { 69, -1, -1, sizeof(::idlepb::RefreshCurrentCultivationDirection)},
  { 76, -1, -1, sizeof(::idlepb::RefreshCultivationRankData)},
  { 85, -1, -1, sizeof(::idlepb::RefreshCultivationData)},
  { 93, -1, -1, sizeof(::idlepb::RefreshCurrencyData)},
  { 100, -1, -1, sizeof(::idlepb::RefreshDailyCounterData)},
  { 108, -1, -1, sizeof(::idlepb::RefreshLastUnlockArenaId)},
  { 115, -1, -1, sizeof(::idlepb::RefreshUnlockedEquipmentSlots)},
  { 122, -1, -1, sizeof(::idlepb::UnlockEquipmentSlotReq)},
  { 129, -1, -1, sizeof(::idlepb::UnlockEquipmentSlotAck)},
  { 136, -1, -1, sizeof(::idlepb::ThunderTestRoundData)},
  { 146, -1, -1, sizeof(::idlepb::ThunderTestData)},
  { 155, -1, -1, sizeof(::idlepb::DoBreakthroughReq)},
  { 162, -1, -1, sizeof(::idlepb::DoBreakthroughAck)},
  { 173, -1, -1, sizeof(::idlepb::RefreshItems)},
  { 183, -1, -1, sizeof(::idlepb::RefreshTemporaryPackageItems)},
  { 192, -1, -1, sizeof(::idlepb::ExtractTemporaryPackageItemsReq)},
  { 198, -1, -1, sizeof(::idlepb::ExtractTemporaryPackageItemsAck)},
  { 204, -1, -1, sizeof(::idlepb::GetTemporaryPackageDataReq)},
  { 210, -1, -1, sizeof(::idlepb::GetTemporaryPackageDataAck)},
  { 218, -1, -1, sizeof(::idlepb::GetArenaExplorationStatisticalDataReq)},
  { 224, -1, -1, sizeof(::idlepb::GetArenaExplorationStatisticalDataAck)},
  { 231, -1, -1, sizeof(::idlepb::DoBreathingExerciseReq)},
  { 238, -1, -1, sizeof(::idlepb::DoBreathingExerciseAck)},
  { 245, -1, -1, sizeof(::idlepb::OneClickMergeBreathingReq)},
  { 251, -1, -1, sizeof(::idlepb::OneClickMergeBreathingAck)},
  { 259, -1, -1, sizeof(::idlepb::RequestCommonCultivationDataReq)},
  { 265, -1, -1, sizeof(::idlepb::RequestCommonCultivationDataAck)},
  { 272, -1, -1, sizeof(::idlepb::ReceiveBreathingExerciseRewardReq)},
  { 279, -1, -1, sizeof(::idlepb::ReceiveBreathingExerciseRewardAck)},
  { 286, -1, -1, sizeof(::idlepb::UseItemReq)},
  { 295, -1, -1, sizeof(::idlepb::UseItemAck)},
  { 302, -1, -1, sizeof(::idlepb::UseSelectGiftReq)},
  { 311, -1, -1, sizeof(::idlepb::UseSelectGiftAck)},
  { 318, -1, -1, sizeof(::idlepb::SellItemInfo)},
  { 327, -1, -1, sizeof(::idlepb::SellItemReq)},
  { 334, -1, -1, sizeof(::idlepb::SellItemAck)},
  { 341, -1, -1, sizeof(::idlepb::RefreshAlchemyData)},
  { 348, -1, -1, sizeof(::idlepb::NotifyAlchemyRefineResult)},
  { 359, -1, -1, sizeof(::idlepb::RefreshForgeData)},
  { 366, -1, -1, sizeof(::idlepb::NotifyForgeRefineResult)},
  { 377, -1, -1, sizeof(::idlepb::EquipmentPutOnReq)},
  { 385, -1, -1, sizeof(::idlepb::EquipmentPutOnAck)},
  { 392, -1, -1, sizeof(::idlepb::EquipmentTakeOffReq)},
  { 399, -1, -1, sizeof(::idlepb::EquipmentTakeOffAck)},
  { 406, -1, -1, sizeof(::idlepb::GetInventoryDataReq)},
  { 412, -1, -1, sizeof(::idlepb::GetInventoryDataAck)},
  { 421, -1, -1, sizeof(::idlepb::AlchemyRefineStartReq)},
  { 430, -1, -1, sizeof(::idlepb::AlchemyRefineStartAck)},
  { 437, -1, -1, sizeof(::idlepb::AlchemyRefineCancelReq)},
  { 443, -1, -1, sizeof(::idlepb::AlchemyRefineCancelAck)},
  { 450, -1, -1, sizeof(::idlepb::AlchemyRefineExtractReq)},
  { 456, -1, -1, sizeof(::idlepb::AlchemyRefineExtractAck)},
  { 463, -1, -1, sizeof(::idlepb::CreateCharacterReq)},
  { 473, -1, -1, sizeof(::idlepb::CreateCharacterAck)},
  { 480, -1, -1, sizeof(::idlepb::SystemNotice)},
  { 494, -1, -1, sizeof(::idlepb::GetRoleShopDataReq)},
  { 500, -1, -1, sizeof(::idlepb::GetRoleShopDataAck)},
  { 507, -1, -1, sizeof(::idlepb::RefreshShopReq)},
  { 513, -1, -1, sizeof(::idlepb::RefreshShopAck)},
  { 521, -1, -1, sizeof(::idlepb::BuyShopItemReq)},
  { 528, -1, -1, sizeof(::idlepb::BuyShopItemAck)},
  { 535, -1, -1, sizeof(::idlepb::GetRoleDeluxeShopDataReq)},
  { 541, -1, -1, sizeof(::idlepb::GetRoleDeluxeShopDataAck)},
  { 548, -1, -1, sizeof(::idlepb::RefreshDeluxeShopReq)},
  { 554, -1, -1, sizeof(::idlepb::RefreshDeluxeShopAck)},
  { 562, -1, -1, sizeof(::idlepb::BuyDeluxeShopItemReq)},
  { 569, -1, -1, sizeof(::idlepb::BuyDeluxeShopItemAck)},
  { 576, -1, -1, sizeof(::idlepb::UnlockDeluxeShopReq)},
  { 582, -1, -1, sizeof(::idlepb::UnlockDeluxeShopAck)},
  { 590, -1, -1, sizeof(::idlepb::RefreshDeluxeShopUnlocked)},
  { 597, -1, -1, sizeof(::idlepb::UnlockArenaReq)},
  { 604, -1, -1, sizeof(::idlepb::UnlockArenaAck)},
  { 611, -1, -1, sizeof(::idlepb::NotifyUnlockArenaChallengeResult)},
  { 620, -1, -1, sizeof(::idlepb::RequestRefreshRoleCombatPower)},
  { 626, -1, -1, sizeof(::idlepb::NotifyRoleCombatPower)},
  { 635, -1, -1, sizeof(::idlepb::GameSystemChatMessage)},
  { 643, -1, -1, sizeof(::idlepb::ReplicateQuestProgressChange)},
  { 653, -1, -1, sizeof(::idlepb::QuestOpReq)},
  { 661, -1, -1, sizeof(::idlepb::QuestOpAck)},
  { 669, -1, -1, sizeof(::idlepb::GetQuestDataReq)},
  { 675, -1, -1, sizeof(::idlepb::GetQuestDataAck)},
  { 682, -1, -1, sizeof(::idlepb::GetRoleLeaderboardDataReq)},
  { 689, -1, -1, sizeof(::idlepb::GetRoleLeaderboardDataAck)},
  { 698, -1, -1, sizeof(::idlepb::GetLeaderboardPreviewReq)},
  { 704, -1, -1, sizeof(::idlepb::GetLeaderboardPreviewAck)},
  { 716, -1, -1, sizeof(::idlepb::GetLeaderboardDataReq)},
  { 723, -1, -1, sizeof(::idlepb::GetLeaderboardDataAck)},
  { 738, -1, -1, sizeof(::idlepb::LeaderboardClickLikeReq)},
  { 746, -1, -1, sizeof(::idlepb::LeaderboardClickLikeAck)},
  { 753, -1, -1, sizeof(::idlepb::LeaderboardUpdateMessageReq)},
  { 760, -1, -1, sizeof(::idlepb::LeaderboardUpdateMessageAck)},
  { 767, -1, -1, sizeof(::idlepb::GetMonsterTowerChallengeListReq)},
  { 774, -1, -1, sizeof(::idlepb::GetMonsterTowerChallengeListAck)},
  { 783, -1, -1, sizeof(::idlepb::GetMonsterTowerChallengeRewardReq)},
  { 790, -1, -1, sizeof(::idlepb::GetMonsterTowerChallengeRewardAck)},
  { 797, -1, -1, sizeof(::idlepb::GetFuZeRewardReq)},
  { 803, -1, -1, sizeof(::idlepb::GetFuZeRewardAck)},
  { 810, -1, -1, sizeof(::idlepb::GetRoleMailDataReq)},
  { 817, -1, -1, sizeof(::idlepb::GetRoleMailDataAck)},
  { 825, -1, -1, sizeof(::idlepb::UpdateRoleMail)},
  { 831, -1, -1, sizeof(::idlepb::ReadMailReq)},
  { 838, -1, -1, sizeof(::idlepb::ReadMailAck)},
  { 846, -1, -1, sizeof(::idlepb::GetMailAttachmentReq)},
  { 853, -1, -1, sizeof(::idlepb::GetMailAttachmentAck)},
  { 861, -1, -1, sizeof(::idlepb::DeleteMailReq)},
  { 868, -1, -1, sizeof(::idlepb::DeleteMailAck)},
  { 875, -1, -1, sizeof(::idlepb::OneClickGetMailAttachmentReq)},
  { 881, -1, -1, sizeof(::idlepb::OneClickGetMailAttachmentAck)},
  { 890, -1, -1, sizeof(::idlepb::OneClickReadMailReq)},
  { 896, -1, -1, sizeof(::idlepb::OneClickReadMailAck)},
  { 903, -1, -1, sizeof(::idlepb::OneClickDeleteMailReq)},
  { 909, -1, -1, sizeof(::idlepb::OneClickDeleteMailAck)},
  { 916, -1, -1, sizeof(::idlepb::UnlockFunctionModuleReq)},
  { 923, -1, -1, sizeof(::idlepb::UnlockFunctionModuleAck)},
  { 930, -1, -1, sizeof(::idlepb::NotifyUnlockedModuels)},
  { 937, -1, -1, sizeof(::idlepb::UpdateChat)},
  { 945, -1, -1, sizeof(::idlepb::SendChatMessageReq)},
  { 955, -1, -1, sizeof(::idlepb::SendChatMessageAck)},
  { 962, -1, -1, sizeof(::idlepb::GetChatRecordReq)},
  { 968, -1, -1, sizeof(::idlepb::GetChatRecordAck)},
  { 977, -1, -1, sizeof(::idlepb::DeletePrivateChatRecordReq)},
  { 984, -1, -1, sizeof(::idlepb::DeletePrivateChatRecordAck)},
  { 991, -1, -1, sizeof(::idlepb::ClearChatUnreadNumReq)},
  { 998, -1, -1, sizeof(::idlepb::ClearChatUnreadNumAck)},
  { 1004, -1, -1, sizeof(::idlepb::GetRoleInfoCacheReq)},
  { 1011, -1, -1, sizeof(::idlepb::GetRoleInfoCacheAck)},
  { 1018, -1, -1, sizeof(::idlepb::ForgeRefineStartReq)},
  { 1030, -1, -1, sizeof(::idlepb::ForgeRefineStartAck)},
  { 1037, -1, -1, sizeof(::idlepb::ForgeRefineCancelReq)},
  { 1043, -1, -1, sizeof(::idlepb::ForgeRefineCancelAck)},
  { 1050, -1, -1, sizeof(::idlepb::ForgeRefineExtractReq)},
  { 1056, -1, -1, sizeof(::idlepb::ForgeRefineExtractAck)},
  { 1064, -1, -1, sizeof(::idlepb::GetForgeLostEquipmentDataReq)},
  { 1070, -1, -1, sizeof(::idlepb::GetForgeLostEquipmentDataAck)},
  { 1077, -1, -1, sizeof(::idlepb::ForgeDestroyReq)},
  { 1084, -1, -1, sizeof(::idlepb::ForgeDestroyAck)},
  { 1091, -1, -1, sizeof(::idlepb::ForgeFindBackReq)},
  { 1098, -1, -1, sizeof(::idlepb::ForgeFindBackAck)},
  { 1105, -1, -1, sizeof(::idlepb::RequestPillElixirDataReq)},
  { 1111, -1, -1, sizeof(::idlepb::RequestPillElixirDataAck)},
  { 1118, -1, -1, sizeof(::idlepb::GetOnePillElixirDataReq)},
  { 1125, -1, -1, sizeof(::idlepb::GetOnePillElixirDataAck)},
  { 1132, -1, -1, sizeof(::idlepb::RequestModifyPillElixirFilterReq)},
  { 1141, -1, -1, sizeof(::idlepb::RequestModifyPillElixirFilterAck)},
  { 1148, -1, -1, sizeof(::idlepb::UsePillElixirReport)},
  { 1157, -1, -1, sizeof(::idlepb::UsePillElixirReq)},
  { 1164, -1, -1, sizeof(::idlepb::UsePillElixirAck)},
  { 1171, -1, -1, sizeof(::idlepb::OneClickUsePillElixirReq)},
  { 1177, -1, -1, sizeof(::idlepb::OneClickUsePillElixirAck)},
  { 1184, -1, -1, sizeof(::idlepb::TradePillElixirReq)},
  { 1192, -1, -1, sizeof(::idlepb::TradePillElixirAck)},
  { 1199, -1, -1, sizeof(::idlepb::NotifyAutoModeStatus)},
  { 1206, -1, -1, sizeof(::idlepb::SetAutoMode)},
  { 1213, -1, -1, sizeof(::idlepb::ReinforceEquipmentReq)},
  { 1220, -1, -1, sizeof(::idlepb::ReinforceEquipmentAck)},
  { 1227, -1, -1, sizeof(::idlepb::QiWenEquipmentReq)},
  { 1236, -1, -1, sizeof(::idlepb::QiWenEquipmentAck)},
  { 1243, -1, -1, sizeof(::idlepb::RefineEquipmentReq)},
  { 1250, -1, -1, sizeof(::idlepb::RefineEquipmentAck)},
  { 1257, -1, -1, sizeof(::idlepb::ResetEquipmentReq)},
  { 1264, -1, -1, sizeof(::idlepb::ResetEquipmentAck)},
  { 1272, -1, -1, sizeof(::idlepb::InheritEquipmentReq)},
  { 1280, -1, -1, sizeof(::idlepb::InheritEquipmentAck)},
  { 1288, -1, -1, sizeof(::idlepb::LockItemReq)},
  { 1295, -1, -1, sizeof(::idlepb::LockItemAck)},
  { 1302, -1, -1, sizeof(::idlepb::CollectionActivatedSuit)},
  { 1311, -1, -1, sizeof(::idlepb::GetRoleCollectionDataReq)},
  { 1317, -1, -1, sizeof(::idlepb::GetRoleCollectionDataRsp)},
  { 1330, -1, -1, sizeof(::idlepb::RoleCollectionOpReq)},
  { 1340, -1, -1, sizeof(::idlepb::RoleCollectionOpAck)},
  { 1349, -1, -1, sizeof(::idlepb::NotifyRoleCollectionData)},
  { 1356, -1, -1, sizeof(::idlepb::NotifyCommonCollectionPieceData)},
  { 1363, -1, -1, sizeof(::idlepb::NotifyCollectionActivatedSuit)},
  { 1370, -1, -1, sizeof(::idlepb::ShareSelfRoleCollectionReq)},
  { 1377, -1, -1, sizeof(::idlepb::ShareSelfRoleCollectionRsp)},
  { 1384, -1, -1, sizeof(::idlepb::GetShareRoleCollectionDataReq)},
  { 1391, -1, -1, sizeof(::idlepb::GetShareRoleCollectionDataRsp)},
  { 1399, -1, -1, sizeof(::idlepb::NotifyRoleCollectionHistories)},
  { 1407, -1, -1, sizeof(::idlepb::NotifyCollectionZoneActiveAwards)},
  { 1414, -1, -1, sizeof(::idlepb::NotifyRoleCollectionNextResetEnhanceTicks)},
  { 1421, -1, -1, sizeof(::idlepb::RoleBattleHistoryList)},
  { 1428, -1, -1, sizeof(::idlepb::NotifySoloArenaChallengeOver)},
  { 1436, -1, -1, sizeof(::idlepb::SoloArenaChallengeReq)},
  { 1443, -1, -1, sizeof(::idlepb::SoloArenaChallengeAck)},
  { 1450, -1, -1, sizeof(::idlepb::SoloArenaQuickEndReq)},
  { 1457, -1, -1, sizeof(::idlepb::SoloArenaQuickEndAck)},
  { 1463, -1, -1, sizeof(::idlepb::GetSoloArenaHistoryListReq)},
  { 1470, -1, -1, sizeof(::idlepb::GetSoloArenaHistoryListAck)},
  { 1477, -1, -1, sizeof(::idlepb::ReplaySoloArenaHistoryReq)},
  { 1484, -1, -1, sizeof(::idlepb::ReplaySoloArenaHistoryAck)},
  { 1492, -1, -1, sizeof(::idlepb::GetBattleHistoryInfoReq)},
  { 1499, -1, -1, sizeof(::idlepb::GetBattleHistoryInfoAck)},
  { 1507, -1, -1, sizeof(::idlepb::NotifyEnterOpenClientWorld)},
  { 1514, -1, -1, sizeof(::idlepb::NotifyMonsterTowerData)},
  { 1521, -1, -1, sizeof(::idlepb::NotifyMonsterTowerChallengeOver)},
  { 1529, -1, -1, sizeof(::idlepb::MonsterTowerChallengeReq)},
  { 1535, -1, -1, sizeof(::idlepb::MonsterTowerChallengeAck)},
  { 1541, -1, -1, sizeof(::idlepb::MonsterTowerDrawIdleAwardReq)},
  { 1547, -1, -1, sizeof(::idlepb::MonsterTowerDrawIdleAwardAck)},
  { 1553, -1, -1, sizeof(::idlepb::MonsterTowerClosedDoorTrainingReq)},
  { 1559, -1, -1, sizeof(::idlepb::MonsterTowerClosedDoorTrainingAck)},
  { 1565, -1, -1, sizeof(::idlepb::MonsterTowerQuickEndReq)},
  { 1572, -1, -1, sizeof(::idlepb::MonsterTowerQuickEndAck)},
  { 1578, -1, -1, sizeof(::idlepb::NotifyFightModeData)},
  { 1585, -1, -1, sizeof(::idlepb::SetFightModeReq)},
  { 1592, -1, -1, sizeof(::idlepb::SetFightModeAck)},
  { 1600, -1, -1, sizeof(::idlepb::NotifyInventorySpaceNum)},
  { 1607, -1, -1, sizeof(::idlepb::NotifyInventoryFullMailItem)},
  { 1613, -1, -1, sizeof(::idlepb::NotifyQiCollectorRank)},
  { 1620, -1, -1, sizeof(::idlepb::UpgradeQiCollectorReq)},
  { 1626, -1, -1, sizeof(::idlepb::UpgradeQiCollectorAck)},
  { 1633, -1, -1, sizeof(::idlepb::GetRoleAllStatsReq)},
  { 1639, -1, -1, sizeof(::idlepb::GetRoleAllStatsAck)},
  { 1646, -1, -1, sizeof(::idlepb::GetShanhetuDataReq)},
  { 1652, -1, -1, sizeof(::idlepb::GetShanhetuDataAck)},
  { 1659, -1, -1, sizeof(::idlepb::SetShanhetuUseConfigReq)},
  { 1671, -1, -1, sizeof(::idlepb::SetShanhetuUseConfigAck)},
  { 1678, -1, -1, sizeof(::idlepb::UseShanhetuReq)},
  { 1687, -1, -1, sizeof(::idlepb::UseShanhetuAck)},
  { 1696, -1, -1, sizeof(::idlepb::StepShanhetuReq)},
  { 1703, -1, -1, sizeof(::idlepb::StepShanhetuAck)},
  { 1712, -1, -1, sizeof(::idlepb::GetShanhetuUseRecordReq)},
  { 1720, -1, -1, sizeof(::idlepb::GetShanhetuUseRecordAck)},
  { 1727, -1, -1, sizeof(::idlepb::SetAttackLockTypeReq)},
  { 1734, -1, -1, sizeof(::idlepb::SetAttackLockTypeAck)},
  { 1741, -1, -1, sizeof(::idlepb::SetAttackUnlockTypeReq)},
  { 1748, -1, -1, sizeof(::idlepb::SetAttackUnlockTypeAck)},
  { 1755, -1, -1, sizeof(::idlepb::SetShowUnlockButtonReq)},
  { 1762, -1, -1, sizeof(::idlepb::SetShowUnlockButtonAck)},
  { 1769, -1, -1, sizeof(::idlepb::RefreshRoleNormalSetting)},
  { 1776, -1, -1, sizeof(::idlepb::GetUserVarReq)},
  { 1783, -1, -1, sizeof(::idlepb::GetUserVarRsp)},
  { 1790, -1, -1, sizeof(::idlepb::GetUserVarsReq)},
  { 1797, -1, -1, sizeof(::idlepb::GetUserVarsRsp)},
  { 1804, -1, -1, sizeof(::idlepb::SetUserVar)},
  { 1812, -1, -1, sizeof(::idlepb::DelUserVar)},
  { 1819, -1, -1, sizeof(::idlepb::ShareSelfItemReq)},
  { 1826, -1, -1, sizeof(::idlepb::ShareSelfItemRsp)},
  { 1833, -1, -1, sizeof(::idlepb::ShareSelfItemsReq)},
  { 1840, -1, -1, sizeof(::idlepb::ShareSelfItemsRsp)},
  { 1847, -1, -1, sizeof(::idlepb::GetShareItemDataReq)},
  { 1854, -1, -1, sizeof(::idlepb::GetShareItemDataRsp)},
  { 1862, -1, -1, sizeof(::idlepb::GetChecklistDataReq)},
  { 1868, -1, -1, sizeof(::idlepb::GetChecklistDataAck)},
  { 1875, -1, -1, sizeof(::idlepb::NotifyChecklist)},
  { 1881, -1, -1, sizeof(::idlepb::ChecklistOpReq)},
  { 1889, -1, -1, sizeof(::idlepb::ChecklistOpAck)},
  { 1897, -1, -1, sizeof(::idlepb::UpdateChecklistReq)},
  { 1904, -1, -1, sizeof(::idlepb::UpdateChecklistAck)},
  { 1911, -1, -1, sizeof(::idlepb::GetCommonItemExchangeDataReq)},
  { 1918, -1, -1, sizeof(::idlepb::GetCommonItemExchangeDataAck)},
  { 1925, -1, -1, sizeof(::idlepb::ExchangeCommonItemReq)},
  { 1933, -1, -1, sizeof(::idlepb::ExchangeCommonItemAck)},
  { 1941, -1, -1, sizeof(::idlepb::SynthesisCommonItemReq)},
  { 1949, -1, -1, sizeof(::idlepb::SynthesisCommonItemAck)},
  { 1956, -1, -1, sizeof(::idlepb::GetRoleSeptShopDataReq)},
  { 1962, -1, -1, sizeof(::idlepb::GetRoleSeptShopDataAck)},
  { 1969, -1, -1, sizeof(::idlepb::GetRoleSeptQuestDataReq)},
  { 1975, -1, -1, sizeof(::idlepb::GetRoleSeptQuestDataAck)},
  { 1982, -1, -1, sizeof(::idlepb::BuySeptShopItemReq)},
  { 1990, -1, -1, sizeof(::idlepb::BuySeptShopItemAck)},
  { 1997, -1, -1, sizeof(::idlepb::ReqRoleSeptQuestOpReq)},
  { 2004, -1, -1, sizeof(::idlepb::ReqRoleSeptQuestOpAck)},
  { 2011, -1, -1, sizeof(::idlepb::RefreshSeptQuestReq)},
  { 2017, -1, -1, sizeof(::idlepb::RefreshSeptQuestAck)},
  { 2024, -1, -1, sizeof(::idlepb::ReqSeptQuestRankUpReq)},
  { 2030, -1, -1, sizeof(::idlepb::ReqSeptQuestRankUpAck)},
  { 2037, -1, -1, sizeof(::idlepb::GetGongFaDataReq)},
  { 2043, -1, -1, sizeof(::idlepb::GetGongFaDataAck)},
  { 2050, -1, -1, sizeof(::idlepb::GongFaOpReq)},
  { 2057, -1, -1, sizeof(::idlepb::GongFaOpAck)},
  { 2065, -1, -1, sizeof(::idlepb::ActivateGongFaMaxEffectReq)},
  { 2072, -1, -1, sizeof(::idlepb::ActivateGongFaMaxEffectAck)},
  { 2079, -1, -1, sizeof(::idlepb::ReceiveFuZengRewardsReq)},
  { 2087, -1, -1, sizeof(::idlepb::ReceiveFuZengRewardsAck)},
  { 2095, -1, -1, sizeof(::idlepb::GetRoleFuZengDataReq)},
  { 2101, -1, -1, sizeof(::idlepb::GetRoleFuZengDataAck)},
  { 2108, -1, -1, sizeof(::idlepb::NotifyFuZeng)},
  { 2117, -1, -1, sizeof(::idlepb::GetRoleTreasuryDataReq)},
  { 2124, -1, -1, sizeof(::idlepb::GetRoleTreasuryDataAck)},
  { 2131, -1, -1, sizeof(::idlepb::OpenTreasuryChestReq)},
  { 2139, -1, -1, sizeof(::idlepb::OpenTreasuryChestAck)},
  { 2146, -1, -1, sizeof(::idlepb::OneClickOpenTreasuryChestReq)},
  { 2152, -1, -1, sizeof(::idlepb::OneClickOpenTreasuryChestAck)},
  { 2161, -1, -1, sizeof(::idlepb::OpenTreasuryGachaReq)},
  { 2169, -1, -1, sizeof(::idlepb::OpenTreasuryGachaAck)},
  { 2177, -1, -1, sizeof(::idlepb::RefreshTreasuryShopReq)},
  { 2183, -1, -1, sizeof(::idlepb::RefreshTreasuryShopAck)},
  { 2191, -1, -1, sizeof(::idlepb::TreasuryShopBuyReq)},
  { 2198, -1, -1, sizeof(::idlepb::TreasuryShopBuyAck)},
  { 2205, -1, -1, sizeof(::idlepb::GetLifeCounterDataReq)},
  { 2211, -1, -1, sizeof(::idlepb::GetLifeCounterDataAck)},
  { 2218, -1, -1, sizeof(::idlepb::UpdateLifeCounter)},
  { 2227, -1, -1, sizeof(::idlepb::DoQuestFightReq)},
  { 2234, -1, -1, sizeof(::idlepb::DoQuestFightAck)},
  { 2241, -1, -1, sizeof(::idlepb::QuestFightQuickEndReq)},
  { 2248, -1, -1, sizeof(::idlepb::QuestFightQuickEndAck)},
  { 2254, -1, -1, sizeof(::idlepb::NotifyQuestFightChallengeOver)},
  { 2262, -1, -1, sizeof(::idlepb::GetAppearanceDataReq)},
  { 2268, -1, -1, sizeof(::idlepb::GetAppearanceDataAck)},
  { 2275, -1, -1, sizeof(::idlepb::AppearanceAddReq)},
  { 2282, -1, -1, sizeof(::idlepb::AppearanceAddAck)},
  { 2289, -1, -1, sizeof(::idlepb::AppearanceActiveReq)},
  { 2296, -1, -1, sizeof(::idlepb::AppearanceActiveAck)},
  { 2303, -1, -1, sizeof(::idlepb::AppearanceWearReq)},
  { 2310, -1, -1, sizeof(::idlepb::AppearanceWearAck)},
  { 2317, -1, -1, sizeof(::idlepb::AppearanceChangeSkTypeReq)},
  { 2324, -1, -1, sizeof(::idlepb::AppearanceChangeSkTypeAck)},
  { 2331, -1, -1, sizeof(::idlepb::AppearanceBuyReq)},
  { 2339, -1, -1, sizeof(::idlepb::AppearanceBuyAck)},
  { 2346, -1, -1, sizeof(::idlepb::GetArenaCheckListDataReq)},
  { 2352, -1, -1, sizeof(::idlepb::GetArenaCheckListDataAck)},
  { 2359, -1, -1, sizeof(::idlepb::ArenaCheckListSubmitReq)},
  { 2366, -1, -1, sizeof(::idlepb::ArenaCheckListSubmitAck)},
  { 2374, -1, -1, sizeof(::idlepb::ArenaCheckListRewardSubmitReq)},
  { 2381, -1, -1, sizeof(::idlepb::ArenaCheckListRewardSubmitAck)},
  { 2389, -1, -1, sizeof(::idlepb::DungeonKillAllChallengeReq)},
  { 2396, -1, -1, sizeof(::idlepb::DungeonKillAllChallengeAck)},
  { 2403, -1, -1, sizeof(::idlepb::DungeonKillAllQuickEndReq)},
  { 2410, -1, -1, sizeof(::idlepb::DungeonKillAllQuickEndAck)},
  { 2417, -1, -1, sizeof(::idlepb::NotifyDungeonKillAllChallengeOver)},
  { 2425, -1, -1, sizeof(::idlepb::NotifyDungeonKillAllChallengeCurWaveNum)},
  { 2434, -1, -1, sizeof(::idlepb::DungeonKillAllDataReq)},
  { 2441, -1, -1, sizeof(::idlepb::DungeonKillAllDataAck)},
  { 2448, -1, -1, sizeof(::idlepb::DungeonSurviveChallengeReq)},
  { 2455, -1, -1, sizeof(::idlepb::DungeonSurviveChallengeAck)},
  { 2462, -1, -1, sizeof(::idlepb::DungeonSurviveQuickEndReq)},
  { 2469, -1, -1, sizeof(::idlepb::DungeonSurviveQuickEndAck)},
  { 2476, -1, -1, sizeof(::idlepb::NotifyDungeonSurviveChallengeOver)},
  { 2484, -1, -1, sizeof(::idlepb::NotifyDungeonSurviveChallengeCurWaveNum)},
  { 2493, -1, -1, sizeof(::idlepb::DungeonSurviveDataReq)},
  { 2500, -1, -1, sizeof(::idlepb::DungeonSurviveDataAck)},
  { 2507, -1, -1, sizeof(::idlepb::RequestEnterSeptDemonWorldReq)},
  { 2514, -1, -1, sizeof(::idlepb::RequestEnterSeptDemonWorldAck)},
  { 2521, -1, -1, sizeof(::idlepb::RequestLeaveSeptDemonWorldReq)},
  { 2528, -1, -1, sizeof(::idlepb::RequestLeaveSeptDemonWorldAck)},
  { 2535, -1, -1, sizeof(::idlepb::RequestSeptDemonWorldDataReq)},
  { 2542, -1, -1, sizeof(::idlepb::RequestSeptDemonWorldDataAck)},
  { 2549, -1, -1, sizeof(::idlepb::RequestInSeptDemonWorldEndTimeReq)},
  { 2555, -1, -1, sizeof(::idlepb::RequestInSeptDemonWorldEndTimeAck)},
  { 2562, -1, -1, sizeof(::idlepb::GetFarmlandDataReq)},
  { 2568, -1, -1, sizeof(::idlepb::GetFarmlandDataAck)},
  { 2575, -1, -1, sizeof(::idlepb::FarmlandUnlockBlockReq)},
  { 2583, -1, -1, sizeof(::idlepb::FarmlandUnlockBlockAck)},
  { 2590, -1, -1, sizeof(::idlepb::FarmlandPlantSeedReq)},
  { 2601, -1, -1, sizeof(::idlepb::FarmlandPlantSeedAck)},
  { 2608, -1, -1, sizeof(::idlepb::FarmlandWateringReq)},
  { 2615, -1, -1, sizeof(::idlepb::FarmlandWateringAck)},
  { 2622, -1, -1, sizeof(::idlepb::FarmlandRipeningReq)},
  { 2633, -1, -1, sizeof(::idlepb::FarmlandRipeningAck)},
  { 2642, -1, -1, sizeof(::idlepb::FarmlandHarvestReq)},
  { 2650, -1, -1, sizeof(::idlepb::FarmlandHarvestAck)},
  { 2660, -1, -1, sizeof(::idlepb::FarmerRankUpReq)},
  { 2666, -1, -1, sizeof(::idlepb::FarmerRankUpAck)},
  { 2673, -1, -1, sizeof(::idlepb::FarmlandSetManagementReq)},
  { 2680, -1, -1, sizeof(::idlepb::FarmlandSetManagementAck)},
  { 2687, -1, -1, sizeof(::idlepb::UpdateFarmlandStateReq)},
  { 2693, -1, -1, sizeof(::idlepb::UpdateFarmlandStateAck)},
  { 2703, -1, -1, sizeof(::idlepb::GetRoleInfoReq)},
  { 2710, -1, -1, sizeof(::idlepb::GetRoleInfoAck)},
  { 2718, -1, -1, sizeof(::idlepb::GetRoleFriendDataReq)},
  { 2724, -1, -1, sizeof(::idlepb::GetRoleFriendDataAck)},
  { 2732, -1, -1, sizeof(::idlepb::FriendOpReq)},
  { 2741, -1, -1, sizeof(::idlepb::FriendOpAck)},
  { 2750, -1, -1, sizeof(::idlepb::ReplyFriendRequestReq)},
  { 2759, -1, -1, sizeof(::idlepb::ReplyFriendRequestAck)},
  { 2768, -1, -1, sizeof(::idlepb::FriendSearchRoleInfoReq)},
  { 2775, -1, -1, sizeof(::idlepb::FriendSearchRoleInfoAck)},
  { 2782, -1, -1, sizeof(::idlepb::NotifyFriendMessage)},
  { 2793, -1, -1, sizeof(::idlepb::GetRoleAvatarDataReq)},
  { 2800, -1, -1, sizeof(::idlepb::GetRoleAvatarDataAck)},
  { 2807, -1, -1, sizeof(::idlepb::DispatchAvatarReq)},
  { 2814, -1, -1, sizeof(::idlepb::DispatchAvatarAck)},
  { 2821, -1, -1, sizeof(::idlepb::AvatarRankUpReq)},
  { 2827, -1, -1, sizeof(::idlepb::AvatarRankUpAck)},
  { 2834, -1, -1, sizeof(::idlepb::ReceiveAvatarTempPackageReq)},
  { 2840, -1, -1, sizeof(::idlepb::ReceiveAvatarTempPackageAck)},
  { 2847, -1, -1, sizeof(::idlepb::GetRoleBiographyDataReq)},
  { 2853, -1, -1, sizeof(::idlepb::GetRoleBiographyDataAck)},
  { 2860, -1, -1, sizeof(::idlepb::ReceiveBiographyItemReq)},
  { 2867, -1, -1, sizeof(::idlepb::ReceiveBiographyItemAck)},
  { 2874, -1, -1, sizeof(::idlepb::NotifyBiographyMessage)},
  { 2880, -1, -1, sizeof(::idlepb::GetBiographyEventDataReq)},
  { 2886, -1, -1, sizeof(::idlepb::GetBiographyEventDataAck)},
  { 2894, -1, -1, sizeof(::idlepb::ReceiveBiographyEventItemReq)},
  { 2901, -1, -1, sizeof(::idlepb::ReceiveBiographyEventItemAck)},
  { 2908, -1, -1, sizeof(::idlepb::AddBiographyRoleLogReq)},
  { 2915, -1, -1, sizeof(::idlepb::AddBiographyRoleLogAck)},
  { 2922, -1, -1, sizeof(::idlepb::GetRoleVipShopDataReq)},
  { 2928, -1, -1, sizeof(::idlepb::GetRoleVipShopDataAck)},
  { 2935, -1, -1, sizeof(::idlepb::VipShopBuyReq)},
  { 2943, -1, -1, sizeof(::idlepb::VipShopBuyAck)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::idlepb::_Ping_default_instance_._instance,
  &::idlepb::_Pong_default_instance_._instance,
  &::idlepb::_DoGmCommand_default_instance_._instance,
  &::idlepb::_ReportError_default_instance_._instance,
  &::idlepb::_LoginGameReq_default_instance_._instance,
  &::idlepb::_LoginGameAck_default_instance_._instance,
  &::idlepb::_RefreshInventoryData_default_instance_._instance,
  &::idlepb::_SetCurrentCultivationDirectionReq_default_instance_._instance,
  &::idlepb::_SetCurrentCultivationDirectionAck_default_instance_._instance,
  &::idlepb::_RefreshCurrentCultivationDirection_default_instance_._instance,
  &::idlepb::_RefreshCultivationRankData_default_instance_._instance,
  &::idlepb::_RefreshCultivationData_default_instance_._instance,
  &::idlepb::_RefreshCurrencyData_default_instance_._instance,
  &::idlepb::_RefreshDailyCounterData_default_instance_._instance,
  &::idlepb::_RefreshLastUnlockArenaId_default_instance_._instance,
  &::idlepb::_RefreshUnlockedEquipmentSlots_default_instance_._instance,
  &::idlepb::_UnlockEquipmentSlotReq_default_instance_._instance,
  &::idlepb::_UnlockEquipmentSlotAck_default_instance_._instance,
  &::idlepb::_ThunderTestRoundData_default_instance_._instance,
  &::idlepb::_ThunderTestData_default_instance_._instance,
  &::idlepb::_DoBreakthroughReq_default_instance_._instance,
  &::idlepb::_DoBreakthroughAck_default_instance_._instance,
  &::idlepb::_RefreshItems_default_instance_._instance,
  &::idlepb::_RefreshTemporaryPackageItems_default_instance_._instance,
  &::idlepb::_ExtractTemporaryPackageItemsReq_default_instance_._instance,
  &::idlepb::_ExtractTemporaryPackageItemsAck_default_instance_._instance,
  &::idlepb::_GetTemporaryPackageDataReq_default_instance_._instance,
  &::idlepb::_GetTemporaryPackageDataAck_default_instance_._instance,
  &::idlepb::_GetArenaExplorationStatisticalDataReq_default_instance_._instance,
  &::idlepb::_GetArenaExplorationStatisticalDataAck_default_instance_._instance,
  &::idlepb::_DoBreathingExerciseReq_default_instance_._instance,
  &::idlepb::_DoBreathingExerciseAck_default_instance_._instance,
  &::idlepb::_OneClickMergeBreathingReq_default_instance_._instance,
  &::idlepb::_OneClickMergeBreathingAck_default_instance_._instance,
  &::idlepb::_RequestCommonCultivationDataReq_default_instance_._instance,
  &::idlepb::_RequestCommonCultivationDataAck_default_instance_._instance,
  &::idlepb::_ReceiveBreathingExerciseRewardReq_default_instance_._instance,
  &::idlepb::_ReceiveBreathingExerciseRewardAck_default_instance_._instance,
  &::idlepb::_UseItemReq_default_instance_._instance,
  &::idlepb::_UseItemAck_default_instance_._instance,
  &::idlepb::_UseSelectGiftReq_default_instance_._instance,
  &::idlepb::_UseSelectGiftAck_default_instance_._instance,
  &::idlepb::_SellItemInfo_default_instance_._instance,
  &::idlepb::_SellItemReq_default_instance_._instance,
  &::idlepb::_SellItemAck_default_instance_._instance,
  &::idlepb::_RefreshAlchemyData_default_instance_._instance,
  &::idlepb::_NotifyAlchemyRefineResult_default_instance_._instance,
  &::idlepb::_RefreshForgeData_default_instance_._instance,
  &::idlepb::_NotifyForgeRefineResult_default_instance_._instance,
  &::idlepb::_EquipmentPutOnReq_default_instance_._instance,
  &::idlepb::_EquipmentPutOnAck_default_instance_._instance,
  &::idlepb::_EquipmentTakeOffReq_default_instance_._instance,
  &::idlepb::_EquipmentTakeOffAck_default_instance_._instance,
  &::idlepb::_GetInventoryDataReq_default_instance_._instance,
  &::idlepb::_GetInventoryDataAck_default_instance_._instance,
  &::idlepb::_AlchemyRefineStartReq_default_instance_._instance,
  &::idlepb::_AlchemyRefineStartAck_default_instance_._instance,
  &::idlepb::_AlchemyRefineCancelReq_default_instance_._instance,
  &::idlepb::_AlchemyRefineCancelAck_default_instance_._instance,
  &::idlepb::_AlchemyRefineExtractReq_default_instance_._instance,
  &::idlepb::_AlchemyRefineExtractAck_default_instance_._instance,
  &::idlepb::_CreateCharacterReq_default_instance_._instance,
  &::idlepb::_CreateCharacterAck_default_instance_._instance,
  &::idlepb::_SystemNotice_default_instance_._instance,
  &::idlepb::_GetRoleShopDataReq_default_instance_._instance,
  &::idlepb::_GetRoleShopDataAck_default_instance_._instance,
  &::idlepb::_RefreshShopReq_default_instance_._instance,
  &::idlepb::_RefreshShopAck_default_instance_._instance,
  &::idlepb::_BuyShopItemReq_default_instance_._instance,
  &::idlepb::_BuyShopItemAck_default_instance_._instance,
  &::idlepb::_GetRoleDeluxeShopDataReq_default_instance_._instance,
  &::idlepb::_GetRoleDeluxeShopDataAck_default_instance_._instance,
  &::idlepb::_RefreshDeluxeShopReq_default_instance_._instance,
  &::idlepb::_RefreshDeluxeShopAck_default_instance_._instance,
  &::idlepb::_BuyDeluxeShopItemReq_default_instance_._instance,
  &::idlepb::_BuyDeluxeShopItemAck_default_instance_._instance,
  &::idlepb::_UnlockDeluxeShopReq_default_instance_._instance,
  &::idlepb::_UnlockDeluxeShopAck_default_instance_._instance,
  &::idlepb::_RefreshDeluxeShopUnlocked_default_instance_._instance,
  &::idlepb::_UnlockArenaReq_default_instance_._instance,
  &::idlepb::_UnlockArenaAck_default_instance_._instance,
  &::idlepb::_NotifyUnlockArenaChallengeResult_default_instance_._instance,
  &::idlepb::_RequestRefreshRoleCombatPower_default_instance_._instance,
  &::idlepb::_NotifyRoleCombatPower_default_instance_._instance,
  &::idlepb::_GameSystemChatMessage_default_instance_._instance,
  &::idlepb::_ReplicateQuestProgressChange_default_instance_._instance,
  &::idlepb::_QuestOpReq_default_instance_._instance,
  &::idlepb::_QuestOpAck_default_instance_._instance,
  &::idlepb::_GetQuestDataReq_default_instance_._instance,
  &::idlepb::_GetQuestDataAck_default_instance_._instance,
  &::idlepb::_GetRoleLeaderboardDataReq_default_instance_._instance,
  &::idlepb::_GetRoleLeaderboardDataAck_default_instance_._instance,
  &::idlepb::_GetLeaderboardPreviewReq_default_instance_._instance,
  &::idlepb::_GetLeaderboardPreviewAck_default_instance_._instance,
  &::idlepb::_GetLeaderboardDataReq_default_instance_._instance,
  &::idlepb::_GetLeaderboardDataAck_default_instance_._instance,
  &::idlepb::_LeaderboardClickLikeReq_default_instance_._instance,
  &::idlepb::_LeaderboardClickLikeAck_default_instance_._instance,
  &::idlepb::_LeaderboardUpdateMessageReq_default_instance_._instance,
  &::idlepb::_LeaderboardUpdateMessageAck_default_instance_._instance,
  &::idlepb::_GetMonsterTowerChallengeListReq_default_instance_._instance,
  &::idlepb::_GetMonsterTowerChallengeListAck_default_instance_._instance,
  &::idlepb::_GetMonsterTowerChallengeRewardReq_default_instance_._instance,
  &::idlepb::_GetMonsterTowerChallengeRewardAck_default_instance_._instance,
  &::idlepb::_GetFuZeRewardReq_default_instance_._instance,
  &::idlepb::_GetFuZeRewardAck_default_instance_._instance,
  &::idlepb::_GetRoleMailDataReq_default_instance_._instance,
  &::idlepb::_GetRoleMailDataAck_default_instance_._instance,
  &::idlepb::_UpdateRoleMail_default_instance_._instance,
  &::idlepb::_ReadMailReq_default_instance_._instance,
  &::idlepb::_ReadMailAck_default_instance_._instance,
  &::idlepb::_GetMailAttachmentReq_default_instance_._instance,
  &::idlepb::_GetMailAttachmentAck_default_instance_._instance,
  &::idlepb::_DeleteMailReq_default_instance_._instance,
  &::idlepb::_DeleteMailAck_default_instance_._instance,
  &::idlepb::_OneClickGetMailAttachmentReq_default_instance_._instance,
  &::idlepb::_OneClickGetMailAttachmentAck_default_instance_._instance,
  &::idlepb::_OneClickReadMailReq_default_instance_._instance,
  &::idlepb::_OneClickReadMailAck_default_instance_._instance,
  &::idlepb::_OneClickDeleteMailReq_default_instance_._instance,
  &::idlepb::_OneClickDeleteMailAck_default_instance_._instance,
  &::idlepb::_UnlockFunctionModuleReq_default_instance_._instance,
  &::idlepb::_UnlockFunctionModuleAck_default_instance_._instance,
  &::idlepb::_NotifyUnlockedModuels_default_instance_._instance,
  &::idlepb::_UpdateChat_default_instance_._instance,
  &::idlepb::_SendChatMessageReq_default_instance_._instance,
  &::idlepb::_SendChatMessageAck_default_instance_._instance,
  &::idlepb::_GetChatRecordReq_default_instance_._instance,
  &::idlepb::_GetChatRecordAck_default_instance_._instance,
  &::idlepb::_DeletePrivateChatRecordReq_default_instance_._instance,
  &::idlepb::_DeletePrivateChatRecordAck_default_instance_._instance,
  &::idlepb::_ClearChatUnreadNumReq_default_instance_._instance,
  &::idlepb::_ClearChatUnreadNumAck_default_instance_._instance,
  &::idlepb::_GetRoleInfoCacheReq_default_instance_._instance,
  &::idlepb::_GetRoleInfoCacheAck_default_instance_._instance,
  &::idlepb::_ForgeRefineStartReq_default_instance_._instance,
  &::idlepb::_ForgeRefineStartAck_default_instance_._instance,
  &::idlepb::_ForgeRefineCancelReq_default_instance_._instance,
  &::idlepb::_ForgeRefineCancelAck_default_instance_._instance,
  &::idlepb::_ForgeRefineExtractReq_default_instance_._instance,
  &::idlepb::_ForgeRefineExtractAck_default_instance_._instance,
  &::idlepb::_GetForgeLostEquipmentDataReq_default_instance_._instance,
  &::idlepb::_GetForgeLostEquipmentDataAck_default_instance_._instance,
  &::idlepb::_ForgeDestroyReq_default_instance_._instance,
  &::idlepb::_ForgeDestroyAck_default_instance_._instance,
  &::idlepb::_ForgeFindBackReq_default_instance_._instance,
  &::idlepb::_ForgeFindBackAck_default_instance_._instance,
  &::idlepb::_RequestPillElixirDataReq_default_instance_._instance,
  &::idlepb::_RequestPillElixirDataAck_default_instance_._instance,
  &::idlepb::_GetOnePillElixirDataReq_default_instance_._instance,
  &::idlepb::_GetOnePillElixirDataAck_default_instance_._instance,
  &::idlepb::_RequestModifyPillElixirFilterReq_default_instance_._instance,
  &::idlepb::_RequestModifyPillElixirFilterAck_default_instance_._instance,
  &::idlepb::_UsePillElixirReport_default_instance_._instance,
  &::idlepb::_UsePillElixirReq_default_instance_._instance,
  &::idlepb::_UsePillElixirAck_default_instance_._instance,
  &::idlepb::_OneClickUsePillElixirReq_default_instance_._instance,
  &::idlepb::_OneClickUsePillElixirAck_default_instance_._instance,
  &::idlepb::_TradePillElixirReq_default_instance_._instance,
  &::idlepb::_TradePillElixirAck_default_instance_._instance,
  &::idlepb::_NotifyAutoModeStatus_default_instance_._instance,
  &::idlepb::_SetAutoMode_default_instance_._instance,
  &::idlepb::_ReinforceEquipmentReq_default_instance_._instance,
  &::idlepb::_ReinforceEquipmentAck_default_instance_._instance,
  &::idlepb::_QiWenEquipmentReq_default_instance_._instance,
  &::idlepb::_QiWenEquipmentAck_default_instance_._instance,
  &::idlepb::_RefineEquipmentReq_default_instance_._instance,
  &::idlepb::_RefineEquipmentAck_default_instance_._instance,
  &::idlepb::_ResetEquipmentReq_default_instance_._instance,
  &::idlepb::_ResetEquipmentAck_default_instance_._instance,
  &::idlepb::_InheritEquipmentReq_default_instance_._instance,
  &::idlepb::_InheritEquipmentAck_default_instance_._instance,
  &::idlepb::_LockItemReq_default_instance_._instance,
  &::idlepb::_LockItemAck_default_instance_._instance,
  &::idlepb::_CollectionActivatedSuit_default_instance_._instance,
  &::idlepb::_GetRoleCollectionDataReq_default_instance_._instance,
  &::idlepb::_GetRoleCollectionDataRsp_default_instance_._instance,
  &::idlepb::_RoleCollectionOpReq_default_instance_._instance,
  &::idlepb::_RoleCollectionOpAck_default_instance_._instance,
  &::idlepb::_NotifyRoleCollectionData_default_instance_._instance,
  &::idlepb::_NotifyCommonCollectionPieceData_default_instance_._instance,
  &::idlepb::_NotifyCollectionActivatedSuit_default_instance_._instance,
  &::idlepb::_ShareSelfRoleCollectionReq_default_instance_._instance,
  &::idlepb::_ShareSelfRoleCollectionRsp_default_instance_._instance,
  &::idlepb::_GetShareRoleCollectionDataReq_default_instance_._instance,
  &::idlepb::_GetShareRoleCollectionDataRsp_default_instance_._instance,
  &::idlepb::_NotifyRoleCollectionHistories_default_instance_._instance,
  &::idlepb::_NotifyCollectionZoneActiveAwards_default_instance_._instance,
  &::idlepb::_NotifyRoleCollectionNextResetEnhanceTicks_default_instance_._instance,
  &::idlepb::_RoleBattleHistoryList_default_instance_._instance,
  &::idlepb::_NotifySoloArenaChallengeOver_default_instance_._instance,
  &::idlepb::_SoloArenaChallengeReq_default_instance_._instance,
  &::idlepb::_SoloArenaChallengeAck_default_instance_._instance,
  &::idlepb::_SoloArenaQuickEndReq_default_instance_._instance,
  &::idlepb::_SoloArenaQuickEndAck_default_instance_._instance,
  &::idlepb::_GetSoloArenaHistoryListReq_default_instance_._instance,
  &::idlepb::_GetSoloArenaHistoryListAck_default_instance_._instance,
  &::idlepb::_ReplaySoloArenaHistoryReq_default_instance_._instance,
  &::idlepb::_ReplaySoloArenaHistoryAck_default_instance_._instance,
  &::idlepb::_GetBattleHistoryInfoReq_default_instance_._instance,
  &::idlepb::_GetBattleHistoryInfoAck_default_instance_._instance,
  &::idlepb::_NotifyEnterOpenClientWorld_default_instance_._instance,
  &::idlepb::_NotifyMonsterTowerData_default_instance_._instance,
  &::idlepb::_NotifyMonsterTowerChallengeOver_default_instance_._instance,
  &::idlepb::_MonsterTowerChallengeReq_default_instance_._instance,
  &::idlepb::_MonsterTowerChallengeAck_default_instance_._instance,
  &::idlepb::_MonsterTowerDrawIdleAwardReq_default_instance_._instance,
  &::idlepb::_MonsterTowerDrawIdleAwardAck_default_instance_._instance,
  &::idlepb::_MonsterTowerClosedDoorTrainingReq_default_instance_._instance,
  &::idlepb::_MonsterTowerClosedDoorTrainingAck_default_instance_._instance,
  &::idlepb::_MonsterTowerQuickEndReq_default_instance_._instance,
  &::idlepb::_MonsterTowerQuickEndAck_default_instance_._instance,
  &::idlepb::_NotifyFightModeData_default_instance_._instance,
  &::idlepb::_SetFightModeReq_default_instance_._instance,
  &::idlepb::_SetFightModeAck_default_instance_._instance,
  &::idlepb::_NotifyInventorySpaceNum_default_instance_._instance,
  &::idlepb::_NotifyInventoryFullMailItem_default_instance_._instance,
  &::idlepb::_NotifyQiCollectorRank_default_instance_._instance,
  &::idlepb::_UpgradeQiCollectorReq_default_instance_._instance,
  &::idlepb::_UpgradeQiCollectorAck_default_instance_._instance,
  &::idlepb::_GetRoleAllStatsReq_default_instance_._instance,
  &::idlepb::_GetRoleAllStatsAck_default_instance_._instance,
  &::idlepb::_GetShanhetuDataReq_default_instance_._instance,
  &::idlepb::_GetShanhetuDataAck_default_instance_._instance,
  &::idlepb::_SetShanhetuUseConfigReq_default_instance_._instance,
  &::idlepb::_SetShanhetuUseConfigAck_default_instance_._instance,
  &::idlepb::_UseShanhetuReq_default_instance_._instance,
  &::idlepb::_UseShanhetuAck_default_instance_._instance,
  &::idlepb::_StepShanhetuReq_default_instance_._instance,
  &::idlepb::_StepShanhetuAck_default_instance_._instance,
  &::idlepb::_GetShanhetuUseRecordReq_default_instance_._instance,
  &::idlepb::_GetShanhetuUseRecordAck_default_instance_._instance,
  &::idlepb::_SetAttackLockTypeReq_default_instance_._instance,
  &::idlepb::_SetAttackLockTypeAck_default_instance_._instance,
  &::idlepb::_SetAttackUnlockTypeReq_default_instance_._instance,
  &::idlepb::_SetAttackUnlockTypeAck_default_instance_._instance,
  &::idlepb::_SetShowUnlockButtonReq_default_instance_._instance,
  &::idlepb::_SetShowUnlockButtonAck_default_instance_._instance,
  &::idlepb::_RefreshRoleNormalSetting_default_instance_._instance,
  &::idlepb::_GetUserVarReq_default_instance_._instance,
  &::idlepb::_GetUserVarRsp_default_instance_._instance,
  &::idlepb::_GetUserVarsReq_default_instance_._instance,
  &::idlepb::_GetUserVarsRsp_default_instance_._instance,
  &::idlepb::_SetUserVar_default_instance_._instance,
  &::idlepb::_DelUserVar_default_instance_._instance,
  &::idlepb::_ShareSelfItemReq_default_instance_._instance,
  &::idlepb::_ShareSelfItemRsp_default_instance_._instance,
  &::idlepb::_ShareSelfItemsReq_default_instance_._instance,
  &::idlepb::_ShareSelfItemsRsp_default_instance_._instance,
  &::idlepb::_GetShareItemDataReq_default_instance_._instance,
  &::idlepb::_GetShareItemDataRsp_default_instance_._instance,
  &::idlepb::_GetChecklistDataReq_default_instance_._instance,
  &::idlepb::_GetChecklistDataAck_default_instance_._instance,
  &::idlepb::_NotifyChecklist_default_instance_._instance,
  &::idlepb::_ChecklistOpReq_default_instance_._instance,
  &::idlepb::_ChecklistOpAck_default_instance_._instance,
  &::idlepb::_UpdateChecklistReq_default_instance_._instance,
  &::idlepb::_UpdateChecklistAck_default_instance_._instance,
  &::idlepb::_GetCommonItemExchangeDataReq_default_instance_._instance,
  &::idlepb::_GetCommonItemExchangeDataAck_default_instance_._instance,
  &::idlepb::_ExchangeCommonItemReq_default_instance_._instance,
  &::idlepb::_ExchangeCommonItemAck_default_instance_._instance,
  &::idlepb::_SynthesisCommonItemReq_default_instance_._instance,
  &::idlepb::_SynthesisCommonItemAck_default_instance_._instance,
  &::idlepb::_GetRoleSeptShopDataReq_default_instance_._instance,
  &::idlepb::_GetRoleSeptShopDataAck_default_instance_._instance,
  &::idlepb::_GetRoleSeptQuestDataReq_default_instance_._instance,
  &::idlepb::_GetRoleSeptQuestDataAck_default_instance_._instance,
  &::idlepb::_BuySeptShopItemReq_default_instance_._instance,
  &::idlepb::_BuySeptShopItemAck_default_instance_._instance,
  &::idlepb::_ReqRoleSeptQuestOpReq_default_instance_._instance,
  &::idlepb::_ReqRoleSeptQuestOpAck_default_instance_._instance,
  &::idlepb::_RefreshSeptQuestReq_default_instance_._instance,
  &::idlepb::_RefreshSeptQuestAck_default_instance_._instance,
  &::idlepb::_ReqSeptQuestRankUpReq_default_instance_._instance,
  &::idlepb::_ReqSeptQuestRankUpAck_default_instance_._instance,
  &::idlepb::_GetGongFaDataReq_default_instance_._instance,
  &::idlepb::_GetGongFaDataAck_default_instance_._instance,
  &::idlepb::_GongFaOpReq_default_instance_._instance,
  &::idlepb::_GongFaOpAck_default_instance_._instance,
  &::idlepb::_ActivateGongFaMaxEffectReq_default_instance_._instance,
  &::idlepb::_ActivateGongFaMaxEffectAck_default_instance_._instance,
  &::idlepb::_ReceiveFuZengRewardsReq_default_instance_._instance,
  &::idlepb::_ReceiveFuZengRewardsAck_default_instance_._instance,
  &::idlepb::_GetRoleFuZengDataReq_default_instance_._instance,
  &::idlepb::_GetRoleFuZengDataAck_default_instance_._instance,
  &::idlepb::_NotifyFuZeng_default_instance_._instance,
  &::idlepb::_GetRoleTreasuryDataReq_default_instance_._instance,
  &::idlepb::_GetRoleTreasuryDataAck_default_instance_._instance,
  &::idlepb::_OpenTreasuryChestReq_default_instance_._instance,
  &::idlepb::_OpenTreasuryChestAck_default_instance_._instance,
  &::idlepb::_OneClickOpenTreasuryChestReq_default_instance_._instance,
  &::idlepb::_OneClickOpenTreasuryChestAck_default_instance_._instance,
  &::idlepb::_OpenTreasuryGachaReq_default_instance_._instance,
  &::idlepb::_OpenTreasuryGachaAck_default_instance_._instance,
  &::idlepb::_RefreshTreasuryShopReq_default_instance_._instance,
  &::idlepb::_RefreshTreasuryShopAck_default_instance_._instance,
  &::idlepb::_TreasuryShopBuyReq_default_instance_._instance,
  &::idlepb::_TreasuryShopBuyAck_default_instance_._instance,
  &::idlepb::_GetLifeCounterDataReq_default_instance_._instance,
  &::idlepb::_GetLifeCounterDataAck_default_instance_._instance,
  &::idlepb::_UpdateLifeCounter_default_instance_._instance,
  &::idlepb::_DoQuestFightReq_default_instance_._instance,
  &::idlepb::_DoQuestFightAck_default_instance_._instance,
  &::idlepb::_QuestFightQuickEndReq_default_instance_._instance,
  &::idlepb::_QuestFightQuickEndAck_default_instance_._instance,
  &::idlepb::_NotifyQuestFightChallengeOver_default_instance_._instance,
  &::idlepb::_GetAppearanceDataReq_default_instance_._instance,
  &::idlepb::_GetAppearanceDataAck_default_instance_._instance,
  &::idlepb::_AppearanceAddReq_default_instance_._instance,
  &::idlepb::_AppearanceAddAck_default_instance_._instance,
  &::idlepb::_AppearanceActiveReq_default_instance_._instance,
  &::idlepb::_AppearanceActiveAck_default_instance_._instance,
  &::idlepb::_AppearanceWearReq_default_instance_._instance,
  &::idlepb::_AppearanceWearAck_default_instance_._instance,
  &::idlepb::_AppearanceChangeSkTypeReq_default_instance_._instance,
  &::idlepb::_AppearanceChangeSkTypeAck_default_instance_._instance,
  &::idlepb::_AppearanceBuyReq_default_instance_._instance,
  &::idlepb::_AppearanceBuyAck_default_instance_._instance,
  &::idlepb::_GetArenaCheckListDataReq_default_instance_._instance,
  &::idlepb::_GetArenaCheckListDataAck_default_instance_._instance,
  &::idlepb::_ArenaCheckListSubmitReq_default_instance_._instance,
  &::idlepb::_ArenaCheckListSubmitAck_default_instance_._instance,
  &::idlepb::_ArenaCheckListRewardSubmitReq_default_instance_._instance,
  &::idlepb::_ArenaCheckListRewardSubmitAck_default_instance_._instance,
  &::idlepb::_DungeonKillAllChallengeReq_default_instance_._instance,
  &::idlepb::_DungeonKillAllChallengeAck_default_instance_._instance,
  &::idlepb::_DungeonKillAllQuickEndReq_default_instance_._instance,
  &::idlepb::_DungeonKillAllQuickEndAck_default_instance_._instance,
  &::idlepb::_NotifyDungeonKillAllChallengeOver_default_instance_._instance,
  &::idlepb::_NotifyDungeonKillAllChallengeCurWaveNum_default_instance_._instance,
  &::idlepb::_DungeonKillAllDataReq_default_instance_._instance,
  &::idlepb::_DungeonKillAllDataAck_default_instance_._instance,
  &::idlepb::_DungeonSurviveChallengeReq_default_instance_._instance,
  &::idlepb::_DungeonSurviveChallengeAck_default_instance_._instance,
  &::idlepb::_DungeonSurviveQuickEndReq_default_instance_._instance,
  &::idlepb::_DungeonSurviveQuickEndAck_default_instance_._instance,
  &::idlepb::_NotifyDungeonSurviveChallengeOver_default_instance_._instance,
  &::idlepb::_NotifyDungeonSurviveChallengeCurWaveNum_default_instance_._instance,
  &::idlepb::_DungeonSurviveDataReq_default_instance_._instance,
  &::idlepb::_DungeonSurviveDataAck_default_instance_._instance,
  &::idlepb::_RequestEnterSeptDemonWorldReq_default_instance_._instance,
  &::idlepb::_RequestEnterSeptDemonWorldAck_default_instance_._instance,
  &::idlepb::_RequestLeaveSeptDemonWorldReq_default_instance_._instance,
  &::idlepb::_RequestLeaveSeptDemonWorldAck_default_instance_._instance,
  &::idlepb::_RequestSeptDemonWorldDataReq_default_instance_._instance,
  &::idlepb::_RequestSeptDemonWorldDataAck_default_instance_._instance,
  &::idlepb::_RequestInSeptDemonWorldEndTimeReq_default_instance_._instance,
  &::idlepb::_RequestInSeptDemonWorldEndTimeAck_default_instance_._instance,
  &::idlepb::_GetFarmlandDataReq_default_instance_._instance,
  &::idlepb::_GetFarmlandDataAck_default_instance_._instance,
  &::idlepb::_FarmlandUnlockBlockReq_default_instance_._instance,
  &::idlepb::_FarmlandUnlockBlockAck_default_instance_._instance,
  &::idlepb::_FarmlandPlantSeedReq_default_instance_._instance,
  &::idlepb::_FarmlandPlantSeedAck_default_instance_._instance,
  &::idlepb::_FarmlandWateringReq_default_instance_._instance,
  &::idlepb::_FarmlandWateringAck_default_instance_._instance,
  &::idlepb::_FarmlandRipeningReq_default_instance_._instance,
  &::idlepb::_FarmlandRipeningAck_default_instance_._instance,
  &::idlepb::_FarmlandHarvestReq_default_instance_._instance,
  &::idlepb::_FarmlandHarvestAck_default_instance_._instance,
  &::idlepb::_FarmerRankUpReq_default_instance_._instance,
  &::idlepb::_FarmerRankUpAck_default_instance_._instance,
  &::idlepb::_FarmlandSetManagementReq_default_instance_._instance,
  &::idlepb::_FarmlandSetManagementAck_default_instance_._instance,
  &::idlepb::_UpdateFarmlandStateReq_default_instance_._instance,
  &::idlepb::_UpdateFarmlandStateAck_default_instance_._instance,
  &::idlepb::_GetRoleInfoReq_default_instance_._instance,
  &::idlepb::_GetRoleInfoAck_default_instance_._instance,
  &::idlepb::_GetRoleFriendDataReq_default_instance_._instance,
  &::idlepb::_GetRoleFriendDataAck_default_instance_._instance,
  &::idlepb::_FriendOpReq_default_instance_._instance,
  &::idlepb::_FriendOpAck_default_instance_._instance,
  &::idlepb::_ReplyFriendRequestReq_default_instance_._instance,
  &::idlepb::_ReplyFriendRequestAck_default_instance_._instance,
  &::idlepb::_FriendSearchRoleInfoReq_default_instance_._instance,
  &::idlepb::_FriendSearchRoleInfoAck_default_instance_._instance,
  &::idlepb::_NotifyFriendMessage_default_instance_._instance,
  &::idlepb::_GetRoleAvatarDataReq_default_instance_._instance,
  &::idlepb::_GetRoleAvatarDataAck_default_instance_._instance,
  &::idlepb::_DispatchAvatarReq_default_instance_._instance,
  &::idlepb::_DispatchAvatarAck_default_instance_._instance,
  &::idlepb::_AvatarRankUpReq_default_instance_._instance,
  &::idlepb::_AvatarRankUpAck_default_instance_._instance,
  &::idlepb::_ReceiveAvatarTempPackageReq_default_instance_._instance,
  &::idlepb::_ReceiveAvatarTempPackageAck_default_instance_._instance,
  &::idlepb::_GetRoleBiographyDataReq_default_instance_._instance,
  &::idlepb::_GetRoleBiographyDataAck_default_instance_._instance,
  &::idlepb::_ReceiveBiographyItemReq_default_instance_._instance,
  &::idlepb::_ReceiveBiographyItemAck_default_instance_._instance,
  &::idlepb::_NotifyBiographyMessage_default_instance_._instance,
  &::idlepb::_GetBiographyEventDataReq_default_instance_._instance,
  &::idlepb::_GetBiographyEventDataAck_default_instance_._instance,
  &::idlepb::_ReceiveBiographyEventItemReq_default_instance_._instance,
  &::idlepb::_ReceiveBiographyEventItemAck_default_instance_._instance,
  &::idlepb::_AddBiographyRoleLogReq_default_instance_._instance,
  &::idlepb::_AddBiographyRoleLogAck_default_instance_._instance,
  &::idlepb::_GetRoleVipShopDataReq_default_instance_._instance,
  &::idlepb::_GetRoleVipShopDataAck_default_instance_._instance,
  &::idlepb::_VipShopBuyReq_default_instance_._instance,
  &::idlepb::_VipShopBuyAck_default_instance_._instance,
};

const char descriptor_table_protodef_game_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ngame.proto\022\006idlepb\032\rdefines.proto\032\014com"
  "mon.proto\"\031\n\004Ping\022\021\n\treq_ticks\030\001 \001(\003\",\n\004"
  "Pong\022\021\n\treq_ticks\030\001 \001(\003\022\021\n\trsp_ticks\030\002 \001"
  "(\003\"\036\n\013DoGmCommand\022\017\n\007command\030\001 \001(\t\"\033\n\013Re"
  "portError\022\014\n\004text\030\001 \001(\t\"7\n\014LoginGameReq\022"
  "\017\n\007account\030\001 \001(\t\022\026\n\016client_version\030\002 \001(\t"
  "\"\323\001\n\014LoginGameAck\022%\n\003ret\030\001 \001(\0162\030.idlepb."
  "LoginGameRetCode\022#\n\trole_data\030\002 \001(\0132\020.id"
  "lepb.RoleData\022\022\n\nis_relogin\030\003 \001(\010\022:\n\025off"
  "line_award_summary\030\004 \001(\0132\033.idlepb.Offlin"
  "eAwardSummary\022\'\n\tsept_info\030\005 \001(\0132\024.idlep"
  "b.SelfSeptInfo\"7\n\024RefreshInventoryData\022\037"
  "\n\005items\030\001 \003(\0132\020.idlepb.ItemData\"N\n!SetCu"
  "rrentCultivationDirectionReq\022)\n\003dir\030\001 \001("
  "\0162\034.idlepb.CultivationDirection\"N\n!SetCu"
  "rrentCultivationDirectionAck\022)\n\003dir\030\001 \001("
  "\0162\034.idlepb.CultivationDirection\"O\n\"Refre"
  "shCurrentCultivationDirection\022)\n\003dir\030\001 \001"
  "(\0162\034.idlepb.CultivationDirection\"\216\001\n\032Ref"
  "reshCultivationRankData\022#\n\trank_data\030\001 \001"
  "(\0132\020.idlepb.RankData\022)\n\003dir\030\002 \001(\0162\034.idle"
  "pb.CultivationDirection\022 \n\030last_exp_cycl"
  "e_timestamp\030\003 \001(\003\"v\n\026RefreshCultivationD"
  "ata\0221\n\020cultivation_data\030\001 \001(\0132\027.idlepb.C"
  "ultivationData\022)\n\003dir\030\002 \001(\0162\034.idlepb.Cul"
  "tivationDirection\"9\n\023RefreshCurrencyData"
  "\022\"\n\004data\030\001 \001(\0132\024.idlepb.CurrencyData\"}\n\027"
  "RefreshDailyCounterData\022/\n\rdaily_counter"
  "\030\001 \001(\0132\030.idlepb.RoleDailyCounter\0221\n\016week"
  "ly_counter\030\002 \001(\0132\031.idlepb.RoleWeeklyCoun"
  "ter\"8\n\030RefreshLastUnlockArenaId\022\034\n\024last_"
  "unlock_arena_id\030\001 \001(\005\".\n\035RefreshUnlocked"
  "EquipmentSlots\022\r\n\005slots\030\001 \003(\005\"\'\n\026UnlockE"
  "quipmentSlotReq\022\r\n\005index\030\001 \001(\005\"$\n\026Unlock"
  "EquipmentSlotAck\022\n\n\002ok\030\001 \001(\010\"M\n\024ThunderT"
  "estRoundData\022\r\n\005round\030\001 \001(\005\022\016\n\006damage\030\002 "
  "\001(\002\022\n\n\002hp\030\003 \001(\002\022\n\n\002mp\030\004 \001(\002\"W\n\017ThunderTe"
  "stData\022\n\n\002hp\030\001 \001(\002\022\n\n\002mp\030\002 \001(\002\022,\n\006rounds"
  "\030\003 \003(\0132\034.idlepb.ThunderTestRoundData\"$\n\021"
  "DoBreakthroughReq\022\017\n\007item_id\030\001 \001(\003\"\307\001\n\021D"
  "oBreakthroughAck\022\017\n\007success\030\001 \001(\010\022*\n\010old"
  "_type\030\002 \001(\0162\030.idlepb.BreakthroughType\022*\n"
  "\010new_type\030\003 \001(\0162\030.idlepb.BreakthroughTyp"
  "e\022\025\n\ris_bottleneck\030\004 \001(\010\0222\n\021thunder_test"
  "_data\030\005 \001(\0132\027.idlepb.ThunderTestData\"\215\001\n"
  "\014RefreshItems\022\037\n\005items\030\001 \003(\0132\020.idlepb.It"
  "emData\022\r\n\005junks\030\002 \003(\003\022&\n\006others\030\003 \003(\0132\026."
  "idlepb.SimpleItemData\022%\n\013quiet_items\030\004 \003"
  "(\0132\020.idlepb.ItemData\"y\n\034RefreshTemporary"
  "PackageItems\022+\n\005items\030\001 \003(\0132\034.idlepb.Tem"
  "poraryPackageItem\022\021\n\ttotal_num\030\002 \001(\005\022\031\n\021"
  "last_extract_time\030\003 \001(\003\"!\n\037ExtractTempor"
  "aryPackageItemsReq\"!\n\037ExtractTemporaryPa"
  "ckageItemsAck\"\034\n\032GetTemporaryPackageData"
  "Req\"d\n\032GetTemporaryPackageDataAck\022+\n\005ite"
  "ms\030\001 \003(\0132\034.idlepb.TemporaryPackageItem\022\031"
  "\n\021last_extract_time\030\002 \001(\003\"\'\n%GetArenaExp"
  "lorationStatisticalDataReq\"b\n%GetArenaEx"
  "plorationStatisticalDataAck\0229\n\004data\030\001 \001("
  "\0132+.idlepb.RoleArenaExplorationStatistic"
  "alData\"(\n\026DoBreathingExerciseReq\022\016\n\006perc"
  "et\030\001 \001(\002\"K\n\026DoBreathingExerciseAck\0221\n\006re"
  "sult\030\001 \001(\0132!.idlepb.DoBreathingExerciseR"
  "esult\"\033\n\031OneClickMergeBreathingReq\"5\n\031On"
  "eClickMergeBreathingAck\022\013\n\003exp\030\001 \003(\002\022\013\n\003"
  "ret\030\002 \003(\002\"!\n\037RequestCommonCultivationDat"
  "aReq\"N\n\037RequestCommonCultivationDataAck\022"
  "+\n\004data\030\001 \001(\0132\035.idlepb.CommonCultivation"
  "Data\"2\n!ReceiveBreathingExerciseRewardRe"
  "q\022\r\n\005index\030\001 \001(\005\"/\n!ReceiveBreathingExer"
  "ciseRewardAck\022\n\n\002ok\030\001 \001(\010\"5\n\nUseItemReq\022"
  "\n\n\002id\030\001 \001(\003\022\016\n\006cfg_id\030\002 \001(\005\022\013\n\003num\030\003 \001(\005"
  "\"7\n\nUseItemAck\022)\n\nerror_code\030\013 \001(\0162\025.idl"
  "epb.UseItemResult\"\?\n\020UseSelectGiftReq\022\013\n"
  "\003uid\030\001 \001(\003\022\021\n\tchoose_id\030\002 \001(\005\022\013\n\003num\030\003 \001"
  "(\005\"=\n\020UseSelectGiftAck\022)\n\nerror_code\030\013 \001"
  "(\0162\025.idlepb.UseItemResult\"8\n\014SellItemInf"
  "o\022\017\n\007item_id\030\001 \001(\003\022\013\n\003num\030\002 \001(\005\022\n\n\002ok\030\003 "
  "\001(\010\"2\n\013SellItemReq\022#\n\005items\030\001 \003(\0132\024.idle"
  "pb.SellItemInfo\"2\n\013SellItemAck\022#\n\005items\030"
  "\001 \003(\0132\024.idlepb.SellItemInfo\";\n\022RefreshAl"
  "chemyData\022%\n\004data\030\001 \001(\0132\027.idlepb.RoleAlc"
  "hemyData\"\245\001\n\031NotifyAlchemyRefineResult\022$"
  "\n\007quality\030\001 \001(\0162\023.idlepb.ItemQuality\022\023\n\013"
  "item_cfg_id\030\002 \001(\005\022\020\n\010item_num\030\003 \001(\005\022\013\n\003e"
  "xp\030\004 \001(\005\022.\n\013chance_type\030\005 \001(\0162\031.idlepb.A"
  "lchemyChanceType\"7\n\020RefreshForgeData\022#\n\004"
  "data\030\001 \001(\0132\025.idlepb.RoleForgeData\"\241\001\n\027No"
  "tifyForgeRefineResult\022$\n\007quality\030\001 \001(\0162\023"
  ".idlepb.ItemQuality\022\023\n\013item_cfg_id\030\002 \001(\005"
  "\022\020\n\010item_num\030\003 \001(\005\022\013\n\003exp\030\004 \001(\005\022,\n\013chanc"
  "e_type\030\005 \001(\0162\027.idlepb.ForgeChanceType\"6\n"
  "\021EquipmentPutOnReq\022\020\n\010slot_idx\030\001 \001(\005\022\017\n\007"
  "item_id\030\002 \001(\004\"\037\n\021EquipmentPutOnAck\022\n\n\002ok"
  "\030\001 \001(\010\"\'\n\023EquipmentTakeOffReq\022\020\n\010slot_id"
  "x\030\001 \001(\005\"!\n\023EquipmentTakeOffAck\022\n\n\002ok\030\001 \001"
  "(\010\"\025\n\023GetInventoryDataReq\"u\n\023GetInventor"
  "yDataAck\022\037\n\005items\030\001 \003(\0132\020.idlepb.ItemDat"
  "a\022 \n\030unlocked_equipment_slots\030\002 \003(\005\022\033\n\023i"
  "nventory_space_num\030\003 \001(\005\"S\n\025AlchemyRefin"
  "eStartReq\022\021\n\trecipe_id\030\001 \001(\005\022\023\n\013material"
  "_id\030\002 \001(\005\022\022\n\ntarget_num\030\003 \001(\005\"#\n\025Alchemy"
  "RefineStartAck\022\n\n\002ok\030\001 \001(\010\"\030\n\026AlchemyRef"
  "ineCancelReq\"$\n\026AlchemyRefineCancelAck\022\n"
  "\n\002ok\030\001 \001(\010\"\031\n\027AlchemyRefineExtractReq\"%\n"
  "\027AlchemyRefineExtractAck\022\n\n\002ok\030\001 \001(\010\"~\n\022"
  "CreateCharacterReq\022\021\n\thero_name\030\001 \001(\t\022*\n"
  "\004data\030\002 \001(\0132\034.idlepb.CharacterModelConfi"
  "g\022\025\n\rskeleton_type\030\006 \001(\005\022\022\n\nmodel_data\030\007"
  " \003(\005\" \n\022CreateCharacterAck\022\n\n\002ok\030\001 \001(\010\"s"
  "\n\014SystemNotice\022\r\n\005style\030\001 \001(\005\022\014\n\004text\030\002 "
  "\001(\t\022\n\n\002s1\030\n \001(\t\022\n\n\002s2\030\013 \001(\t\022\n\n\002s3\030\014 \001(\t\022"
  "\n\n\002n1\030\024 \001(\003\022\n\n\002n2\030\025 \001(\003\022\n\n\002n3\030\026 \001(\003\"\024\n\022G"
  "etRoleShopDataReq\"8\n\022GetRoleShopDataAck\022"
  "\"\n\004data\030\001 \001(\0132\024.idlepb.RoleShopData\"\020\n\016R"
  "efreshShopReq\"@\n\016RefreshShopAck\022\n\n\002ok\030\001 "
  "\001(\010\022\"\n\004data\030\002 \001(\0132\024.idlepb.RoleShopData\""
  "\037\n\016BuyShopItemReq\022\r\n\005index\030\001 \001(\005\"\034\n\016BuyS"
  "hopItemAck\022\n\n\002ok\030\001 \001(\010\"\032\n\030GetRoleDeluxeS"
  "hopDataReq\"D\n\030GetRoleDeluxeShopDataAck\022("
  "\n\004data\030\001 \001(\0132\032.idlepb.RoleDeluxeShopData"
  "\"\026\n\024RefreshDeluxeShopReq\"L\n\024RefreshDelux"
  "eShopAck\022\n\n\002ok\030\001 \001(\010\022(\n\004data\030\002 \001(\0132\032.idl"
  "epb.RoleDeluxeShopData\"%\n\024BuyDeluxeShopI"
  "temReq\022\r\n\005index\030\001 \001(\005\"\"\n\024BuyDeluxeShopIt"
  "emAck\022\n\n\002ok\030\001 \001(\010\"\025\n\023UnlockDeluxeShopReq"
  "\"K\n\023UnlockDeluxeShopAck\022\n\n\002ok\030\001 \001(\010\022(\n\004d"
  "ata\030\002 \001(\0132\032.idlepb.RoleDeluxeShopData\"0\n"
  "\031RefreshDeluxeShopUnlocked\022\023\n\013is_unlocke"
  "d\030\001 \001(\010\"\"\n\016UnlockArenaReq\022\020\n\010arena_id\030\001 "
  "\001(\005\"\034\n\016UnlockArenaAck\022\n\n\002ok\030\001 \001(\010\"Q\n Not"
  "ifyUnlockArenaChallengeResult\022\020\n\010arena_i"
  "d\030\001 \001(\005\022\017\n\007door_id\030\002 \001(\005\022\n\n\002ok\030\003 \001(\010\"\037\n\035"
  "RequestRefreshRoleCombatPower\"R\n\025NotifyR"
  "oleCombatPower\022\021\n\told_value\030\001 \001(\003\022\021\n\tnew"
  "_value\030\002 \001(\003\022\023\n\013show_notice\030\003 \001(\010\"@\n\025Gam"
  "eSystemChatMessage\022\021\n\tchat_type\030\001 \001(\005\022\024\n"
  "\014chat_content\030\n \001(\014\"\177\n\034ReplicateQuestPro"
  "gressChange\022\020\n\010quest_id\030\001 \001(\005\022*\n\004type\030\002 "
  "\001(\0162\034.idlepb.QuestRequirementType\022\021\n\ttar"
  "get_id\030\003 \001(\005\022\016\n\006amount\030\004 \001(\005\"F\n\nQuestOpR"
  "eq\022&\n\toperation\030\001 \001(\0162\023.idlepb.QuestOpTy"
  "pe\022\020\n\010quest_id\030\002 \001(\005\"U\n\nQuestOpAck\022\n\n\002ok"
  "\030\001 \001(\010\022;\n\rinit_progress\030\002 \003(\0132$.idlepb.R"
  "eplicateQuestProgressChange\"\021\n\017GetQuestD"
  "ataReq\"6\n\017GetQuestDataAck\022#\n\004data\030\001 \001(\0132"
  "\025.idlepb.RoleQuestData\",\n\031GetRoleLeaderb"
  "oardDataReq\022\017\n\007role_id\030\001 \001(\003\"r\n\031GetRoleL"
  "eaderboardDataAck\022)\n\004data\030\001 \001(\0132\033.idlepb"
  ".RoleLeaderboardData\022\020\n\010param_n1\030\013 \001(\003\022\030"
  "\n\020leaderboard_rank\030\014 \003(\005\"\032\n\030GetLeaderboa"
  "rdPreviewReq\"\240\002\n\030GetLeaderboardPreviewAc"
  "k\022.\n\tchampions\030\001 \003(\0132\033.idlepb.Leaderboar"
  "dListItem\0228\n\022role_model_configs\030\002 \003(\0132\034."
  "idlepb.CharacterModelConfig\022,\n\007my_data\030\003"
  " \001(\0132\033.idlepb.RoleLeaderboardData\022$\n\nequ"
  "ipments\030\004 \003(\0132\020.idlepb.ItemData\022+\n\004sept\030"
  "\005 \001(\0132\035.idlepb.SeptDataOnLeaderboard\022\031\n\021"
  "last_refresh_time\030\006 \001(\003\">\n\025GetLeaderboar"
  "dDataReq\022%\n\004type\030\001 \001(\0162\027.idlepb.Leaderbo"
  "ardType\"\342\002\n\025GetLeaderboardDataAck\022\031\n\021las"
  "t_refresh_time\030\001 \001(\003\022)\n\004data\030\002 \003(\0132\033.idl"
  "epb.LeaderboardListItem\022\017\n\007my_rank\030\006 \001(\005"
  "\022\025\n\rrank1_message\030\007 \001(\t\0228\n\022role_model_co"
  "nfigs\030\t \003(\0132\034.idlepb.CharacterModelConfi"
  "g\022$\n\nequipments\030\n \003(\0132\020.idlepb.ItemData\022"
  "1\n\021shanghetu_records\030\013 \003(\0132\026.idlepb.Shan"
  "hetuRecord\022\032\n\022top3_clicklike_num\030\014 \003(\005\022,"
  "\n\005septs\030\r \003(\0132\035.idlepb.SeptDataOnLeaderb"
  "oard\"Q\n\027LeaderboardClickLikeReq\022\017\n\007role_"
  "id\030\001 \001(\003\022%\n\004type\030\002 \001(\0162\027.idlepb.Leaderbo"
  "ardType\"%\n\027LeaderboardClickLikeAck\022\n\n\002ok"
  "\030\001 \001(\010\"2\n\033LeaderboardUpdateMessageReq\022\023\n"
  "\013new_message\030\001 \001(\t\")\n\033LeaderboardUpdateM"
  "essageAck\022\n\n\002ok\030\001 \001(\010\"7\n\037GetMonsterTower"
  "ChallengeListReq\022\024\n\014challenge_id\030\001 \001(\005\"\234"
  "\001\n\037GetMonsterTowerChallengeListAck\022)\n\004da"
  "ta\030\001 \003(\0132\033.idlepb.LeaderboardListItem\0223\n"
  "\rmodel_configs\030\002 \003(\0132\034.idlepb.CharacterM"
  "odelConfig\022\031\n\021all_list_progress\030\003 \003(\005\"9\n"
  "!GetMonsterTowerChallengeRewardReq\022\024\n\014ch"
  "allenge_id\030\001 \001(\005\"/\n!GetMonsterTowerChall"
  "engeRewardAck\022\n\n\002ok\030\001 \001(\010\"\022\n\020GetFuZeRewa"
  "rdReq\"\036\n\020GetFuZeRewardAck\022\n\n\002ok\030\001 \001(\010\"&\n"
  "\022GetRoleMailDataReq\022\020\n\010only_num\030\001 \001(\010\"M\n"
  "\022GetRoleMailDataAck\022\027\n\017unread_mail_num\030\001"
  " \001(\005\022\036\n\010mail_box\030\002 \003(\0132\014.idlepb.Mail\"\020\n\016"
  "UpdateRoleMail\"\034\n\013ReadMailReq\022\r\n\005index\030\001"
  " \001(\005\"5\n\013ReadMailAck\022\n\n\002ok\030\001 \001(\010\022\032\n\004mail\030"
  "\002 \001(\0132\014.idlepb.Mail\"%\n\024GetMailAttachment"
  "Req\022\r\n\005index\030\001 \001(\005\"^\n\024GetMailAttachmentA"
  "ck\022%\n\006result\030\001 \001(\0162\025.idlepb.MailOperatio"
  "n\022\037\n\tmail_data\030\002 \001(\0132\014.idlepb.Mail\"\036\n\rDe"
  "leteMailReq\022\r\n\005index\030\001 \001(\005\"\033\n\rDeleteMail"
  "Ack\022\n\n\002ok\030\001 \001(\010\"\036\n\034OneClickGetMailAttach"
  "mentReq\"~\n\034OneClickGetMailAttachmentAck\022"
  "%\n\006result\030\001 \001(\0162\025.idlepb.MailOperation\022\027"
  "\n\017unread_mail_num\030\002 \001(\005\022\036\n\010mail_box\030\003 \003("
  "\0132\014.idlepb.Mail\"\025\n\023OneClickReadMailReq\"!"
  "\n\023OneClickReadMailAck\022\n\n\002ok\030\001 \001(\010\"\027\n\025One"
  "ClickDeleteMailReq\".\n\025OneClickDeleteMail"
  "Ack\022\025\n\rdeleted_index\030\001 \003(\005\"C\n\027UnlockFunc"
  "tionModuleReq\022(\n\004type\030\001 \001(\0162\032.idlepb.Fun"
  "ctionModuleType\"%\n\027UnlockFunctionModuleA"
  "ck\022\n\n\002ok\030\001 \001(\010\"1\n\025NotifyUnlockedModuels\022"
  "\030\n\020unlocked_modules\030\001 \003(\005\"d\n\nUpdateChat\022"
  "+\n\007channel\030\001 \001(\0162\032.idlepb.ChatMessageCha"
  "nnel\022)\n\014chat_message\030\002 \001(\0132\023.idlepb.Chat"
  "Message\"\207\001\n\022SendChatMessageReq\022\017\n\007role_i"
  "d\030\001 \001(\004\022+\n\007channel\030\002 \001(\0162\032.idlepb.ChatMe"
  "ssageChannel\022\014\n\004text\030\003 \001(\t\022%\n\004type\030\004 \001(\016"
  "2\027.idlepb.ChatMessageType\" \n\022SendChatMes"
  "sageAck\022\n\n\002ok\030\001 \001(\010\"\022\n\020GetChatRecordReq\""
  "\246\001\n\020GetChatRecordAck\022,\n\022public_chat_reco"
  "rd\030\001 \001(\0132\020.idlepb.ChatData\022:\n\023private_ch"
  "at_record\030\002 \001(\0132\035.idlepb.RolePrivateChat"
  "Record\022(\n\013sept_record\030\003 \003(\0132\023.idlepb.Cha"
  "tMessage\"-\n\032DeletePrivateChatRecordReq\022\017"
  "\n\007role_id\030\001 \001(\004\"(\n\032DeletePrivateChatReco"
  "rdAck\022\n\n\002ok\030\001 \001(\010\"(\n\025ClearChatUnreadNumR"
  "eq\022\017\n\007role_id\030\001 \001(\004\"\027\n\025ClearChatUnreadNu"
  "mAck\"\'\n\023GetRoleInfoCacheReq\022\020\n\010role_ids\030"
  "\001 \003(\004\"A\n\023GetRoleInfoCacheAck\022*\n\nrole_inf"
  "os\030\001 \003(\0132\026.idlepb.SimpleRoleInfo\"\234\001\n\023For"
  "geRefineStartReq\022\021\n\trecipe_id\030\001 \001(\005\022\023\n\013m"
  "aterial_id\030\002 \001(\005\022\027\n\017ext_material_id\030\003 \001("
  "\005\022\022\n\ntarget_num\030\004 \001(\005\022\026\n\016auto_sell_poor\030"
  "\005 \001(\010\022\030\n\020auto_sell_middle\030\006 \001(\010\"!\n\023Forge"
  "RefineStartAck\022\n\n\002ok\030\001 \001(\010\"\026\n\024ForgeRefin"
  "eCancelReq\"\"\n\024ForgeRefineCancelAck\022\n\n\002ok"
  "\030\001 \001(\010\"\027\n\025ForgeRefineExtractReq\"2\n\025Forge"
  "RefineExtractAck\022\n\n\002ok\030\001 \001(\010\022\r\n\005items\030\002 "
  "\003(\003\"\036\n\034GetForgeLostEquipmentDataReq\"G\n\034G"
  "etForgeLostEquipmentDataAck\022\'\n\004data\030\001 \003("
  "\0132\031.idlepb.LostEquipmentData\"\036\n\017ForgeDes"
  "troyReq\022\013\n\003uid\030\001 \001(\003\"\035\n\017ForgeDestroyAck\022"
  "\n\n\002ok\030\001 \001(\010\"\037\n\020ForgeFindBackReq\022\013\n\003uid\030\001"
  " \001(\005\"\036\n\020ForgeFindBackAck\022\n\n\002ok\030\001 \001(\010\"\032\n\030"
  "RequestPillElixirDataReq\"D\n\030RequestPillE"
  "lixirDataAck\022(\n\004data\030\001 \001(\0132\032.idlepb.Role"
  "PillElixirData\".\n\027GetOnePillElixirDataRe"
  "q\022\023\n\013item_cfg_id\030\001 \001(\005\"\?\n\027GetOnePillElix"
  "irDataAck\022$\n\004data\030\001 \001(\0132\026.idlepb.PillEli"
  "xirData\"c\n RequestModifyPillElixirFilter"
  "Req\022\024\n\014limit_double\030\001 \001(\005\022\021\n\tlimit_exp\030\002"
  " \001(\005\022\026\n\016limit_property\030\003 \001(\005\".\n RequestM"
  "odifyPillElixirFilterAck\022\n\n\002ok\030\001 \001(\010\"I\n\023"
  "UsePillElixirReport\022\017\n\007item_id\030\001 \001(\005\022\013\n\003"
  "num\030\002 \001(\005\022\024\n\014property_num\030\003 \001(\002\"#\n\020UsePi"
  "llElixirReq\022\017\n\007item_id\030\001 \001(\005\"\036\n\020UsePillE"
  "lixirAck\022\n\n\002ok\030\001 \001(\010\"\032\n\030OneClickUsePillE"
  "lixirReq\"G\n\030OneClickUsePillElixirAck\022+\n\006"
  "report\030\001 \003(\0132\033.idlepb.UsePillElixirRepor"
  "t\"2\n\022TradePillElixirReq\022\017\n\007item_id\030\001 \001(\005"
  "\022\013\n\003num\030\002 \001(\005\" \n\022TradePillElixirAck\022\n\n\002o"
  "k\030\001 \001(\010\"&\n\024NotifyAutoModeStatus\022\016\n\006enabl"
  "e\030\001 \001(\010\"\035\n\013SetAutoMode\022\016\n\006enable\030\001 \001(\010\"#"
  "\n\025ReinforceEquipmentReq\022\n\n\002id\030\001 \001(\003\"#\n\025R"
  "einforceEquipmentAck\022\n\n\002ok\030\001 \001(\010\"M\n\021QiWe"
  "nEquipmentReq\022\n\n\002id\030\001 \001(\003\022\022\n\nselect_abc\030"
  "\002 \001(\005\022\030\n\020commit_materials\030\003 \003(\003\"\037\n\021QiWen"
  "EquipmentAck\022\n\n\002ok\030\001 \001(\010\" \n\022RefineEquipm"
  "entReq\022\n\n\002id\030\001 \001(\003\" \n\022RefineEquipmentAck"
  "\022\n\n\002ok\030\001 \001(\010\"\037\n\021ResetEquipmentReq\022\n\n\002id\030"
  "\001 \003(\003\"F\n\021ResetEquipmentAck\022\n\n\002ok\030\001 \001(\010\022%"
  "\n\005items\030\002 \003(\0132\026.idlepb.SimpleItemData\"C\n"
  "\023InheritEquipmentReq\022\026\n\016equipment_from\030\001"
  " \001(\003\022\024\n\014equipment_to\030\002 \001(\003\"H\n\023InheritEqu"
  "ipmentAck\022\n\n\002ok\030\001 \001(\010\022%\n\005items\030\002 \003(\0132\026.i"
  "dlepb.SimpleItemData\"\031\n\013LockItemReq\022\n\n\002i"
  "d\030\001 \001(\003\"\031\n\013LockItemAck\022\n\n\002ok\030\001 \001(\010\"J\n\027Co"
  "llectionActivatedSuit\022\n\n\002id\030\001 \001(\005\022\r\n\005ind"
  "ex\030\002 \001(\005\022\024\n\014combat_power\030\003 \001(\002\"\032\n\030GetRol"
  "eCollectionDataReq\"\333\002\n\030GetRoleCollection"
  "DataRsp\022(\n\007entries\030\001 \003(\0132\027.idlepb.Collec"
  "tionEntry\0228\n\rcommon_pieces\030\002 \003(\0132!.idlep"
  "b.CommonCollectionPieceData\0226\n\ractived_s"
  "uite\030\003 \003(\0132\037.idlepb.CollectionActivatedS"
  "uit\022!\n\031draw_award_done_histories\030\004 \003(\005\022\033"
  "\n\023can_award_histories\030\005 \003(\005\022A\n\022zone_acti"
  "ve_awards\030\006 \003(\0132%.idlepb.CollectionZoneA"
  "ctiveAwardData\022 \n\030next_reset_enhance_tic"
  "ks\030\007 \001(\003\"\221\001\n\023RoleCollectionOpReq\022-\n\007op_t"
  "ype\030\001 \001(\0162\034.idlepb.RoleCollectionOpType\022"
  "\n\n\002id\030\002 \001(\005\022+\n\014consume_list\030\003 \003(\0132\025.idle"
  "pb.MapValueInt32\022\022\n\nis_preview\030\004 \001(\010\"w\n\023"
  "RoleCollectionOpAck\022-\n\007op_type\030\001 \001(\0162\034.i"
  "dlepb.RoleCollectionOpType\022\n\n\002ok\030\002 \001(\010\022%"
  "\n\005items\030\003 \003(\0132\026.idlepb.SimpleItemData\"B\n"
  "\030NotifyRoleCollectionData\022&\n\005entry\030\001 \001(\013"
  "2\027.idlepb.CollectionEntry\"[\n\037NotifyCommo"
  "nCollectionPieceData\0228\n\rcommon_pieces\030\001 "
  "\003(\0132!.idlepb.CommonCollectionPieceData\"W"
  "\n\035NotifyCollectionActivatedSuit\0226\n\ractiv"
  "ed_suite\030\001 \003(\0132\037.idlepb.CollectionActiva"
  "tedSuit\"(\n\032ShareSelfRoleCollectionReq\022\n\n"
  "\002id\030\001 \001(\005\".\n\032ShareSelfRoleCollectionRsp\022"
  "\020\n\010share_id\030\001 \001(\003\"1\n\035GetShareRoleCollect"
  "ionDataReq\022\020\n\010share_id\030\001 \001(\003\"]\n\035GetShare"
  "RoleCollectionDataRsp\022\n\n\002ok\030\001 \001(\010\0220\n\017col"
  "lection_data\030\002 \001(\0132\027.idlepb.CollectionEn"
  "try\"_\n\035NotifyRoleCollectionHistories\022!\n\031"
  "draw_award_done_histories\030\001 \003(\005\022\033\n\023can_a"
  "ward_histories\030\002 \003(\005\"e\n NotifyCollection"
  "ZoneActiveAwards\022A\n\022zone_active_awards\030\001"
  " \003(\0132%.idlepb.CollectionZoneActiveAwardD"
  "ata\"M\n)NotifyRoleCollectionNextResetEnha"
  "nceTicks\022 \n\030next_reset_enhance_ticks\030\001 \001"
  "(\003\"@\n\025RoleBattleHistoryList\022\'\n\007entries\030\001"
  " \003(\0132\026.idlepb.RoleBattleInfo\"M\n\034NotifySo"
  "loArenaChallengeOver\022\013\n\003win\030\001 \001(\010\022 \n\004inf"
  "o\030\002 \001(\0132\022.idlepb.BattleInfo\"/\n\025SoloArena"
  "ChallengeReq\022\026\n\016target_role_id\030\001 \001(\003\"#\n\025"
  "SoloArenaChallengeAck\022\n\n\002ok\030\001 \001(\010\"\'\n\024Sol"
  "oArenaQuickEndReq\022\017\n\007is_exit\030\001 \001(\010\"\026\n\024So"
  "loArenaQuickEndAck\"<\n\032GetSoloArenaHistor"
  "yListReq\022\036\n\004type\030\001 \001(\0162\020.idlepb.SoloType"
  "\"I\n\032GetSoloArenaHistoryListAck\022+\n\004data\030\001"
  " \001(\0132\035.idlepb.RoleBattleHistoryList\"5\n\031R"
  "eplaySoloArenaHistoryReq\022\030\n\020history_worl"
  "d_id\030\001 \001(\004\"M\n\031ReplaySoloArenaHistoryAck\022"
  "\n\n\002ok\030\001 \001(\010\022$\n\004data\030\002 \001(\0132\026.idlepb.Compr"
  "essedData\"3\n\027GetBattleHistoryInfoReq\022\030\n\020"
  "history_world_id\030\001 \001(\004\"G\n\027GetBattleHisto"
  "ryInfoAck\022\n\n\002ok\030\001 \001(\010\022 \n\004info\030\002 \001(\0132\022.id"
  "lepb.BattleInfo\"2\n\032NotifyEnterOpenClient"
  "World\022\024\n\014world_cfg_id\030\001 \001(\005\"D\n\026NotifyMon"
  "sterTowerData\022*\n\004data\030\001 \001(\0132\034.idlepb.Rol"
  "eMonsterTowerData\"=\n\037NotifyMonsterTowerC"
  "hallengeOver\022\r\n\005floor\030\001 \001(\005\022\013\n\003win\030\002 \001(\010"
  "\"\032\n\030MonsterTowerChallengeReq\"\032\n\030MonsterT"
  "owerChallengeAck\"\036\n\034MonsterTowerDrawIdle"
  "AwardReq\"\036\n\034MonsterTowerDrawIdleAwardAck"
  "\"#\n!MonsterTowerClosedDoorTrainingReq\"#\n"
  "!MonsterTowerClosedDoorTrainingAck\"*\n\027Mo"
  "nsterTowerQuickEndReq\022\017\n\007is_exit\030\001 \001(\010\"\031"
  "\n\027MonsterTowerQuickEndAck\">\n\023NotifyFight"
  "ModeData\022\'\n\004data\030\001 \001(\0132\031.idlepb.RoleFigh"
  "tModeData\"2\n\017SetFightModeReq\022\037\n\004mode\030\001 \001"
  "(\0162\021.idlepb.FightMode\"S\n\017SetFightModeAck"
  "\022\n\n\002ok\030\001 \001(\010\0224\n\nerror_code\030\002 \001(\0162 .idlep"
  "b.SetFightModeAckErrorCode\"&\n\027NotifyInve"
  "ntorySpaceNum\022\013\n\003num\030\001 \001(\005\"\035\n\033NotifyInve"
  "ntoryFullMailItem\"%\n\025NotifyQiCollectorRa"
  "nk\022\014\n\004rank\030\001 \001(\005\"\027\n\025UpgradeQiCollectorRe"
  "q\"#\n\025UpgradeQiCollectorAck\022\n\n\002ok\030\001 \001(\010\"\024"
  "\n\022GetRoleAllStatsReq\"L\n\022GetRoleAllStatsA"
  "ck\0226\n\016all_stats_data\030\001 \001(\0132\036.idlepb.Game"
  "StatsAllModuleData\"\024\n\022GetShanhetuDataReq"
  "\"<\n\022GetShanhetuDataAck\022&\n\004data\030\001 \001(\0132\030.i"
  "dlepb.RoleShanhetuData\"\247\001\n\027SetShanhetuUs"
  "eConfigReq\022\027\n\017auto_skip_green\030\001 \001(\010\022\026\n\016a"
  "uto_skip_blue\030\002 \001(\010\022\027\n\017auto_skip_perpo\030\003"
  " \001(\010\022\026\n\016auto_skip_gold\030\004 \001(\010\022\025\n\rauto_ski"
  "p_red\030\005 \001(\010\022\023\n\013auto_select\030\006 \001(\005\"%\n\027SetS"
  "hanhetuUseConfigAck\022\n\n\002ok\030\001 \001(\010\"<\n\016UseSh"
  "anhetuReq\022\017\n\007item_id\030\001 \001(\005\022\014\n\004skip\030\002 \001(\010"
  "\022\013\n\003num\030\003 \001(\005\"e\n\016UseShanhetuAck\022\n\n\002ok\030\001 "
  "\001(\010\022%\n\005items\030\002 \003(\0132\026.idlepb.SimpleItemDa"
  "ta\022 \n\003map\030\003 \001(\0132\023.idlepb.ShanhetuMap\"\'\n\017"
  "StepShanhetuReq\022\024\n\014choose_event\030\001 \001(\005\"\\\n"
  "\017StepShanhetuAck\022\014\n\004done\030\001 \001(\010\022\023\n\013curren"
  "t_row\030\002 \001(\005\022&\n\006record\030\003 \001(\0132\026.idlepb.Sha"
  "nhetuRecord\"7\n\027GetShanhetuUseRecordReq\022\017"
  "\n\007role_id\030\001 \001(\003\022\013\n\003uid\030\002 \001(\003\"A\n\027GetShanh"
  "etuUseRecordAck\022&\n\006record\030\001 \001(\0132\026.idlepb"
  ".ShanhetuRecord\"<\n\024SetAttackLockTypeReq\022"
  "$\n\004type\030\001 \001(\0162\026.idlepb.AttackLockType\"\"\n"
  "\024SetAttackLockTypeAck\022\n\n\002ok\030\001 \001(\010\"@\n\026Set"
  "AttackUnlockTypeReq\022&\n\004type\030\001 \001(\0162\030.idle"
  "pb.AttackUnlockType\"$\n\026SetAttackUnlockTy"
  "peAck\022\n\n\002ok\030\001 \001(\010\"(\n\026SetShowUnlockButton"
  "Req\022\016\n\006enable\030\001 \001(\010\"$\n\026SetShowUnlockButt"
  "onAck\022\n\n\002ok\030\001 \001(\010\"H\n\030RefreshRoleNormalSe"
  "tting\022,\n\010settings\030\001 \001(\0132\032.idlepb.RoleNor"
  "malSettings\"!\n\rGetUserVarReq\022\020\n\010var_name"
  "\030\001 \001(\t\"\"\n\rGetUserVarRsp\022\021\n\tvar_value\030\001 \001"
  "(\005\"\"\n\016GetUserVarsReq\022\020\n\010var_name\030\001 \003(\t\"@"
  "\n\016GetUserVarsRsp\022.\n\004data\030\001 \003(\0132 .idlepb."
  "StringKeyInt32ValueEntry\"1\n\nSetUserVar\022\020"
  "\n\010var_name\030\001 \001(\t\022\021\n\tvar_value\030\002 \001(\005\"\036\n\nD"
  "elUserVar\022\020\n\010var_name\030\001 \001(\t\"#\n\020ShareSelf"
  "ItemReq\022\017\n\007item_id\030\001 \001(\003\"$\n\020ShareSelfIte"
  "mRsp\022\020\n\010share_id\030\001 \001(\003\"$\n\021ShareSelfItems"
  "Req\022\017\n\007item_id\030\001 \003(\003\"8\n\021ShareSelfItemsRs"
  "p\022#\n\010share_id\030\001 \003(\0132\021.idlepb.Int64Pair\"\'"
  "\n\023GetShareItemDataReq\022\020\n\010share_id\030\001 \001(\003\""
  "F\n\023GetShareItemDataRsp\022\n\n\002ok\030\001 \001(\010\022#\n\tit"
  "em_data\030\002 \001(\0132\020.idlepb.ItemData\"\025\n\023GetCh"
  "ecklistDataReq\">\n\023GetChecklistDataAck\022\'\n"
  "\004data\030\001 \001(\0132\031.idlepb.RoleChecklistData\"\021"
  "\n\017NotifyChecklist\"A\n\016ChecklistOpReq\022\032\n\022s"
  "umbmit_or_receive\030\001 \001(\010\022\023\n\013day_or_week\030\002"
  " \001(\010\"E\n\016ChecklistOpAck\022\n\n\002ok\030\001 \001(\010\022\'\n\004da"
  "ta\030\002 \001(\0132\031.idlepb.RoleChecklistData\"\"\n\022U"
  "pdateChecklistReq\022\014\n\004type\030\001 \001(\005\" \n\022Updat"
  "eChecklistAck\022\n\n\002ok\030\001 \001(\010\".\n\034GetCommonIt"
  "emExchangeDataReq\022\016\n\006cfg_id\030\001 \001(\005\":\n\034Get"
  "CommonItemExchangeDataAck\022\032\n\022today_excha"
  "nge_num\030\001 \001(\005\"4\n\025ExchangeCommonItemReq\022\016"
  "\n\006cfg_id\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\"4\n\025ExchangeC"
  "ommonItemAck\022\n\n\002ok\030\001 \001(\010\022\017\n\007out_num\030\002 \001("
  "\005\"5\n\026SynthesisCommonItemReq\022\016\n\006cfg_id\030\001 "
  "\001(\005\022\013\n\003num\030\002 \001(\005\"$\n\026SynthesisCommonItemA"
  "ck\022\n\n\002ok\030\001 \001(\010\"\030\n\026GetRoleSeptShopDataReq"
  "\"@\n\026GetRoleSeptShopDataAck\022&\n\004data\030\001 \001(\013"
  "2\030.idlepb.RoleSeptShopData\"\031\n\027GetRoleSep"
  "tQuestDataReq\"B\n\027GetRoleSeptQuestDataAck"
  "\022\'\n\004data\030\001 \001(\0132\031.idlepb.RoleSeptQuestDat"
  "a\"-\n\022BuySeptShopItemReq\022\n\n\002id\030\001 \001(\005\022\013\n\003n"
  "um\030\002 \001(\005\" \n\022BuySeptShopItemAck\022\n\n\002ok\030\001 \001"
  "(\010\"$\n\025ReqRoleSeptQuestOpReq\022\013\n\003uid\030\001 \001(\005"
  "\"#\n\025ReqRoleSeptQuestOpAck\022\n\n\002ok\030\001 \001(\010\"\025\n"
  "\023RefreshSeptQuestReq\">\n\023RefreshSeptQuest"
  "Ack\022\'\n\004data\030\001 \001(\0132\031.idlepb.RoleSeptQuest"
  "Data\"\027\n\025ReqSeptQuestRankUpReq\"#\n\025ReqSept"
  "QuestRankUpAck\022\n\n\002ok\030\001 \001(\010\"\022\n\020GetGongFaD"
  "ataReq\"8\n\020GetGongFaDataAck\022$\n\004data\030\001 \001(\013"
  "2\026.idlepb.RoleGongFaData\" \n\013GongFaOpReq\022"
  "\021\n\tgongfa_id\030\001 \001(\005\"B\n\013GongFaOpAck\022\n\n\002ok\030"
  "\001 \001(\010\022\'\n\013gongfa_data\030\002 \001(\0132\022.idlepb.Gong"
  "FaData\",\n\032ActivateGongFaMaxEffectReq\022\016\n\006"
  "cfg_id\030\001 \001(\005\"(\n\032ActivateGongFaMaxEffectA"
  "ck\022\n\n\002ok\030\001 \001(\010\"K\n\027ReceiveFuZengRewardsRe"
  "q\022\016\n\006cfg_id\030\001 \001(\005\022 \n\004type\030\002 \001(\0162\022.idlepb"
  ".FuZengType\"G\n\027ReceiveFuZengRewardsAck\022\n"
  "\n\002ok\030\001 \001(\010\022 \n\004data\030\002 \001(\0132\022.idlepb.FuZeng"
  "Data\"\026\n\024GetRoleFuZengDataReq\"<\n\024GetRoleF"
  "uZengDataAck\022$\n\004data\030\001 \001(\0132\026.idlepb.Role"
  "FuZengData\"M\n\014NotifyFuZeng\022 \n\004type\030\001 \001(\016"
  "2\022.idlepb.FuZengType\022\013\n\003num\030\002 \001(\003\022\016\n\006cfg"
  "_id\030\003 \001(\005\",\n\026GetRoleTreasuryDataReq\022\022\n\nd"
  "irty_flag\030\001 \001(\010\"D\n\026GetRoleTreasuryDataAc"
  "k\022*\n\004data\030\001 \001(\0132\034.idlepb.RoleTreasurySav"
  "eData\"7\n\024OpenTreasuryChestReq\022\022\n\nchest_t"
  "ype\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\"\"\n\024OpenTreasuryCh"
  "estAck\022\n\n\002ok\030\001 \001(\010\"\036\n\034OneClickOpenTreasu"
  "ryChestReq\"]\n\034OneClickOpenTreasuryChestA"
  "ck\022\n\n\002ok\030\001 \001(\010\022\030\n\020today_open_times\030\002 \003(\005"
  "\022\027\n\017guarantee_count\030\003 \003(\005\"7\n\024OpenTreasur"
  "yGachaReq\022\022\n\ngacha_type\030\001 \001(\005\022\013\n\003num\030\002 \001"
  "(\005\"0\n\024OpenTreasuryGachaAck\022\n\n\002ok\030\001 \001(\010\022\014"
  "\n\004free\030\002 \001(\010\"\030\n\026RefreshTreasuryShopReq\"M"
  "\n\026RefreshTreasuryShopAck\022\n\n\002ok\030\001 \001(\010\022\'\n\005"
  "items\030\002 \003(\0132\030.idlepb.TreasuryShopItem\"#\n"
  "\022TreasuryShopBuyReq\022\r\n\005index\030\001 \001(\005\" \n\022Tr"
  "easuryShopBuyAck\022\n\n\002ok\030\001 \001(\010\"\027\n\025GetLifeC"
  "ounterDataReq\"B\n\025GetLifeCounterDataAck\022)"
  "\n\004data\030\001 \001(\0132\033.idlepb.RoleLifeCounterDat"
  "a\"N\n\021UpdateLifeCounter\022\025\n\rfunction_type\030"
  "\001 \001(\005\022\021\n\ttarget_id\030\002 \001(\005\022\017\n\007new_num\030\003 \001("
  "\003\"#\n\017DoQuestFightReq\022\020\n\010quest_id\030\001 \001(\005\"\035"
  "\n\017DoQuestFightAck\022\n\n\002ok\030\001 \001(\010\"(\n\025QuestFi"
  "ghtQuickEndReq\022\017\n\007is_exit\030\001 \001(\010\"\027\n\025Quest"
  "FightQuickEndAck\">\n\035NotifyQuestFightChal"
  "lengeOver\022\020\n\010quest_id\030\001 \001(\005\022\013\n\003win\030\002 \001(\010"
  "\"\026\n\024GetAppearanceDataReq\"@\n\024GetAppearanc"
  "eDataAck\022(\n\004data\030\001 \001(\0132\032.idlepb.RoleAppe"
  "aranceData\"#\n\020AppearanceAddReq\022\017\n\007item_i"
  "d\030\001 \001(\005\"\036\n\020AppearanceAddAck\022\n\n\002ok\030\001 \001(\010\""
  "\'\n\023AppearanceActiveReq\022\020\n\010group_id\030\001 \001(\005"
  "\"!\n\023AppearanceActiveAck\022\n\n\002ok\030\001 \001(\010\"%\n\021A"
  "ppearanceWearReq\022\020\n\010group_id\030\001 \001(\005\"\037\n\021Ap"
  "pearanceWearAck\022\n\n\002ok\030\001 \001(\010\",\n\031Appearanc"
  "eChangeSkTypeReq\022\017\n\007sk_type\030\001 \001(\005\"\'\n\031App"
  "earanceChangeSkTypeAck\022\n\n\002ok\030\001 \001(\010\":\n\020Ap"
  "pearanceBuyReq\022\022\n\nshop_index\030\001 \001(\005\022\022\n\nit"
  "em_index\030\002 \001(\005\"\036\n\020AppearanceBuyAck\022\n\n\002ok"
  "\030\001 \001(\010\"\032\n\030GetArenaCheckListDataReq\"H\n\030Ge"
  "tArenaCheckListDataAck\022,\n\004data\030\001 \001(\0132\036.i"
  "dlepb.RoleArenaCheckListData\"0\n\027ArenaChe"
  "ckListSubmitReq\022\025\n\rcheck_list_id\030\001 \001(\005\"O"
  "\n\027ArenaCheckListSubmitAck\022\n\n\002ok\030\001 \001(\010\022(\n"
  "\004data\030\002 \001(\0132\032.idlepb.ArenaCheckListData\""
  "2\n\035ArenaCheckListRewardSubmitReq\022\021\n\trewa"
  "rd_id\030\001 \001(\005\"[\n\035ArenaCheckListRewardSubmi"
  "tAck\022\n\n\002ok\030\001 \001(\010\022.\n\004data\030\002 \001(\0132 .idlepb."
  "ArenaCheckListRewardData\"4\n\032DungeonKillA"
  "llChallengeReq\022\026\n\016dungeon_uid_id\030\001 \001(\005\"("
  "\n\032DungeonKillAllChallengeAck\022\n\n\002ok\030\001 \001(\010"
  "\",\n\031DungeonKillAllQuickEndReq\022\017\n\007is_exit"
  "\030\001 \001(\010\"\'\n\031DungeonKillAllQuickEndAck\022\n\n\002o"
  "k\030\001 \001(\010\"=\n!NotifyDungeonKillAllChallenge"
  "Over\022\013\n\003uid\030\001 \001(\005\022\013\n\003win\030\002 \001(\010\"V\n\'Notify"
  "DungeonKillAllChallengeCurWaveNum\022\013\n\003uid"
  "\030\001 \001(\005\022\016\n\006curnum\030\002 \001(\005\022\016\n\006maxnum\030\003 \001(\005\"("
  "\n\025DungeonKillAllDataReq\022\017\n\007ask_uid\030\001 \001(\005"
  "\"#\n\025DungeonKillAllDataAck\022\n\n\002ok\030\001 \001(\010\"1\n"
  "\032DungeonSurviveChallengeReq\022\023\n\013dungeon_u"
  "id\030\001 \001(\005\"(\n\032DungeonSurviveChallengeAck\022\n"
  "\n\002ok\030\001 \001(\010\",\n\031DungeonSurviveQuickEndReq\022"
  "\017\n\007is_exit\030\001 \001(\010\"\'\n\031DungeonSurviveQuickE"
  "ndAck\022\n\n\002ok\030\001 \001(\010\"=\n!NotifyDungeonSurviv"
  "eChallengeOver\022\013\n\003uid\030\001 \001(\005\022\013\n\003win\030\002 \001(\010"
  "\"V\n\'NotifyDungeonSurviveChallengeCurWave"
  "Num\022\013\n\003uid\030\001 \001(\005\022\016\n\006curnum\030\002 \001(\005\022\016\n\006maxn"
  "um\030\003 \001(\005\"(\n\025DungeonSurviveDataReq\022\017\n\007ask"
  "_uid\030\001 \001(\005\"#\n\025DungeonSurviveDataAck\022\n\n\002o"
  "k\030\001 \001(\010\"0\n\035RequestEnterSeptDemonWorldReq"
  "\022\017\n\007sept_id\030\001 \001(\003\"+\n\035RequestEnterSeptDem"
  "onWorldAck\022\n\n\002ok\030\001 \001(\010\"0\n\035RequestLeaveSe"
  "ptDemonWorldReq\022\017\n\007sept_id\030\001 \001(\003\"+\n\035Requ"
  "estLeaveSeptDemonWorldAck\022\n\n\002ok\030\001 \001(\010\"/\n"
  "\034RequestSeptDemonWorldDataReq\022\017\n\007sept_id"
  "\030\001 \001(\003\"H\n\034RequestSeptDemonWorldDataAck\022("
  "\n\004data\030\001 \001(\0132\032.idlepb.SeptDemonWorldData"
  "\"#\n!RequestInSeptDemonWorldEndTimeReq\"5\n"
  "!RequestInSeptDemonWorldEndTimeAck\022\020\n\010en"
  "d_time\030\001 \001(\003\"\024\n\022GetFarmlandDataReq\"<\n\022Ge"
  "tFarmlandDataAck\022&\n\004data\030\001 \001(\0132\030.idlepb."
  "RoleFarmlandData\".\n\026FarmlandUnlockBlockR"
  "eq\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"$\n\026FarmlandUnlo"
  "ckBlockAck\022\n\n\002ok\030\001 \001(\010\"b\n\024FarmlandPlantS"
  "eedReq\022\017\n\007item_id\030\001 \001(\005\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030"
  "\003 \001(\005\022\020\n\010rotation\030\004 \001(\005\022\021\n\tis_delete\030\005 \001"
  "(\010\"E\n\024FarmlandPlantSeedAck\022-\n\nplant_data"
  "\030\002 \001(\0132\031.idlepb.FarmlandPlantData\"\"\n\023Far"
  "mlandWateringReq\022\013\n\003num\030\001 \001(\005\".\n\023Farmlan"
  "dWateringAck\022\027\n\017totaol_speed_up\030\001 \001(\005\"\223\001"
  "\n\023FarmlandRipeningReq\022\021\n\tplant_uid\030\001 \001(\005"
  "\022\017\n\007item_id\030\002 \001(\005\022\013\n\003num\030\003 \001(\005\022\021\n\tone_cl"
  "ick\030\004 \001(\005\0228\n\020one_click_plants\030\005 \003(\0132\036.id"
  "lepb.FarmlandManagementInfo\"}\n\023FarmlandR"
  "ipeningAck\022\n\n\002ok\030\001 \001(\010\022)\n\006result\030\002 \003(\0132\031"
  ".idlepb.FarmlandPlantData\022/\n\017used_ripe_i"
  "tems\030\003 \003(\0132\026.idlepb.SimpleItemData\"H\n\022Fa"
  "rmlandHarvestReq\022\021\n\tplant_ids\030\001 \003(\005\022\037\n\027a"
  "uto_harvest_same_class\030\002 \001(\010\"\227\001\n\022Farmlan"
  "dHarvestAck\022\n\n\002ok\030\001 \001(\010\022%\n\005items\030\002 \003(\0132\026"
  ".idlepb.SimpleItemData\022\033\n\023op_success_pla"
  "nt_id\030\003 \003(\005\0221\n\016continue_seeds\030\004 \003(\0132\031.id"
  "lepb.FarmlandPlantData\"\021\n\017FarmerRankUpRe"
  "q\"\035\n\017FarmerRankUpAck\022\n\n\002ok\030\001 \001(\010\"I\n\030Farm"
  "landSetManagementReq\022-\n\005plans\030\001 \003(\0132\036.id"
  "lepb.FarmlandManagementInfo\"&\n\030FarmlandS"
  "etManagementAck\022\n\n\002ok\030\001 \001(\010\"\030\n\026UpdateFar"
  "mlandStateReq\"\266\001\n\026UpdateFarmlandStateAck"
  "\022\035\n\025farmer_friendship_exp\030\001 \001(\005\022\033\n\023auto_"
  "harvest_plants\030\002 \003(\005\0221\n\016continue_seeds\030\003"
  " \003(\0132\031.idlepb.FarmlandPlantData\022-\n\rharve"
  "st_items\030\004 \003(\0132\026.idlepb.SimpleItemData\"!"
  "\n\016GetRoleInfoReq\022\017\n\007role_id\030\001 \001(\004\"A\n\016Get"
  "RoleInfoAck\022#\n\trole_info\030\001 \001(\0132\020.idlepb."
  "RoleInfo\022\n\n\002ok\030\002 \001(\010\"\026\n\024GetRoleFriendDat"
  "aReq\"h\n\024GetRoleFriendDataAck\022$\n\004data\030\001 \001"
  "(\0132\026.idlepb.RoleFriendData\022*\n\nrole_infos"
  "\030\013 \003(\0132\026.idlepb.SimpleRoleInfo\"c\n\013Friend"
  "OpReq\022\017\n\007role_id\030\001 \001(\003\022/\n\007op_type\030\002 \001(\0162"
  "\036.idlepb.FriendRelationshipType\022\022\n\nrever"
  "se_op\030\003 \001(\010\"\213\001\n\013FriendOpAck\022\n\n\002ok\030\001 \001(\010\022"
  "7\n\017relationship_ab\030\002 \001(\0162\036.idlepb.Friend"
  "RelationshipType\0227\n\017relationship_ba\030\003 \001("
  "\0162\036.idlepb.FriendRelationshipType\"J\n\025Rep"
  "lyFriendRequestReq\022\017\n\007role_id\030\001 \001(\003\022\r\n\005a"
  "gree\030\002 \001(\010\022\021\n\tone_click\030\003 \001(\010\"P\n\025ReplyFr"
  "iendRequestAck\022\n\n\002ok\030\001 \001(\010\022\027\n\017relationsh"
  "ip_ba\030\002 \003(\005\022\022\n\nfailed_ids\030\003 \003(\003\",\n\027Frien"
  "dSearchRoleInfoReq\022\021\n\trole_name\030\001 \001(\t\"E\n"
  "\027FriendSearchRoleInfoAck\022*\n\nrole_infos\030\002"
  " \003(\0132\026.idlepb.SimpleRoleInfo\"\252\001\n\023NotifyF"
  "riendMessage\022)\n\trole_info\030\001 \001(\0132\026.idlepb"
  ".SimpleRoleInfo\022\027\n\017is_update_state\030\002 \001(\010"
  "\022\021\n\tb_refused\030\003 \001(\010\022,\n\014friend_event\030\004 \001("
  "\0132\026.idlepb.FriendListItem\022\016\n\006online\030\005 \001("
  "\010\".\n\024GetRoleAvatarDataReq\022\026\n\016draw_this_t"
  "ime\030\001 \001(\010\"<\n\024GetRoleAvatarDataAck\022$\n\004dat"
  "a\030\001 \001(\0132\026.idlepb.RoleAvatarData\"(\n\021Dispa"
  "tchAvatarReq\022\023\n\013world_index\030\001 \001(\005\"9\n\021Dis"
  "patchAvatarAck\022$\n\004data\030\001 \001(\0132\026.idlepb.Ro"
  "leAvatarData\"\021\n\017AvatarRankUpReq\"7\n\017Avata"
  "rRankUpAck\022$\n\004data\030\001 \001(\0132\026.idlepb.RoleAv"
  "atarData\"\035\n\033ReceiveAvatarTempPackageReq\""
  "C\n\033ReceiveAvatarTempPackageAck\022$\n\004data\030\001"
  " \001(\0132\026.idlepb.RoleAvatarData\"\031\n\027GetRoleB"
  "iographyDataReq\"B\n\027GetRoleBiographyDataA"
  "ck\022\'\n\004data\030\001 \001(\0132\031.idlepb.RoleBiographyD"
  "ata\"*\n\027ReceiveBiographyItemReq\022\017\n\007cfg_id"
  "s\030\001 \003(\005\"%\n\027ReceiveBiographyItemAck\022\n\n\002ok"
  "\030\001 \001(\010\"\030\n\026NotifyBiographyMessage\"\032\n\030GetB"
  "iographyEventDataReq\"\222\001\n\030GetBiographyEve"
  "ntDataAck\022>\n\017biography_lists\030\001 \003(\0132%.idl"
  "epb.BiographyEventLeaderboardList\0226\n\023ser"
  "ver_counter_data\030\002 \001(\0132\031.idlepb.ServerCo"
  "unterData\".\n\034ReceiveBiographyEventItemRe"
  "q\022\016\n\006cfg_id\030\001 \001(\005\"E\n\034ReceiveBiographyEve"
  "ntItemAck\022%\n\005items\030\001 \003(\0132\026.idlepb.Simple"
  "ItemData\"\?\n\026AddBiographyRoleLogReq\022%\n\003lo"
  "g\030\001 \001(\0132\030.idlepb.BiographyRoleLog\"\?\n\026Add"
  "BiographyRoleLogAck\022%\n\003log\030\001 \001(\0132\030.idlep"
  "b.BiographyRoleLog\"\027\n\025GetRoleVipShopData"
  "Req\">\n\025GetRoleVipShopDataAck\022%\n\004data\030\001 \001"
  "(\0132\027.idlepb.RoleVipShopData\"+\n\rVipShopBu"
  "yReq\022\r\n\005index\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\"\033\n\rVipS"
  "hopBuyAck\022\n\n\002ok\030\001 \001(\010*\357\001\n\rUseItemResult\022"
  "\017\n\013UIR_Success\020\000\022\017\n\013UIR_UnKnown\020\001\022\020\n\014UIR"
  "_BadParam\020\002\022\024\n\020UIR_NotEnoughNum\020\003\022\027\n\023UIR"
  "_InventoryIsFull\020\004\022\017\n\013UIR_LowRank\020\005\022\016\n\nU"
  "IR_BadDir\020\006\022\021\n\rUIR_BadConfig\020\007\022\024\n\020UIR_Us"
  "eNumIsFull\020\010\022\017\n\013UIR_BadTime\020\t\022\017\n\013UIR_Bad"
  "Data\020\n\022\017\n\013UIR_BadType\020\013*\251\001\n\024RoleCollecti"
  "onOpType\022\024\n\020RCOT_PieceFusion\020\000\022\025\n\021RCOT_U"
  "pgradeLevel\020\001\022\024\n\020RCOT_UpgradeStar\020\002\022\031\n\025R"
  "COT_DrawHistoryAward\020\003\022\034\n\030RCOT_DrawZoneA"
  "ctiveAward\020\004\022\025\n\021RCOT_ResetEnhance\020\005*\333\001\n\030"
  "SetFightModeAckErrorCode\022\037\n\033SetFightMode"
  "AckErrorCode_Ok\020\000\022\"\n\036SetFightModeAckErro"
  "rCode_Other\020\001\022(\n$SetFightModeAckErrorCod"
  "e_RankInvalid\020\002\022(\n$SetFightModeAckErrorC"
  "ode_ModeInvalid\020\003\022&\n\"SetFightModeAckErro"
  "rCode_FightTime\020\004b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_game_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_defines_2eproto,
};
static ::_pbi::once_flag descriptor_table_game_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_game_2eproto = {
    false, false, 24385, descriptor_table_protodef_game_2eproto,
    "game.proto",
    &descriptor_table_game_2eproto_once, descriptor_table_game_2eproto_deps, 2, 401,
    schemas, file_default_instances, TableStruct_game_2eproto::offsets,
    file_level_metadata_game_2eproto, file_level_enum_descriptors_game_2eproto,
    file_level_service_descriptors_game_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_game_2eproto_getter() {
  return &descriptor_table_game_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_game_2eproto(&descriptor_table_game_2eproto);
namespace idlepb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UseItemResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[0];
}
bool UseItemResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RoleCollectionOpType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[1];
}
bool RoleCollectionOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetFightModeAckErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[2];
}
bool SetFightModeAckErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Ping::_Internal {
 public:
};

Ping::Ping(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.Ping)
}
Ping::Ping(const Ping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Ping* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.req_ticks_ = from._impl_.req_ticks_;
  // @@protoc_insertion_point(copy_constructor:idlepb.Ping)
}

inline void Ping::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:idlepb.Ping)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ping::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ping::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.Ping)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.req_ticks_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ping::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 req_ticks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ping::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.Ping)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_req_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.Ping)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_req_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ping::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Ping::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ping::GetClassData() const { return &_class_data_; }


void Ping::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Ping*>(&to_msg);
  auto& from = static_cast<const Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.Ping)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_ticks() != 0) {
    _this->_internal_set_req_ticks(from._internal_req_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.req_ticks_, other->_impl_.req_ticks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ping::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[0]);
}

// ===================================================================

class Pong::_Internal {
 public:
};

Pong::Pong(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.Pong)
}
Pong::Pong(const Pong& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Pong* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){}
    , decltype(_impl_.rsp_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.req_ticks_, &from._impl_.req_ticks_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rsp_ticks_) -
    reinterpret_cast<char*>(&_impl_.req_ticks_)) + sizeof(_impl_.rsp_ticks_));
  // @@protoc_insertion_point(copy_constructor:idlepb.Pong)
}

inline void Pong::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){int64_t{0}}
    , decltype(_impl_.rsp_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:idlepb.Pong)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Pong::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Pong::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.Pong)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.req_ticks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.rsp_ticks_) -
      reinterpret_cast<char*>(&_impl_.req_ticks_)) + sizeof(_impl_.rsp_ticks_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pong::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 req_ticks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 rsp_ticks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rsp_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Pong::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.Pong)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_req_ticks(), target);
  }

  // int64 rsp_ticks = 2;
  if (this->_internal_rsp_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_rsp_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.Pong)
  return target;
}

size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.Pong)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_req_ticks());
  }

  // int64 rsp_ticks = 2;
  if (this->_internal_rsp_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_rsp_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Pong::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Pong::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Pong::GetClassData() const { return &_class_data_; }


void Pong::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Pong*>(&to_msg);
  auto& from = static_cast<const Pong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.Pong)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_ticks() != 0) {
    _this->_internal_set_req_ticks(from._internal_req_ticks());
  }
  if (from._internal_rsp_ticks() != 0) {
    _this->_internal_set_rsp_ticks(from._internal_rsp_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Pong::CopyFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pong::IsInitialized() const {
  return true;
}

void Pong::InternalSwap(Pong* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pong, _impl_.rsp_ticks_)
      + sizeof(Pong::_impl_.rsp_ticks_)
      - PROTOBUF_FIELD_OFFSET(Pong, _impl_.req_ticks_)>(
          reinterpret_cast<char*>(&_impl_.req_ticks_),
          reinterpret_cast<char*>(&other->_impl_.req_ticks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pong::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[1]);
}

// ===================================================================

class DoGmCommand::_Internal {
 public:
};

DoGmCommand::DoGmCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoGmCommand)
}
DoGmCommand::DoGmCommand(const DoGmCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoGmCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.DoGmCommand)
}

inline void DoGmCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DoGmCommand::~DoGmCommand() {
  // @@protoc_insertion_point(destructor:idlepb.DoGmCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoGmCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.Destroy();
}

void DoGmCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoGmCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoGmCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoGmCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.DoGmCommand.command"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoGmCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoGmCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.DoGmCommand.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoGmCommand)
  return target;
}

size_t DoGmCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoGmCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoGmCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoGmCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoGmCommand::GetClassData() const { return &_class_data_; }


void DoGmCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoGmCommand*>(&to_msg);
  auto& from = static_cast<const DoGmCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoGmCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoGmCommand::CopyFrom(const DoGmCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoGmCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoGmCommand::IsInitialized() const {
  return true;
}

void DoGmCommand::InternalSwap(DoGmCommand* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DoGmCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[2]);
}

// ===================================================================

class ReportError::_Internal {
 public:
};

ReportError::ReportError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReportError)
}
ReportError::ReportError(const ReportError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.ReportError)
}

inline void ReportError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportError::~ReportError() {
  // @@protoc_insertion_point(destructor:idlepb.ReportError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void ReportError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportError::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReportError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.ReportError.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReportError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.ReportError.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReportError)
  return target;
}

size_t ReportError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReportError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportError::GetClassData() const { return &_class_data_; }


void ReportError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportError*>(&to_msg);
  auto& from = static_cast<const ReportError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReportError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportError::CopyFrom(const ReportError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportError::IsInitialized() const {
  return true;
}

void ReportError::InternalSwap(ReportError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[3]);
}

// ===================================================================

class LoginGameReq::_Internal {
 public:
};

LoginGameReq::LoginGameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LoginGameReq)
}
LoginGameReq::LoginGameReq(const LoginGameReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginGameReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_){}
    , decltype(_impl_.client_version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account().empty()) {
    _this->_impl_.account_.Set(from._internal_account(), 
      _this->GetArenaForAllocation());
  }
  _impl_.client_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_version().empty()) {
    _this->_impl_.client_version_.Set(from._internal_client_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.LoginGameReq)
}

inline void LoginGameReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_){}
    , decltype(_impl_.client_version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.client_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginGameReq::~LoginGameReq() {
  // @@protoc_insertion_point(destructor:idlepb.LoginGameReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginGameReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_.Destroy();
  _impl_.client_version_.Destroy();
}

void LoginGameReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LoginGameReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.ClearToEmpty();
  _impl_.client_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginGameReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.LoginGameReq.account"));
        } else
          goto handle_unusual;
        continue;
      // string client_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.LoginGameReq.client_version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginGameReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LoginGameReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.LoginGameReq.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string client_version = 2;
  if (!this->_internal_client_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_version().data(), static_cast<int>(this->_internal_client_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.LoginGameReq.client_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LoginGameReq)
  return target;
}

size_t LoginGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LoginGameReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string client_version = 2;
  if (!this->_internal_client_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginGameReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginGameReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginGameReq::GetClassData() const { return &_class_data_; }


void LoginGameReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginGameReq*>(&to_msg);
  auto& from = static_cast<const LoginGameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LoginGameReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  if (!from._internal_client_version().empty()) {
    _this->_internal_set_client_version(from._internal_client_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginGameReq::CopyFrom(const LoginGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LoginGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameReq::IsInitialized() const {
  return true;
}

void LoginGameReq::InternalSwap(LoginGameReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.account_, lhs_arena,
      &other->_impl_.account_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_version_, lhs_arena,
      &other->_impl_.client_version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginGameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[4]);
}

// ===================================================================

class LoginGameAck::_Internal {
 public:
  static const ::idlepb::RoleData& role_data(const LoginGameAck* msg);
  static const ::idlepb::OfflineAwardSummary& offline_award_summary(const LoginGameAck* msg);
  static const ::idlepb::SelfSeptInfo& sept_info(const LoginGameAck* msg);
};

const ::idlepb::RoleData&
LoginGameAck::_Internal::role_data(const LoginGameAck* msg) {
  return *msg->_impl_.role_data_;
}
const ::idlepb::OfflineAwardSummary&
LoginGameAck::_Internal::offline_award_summary(const LoginGameAck* msg) {
  return *msg->_impl_.offline_award_summary_;
}
const ::idlepb::SelfSeptInfo&
LoginGameAck::_Internal::sept_info(const LoginGameAck* msg) {
  return *msg->_impl_.sept_info_;
}
void LoginGameAck::clear_role_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.role_data_ != nullptr) {
    delete _impl_.role_data_;
  }
  _impl_.role_data_ = nullptr;
}
void LoginGameAck::clear_offline_award_summary() {
  if (GetArenaForAllocation() == nullptr && _impl_.offline_award_summary_ != nullptr) {
    delete _impl_.offline_award_summary_;
  }
  _impl_.offline_award_summary_ = nullptr;
}
void LoginGameAck::clear_sept_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.sept_info_ != nullptr) {
    delete _impl_.sept_info_;
  }
  _impl_.sept_info_ = nullptr;
}
LoginGameAck::LoginGameAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LoginGameAck)
}
LoginGameAck::LoginGameAck(const LoginGameAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginGameAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_data_){nullptr}
    , decltype(_impl_.offline_award_summary_){nullptr}
    , decltype(_impl_.sept_info_){nullptr}
    , decltype(_impl_.ret_){}
    , decltype(_impl_.is_relogin_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role_data()) {
    _this->_impl_.role_data_ = new ::idlepb::RoleData(*from._impl_.role_data_);
  }
  if (from._internal_has_offline_award_summary()) {
    _this->_impl_.offline_award_summary_ = new ::idlepb::OfflineAwardSummary(*from._impl_.offline_award_summary_);
  }
  if (from._internal_has_sept_info()) {
    _this->_impl_.sept_info_ = new ::idlepb::SelfSeptInfo(*from._impl_.sept_info_);
  }
  ::memcpy(&_impl_.ret_, &from._impl_.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_relogin_) -
    reinterpret_cast<char*>(&_impl_.ret_)) + sizeof(_impl_.is_relogin_));
  // @@protoc_insertion_point(copy_constructor:idlepb.LoginGameAck)
}

inline void LoginGameAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_data_){nullptr}
    , decltype(_impl_.offline_award_summary_){nullptr}
    , decltype(_impl_.sept_info_){nullptr}
    , decltype(_impl_.ret_){0}
    , decltype(_impl_.is_relogin_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoginGameAck::~LoginGameAck() {
  // @@protoc_insertion_point(destructor:idlepb.LoginGameAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginGameAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.role_data_;
  if (this != internal_default_instance()) delete _impl_.offline_award_summary_;
  if (this != internal_default_instance()) delete _impl_.sept_info_;
}

void LoginGameAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LoginGameAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.role_data_ != nullptr) {
    delete _impl_.role_data_;
  }
  _impl_.role_data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.offline_award_summary_ != nullptr) {
    delete _impl_.offline_award_summary_;
  }
  _impl_.offline_award_summary_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.sept_info_ != nullptr) {
    delete _impl_.sept_info_;
  }
  _impl_.sept_info_ = nullptr;
  ::memset(&_impl_.ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_relogin_) -
      reinterpret_cast<char*>(&_impl_.ret_)) + sizeof(_impl_.is_relogin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginGameAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.LoginGameRetCode ret = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ret(static_cast<::idlepb::LoginGameRetCode>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleData role_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_role_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_relogin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_relogin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.OfflineAwardSummary offline_award_summary = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_offline_award_summary(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.SelfSeptInfo sept_info = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sept_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginGameAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LoginGameAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.LoginGameRetCode ret = 1;
  if (this->_internal_ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ret(), target);
  }

  // .idlepb.RoleData role_data = 2;
  if (this->_internal_has_role_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::role_data(this),
        _Internal::role_data(this).GetCachedSize(), target, stream);
  }

  // bool is_relogin = 3;
  if (this->_internal_is_relogin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_relogin(), target);
  }

  // .idlepb.OfflineAwardSummary offline_award_summary = 4;
  if (this->_internal_has_offline_award_summary()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::offline_award_summary(this),
        _Internal::offline_award_summary(this).GetCachedSize(), target, stream);
  }

  // .idlepb.SelfSeptInfo sept_info = 5;
  if (this->_internal_has_sept_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sept_info(this),
        _Internal::sept_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LoginGameAck)
  return target;
}

size_t LoginGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LoginGameAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleData role_data = 2;
  if (this->_internal_has_role_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.role_data_);
  }

  // .idlepb.OfflineAwardSummary offline_award_summary = 4;
  if (this->_internal_has_offline_award_summary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.offline_award_summary_);
  }

  // .idlepb.SelfSeptInfo sept_info = 5;
  if (this->_internal_has_sept_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sept_info_);
  }

  // .idlepb.LoginGameRetCode ret = 1;
  if (this->_internal_ret() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_ret());
  }

  // bool is_relogin = 3;
  if (this->_internal_is_relogin() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginGameAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginGameAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginGameAck::GetClassData() const { return &_class_data_; }


void LoginGameAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginGameAck*>(&to_msg);
  auto& from = static_cast<const LoginGameAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LoginGameAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_role_data()) {
    _this->_internal_mutable_role_data()->::idlepb::RoleData::MergeFrom(
        from._internal_role_data());
  }
  if (from._internal_has_offline_award_summary()) {
    _this->_internal_mutable_offline_award_summary()->::idlepb::OfflineAwardSummary::MergeFrom(
        from._internal_offline_award_summary());
  }
  if (from._internal_has_sept_info()) {
    _this->_internal_mutable_sept_info()->::idlepb::SelfSeptInfo::MergeFrom(
        from._internal_sept_info());
  }
  if (from._internal_ret() != 0) {
    _this->_internal_set_ret(from._internal_ret());
  }
  if (from._internal_is_relogin() != 0) {
    _this->_internal_set_is_relogin(from._internal_is_relogin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginGameAck::CopyFrom(const LoginGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LoginGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameAck::IsInitialized() const {
  return true;
}

void LoginGameAck::InternalSwap(LoginGameAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginGameAck, _impl_.is_relogin_)
      + sizeof(LoginGameAck::_impl_.is_relogin_)
      - PROTOBUF_FIELD_OFFSET(LoginGameAck, _impl_.role_data_)>(
          reinterpret_cast<char*>(&_impl_.role_data_),
          reinterpret_cast<char*>(&other->_impl_.role_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginGameAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[5]);
}

// ===================================================================

class RefreshInventoryData::_Internal {
 public:
};

void RefreshInventoryData::clear_items() {
  _impl_.items_.Clear();
}
RefreshInventoryData::RefreshInventoryData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshInventoryData)
}
RefreshInventoryData::RefreshInventoryData(const RefreshInventoryData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshInventoryData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshInventoryData)
}

inline void RefreshInventoryData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshInventoryData::~RefreshInventoryData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshInventoryData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshInventoryData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void RefreshInventoryData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshInventoryData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshInventoryData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshInventoryData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.ItemData items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshInventoryData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshInventoryData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshInventoryData)
  return target;
}

size_t RefreshInventoryData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshInventoryData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshInventoryData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshInventoryData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshInventoryData::GetClassData() const { return &_class_data_; }


void RefreshInventoryData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshInventoryData*>(&to_msg);
  auto& from = static_cast<const RefreshInventoryData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshInventoryData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshInventoryData::CopyFrom(const RefreshInventoryData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshInventoryData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshInventoryData::IsInitialized() const {
  return true;
}

void RefreshInventoryData::InternalSwap(RefreshInventoryData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshInventoryData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[6]);
}

// ===================================================================

class SetCurrentCultivationDirectionReq::_Internal {
 public:
};

SetCurrentCultivationDirectionReq::SetCurrentCultivationDirectionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetCurrentCultivationDirectionReq)
}
SetCurrentCultivationDirectionReq::SetCurrentCultivationDirectionReq(const SetCurrentCultivationDirectionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetCurrentCultivationDirectionReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dir_ = from._impl_.dir_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetCurrentCultivationDirectionReq)
}

inline void SetCurrentCultivationDirectionReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetCurrentCultivationDirectionReq::~SetCurrentCultivationDirectionReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetCurrentCultivationDirectionReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetCurrentCultivationDirectionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetCurrentCultivationDirectionReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetCurrentCultivationDirectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetCurrentCultivationDirectionReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dir_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentCultivationDirectionReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CultivationDirection dir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::idlepb::CultivationDirection>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetCurrentCultivationDirectionReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetCurrentCultivationDirectionReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetCurrentCultivationDirectionReq)
  return target;
}

size_t SetCurrentCultivationDirectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetCurrentCultivationDirectionReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetCurrentCultivationDirectionReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetCurrentCultivationDirectionReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetCurrentCultivationDirectionReq::GetClassData() const { return &_class_data_; }


void SetCurrentCultivationDirectionReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetCurrentCultivationDirectionReq*>(&to_msg);
  auto& from = static_cast<const SetCurrentCultivationDirectionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetCurrentCultivationDirectionReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetCurrentCultivationDirectionReq::CopyFrom(const SetCurrentCultivationDirectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetCurrentCultivationDirectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentCultivationDirectionReq::IsInitialized() const {
  return true;
}

void SetCurrentCultivationDirectionReq::InternalSwap(SetCurrentCultivationDirectionReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dir_, other->_impl_.dir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentCultivationDirectionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[7]);
}

// ===================================================================

class SetCurrentCultivationDirectionAck::_Internal {
 public:
};

SetCurrentCultivationDirectionAck::SetCurrentCultivationDirectionAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetCurrentCultivationDirectionAck)
}
SetCurrentCultivationDirectionAck::SetCurrentCultivationDirectionAck(const SetCurrentCultivationDirectionAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetCurrentCultivationDirectionAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dir_ = from._impl_.dir_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetCurrentCultivationDirectionAck)
}

inline void SetCurrentCultivationDirectionAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetCurrentCultivationDirectionAck::~SetCurrentCultivationDirectionAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetCurrentCultivationDirectionAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetCurrentCultivationDirectionAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetCurrentCultivationDirectionAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetCurrentCultivationDirectionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetCurrentCultivationDirectionAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dir_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentCultivationDirectionAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CultivationDirection dir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::idlepb::CultivationDirection>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetCurrentCultivationDirectionAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetCurrentCultivationDirectionAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetCurrentCultivationDirectionAck)
  return target;
}

size_t SetCurrentCultivationDirectionAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetCurrentCultivationDirectionAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetCurrentCultivationDirectionAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetCurrentCultivationDirectionAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetCurrentCultivationDirectionAck::GetClassData() const { return &_class_data_; }


void SetCurrentCultivationDirectionAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetCurrentCultivationDirectionAck*>(&to_msg);
  auto& from = static_cast<const SetCurrentCultivationDirectionAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetCurrentCultivationDirectionAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetCurrentCultivationDirectionAck::CopyFrom(const SetCurrentCultivationDirectionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetCurrentCultivationDirectionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentCultivationDirectionAck::IsInitialized() const {
  return true;
}

void SetCurrentCultivationDirectionAck::InternalSwap(SetCurrentCultivationDirectionAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dir_, other->_impl_.dir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentCultivationDirectionAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[8]);
}

// ===================================================================

class RefreshCurrentCultivationDirection::_Internal {
 public:
};

RefreshCurrentCultivationDirection::RefreshCurrentCultivationDirection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshCurrentCultivationDirection)
}
RefreshCurrentCultivationDirection::RefreshCurrentCultivationDirection(const RefreshCurrentCultivationDirection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshCurrentCultivationDirection* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dir_ = from._impl_.dir_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshCurrentCultivationDirection)
}

inline void RefreshCurrentCultivationDirection::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshCurrentCultivationDirection::~RefreshCurrentCultivationDirection() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshCurrentCultivationDirection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshCurrentCultivationDirection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefreshCurrentCultivationDirection::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshCurrentCultivationDirection::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshCurrentCultivationDirection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dir_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshCurrentCultivationDirection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CultivationDirection dir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::idlepb::CultivationDirection>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshCurrentCultivationDirection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshCurrentCultivationDirection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshCurrentCultivationDirection)
  return target;
}

size_t RefreshCurrentCultivationDirection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshCurrentCultivationDirection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CultivationDirection dir = 1;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshCurrentCultivationDirection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshCurrentCultivationDirection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshCurrentCultivationDirection::GetClassData() const { return &_class_data_; }


void RefreshCurrentCultivationDirection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshCurrentCultivationDirection*>(&to_msg);
  auto& from = static_cast<const RefreshCurrentCultivationDirection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshCurrentCultivationDirection)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshCurrentCultivationDirection::CopyFrom(const RefreshCurrentCultivationDirection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshCurrentCultivationDirection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshCurrentCultivationDirection::IsInitialized() const {
  return true;
}

void RefreshCurrentCultivationDirection::InternalSwap(RefreshCurrentCultivationDirection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dir_, other->_impl_.dir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshCurrentCultivationDirection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[9]);
}

// ===================================================================

class RefreshCultivationRankData::_Internal {
 public:
  static const ::idlepb::RankData& rank_data(const RefreshCultivationRankData* msg);
};

const ::idlepb::RankData&
RefreshCultivationRankData::_Internal::rank_data(const RefreshCultivationRankData* msg) {
  return *msg->_impl_.rank_data_;
}
void RefreshCultivationRankData::clear_rank_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.rank_data_ != nullptr) {
    delete _impl_.rank_data_;
  }
  _impl_.rank_data_ = nullptr;
}
RefreshCultivationRankData::RefreshCultivationRankData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshCultivationRankData)
}
RefreshCultivationRankData::RefreshCultivationRankData(const RefreshCultivationRankData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshCultivationRankData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rank_data_){nullptr}
    , decltype(_impl_.last_exp_cycle_timestamp_){}
    , decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rank_data()) {
    _this->_impl_.rank_data_ = new ::idlepb::RankData(*from._impl_.rank_data_);
  }
  ::memcpy(&_impl_.last_exp_cycle_timestamp_, &from._impl_.last_exp_cycle_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dir_) -
    reinterpret_cast<char*>(&_impl_.last_exp_cycle_timestamp_)) + sizeof(_impl_.dir_));
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshCultivationRankData)
}

inline void RefreshCultivationRankData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rank_data_){nullptr}
    , decltype(_impl_.last_exp_cycle_timestamp_){int64_t{0}}
    , decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshCultivationRankData::~RefreshCultivationRankData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshCultivationRankData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshCultivationRankData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.rank_data_;
}

void RefreshCultivationRankData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshCultivationRankData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshCultivationRankData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.rank_data_ != nullptr) {
    delete _impl_.rank_data_;
  }
  _impl_.rank_data_ = nullptr;
  ::memset(&_impl_.last_exp_cycle_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dir_) -
      reinterpret_cast<char*>(&_impl_.last_exp_cycle_timestamp_)) + sizeof(_impl_.dir_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshCultivationRankData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RankData rank_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_rank_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.CultivationDirection dir = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::idlepb::CultivationDirection>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 last_exp_cycle_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.last_exp_cycle_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshCultivationRankData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshCultivationRankData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RankData rank_data = 1;
  if (this->_internal_has_rank_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::rank_data(this),
        _Internal::rank_data(this).GetCachedSize(), target, stream);
  }

  // .idlepb.CultivationDirection dir = 2;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_dir(), target);
  }

  // int64 last_exp_cycle_timestamp = 3;
  if (this->_internal_last_exp_cycle_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_last_exp_cycle_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshCultivationRankData)
  return target;
}

size_t RefreshCultivationRankData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshCultivationRankData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RankData rank_data = 1;
  if (this->_internal_has_rank_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rank_data_);
  }

  // int64 last_exp_cycle_timestamp = 3;
  if (this->_internal_last_exp_cycle_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_exp_cycle_timestamp());
  }

  // .idlepb.CultivationDirection dir = 2;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshCultivationRankData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshCultivationRankData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshCultivationRankData::GetClassData() const { return &_class_data_; }


void RefreshCultivationRankData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshCultivationRankData*>(&to_msg);
  auto& from = static_cast<const RefreshCultivationRankData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshCultivationRankData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_rank_data()) {
    _this->_internal_mutable_rank_data()->::idlepb::RankData::MergeFrom(
        from._internal_rank_data());
  }
  if (from._internal_last_exp_cycle_timestamp() != 0) {
    _this->_internal_set_last_exp_cycle_timestamp(from._internal_last_exp_cycle_timestamp());
  }
  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshCultivationRankData::CopyFrom(const RefreshCultivationRankData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshCultivationRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshCultivationRankData::IsInitialized() const {
  return true;
}

void RefreshCultivationRankData::InternalSwap(RefreshCultivationRankData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshCultivationRankData, _impl_.dir_)
      + sizeof(RefreshCultivationRankData::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(RefreshCultivationRankData, _impl_.rank_data_)>(
          reinterpret_cast<char*>(&_impl_.rank_data_),
          reinterpret_cast<char*>(&other->_impl_.rank_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshCultivationRankData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[10]);
}

// ===================================================================

class RefreshCultivationData::_Internal {
 public:
  static const ::idlepb::CultivationData& cultivation_data(const RefreshCultivationData* msg);
};

const ::idlepb::CultivationData&
RefreshCultivationData::_Internal::cultivation_data(const RefreshCultivationData* msg) {
  return *msg->_impl_.cultivation_data_;
}
void RefreshCultivationData::clear_cultivation_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.cultivation_data_ != nullptr) {
    delete _impl_.cultivation_data_;
  }
  _impl_.cultivation_data_ = nullptr;
}
RefreshCultivationData::RefreshCultivationData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshCultivationData)
}
RefreshCultivationData::RefreshCultivationData(const RefreshCultivationData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshCultivationData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cultivation_data_){nullptr}
    , decltype(_impl_.dir_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cultivation_data()) {
    _this->_impl_.cultivation_data_ = new ::idlepb::CultivationData(*from._impl_.cultivation_data_);
  }
  _this->_impl_.dir_ = from._impl_.dir_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshCultivationData)
}

inline void RefreshCultivationData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cultivation_data_){nullptr}
    , decltype(_impl_.dir_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshCultivationData::~RefreshCultivationData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshCultivationData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshCultivationData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.cultivation_data_;
}

void RefreshCultivationData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshCultivationData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshCultivationData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.cultivation_data_ != nullptr) {
    delete _impl_.cultivation_data_;
  }
  _impl_.cultivation_data_ = nullptr;
  _impl_.dir_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshCultivationData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CultivationData cultivation_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cultivation_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.CultivationDirection dir = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dir(static_cast<::idlepb::CultivationDirection>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshCultivationData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshCultivationData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CultivationData cultivation_data = 1;
  if (this->_internal_has_cultivation_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::cultivation_data(this),
        _Internal::cultivation_data(this).GetCachedSize(), target, stream);
  }

  // .idlepb.CultivationDirection dir = 2;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_dir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshCultivationData)
  return target;
}

size_t RefreshCultivationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshCultivationData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CultivationData cultivation_data = 1;
  if (this->_internal_has_cultivation_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cultivation_data_);
  }

  // .idlepb.CultivationDirection dir = 2;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshCultivationData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshCultivationData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshCultivationData::GetClassData() const { return &_class_data_; }


void RefreshCultivationData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshCultivationData*>(&to_msg);
  auto& from = static_cast<const RefreshCultivationData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshCultivationData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cultivation_data()) {
    _this->_internal_mutable_cultivation_data()->::idlepb::CultivationData::MergeFrom(
        from._internal_cultivation_data());
  }
  if (from._internal_dir() != 0) {
    _this->_internal_set_dir(from._internal_dir());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshCultivationData::CopyFrom(const RefreshCultivationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshCultivationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshCultivationData::IsInitialized() const {
  return true;
}

void RefreshCultivationData::InternalSwap(RefreshCultivationData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshCultivationData, _impl_.dir_)
      + sizeof(RefreshCultivationData::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(RefreshCultivationData, _impl_.cultivation_data_)>(
          reinterpret_cast<char*>(&_impl_.cultivation_data_),
          reinterpret_cast<char*>(&other->_impl_.cultivation_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshCultivationData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[11]);
}

// ===================================================================

class RefreshCurrencyData::_Internal {
 public:
  static const ::idlepb::CurrencyData& data(const RefreshCurrencyData* msg);
};

const ::idlepb::CurrencyData&
RefreshCurrencyData::_Internal::data(const RefreshCurrencyData* msg) {
  return *msg->_impl_.data_;
}
void RefreshCurrencyData::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshCurrencyData::RefreshCurrencyData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshCurrencyData)
}
RefreshCurrencyData::RefreshCurrencyData(const RefreshCurrencyData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshCurrencyData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::CurrencyData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshCurrencyData)
}

inline void RefreshCurrencyData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshCurrencyData::~RefreshCurrencyData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshCurrencyData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshCurrencyData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshCurrencyData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshCurrencyData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshCurrencyData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshCurrencyData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CurrencyData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshCurrencyData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshCurrencyData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CurrencyData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshCurrencyData)
  return target;
}

size_t RefreshCurrencyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshCurrencyData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CurrencyData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshCurrencyData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshCurrencyData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshCurrencyData::GetClassData() const { return &_class_data_; }


void RefreshCurrencyData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshCurrencyData*>(&to_msg);
  auto& from = static_cast<const RefreshCurrencyData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshCurrencyData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::CurrencyData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshCurrencyData::CopyFrom(const RefreshCurrencyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshCurrencyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshCurrencyData::IsInitialized() const {
  return true;
}

void RefreshCurrencyData::InternalSwap(RefreshCurrencyData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshCurrencyData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[12]);
}

// ===================================================================

class RefreshDailyCounterData::_Internal {
 public:
  static const ::idlepb::RoleDailyCounter& daily_counter(const RefreshDailyCounterData* msg);
  static const ::idlepb::RoleWeeklyCounter& weekly_counter(const RefreshDailyCounterData* msg);
};

const ::idlepb::RoleDailyCounter&
RefreshDailyCounterData::_Internal::daily_counter(const RefreshDailyCounterData* msg) {
  return *msg->_impl_.daily_counter_;
}
const ::idlepb::RoleWeeklyCounter&
RefreshDailyCounterData::_Internal::weekly_counter(const RefreshDailyCounterData* msg) {
  return *msg->_impl_.weekly_counter_;
}
void RefreshDailyCounterData::clear_daily_counter() {
  if (GetArenaForAllocation() == nullptr && _impl_.daily_counter_ != nullptr) {
    delete _impl_.daily_counter_;
  }
  _impl_.daily_counter_ = nullptr;
}
void RefreshDailyCounterData::clear_weekly_counter() {
  if (GetArenaForAllocation() == nullptr && _impl_.weekly_counter_ != nullptr) {
    delete _impl_.weekly_counter_;
  }
  _impl_.weekly_counter_ = nullptr;
}
RefreshDailyCounterData::RefreshDailyCounterData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshDailyCounterData)
}
RefreshDailyCounterData::RefreshDailyCounterData(const RefreshDailyCounterData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshDailyCounterData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.daily_counter_){nullptr}
    , decltype(_impl_.weekly_counter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_daily_counter()) {
    _this->_impl_.daily_counter_ = new ::idlepb::RoleDailyCounter(*from._impl_.daily_counter_);
  }
  if (from._internal_has_weekly_counter()) {
    _this->_impl_.weekly_counter_ = new ::idlepb::RoleWeeklyCounter(*from._impl_.weekly_counter_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshDailyCounterData)
}

inline void RefreshDailyCounterData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.daily_counter_){nullptr}
    , decltype(_impl_.weekly_counter_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshDailyCounterData::~RefreshDailyCounterData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshDailyCounterData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshDailyCounterData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.daily_counter_;
  if (this != internal_default_instance()) delete _impl_.weekly_counter_;
}

void RefreshDailyCounterData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshDailyCounterData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshDailyCounterData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.daily_counter_ != nullptr) {
    delete _impl_.daily_counter_;
  }
  _impl_.daily_counter_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.weekly_counter_ != nullptr) {
    delete _impl_.weekly_counter_;
  }
  _impl_.weekly_counter_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshDailyCounterData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleDailyCounter daily_counter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_daily_counter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleWeeklyCounter weekly_counter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_weekly_counter(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshDailyCounterData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshDailyCounterData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleDailyCounter daily_counter = 1;
  if (this->_internal_has_daily_counter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::daily_counter(this),
        _Internal::daily_counter(this).GetCachedSize(), target, stream);
  }

  // .idlepb.RoleWeeklyCounter weekly_counter = 2;
  if (this->_internal_has_weekly_counter()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::weekly_counter(this),
        _Internal::weekly_counter(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshDailyCounterData)
  return target;
}

size_t RefreshDailyCounterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshDailyCounterData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleDailyCounter daily_counter = 1;
  if (this->_internal_has_daily_counter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.daily_counter_);
  }

  // .idlepb.RoleWeeklyCounter weekly_counter = 2;
  if (this->_internal_has_weekly_counter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.weekly_counter_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshDailyCounterData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshDailyCounterData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshDailyCounterData::GetClassData() const { return &_class_data_; }


void RefreshDailyCounterData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshDailyCounterData*>(&to_msg);
  auto& from = static_cast<const RefreshDailyCounterData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshDailyCounterData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_daily_counter()) {
    _this->_internal_mutable_daily_counter()->::idlepb::RoleDailyCounter::MergeFrom(
        from._internal_daily_counter());
  }
  if (from._internal_has_weekly_counter()) {
    _this->_internal_mutable_weekly_counter()->::idlepb::RoleWeeklyCounter::MergeFrom(
        from._internal_weekly_counter());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshDailyCounterData::CopyFrom(const RefreshDailyCounterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshDailyCounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshDailyCounterData::IsInitialized() const {
  return true;
}

void RefreshDailyCounterData::InternalSwap(RefreshDailyCounterData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshDailyCounterData, _impl_.weekly_counter_)
      + sizeof(RefreshDailyCounterData::_impl_.weekly_counter_)
      - PROTOBUF_FIELD_OFFSET(RefreshDailyCounterData, _impl_.daily_counter_)>(
          reinterpret_cast<char*>(&_impl_.daily_counter_),
          reinterpret_cast<char*>(&other->_impl_.daily_counter_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshDailyCounterData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[13]);
}

// ===================================================================

class RefreshLastUnlockArenaId::_Internal {
 public:
};

RefreshLastUnlockArenaId::RefreshLastUnlockArenaId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshLastUnlockArenaId)
}
RefreshLastUnlockArenaId::RefreshLastUnlockArenaId(const RefreshLastUnlockArenaId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshLastUnlockArenaId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.last_unlock_arena_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.last_unlock_arena_id_ = from._impl_.last_unlock_arena_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshLastUnlockArenaId)
}

inline void RefreshLastUnlockArenaId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.last_unlock_arena_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshLastUnlockArenaId::~RefreshLastUnlockArenaId() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshLastUnlockArenaId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshLastUnlockArenaId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefreshLastUnlockArenaId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshLastUnlockArenaId::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshLastUnlockArenaId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_unlock_arena_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshLastUnlockArenaId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 last_unlock_arena_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.last_unlock_arena_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshLastUnlockArenaId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshLastUnlockArenaId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 last_unlock_arena_id = 1;
  if (this->_internal_last_unlock_arena_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_last_unlock_arena_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshLastUnlockArenaId)
  return target;
}

size_t RefreshLastUnlockArenaId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshLastUnlockArenaId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 last_unlock_arena_id = 1;
  if (this->_internal_last_unlock_arena_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_last_unlock_arena_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshLastUnlockArenaId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshLastUnlockArenaId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshLastUnlockArenaId::GetClassData() const { return &_class_data_; }


void RefreshLastUnlockArenaId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshLastUnlockArenaId*>(&to_msg);
  auto& from = static_cast<const RefreshLastUnlockArenaId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshLastUnlockArenaId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_last_unlock_arena_id() != 0) {
    _this->_internal_set_last_unlock_arena_id(from._internal_last_unlock_arena_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshLastUnlockArenaId::CopyFrom(const RefreshLastUnlockArenaId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshLastUnlockArenaId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshLastUnlockArenaId::IsInitialized() const {
  return true;
}

void RefreshLastUnlockArenaId::InternalSwap(RefreshLastUnlockArenaId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.last_unlock_arena_id_, other->_impl_.last_unlock_arena_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshLastUnlockArenaId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[14]);
}

// ===================================================================

class RefreshUnlockedEquipmentSlots::_Internal {
 public:
};

RefreshUnlockedEquipmentSlots::RefreshUnlockedEquipmentSlots(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshUnlockedEquipmentSlots)
}
RefreshUnlockedEquipmentSlots::RefreshUnlockedEquipmentSlots(const RefreshUnlockedEquipmentSlots& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshUnlockedEquipmentSlots* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.slots_){from._impl_.slots_}
    , /*decltype(_impl_._slots_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshUnlockedEquipmentSlots)
}

inline void RefreshUnlockedEquipmentSlots::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.slots_){arena}
    , /*decltype(_impl_._slots_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshUnlockedEquipmentSlots::~RefreshUnlockedEquipmentSlots() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshUnlockedEquipmentSlots)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshUnlockedEquipmentSlots::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.slots_.~RepeatedField();
}

void RefreshUnlockedEquipmentSlots::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshUnlockedEquipmentSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshUnlockedEquipmentSlots)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshUnlockedEquipmentSlots::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 slots = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_slots(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_slots(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshUnlockedEquipmentSlots::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshUnlockedEquipmentSlots)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 slots = 1;
  {
    int byte_size = _impl_._slots_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_slots(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshUnlockedEquipmentSlots)
  return target;
}

size_t RefreshUnlockedEquipmentSlots::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshUnlockedEquipmentSlots)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 slots = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.slots_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._slots_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshUnlockedEquipmentSlots::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshUnlockedEquipmentSlots::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshUnlockedEquipmentSlots::GetClassData() const { return &_class_data_; }


void RefreshUnlockedEquipmentSlots::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshUnlockedEquipmentSlots*>(&to_msg);
  auto& from = static_cast<const RefreshUnlockedEquipmentSlots&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshUnlockedEquipmentSlots)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.slots_.MergeFrom(from._impl_.slots_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshUnlockedEquipmentSlots::CopyFrom(const RefreshUnlockedEquipmentSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshUnlockedEquipmentSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshUnlockedEquipmentSlots::IsInitialized() const {
  return true;
}

void RefreshUnlockedEquipmentSlots::InternalSwap(RefreshUnlockedEquipmentSlots* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.slots_.InternalSwap(&other->_impl_.slots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshUnlockedEquipmentSlots::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[15]);
}

// ===================================================================

class UnlockEquipmentSlotReq::_Internal {
 public:
};

UnlockEquipmentSlotReq::UnlockEquipmentSlotReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockEquipmentSlotReq)
}
UnlockEquipmentSlotReq::UnlockEquipmentSlotReq(const UnlockEquipmentSlotReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockEquipmentSlotReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockEquipmentSlotReq)
}

inline void UnlockEquipmentSlotReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockEquipmentSlotReq::~UnlockEquipmentSlotReq() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockEquipmentSlotReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockEquipmentSlotReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockEquipmentSlotReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockEquipmentSlotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockEquipmentSlotReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockEquipmentSlotReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockEquipmentSlotReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockEquipmentSlotReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockEquipmentSlotReq)
  return target;
}

size_t UnlockEquipmentSlotReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockEquipmentSlotReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockEquipmentSlotReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockEquipmentSlotReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockEquipmentSlotReq::GetClassData() const { return &_class_data_; }


void UnlockEquipmentSlotReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockEquipmentSlotReq*>(&to_msg);
  auto& from = static_cast<const UnlockEquipmentSlotReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockEquipmentSlotReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockEquipmentSlotReq::CopyFrom(const UnlockEquipmentSlotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockEquipmentSlotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockEquipmentSlotReq::IsInitialized() const {
  return true;
}

void UnlockEquipmentSlotReq::InternalSwap(UnlockEquipmentSlotReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockEquipmentSlotReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[16]);
}

// ===================================================================

class UnlockEquipmentSlotAck::_Internal {
 public:
};

UnlockEquipmentSlotAck::UnlockEquipmentSlotAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockEquipmentSlotAck)
}
UnlockEquipmentSlotAck::UnlockEquipmentSlotAck(const UnlockEquipmentSlotAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockEquipmentSlotAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockEquipmentSlotAck)
}

inline void UnlockEquipmentSlotAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockEquipmentSlotAck::~UnlockEquipmentSlotAck() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockEquipmentSlotAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockEquipmentSlotAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockEquipmentSlotAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockEquipmentSlotAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockEquipmentSlotAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockEquipmentSlotAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockEquipmentSlotAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockEquipmentSlotAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockEquipmentSlotAck)
  return target;
}

size_t UnlockEquipmentSlotAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockEquipmentSlotAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockEquipmentSlotAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockEquipmentSlotAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockEquipmentSlotAck::GetClassData() const { return &_class_data_; }


void UnlockEquipmentSlotAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockEquipmentSlotAck*>(&to_msg);
  auto& from = static_cast<const UnlockEquipmentSlotAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockEquipmentSlotAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockEquipmentSlotAck::CopyFrom(const UnlockEquipmentSlotAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockEquipmentSlotAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockEquipmentSlotAck::IsInitialized() const {
  return true;
}

void UnlockEquipmentSlotAck::InternalSwap(UnlockEquipmentSlotAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockEquipmentSlotAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[17]);
}

// ===================================================================

class ThunderTestRoundData::_Internal {
 public:
};

ThunderTestRoundData::ThunderTestRoundData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ThunderTestRoundData)
}
ThunderTestRoundData::ThunderTestRoundData(const ThunderTestRoundData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ThunderTestRoundData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.round_){}
    , decltype(_impl_.damage_){}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.mp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.round_, &from._impl_.round_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mp_) -
    reinterpret_cast<char*>(&_impl_.round_)) + sizeof(_impl_.mp_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ThunderTestRoundData)
}

inline void ThunderTestRoundData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.round_){0}
    , decltype(_impl_.damage_){0}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.mp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ThunderTestRoundData::~ThunderTestRoundData() {
  // @@protoc_insertion_point(destructor:idlepb.ThunderTestRoundData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ThunderTestRoundData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ThunderTestRoundData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ThunderTestRoundData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ThunderTestRoundData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.round_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.mp_) -
      reinterpret_cast<char*>(&_impl_.round_)) + sizeof(_impl_.mp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ThunderTestRoundData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 round = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.round_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float damage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.damage_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float hp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float mp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.mp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ThunderTestRoundData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ThunderTestRoundData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 round = 1;
  if (this->_internal_round() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_round(), target);
  }

  // float damage = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_damage = this->_internal_damage();
  uint32_t raw_damage;
  memcpy(&raw_damage, &tmp_damage, sizeof(tmp_damage));
  if (raw_damage != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_damage(), target);
  }

  // float hp = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = this->_internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_hp(), target);
  }

  // float mp = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = this->_internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_mp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ThunderTestRoundData)
  return target;
}

size_t ThunderTestRoundData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ThunderTestRoundData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 round = 1;
  if (this->_internal_round() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_round());
  }

  // float damage = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_damage = this->_internal_damage();
  uint32_t raw_damage;
  memcpy(&raw_damage, &tmp_damage, sizeof(tmp_damage));
  if (raw_damage != 0) {
    total_size += 1 + 4;
  }

  // float hp = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = this->_internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    total_size += 1 + 4;
  }

  // float mp = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = this->_internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThunderTestRoundData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ThunderTestRoundData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThunderTestRoundData::GetClassData() const { return &_class_data_; }


void ThunderTestRoundData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ThunderTestRoundData*>(&to_msg);
  auto& from = static_cast<const ThunderTestRoundData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ThunderTestRoundData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_round() != 0) {
    _this->_internal_set_round(from._internal_round());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_damage = from._internal_damage();
  uint32_t raw_damage;
  memcpy(&raw_damage, &tmp_damage, sizeof(tmp_damage));
  if (raw_damage != 0) {
    _this->_internal_set_damage(from._internal_damage());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = from._internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = from._internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    _this->_internal_set_mp(from._internal_mp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ThunderTestRoundData::CopyFrom(const ThunderTestRoundData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ThunderTestRoundData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThunderTestRoundData::IsInitialized() const {
  return true;
}

void ThunderTestRoundData::InternalSwap(ThunderTestRoundData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ThunderTestRoundData, _impl_.mp_)
      + sizeof(ThunderTestRoundData::_impl_.mp_)
      - PROTOBUF_FIELD_OFFSET(ThunderTestRoundData, _impl_.round_)>(
          reinterpret_cast<char*>(&_impl_.round_),
          reinterpret_cast<char*>(&other->_impl_.round_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ThunderTestRoundData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[18]);
}

// ===================================================================

class ThunderTestData::_Internal {
 public:
};

ThunderTestData::ThunderTestData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ThunderTestData)
}
ThunderTestData::ThunderTestData(const ThunderTestData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ThunderTestData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rounds_){from._impl_.rounds_}
    , decltype(_impl_.hp_){}
    , decltype(_impl_.mp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.hp_, &from._impl_.hp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mp_) -
    reinterpret_cast<char*>(&_impl_.hp_)) + sizeof(_impl_.mp_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ThunderTestData)
}

inline void ThunderTestData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rounds_){arena}
    , decltype(_impl_.hp_){0}
    , decltype(_impl_.mp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ThunderTestData::~ThunderTestData() {
  // @@protoc_insertion_point(destructor:idlepb.ThunderTestData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ThunderTestData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rounds_.~RepeatedPtrField();
}

void ThunderTestData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ThunderTestData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ThunderTestData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rounds_.Clear();
  ::memset(&_impl_.hp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.mp_) -
      reinterpret_cast<char*>(&_impl_.hp_)) + sizeof(_impl_.mp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ThunderTestData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float hp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float mp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.mp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ThunderTestRoundData rounds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rounds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ThunderTestData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ThunderTestData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float hp = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = this->_internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_hp(), target);
  }

  // float mp = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = this->_internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_mp(), target);
  }

  // repeated .idlepb.ThunderTestRoundData rounds = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rounds_size()); i < n; i++) {
    const auto& repfield = this->_internal_rounds(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ThunderTestData)
  return target;
}

size_t ThunderTestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ThunderTestData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ThunderTestRoundData rounds = 3;
  total_size += 1UL * this->_internal_rounds_size();
  for (const auto& msg : this->_impl_.rounds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // float hp = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = this->_internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    total_size += 1 + 4;
  }

  // float mp = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = this->_internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThunderTestData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ThunderTestData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThunderTestData::GetClassData() const { return &_class_data_; }


void ThunderTestData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ThunderTestData*>(&to_msg);
  auto& from = static_cast<const ThunderTestData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ThunderTestData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rounds_.MergeFrom(from._impl_.rounds_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_hp = from._internal_hp();
  uint32_t raw_hp;
  memcpy(&raw_hp, &tmp_hp, sizeof(tmp_hp));
  if (raw_hp != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mp = from._internal_mp();
  uint32_t raw_mp;
  memcpy(&raw_mp, &tmp_mp, sizeof(tmp_mp));
  if (raw_mp != 0) {
    _this->_internal_set_mp(from._internal_mp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ThunderTestData::CopyFrom(const ThunderTestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ThunderTestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThunderTestData::IsInitialized() const {
  return true;
}

void ThunderTestData::InternalSwap(ThunderTestData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rounds_.InternalSwap(&other->_impl_.rounds_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ThunderTestData, _impl_.mp_)
      + sizeof(ThunderTestData::_impl_.mp_)
      - PROTOBUF_FIELD_OFFSET(ThunderTestData, _impl_.hp_)>(
          reinterpret_cast<char*>(&_impl_.hp_),
          reinterpret_cast<char*>(&other->_impl_.hp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ThunderTestData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[19]);
}

// ===================================================================

class DoBreakthroughReq::_Internal {
 public:
};

DoBreakthroughReq::DoBreakthroughReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoBreakthroughReq)
}
DoBreakthroughReq::DoBreakthroughReq(const DoBreakthroughReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoBreakthroughReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DoBreakthroughReq)
}

inline void DoBreakthroughReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoBreakthroughReq::~DoBreakthroughReq() {
  // @@protoc_insertion_point(destructor:idlepb.DoBreakthroughReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoBreakthroughReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DoBreakthroughReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoBreakthroughReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoBreakthroughReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoBreakthroughReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoBreakthroughReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoBreakthroughReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoBreakthroughReq)
  return target;
}

size_t DoBreakthroughReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoBreakthroughReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoBreakthroughReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoBreakthroughReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoBreakthroughReq::GetClassData() const { return &_class_data_; }


void DoBreakthroughReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoBreakthroughReq*>(&to_msg);
  auto& from = static_cast<const DoBreakthroughReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoBreakthroughReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoBreakthroughReq::CopyFrom(const DoBreakthroughReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoBreakthroughReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoBreakthroughReq::IsInitialized() const {
  return true;
}

void DoBreakthroughReq::InternalSwap(DoBreakthroughReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoBreakthroughReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[20]);
}

// ===================================================================

class DoBreakthroughAck::_Internal {
 public:
  static const ::idlepb::ThunderTestData& thunder_test_data(const DoBreakthroughAck* msg);
};

const ::idlepb::ThunderTestData&
DoBreakthroughAck::_Internal::thunder_test_data(const DoBreakthroughAck* msg) {
  return *msg->_impl_.thunder_test_data_;
}
DoBreakthroughAck::DoBreakthroughAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoBreakthroughAck)
}
DoBreakthroughAck::DoBreakthroughAck(const DoBreakthroughAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoBreakthroughAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.thunder_test_data_){nullptr}
    , decltype(_impl_.old_type_){}
    , decltype(_impl_.success_){}
    , decltype(_impl_.is_bottleneck_){}
    , decltype(_impl_.new_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_thunder_test_data()) {
    _this->_impl_.thunder_test_data_ = new ::idlepb::ThunderTestData(*from._impl_.thunder_test_data_);
  }
  ::memcpy(&_impl_.old_type_, &from._impl_.old_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.new_type_) -
    reinterpret_cast<char*>(&_impl_.old_type_)) + sizeof(_impl_.new_type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.DoBreakthroughAck)
}

inline void DoBreakthroughAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.thunder_test_data_){nullptr}
    , decltype(_impl_.old_type_){0}
    , decltype(_impl_.success_){false}
    , decltype(_impl_.is_bottleneck_){false}
    , decltype(_impl_.new_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoBreakthroughAck::~DoBreakthroughAck() {
  // @@protoc_insertion_point(destructor:idlepb.DoBreakthroughAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoBreakthroughAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.thunder_test_data_;
}

void DoBreakthroughAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoBreakthroughAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoBreakthroughAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.thunder_test_data_ != nullptr) {
    delete _impl_.thunder_test_data_;
  }
  _impl_.thunder_test_data_ = nullptr;
  ::memset(&_impl_.old_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.new_type_) -
      reinterpret_cast<char*>(&_impl_.old_type_)) + sizeof(_impl_.new_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoBreakthroughAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.BreakthroughType old_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_old_type(static_cast<::idlepb::BreakthroughType>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.BreakthroughType new_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_new_type(static_cast<::idlepb::BreakthroughType>(val));
        } else
          goto handle_unusual;
        continue;
      // bool is_bottleneck = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_bottleneck_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ThunderTestData thunder_test_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_thunder_test_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoBreakthroughAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoBreakthroughAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .idlepb.BreakthroughType old_type = 2;
  if (this->_internal_old_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_old_type(), target);
  }

  // .idlepb.BreakthroughType new_type = 3;
  if (this->_internal_new_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_new_type(), target);
  }

  // bool is_bottleneck = 4;
  if (this->_internal_is_bottleneck() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_bottleneck(), target);
  }

  // .idlepb.ThunderTestData thunder_test_data = 5;
  if (this->_internal_has_thunder_test_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::thunder_test_data(this),
        _Internal::thunder_test_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoBreakthroughAck)
  return target;
}

size_t DoBreakthroughAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoBreakthroughAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ThunderTestData thunder_test_data = 5;
  if (this->_internal_has_thunder_test_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.thunder_test_data_);
  }

  // .idlepb.BreakthroughType old_type = 2;
  if (this->_internal_old_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_old_type());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  // bool is_bottleneck = 4;
  if (this->_internal_is_bottleneck() != 0) {
    total_size += 1 + 1;
  }

  // .idlepb.BreakthroughType new_type = 3;
  if (this->_internal_new_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_new_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoBreakthroughAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoBreakthroughAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoBreakthroughAck::GetClassData() const { return &_class_data_; }


void DoBreakthroughAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoBreakthroughAck*>(&to_msg);
  auto& from = static_cast<const DoBreakthroughAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoBreakthroughAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_thunder_test_data()) {
    _this->_internal_mutable_thunder_test_data()->::idlepb::ThunderTestData::MergeFrom(
        from._internal_thunder_test_data());
  }
  if (from._internal_old_type() != 0) {
    _this->_internal_set_old_type(from._internal_old_type());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_is_bottleneck() != 0) {
    _this->_internal_set_is_bottleneck(from._internal_is_bottleneck());
  }
  if (from._internal_new_type() != 0) {
    _this->_internal_set_new_type(from._internal_new_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoBreakthroughAck::CopyFrom(const DoBreakthroughAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoBreakthroughAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoBreakthroughAck::IsInitialized() const {
  return true;
}

void DoBreakthroughAck::InternalSwap(DoBreakthroughAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DoBreakthroughAck, _impl_.new_type_)
      + sizeof(DoBreakthroughAck::_impl_.new_type_)
      - PROTOBUF_FIELD_OFFSET(DoBreakthroughAck, _impl_.thunder_test_data_)>(
          reinterpret_cast<char*>(&_impl_.thunder_test_data_),
          reinterpret_cast<char*>(&other->_impl_.thunder_test_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DoBreakthroughAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[21]);
}

// ===================================================================

class RefreshItems::_Internal {
 public:
};

void RefreshItems::clear_items() {
  _impl_.items_.Clear();
}
void RefreshItems::clear_others() {
  _impl_.others_.Clear();
}
void RefreshItems::clear_quiet_items() {
  _impl_.quiet_items_.Clear();
}
RefreshItems::RefreshItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshItems)
}
RefreshItems::RefreshItems(const RefreshItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshItems* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.junks_){from._impl_.junks_}
    , /*decltype(_impl_._junks_cached_byte_size_)*/{0}
    , decltype(_impl_.others_){from._impl_.others_}
    , decltype(_impl_.quiet_items_){from._impl_.quiet_items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshItems)
}

inline void RefreshItems::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.junks_){arena}
    , /*decltype(_impl_._junks_cached_byte_size_)*/{0}
    , decltype(_impl_.others_){arena}
    , decltype(_impl_.quiet_items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshItems::~RefreshItems() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshItems)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.junks_.~RepeatedField();
  _impl_.others_.~RepeatedPtrField();
  _impl_.quiet_items_.~RepeatedPtrField();
}

void RefreshItems::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshItems::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshItems)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.junks_.Clear();
  _impl_.others_.Clear();
  _impl_.quiet_items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshItems::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.ItemData items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int64 junks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_junks(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_junks(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData others = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_others(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ItemData quiet_items = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_quiet_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshItems::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshItems)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int64 junks = 2;
  {
    int byte_size = _impl_._junks_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_junks(), byte_size, target);
    }
  }

  // repeated .idlepb.SimpleItemData others = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_others_size()); i < n; i++) {
    const auto& repfield = this->_internal_others(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.ItemData quiet_items = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_quiet_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_quiet_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshItems)
  return target;
}

size_t RefreshItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshItems)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int64 junks = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.junks_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._junks_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .idlepb.SimpleItemData others = 3;
  total_size += 1UL * this->_internal_others_size();
  for (const auto& msg : this->_impl_.others_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.ItemData quiet_items = 4;
  total_size += 1UL * this->_internal_quiet_items_size();
  for (const auto& msg : this->_impl_.quiet_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshItems::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshItems::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshItems::GetClassData() const { return &_class_data_; }


void RefreshItems::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshItems*>(&to_msg);
  auto& from = static_cast<const RefreshItems&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshItems)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_impl_.junks_.MergeFrom(from._impl_.junks_);
  _this->_impl_.others_.MergeFrom(from._impl_.others_);
  _this->_impl_.quiet_items_.MergeFrom(from._impl_.quiet_items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshItems::CopyFrom(const RefreshItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshItems::IsInitialized() const {
  return true;
}

void RefreshItems::InternalSwap(RefreshItems* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.junks_.InternalSwap(&other->_impl_.junks_);
  _impl_.others_.InternalSwap(&other->_impl_.others_);
  _impl_.quiet_items_.InternalSwap(&other->_impl_.quiet_items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshItems::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[22]);
}

// ===================================================================

class RefreshTemporaryPackageItems::_Internal {
 public:
};

void RefreshTemporaryPackageItems::clear_items() {
  _impl_.items_.Clear();
}
RefreshTemporaryPackageItems::RefreshTemporaryPackageItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshTemporaryPackageItems)
}
RefreshTemporaryPackageItems::RefreshTemporaryPackageItems(const RefreshTemporaryPackageItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshTemporaryPackageItems* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.last_extract_time_){}
    , decltype(_impl_.total_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.last_extract_time_, &from._impl_.last_extract_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.total_num_) -
    reinterpret_cast<char*>(&_impl_.last_extract_time_)) + sizeof(_impl_.total_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshTemporaryPackageItems)
}

inline void RefreshTemporaryPackageItems::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.last_extract_time_){int64_t{0}}
    , decltype(_impl_.total_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshTemporaryPackageItems::~RefreshTemporaryPackageItems() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshTemporaryPackageItems)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshTemporaryPackageItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void RefreshTemporaryPackageItems::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshTemporaryPackageItems::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshTemporaryPackageItems)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  ::memset(&_impl_.last_extract_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.total_num_) -
      reinterpret_cast<char*>(&_impl_.last_extract_time_)) + sizeof(_impl_.total_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTemporaryPackageItems::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.TemporaryPackageItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 total_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.total_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 last_extract_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.last_extract_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshTemporaryPackageItems::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshTemporaryPackageItems)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.TemporaryPackageItem items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 total_num = 2;
  if (this->_internal_total_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_num(), target);
  }

  // int64 last_extract_time = 3;
  if (this->_internal_last_extract_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_last_extract_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshTemporaryPackageItems)
  return target;
}

size_t RefreshTemporaryPackageItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshTemporaryPackageItems)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.TemporaryPackageItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 last_extract_time = 3;
  if (this->_internal_last_extract_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_extract_time());
  }

  // int32 total_num = 2;
  if (this->_internal_total_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshTemporaryPackageItems::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshTemporaryPackageItems::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshTemporaryPackageItems::GetClassData() const { return &_class_data_; }


void RefreshTemporaryPackageItems::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshTemporaryPackageItems*>(&to_msg);
  auto& from = static_cast<const RefreshTemporaryPackageItems&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshTemporaryPackageItems)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_last_extract_time() != 0) {
    _this->_internal_set_last_extract_time(from._internal_last_extract_time());
  }
  if (from._internal_total_num() != 0) {
    _this->_internal_set_total_num(from._internal_total_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshTemporaryPackageItems::CopyFrom(const RefreshTemporaryPackageItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshTemporaryPackageItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTemporaryPackageItems::IsInitialized() const {
  return true;
}

void RefreshTemporaryPackageItems::InternalSwap(RefreshTemporaryPackageItems* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshTemporaryPackageItems, _impl_.total_num_)
      + sizeof(RefreshTemporaryPackageItems::_impl_.total_num_)
      - PROTOBUF_FIELD_OFFSET(RefreshTemporaryPackageItems, _impl_.last_extract_time_)>(
          reinterpret_cast<char*>(&_impl_.last_extract_time_),
          reinterpret_cast<char*>(&other->_impl_.last_extract_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTemporaryPackageItems::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[23]);
}

// ===================================================================

class ExtractTemporaryPackageItemsReq::_Internal {
 public:
};

ExtractTemporaryPackageItemsReq::ExtractTemporaryPackageItemsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ExtractTemporaryPackageItemsReq)
}
ExtractTemporaryPackageItemsReq::ExtractTemporaryPackageItemsReq(const ExtractTemporaryPackageItemsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ExtractTemporaryPackageItemsReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ExtractTemporaryPackageItemsReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExtractTemporaryPackageItemsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExtractTemporaryPackageItemsReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ExtractTemporaryPackageItemsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[24]);
}

// ===================================================================

class ExtractTemporaryPackageItemsAck::_Internal {
 public:
};

ExtractTemporaryPackageItemsAck::ExtractTemporaryPackageItemsAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ExtractTemporaryPackageItemsAck)
}
ExtractTemporaryPackageItemsAck::ExtractTemporaryPackageItemsAck(const ExtractTemporaryPackageItemsAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ExtractTemporaryPackageItemsAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ExtractTemporaryPackageItemsAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExtractTemporaryPackageItemsAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExtractTemporaryPackageItemsAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ExtractTemporaryPackageItemsAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[25]);
}

// ===================================================================

class GetTemporaryPackageDataReq::_Internal {
 public:
};

GetTemporaryPackageDataReq::GetTemporaryPackageDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetTemporaryPackageDataReq)
}
GetTemporaryPackageDataReq::GetTemporaryPackageDataReq(const GetTemporaryPackageDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetTemporaryPackageDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetTemporaryPackageDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTemporaryPackageDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTemporaryPackageDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetTemporaryPackageDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[26]);
}

// ===================================================================

class GetTemporaryPackageDataAck::_Internal {
 public:
};

void GetTemporaryPackageDataAck::clear_items() {
  _impl_.items_.Clear();
}
GetTemporaryPackageDataAck::GetTemporaryPackageDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetTemporaryPackageDataAck)
}
GetTemporaryPackageDataAck::GetTemporaryPackageDataAck(const GetTemporaryPackageDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTemporaryPackageDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.last_extract_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.last_extract_time_ = from._impl_.last_extract_time_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetTemporaryPackageDataAck)
}

inline void GetTemporaryPackageDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.last_extract_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTemporaryPackageDataAck::~GetTemporaryPackageDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetTemporaryPackageDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTemporaryPackageDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void GetTemporaryPackageDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTemporaryPackageDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetTemporaryPackageDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.last_extract_time_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTemporaryPackageDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.TemporaryPackageItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 last_extract_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.last_extract_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTemporaryPackageDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetTemporaryPackageDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.TemporaryPackageItem items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 last_extract_time = 2;
  if (this->_internal_last_extract_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_last_extract_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetTemporaryPackageDataAck)
  return target;
}

size_t GetTemporaryPackageDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetTemporaryPackageDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.TemporaryPackageItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 last_extract_time = 2;
  if (this->_internal_last_extract_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_extract_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTemporaryPackageDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTemporaryPackageDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTemporaryPackageDataAck::GetClassData() const { return &_class_data_; }


void GetTemporaryPackageDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTemporaryPackageDataAck*>(&to_msg);
  auto& from = static_cast<const GetTemporaryPackageDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetTemporaryPackageDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_last_extract_time() != 0) {
    _this->_internal_set_last_extract_time(from._internal_last_extract_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTemporaryPackageDataAck::CopyFrom(const GetTemporaryPackageDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetTemporaryPackageDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTemporaryPackageDataAck::IsInitialized() const {
  return true;
}

void GetTemporaryPackageDataAck::InternalSwap(GetTemporaryPackageDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.last_extract_time_, other->_impl_.last_extract_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTemporaryPackageDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[27]);
}

// ===================================================================

class GetArenaExplorationStatisticalDataReq::_Internal {
 public:
};

GetArenaExplorationStatisticalDataReq::GetArenaExplorationStatisticalDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetArenaExplorationStatisticalDataReq)
}
GetArenaExplorationStatisticalDataReq::GetArenaExplorationStatisticalDataReq(const GetArenaExplorationStatisticalDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetArenaExplorationStatisticalDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetArenaExplorationStatisticalDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArenaExplorationStatisticalDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArenaExplorationStatisticalDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetArenaExplorationStatisticalDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[28]);
}

// ===================================================================

class GetArenaExplorationStatisticalDataAck::_Internal {
 public:
  static const ::idlepb::RoleArenaExplorationStatisticalData& data(const GetArenaExplorationStatisticalDataAck* msg);
};

const ::idlepb::RoleArenaExplorationStatisticalData&
GetArenaExplorationStatisticalDataAck::_Internal::data(const GetArenaExplorationStatisticalDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetArenaExplorationStatisticalDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetArenaExplorationStatisticalDataAck::GetArenaExplorationStatisticalDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetArenaExplorationStatisticalDataAck)
}
GetArenaExplorationStatisticalDataAck::GetArenaExplorationStatisticalDataAck(const GetArenaExplorationStatisticalDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArenaExplorationStatisticalDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleArenaExplorationStatisticalData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetArenaExplorationStatisticalDataAck)
}

inline void GetArenaExplorationStatisticalDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArenaExplorationStatisticalDataAck::~GetArenaExplorationStatisticalDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetArenaExplorationStatisticalDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArenaExplorationStatisticalDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetArenaExplorationStatisticalDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArenaExplorationStatisticalDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetArenaExplorationStatisticalDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArenaExplorationStatisticalDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleArenaExplorationStatisticalData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArenaExplorationStatisticalDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetArenaExplorationStatisticalDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleArenaExplorationStatisticalData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetArenaExplorationStatisticalDataAck)
  return target;
}

size_t GetArenaExplorationStatisticalDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetArenaExplorationStatisticalDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleArenaExplorationStatisticalData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArenaExplorationStatisticalDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArenaExplorationStatisticalDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArenaExplorationStatisticalDataAck::GetClassData() const { return &_class_data_; }


void GetArenaExplorationStatisticalDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArenaExplorationStatisticalDataAck*>(&to_msg);
  auto& from = static_cast<const GetArenaExplorationStatisticalDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetArenaExplorationStatisticalDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleArenaExplorationStatisticalData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArenaExplorationStatisticalDataAck::CopyFrom(const GetArenaExplorationStatisticalDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetArenaExplorationStatisticalDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArenaExplorationStatisticalDataAck::IsInitialized() const {
  return true;
}

void GetArenaExplorationStatisticalDataAck::InternalSwap(GetArenaExplorationStatisticalDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArenaExplorationStatisticalDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[29]);
}

// ===================================================================

class DoBreathingExerciseReq::_Internal {
 public:
};

DoBreathingExerciseReq::DoBreathingExerciseReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoBreathingExerciseReq)
}
DoBreathingExerciseReq::DoBreathingExerciseReq(const DoBreathingExerciseReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoBreathingExerciseReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.percet_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.percet_ = from._impl_.percet_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DoBreathingExerciseReq)
}

inline void DoBreathingExerciseReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.percet_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoBreathingExerciseReq::~DoBreathingExerciseReq() {
  // @@protoc_insertion_point(destructor:idlepb.DoBreathingExerciseReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoBreathingExerciseReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DoBreathingExerciseReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoBreathingExerciseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoBreathingExerciseReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.percet_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoBreathingExerciseReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float percet = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.percet_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoBreathingExerciseReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoBreathingExerciseReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float percet = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_percet = this->_internal_percet();
  uint32_t raw_percet;
  memcpy(&raw_percet, &tmp_percet, sizeof(tmp_percet));
  if (raw_percet != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_percet(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoBreathingExerciseReq)
  return target;
}

size_t DoBreathingExerciseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoBreathingExerciseReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float percet = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_percet = this->_internal_percet();
  uint32_t raw_percet;
  memcpy(&raw_percet, &tmp_percet, sizeof(tmp_percet));
  if (raw_percet != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoBreathingExerciseReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoBreathingExerciseReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoBreathingExerciseReq::GetClassData() const { return &_class_data_; }


void DoBreathingExerciseReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoBreathingExerciseReq*>(&to_msg);
  auto& from = static_cast<const DoBreathingExerciseReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoBreathingExerciseReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_percet = from._internal_percet();
  uint32_t raw_percet;
  memcpy(&raw_percet, &tmp_percet, sizeof(tmp_percet));
  if (raw_percet != 0) {
    _this->_internal_set_percet(from._internal_percet());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoBreathingExerciseReq::CopyFrom(const DoBreathingExerciseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoBreathingExerciseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoBreathingExerciseReq::IsInitialized() const {
  return true;
}

void DoBreathingExerciseReq::InternalSwap(DoBreathingExerciseReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.percet_, other->_impl_.percet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoBreathingExerciseReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[30]);
}

// ===================================================================

class DoBreathingExerciseAck::_Internal {
 public:
  static const ::idlepb::DoBreathingExerciseResult& result(const DoBreathingExerciseAck* msg);
};

const ::idlepb::DoBreathingExerciseResult&
DoBreathingExerciseAck::_Internal::result(const DoBreathingExerciseAck* msg) {
  return *msg->_impl_.result_;
}
void DoBreathingExerciseAck::clear_result() {
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
}
DoBreathingExerciseAck::DoBreathingExerciseAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoBreathingExerciseAck)
}
DoBreathingExerciseAck::DoBreathingExerciseAck(const DoBreathingExerciseAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoBreathingExerciseAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::idlepb::DoBreathingExerciseResult(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.DoBreathingExerciseAck)
}

inline void DoBreathingExerciseAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoBreathingExerciseAck::~DoBreathingExerciseAck() {
  // @@protoc_insertion_point(destructor:idlepb.DoBreathingExerciseAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoBreathingExerciseAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void DoBreathingExerciseAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoBreathingExerciseAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoBreathingExerciseAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoBreathingExerciseAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.DoBreathingExerciseResult result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoBreathingExerciseAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoBreathingExerciseAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.DoBreathingExerciseResult result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoBreathingExerciseAck)
  return target;
}

size_t DoBreathingExerciseAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoBreathingExerciseAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.DoBreathingExerciseResult result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoBreathingExerciseAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoBreathingExerciseAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoBreathingExerciseAck::GetClassData() const { return &_class_data_; }


void DoBreathingExerciseAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoBreathingExerciseAck*>(&to_msg);
  auto& from = static_cast<const DoBreathingExerciseAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoBreathingExerciseAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::idlepb::DoBreathingExerciseResult::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoBreathingExerciseAck::CopyFrom(const DoBreathingExerciseAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoBreathingExerciseAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoBreathingExerciseAck::IsInitialized() const {
  return true;
}

void DoBreathingExerciseAck::InternalSwap(DoBreathingExerciseAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoBreathingExerciseAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[31]);
}

// ===================================================================

class OneClickMergeBreathingReq::_Internal {
 public:
};

OneClickMergeBreathingReq::OneClickMergeBreathingReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickMergeBreathingReq)
}
OneClickMergeBreathingReq::OneClickMergeBreathingReq(const OneClickMergeBreathingReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickMergeBreathingReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickMergeBreathingReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickMergeBreathingReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickMergeBreathingReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickMergeBreathingReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[32]);
}

// ===================================================================

class OneClickMergeBreathingAck::_Internal {
 public:
};

OneClickMergeBreathingAck::OneClickMergeBreathingAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickMergeBreathingAck)
}
OneClickMergeBreathingAck::OneClickMergeBreathingAck(const OneClickMergeBreathingAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickMergeBreathingAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.exp_){from._impl_.exp_}
    , decltype(_impl_.ret_){from._impl_.ret_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickMergeBreathingAck)
}

inline void OneClickMergeBreathingAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.exp_){arena}
    , decltype(_impl_.ret_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickMergeBreathingAck::~OneClickMergeBreathingAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickMergeBreathingAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickMergeBreathingAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.exp_.~RepeatedField();
  _impl_.ret_.~RepeatedField();
}

void OneClickMergeBreathingAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickMergeBreathingAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickMergeBreathingAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.exp_.Clear();
  _impl_.ret_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickMergeBreathingAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float exp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_exp(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_exp(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated float ret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_ret(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 21) {
          _internal_add_ret(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickMergeBreathingAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickMergeBreathingAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float exp = 1;
  if (this->_internal_exp_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_exp(), target);
  }

  // repeated float ret = 2;
  if (this->_internal_ret_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickMergeBreathingAck)
  return target;
}

size_t OneClickMergeBreathingAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickMergeBreathingAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float exp = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_exp_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated float ret = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_ret_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickMergeBreathingAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickMergeBreathingAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickMergeBreathingAck::GetClassData() const { return &_class_data_; }


void OneClickMergeBreathingAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickMergeBreathingAck*>(&to_msg);
  auto& from = static_cast<const OneClickMergeBreathingAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickMergeBreathingAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.exp_.MergeFrom(from._impl_.exp_);
  _this->_impl_.ret_.MergeFrom(from._impl_.ret_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickMergeBreathingAck::CopyFrom(const OneClickMergeBreathingAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickMergeBreathingAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickMergeBreathingAck::IsInitialized() const {
  return true;
}

void OneClickMergeBreathingAck::InternalSwap(OneClickMergeBreathingAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.exp_.InternalSwap(&other->_impl_.exp_);
  _impl_.ret_.InternalSwap(&other->_impl_.ret_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickMergeBreathingAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[33]);
}

// ===================================================================

class RequestCommonCultivationDataReq::_Internal {
 public:
};

RequestCommonCultivationDataReq::RequestCommonCultivationDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestCommonCultivationDataReq)
}
RequestCommonCultivationDataReq::RequestCommonCultivationDataReq(const RequestCommonCultivationDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RequestCommonCultivationDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestCommonCultivationDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestCommonCultivationDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestCommonCultivationDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestCommonCultivationDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[34]);
}

// ===================================================================

class RequestCommonCultivationDataAck::_Internal {
 public:
  static const ::idlepb::CommonCultivationData& data(const RequestCommonCultivationDataAck* msg);
};

const ::idlepb::CommonCultivationData&
RequestCommonCultivationDataAck::_Internal::data(const RequestCommonCultivationDataAck* msg) {
  return *msg->_impl_.data_;
}
void RequestCommonCultivationDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RequestCommonCultivationDataAck::RequestCommonCultivationDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestCommonCultivationDataAck)
}
RequestCommonCultivationDataAck::RequestCommonCultivationDataAck(const RequestCommonCultivationDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestCommonCultivationDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::CommonCultivationData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestCommonCultivationDataAck)
}

inline void RequestCommonCultivationDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestCommonCultivationDataAck::~RequestCommonCultivationDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestCommonCultivationDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestCommonCultivationDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RequestCommonCultivationDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestCommonCultivationDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestCommonCultivationDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestCommonCultivationDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CommonCultivationData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestCommonCultivationDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestCommonCultivationDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CommonCultivationData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestCommonCultivationDataAck)
  return target;
}

size_t RequestCommonCultivationDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestCommonCultivationDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CommonCultivationData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestCommonCultivationDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestCommonCultivationDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestCommonCultivationDataAck::GetClassData() const { return &_class_data_; }


void RequestCommonCultivationDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestCommonCultivationDataAck*>(&to_msg);
  auto& from = static_cast<const RequestCommonCultivationDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestCommonCultivationDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::CommonCultivationData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestCommonCultivationDataAck::CopyFrom(const RequestCommonCultivationDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestCommonCultivationDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCommonCultivationDataAck::IsInitialized() const {
  return true;
}

void RequestCommonCultivationDataAck::InternalSwap(RequestCommonCultivationDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestCommonCultivationDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[35]);
}

// ===================================================================

class ReceiveBreathingExerciseRewardReq::_Internal {
 public:
};

ReceiveBreathingExerciseRewardReq::ReceiveBreathingExerciseRewardReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBreathingExerciseRewardReq)
}
ReceiveBreathingExerciseRewardReq::ReceiveBreathingExerciseRewardReq(const ReceiveBreathingExerciseRewardReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBreathingExerciseRewardReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBreathingExerciseRewardReq)
}

inline void ReceiveBreathingExerciseRewardReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBreathingExerciseRewardReq::~ReceiveBreathingExerciseRewardReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBreathingExerciseRewardReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBreathingExerciseRewardReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveBreathingExerciseRewardReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBreathingExerciseRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBreathingExerciseRewardReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBreathingExerciseRewardReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBreathingExerciseRewardReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBreathingExerciseRewardReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBreathingExerciseRewardReq)
  return target;
}

size_t ReceiveBreathingExerciseRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBreathingExerciseRewardReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBreathingExerciseRewardReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBreathingExerciseRewardReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBreathingExerciseRewardReq::GetClassData() const { return &_class_data_; }


void ReceiveBreathingExerciseRewardReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBreathingExerciseRewardReq*>(&to_msg);
  auto& from = static_cast<const ReceiveBreathingExerciseRewardReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBreathingExerciseRewardReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBreathingExerciseRewardReq::CopyFrom(const ReceiveBreathingExerciseRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBreathingExerciseRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBreathingExerciseRewardReq::IsInitialized() const {
  return true;
}

void ReceiveBreathingExerciseRewardReq::InternalSwap(ReceiveBreathingExerciseRewardReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBreathingExerciseRewardReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[36]);
}

// ===================================================================

class ReceiveBreathingExerciseRewardAck::_Internal {
 public:
};

ReceiveBreathingExerciseRewardAck::ReceiveBreathingExerciseRewardAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBreathingExerciseRewardAck)
}
ReceiveBreathingExerciseRewardAck::ReceiveBreathingExerciseRewardAck(const ReceiveBreathingExerciseRewardAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBreathingExerciseRewardAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBreathingExerciseRewardAck)
}

inline void ReceiveBreathingExerciseRewardAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBreathingExerciseRewardAck::~ReceiveBreathingExerciseRewardAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBreathingExerciseRewardAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBreathingExerciseRewardAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveBreathingExerciseRewardAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBreathingExerciseRewardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBreathingExerciseRewardAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBreathingExerciseRewardAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBreathingExerciseRewardAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBreathingExerciseRewardAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBreathingExerciseRewardAck)
  return target;
}

size_t ReceiveBreathingExerciseRewardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBreathingExerciseRewardAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBreathingExerciseRewardAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBreathingExerciseRewardAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBreathingExerciseRewardAck::GetClassData() const { return &_class_data_; }


void ReceiveBreathingExerciseRewardAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBreathingExerciseRewardAck*>(&to_msg);
  auto& from = static_cast<const ReceiveBreathingExerciseRewardAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBreathingExerciseRewardAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBreathingExerciseRewardAck::CopyFrom(const ReceiveBreathingExerciseRewardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBreathingExerciseRewardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBreathingExerciseRewardAck::IsInitialized() const {
  return true;
}

void ReceiveBreathingExerciseRewardAck::InternalSwap(ReceiveBreathingExerciseRewardAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBreathingExerciseRewardAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[37]);
}

// ===================================================================

class UseItemReq::_Internal {
 public:
};

UseItemReq::UseItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseItemReq)
}
UseItemReq::UseItemReq(const UseItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.cfg_id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.UseItemReq)
}

inline void UseItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.cfg_id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseItemReq::~UseItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.UseItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cfg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // int32 cfg_id = 2;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_cfg_id(), target);
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseItemReq)
  return target;
}

size_t UseItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int32 cfg_id = 2;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseItemReq::GetClassData() const { return &_class_data_; }


void UseItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseItemReq*>(&to_msg);
  auto& from = static_cast<const UseItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseItemReq::CopyFrom(const UseItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemReq::IsInitialized() const {
  return true;
}

void UseItemReq::InternalSwap(UseItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UseItemReq, _impl_.num_)
      + sizeof(UseItemReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(UseItemReq, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UseItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[38]);
}

// ===================================================================

class UseItemAck::_Internal {
 public:
};

UseItemAck::UseItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseItemAck)
}
UseItemAck::UseItemAck(const UseItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_code_ = from._impl_.error_code_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UseItemAck)
}

inline void UseItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseItemAck::~UseItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.UseItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.UseItemResult error_code = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::idlepb::UseItemResult>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.UseItemResult error_code = 11;
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseItemAck)
  return target;
}

size_t UseItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.UseItemResult error_code = 11;
  if (this->_internal_error_code() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseItemAck::GetClassData() const { return &_class_data_; }


void UseItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseItemAck*>(&to_msg);
  auto& from = static_cast<const UseItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error_code() != 0) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseItemAck::CopyFrom(const UseItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemAck::IsInitialized() const {
  return true;
}

void UseItemAck::InternalSwap(UseItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_code_, other->_impl_.error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UseItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[39]);
}

// ===================================================================

class UseSelectGiftReq::_Internal {
 public:
};

UseSelectGiftReq::UseSelectGiftReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseSelectGiftReq)
}
UseSelectGiftReq::UseSelectGiftReq(const UseSelectGiftReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseSelectGiftReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , decltype(_impl_.choose_id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.UseSelectGiftReq)
}

inline void UseSelectGiftReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){int64_t{0}}
    , decltype(_impl_.choose_id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseSelectGiftReq::~UseSelectGiftReq() {
  // @@protoc_insertion_point(destructor:idlepb.UseSelectGiftReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseSelectGiftReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseSelectGiftReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseSelectGiftReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseSelectGiftReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseSelectGiftReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 choose_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.choose_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseSelectGiftReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseSelectGiftReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_uid(), target);
  }

  // int32 choose_id = 2;
  if (this->_internal_choose_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_choose_id(), target);
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseSelectGiftReq)
  return target;
}

size_t UseSelectGiftReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseSelectGiftReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_uid());
  }

  // int32 choose_id = 2;
  if (this->_internal_choose_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_choose_id());
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseSelectGiftReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseSelectGiftReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseSelectGiftReq::GetClassData() const { return &_class_data_; }


void UseSelectGiftReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseSelectGiftReq*>(&to_msg);
  auto& from = static_cast<const UseSelectGiftReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseSelectGiftReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_choose_id() != 0) {
    _this->_internal_set_choose_id(from._internal_choose_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseSelectGiftReq::CopyFrom(const UseSelectGiftReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseSelectGiftReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseSelectGiftReq::IsInitialized() const {
  return true;
}

void UseSelectGiftReq::InternalSwap(UseSelectGiftReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UseSelectGiftReq, _impl_.num_)
      + sizeof(UseSelectGiftReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(UseSelectGiftReq, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UseSelectGiftReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[40]);
}

// ===================================================================

class UseSelectGiftAck::_Internal {
 public:
};

UseSelectGiftAck::UseSelectGiftAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseSelectGiftAck)
}
UseSelectGiftAck::UseSelectGiftAck(const UseSelectGiftAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseSelectGiftAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_code_ = from._impl_.error_code_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UseSelectGiftAck)
}

inline void UseSelectGiftAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseSelectGiftAck::~UseSelectGiftAck() {
  // @@protoc_insertion_point(destructor:idlepb.UseSelectGiftAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseSelectGiftAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseSelectGiftAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseSelectGiftAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseSelectGiftAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseSelectGiftAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.UseItemResult error_code = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::idlepb::UseItemResult>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseSelectGiftAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseSelectGiftAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.UseItemResult error_code = 11;
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      11, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseSelectGiftAck)
  return target;
}

size_t UseSelectGiftAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseSelectGiftAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.UseItemResult error_code = 11;
  if (this->_internal_error_code() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseSelectGiftAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseSelectGiftAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseSelectGiftAck::GetClassData() const { return &_class_data_; }


void UseSelectGiftAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseSelectGiftAck*>(&to_msg);
  auto& from = static_cast<const UseSelectGiftAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseSelectGiftAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error_code() != 0) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseSelectGiftAck::CopyFrom(const UseSelectGiftAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseSelectGiftAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseSelectGiftAck::IsInitialized() const {
  return true;
}

void UseSelectGiftAck::InternalSwap(UseSelectGiftAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_code_, other->_impl_.error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UseSelectGiftAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[41]);
}

// ===================================================================

class SellItemInfo::_Internal {
 public:
};

SellItemInfo::SellItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SellItemInfo)
}
SellItemInfo::SellItemInfo(const SellItemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SellItemInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.num_){}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ok_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.ok_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SellItemInfo)
}

inline void SellItemInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){int64_t{0}}
    , decltype(_impl_.num_){0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SellItemInfo::~SellItemInfo() {
  // @@protoc_insertion_point(destructor:idlepb.SellItemInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SellItemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SellItemInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SellItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SellItemInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ok_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.ok_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SellItemInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ok = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SellItemInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SellItemInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_item_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  // bool ok = 3;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SellItemInfo)
  return target;
}

size_t SellItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SellItemInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_item_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  // bool ok = 3;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SellItemInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SellItemInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SellItemInfo::GetClassData() const { return &_class_data_; }


void SellItemInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SellItemInfo*>(&to_msg);
  auto& from = static_cast<const SellItemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SellItemInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SellItemInfo::CopyFrom(const SellItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SellItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellItemInfo::IsInitialized() const {
  return true;
}

void SellItemInfo::InternalSwap(SellItemInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SellItemInfo, _impl_.ok_)
      + sizeof(SellItemInfo::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(SellItemInfo, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SellItemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[42]);
}

// ===================================================================

class SellItemReq::_Internal {
 public:
};

SellItemReq::SellItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SellItemReq)
}
SellItemReq::SellItemReq(const SellItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SellItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.SellItemReq)
}

inline void SellItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SellItemReq::~SellItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.SellItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SellItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void SellItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SellItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SellItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SellItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.SellItemInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SellItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SellItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.SellItemInfo items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SellItemReq)
  return target;
}

size_t SellItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SellItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SellItemInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SellItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SellItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SellItemReq::GetClassData() const { return &_class_data_; }


void SellItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SellItemReq*>(&to_msg);
  auto& from = static_cast<const SellItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SellItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SellItemReq::CopyFrom(const SellItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SellItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellItemReq::IsInitialized() const {
  return true;
}

void SellItemReq::InternalSwap(SellItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SellItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[43]);
}

// ===================================================================

class SellItemAck::_Internal {
 public:
};

SellItemAck::SellItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SellItemAck)
}
SellItemAck::SellItemAck(const SellItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SellItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.SellItemAck)
}

inline void SellItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SellItemAck::~SellItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.SellItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SellItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void SellItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SellItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SellItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SellItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.SellItemInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SellItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SellItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.SellItemInfo items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SellItemAck)
  return target;
}

size_t SellItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SellItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SellItemInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SellItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SellItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SellItemAck::GetClassData() const { return &_class_data_; }


void SellItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SellItemAck*>(&to_msg);
  auto& from = static_cast<const SellItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SellItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SellItemAck::CopyFrom(const SellItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SellItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SellItemAck::IsInitialized() const {
  return true;
}

void SellItemAck::InternalSwap(SellItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SellItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[44]);
}

// ===================================================================

class RefreshAlchemyData::_Internal {
 public:
  static const ::idlepb::RoleAlchemyData& data(const RefreshAlchemyData* msg);
};

const ::idlepb::RoleAlchemyData&
RefreshAlchemyData::_Internal::data(const RefreshAlchemyData* msg) {
  return *msg->_impl_.data_;
}
void RefreshAlchemyData::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshAlchemyData::RefreshAlchemyData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshAlchemyData)
}
RefreshAlchemyData::RefreshAlchemyData(const RefreshAlchemyData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshAlchemyData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAlchemyData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshAlchemyData)
}

inline void RefreshAlchemyData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshAlchemyData::~RefreshAlchemyData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshAlchemyData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshAlchemyData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshAlchemyData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshAlchemyData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshAlchemyData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshAlchemyData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAlchemyData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshAlchemyData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshAlchemyData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAlchemyData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshAlchemyData)
  return target;
}

size_t RefreshAlchemyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshAlchemyData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAlchemyData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshAlchemyData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshAlchemyData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshAlchemyData::GetClassData() const { return &_class_data_; }


void RefreshAlchemyData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshAlchemyData*>(&to_msg);
  auto& from = static_cast<const RefreshAlchemyData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshAlchemyData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAlchemyData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshAlchemyData::CopyFrom(const RefreshAlchemyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshAlchemyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshAlchemyData::IsInitialized() const {
  return true;
}

void RefreshAlchemyData::InternalSwap(RefreshAlchemyData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshAlchemyData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[45]);
}

// ===================================================================

class NotifyAlchemyRefineResult::_Internal {
 public:
};

NotifyAlchemyRefineResult::NotifyAlchemyRefineResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyAlchemyRefineResult)
}
NotifyAlchemyRefineResult::NotifyAlchemyRefineResult(const NotifyAlchemyRefineResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyAlchemyRefineResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quality_){}
    , decltype(_impl_.item_cfg_id_){}
    , decltype(_impl_.item_num_){}
    , decltype(_impl_.exp_){}
    , decltype(_impl_.chance_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.quality_, &from._impl_.quality_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.chance_type_) -
    reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.chance_type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyAlchemyRefineResult)
}

inline void NotifyAlchemyRefineResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quality_){0}
    , decltype(_impl_.item_cfg_id_){0}
    , decltype(_impl_.item_num_){0}
    , decltype(_impl_.exp_){0}
    , decltype(_impl_.chance_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyAlchemyRefineResult::~NotifyAlchemyRefineResult() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyAlchemyRefineResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyAlchemyRefineResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyAlchemyRefineResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyAlchemyRefineResult::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyAlchemyRefineResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.quality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.chance_type_) -
      reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.chance_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyAlchemyRefineResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.ItemQuality quality = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_quality(static_cast<::idlepb::ItemQuality>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 item_cfg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.item_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 exp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.AlchemyChanceType chance_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chance_type(static_cast<::idlepb::AlchemyChanceType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyAlchemyRefineResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyAlchemyRefineResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.ItemQuality quality = 1;
  if (this->_internal_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_quality(), target);
  }

  // int32 item_cfg_id = 2;
  if (this->_internal_item_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_cfg_id(), target);
  }

  // int32 item_num = 3;
  if (this->_internal_item_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_item_num(), target);
  }

  // int32 exp = 4;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_exp(), target);
  }

  // .idlepb.AlchemyChanceType chance_type = 5;
  if (this->_internal_chance_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_chance_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyAlchemyRefineResult)
  return target;
}

size_t NotifyAlchemyRefineResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyAlchemyRefineResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ItemQuality quality = 1;
  if (this->_internal_quality() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_quality());
  }

  // int32 item_cfg_id = 2;
  if (this->_internal_item_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_cfg_id());
  }

  // int32 item_num = 3;
  if (this->_internal_item_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_num());
  }

  // int32 exp = 4;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_exp());
  }

  // .idlepb.AlchemyChanceType chance_type = 5;
  if (this->_internal_chance_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_chance_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyAlchemyRefineResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyAlchemyRefineResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyAlchemyRefineResult::GetClassData() const { return &_class_data_; }


void NotifyAlchemyRefineResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyAlchemyRefineResult*>(&to_msg);
  auto& from = static_cast<const NotifyAlchemyRefineResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyAlchemyRefineResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quality() != 0) {
    _this->_internal_set_quality(from._internal_quality());
  }
  if (from._internal_item_cfg_id() != 0) {
    _this->_internal_set_item_cfg_id(from._internal_item_cfg_id());
  }
  if (from._internal_item_num() != 0) {
    _this->_internal_set_item_num(from._internal_item_num());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_chance_type() != 0) {
    _this->_internal_set_chance_type(from._internal_chance_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyAlchemyRefineResult::CopyFrom(const NotifyAlchemyRefineResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyAlchemyRefineResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyAlchemyRefineResult::IsInitialized() const {
  return true;
}

void NotifyAlchemyRefineResult::InternalSwap(NotifyAlchemyRefineResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyAlchemyRefineResult, _impl_.chance_type_)
      + sizeof(NotifyAlchemyRefineResult::_impl_.chance_type_)
      - PROTOBUF_FIELD_OFFSET(NotifyAlchemyRefineResult, _impl_.quality_)>(
          reinterpret_cast<char*>(&_impl_.quality_),
          reinterpret_cast<char*>(&other->_impl_.quality_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyAlchemyRefineResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[46]);
}

// ===================================================================

class RefreshForgeData::_Internal {
 public:
  static const ::idlepb::RoleForgeData& data(const RefreshForgeData* msg);
};

const ::idlepb::RoleForgeData&
RefreshForgeData::_Internal::data(const RefreshForgeData* msg) {
  return *msg->_impl_.data_;
}
void RefreshForgeData::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshForgeData::RefreshForgeData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshForgeData)
}
RefreshForgeData::RefreshForgeData(const RefreshForgeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshForgeData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleForgeData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshForgeData)
}

inline void RefreshForgeData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshForgeData::~RefreshForgeData() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshForgeData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshForgeData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshForgeData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshForgeData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshForgeData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshForgeData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleForgeData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshForgeData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshForgeData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleForgeData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshForgeData)
  return target;
}

size_t RefreshForgeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshForgeData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleForgeData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshForgeData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshForgeData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshForgeData::GetClassData() const { return &_class_data_; }


void RefreshForgeData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshForgeData*>(&to_msg);
  auto& from = static_cast<const RefreshForgeData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshForgeData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleForgeData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshForgeData::CopyFrom(const RefreshForgeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshForgeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshForgeData::IsInitialized() const {
  return true;
}

void RefreshForgeData::InternalSwap(RefreshForgeData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshForgeData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[47]);
}

// ===================================================================

class NotifyForgeRefineResult::_Internal {
 public:
};

NotifyForgeRefineResult::NotifyForgeRefineResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyForgeRefineResult)
}
NotifyForgeRefineResult::NotifyForgeRefineResult(const NotifyForgeRefineResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyForgeRefineResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quality_){}
    , decltype(_impl_.item_cfg_id_){}
    , decltype(_impl_.item_num_){}
    , decltype(_impl_.exp_){}
    , decltype(_impl_.chance_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.quality_, &from._impl_.quality_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.chance_type_) -
    reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.chance_type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyForgeRefineResult)
}

inline void NotifyForgeRefineResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quality_){0}
    , decltype(_impl_.item_cfg_id_){0}
    , decltype(_impl_.item_num_){0}
    , decltype(_impl_.exp_){0}
    , decltype(_impl_.chance_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyForgeRefineResult::~NotifyForgeRefineResult() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyForgeRefineResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyForgeRefineResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyForgeRefineResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyForgeRefineResult::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyForgeRefineResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.quality_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.chance_type_) -
      reinterpret_cast<char*>(&_impl_.quality_)) + sizeof(_impl_.chance_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyForgeRefineResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.ItemQuality quality = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_quality(static_cast<::idlepb::ItemQuality>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 item_cfg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.item_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 exp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ForgeChanceType chance_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_chance_type(static_cast<::idlepb::ForgeChanceType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyForgeRefineResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyForgeRefineResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.ItemQuality quality = 1;
  if (this->_internal_quality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_quality(), target);
  }

  // int32 item_cfg_id = 2;
  if (this->_internal_item_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_cfg_id(), target);
  }

  // int32 item_num = 3;
  if (this->_internal_item_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_item_num(), target);
  }

  // int32 exp = 4;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_exp(), target);
  }

  // .idlepb.ForgeChanceType chance_type = 5;
  if (this->_internal_chance_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_chance_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyForgeRefineResult)
  return target;
}

size_t NotifyForgeRefineResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyForgeRefineResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ItemQuality quality = 1;
  if (this->_internal_quality() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_quality());
  }

  // int32 item_cfg_id = 2;
  if (this->_internal_item_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_cfg_id());
  }

  // int32 item_num = 3;
  if (this->_internal_item_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_num());
  }

  // int32 exp = 4;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_exp());
  }

  // .idlepb.ForgeChanceType chance_type = 5;
  if (this->_internal_chance_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_chance_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyForgeRefineResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyForgeRefineResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyForgeRefineResult::GetClassData() const { return &_class_data_; }


void NotifyForgeRefineResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyForgeRefineResult*>(&to_msg);
  auto& from = static_cast<const NotifyForgeRefineResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyForgeRefineResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quality() != 0) {
    _this->_internal_set_quality(from._internal_quality());
  }
  if (from._internal_item_cfg_id() != 0) {
    _this->_internal_set_item_cfg_id(from._internal_item_cfg_id());
  }
  if (from._internal_item_num() != 0) {
    _this->_internal_set_item_num(from._internal_item_num());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_chance_type() != 0) {
    _this->_internal_set_chance_type(from._internal_chance_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyForgeRefineResult::CopyFrom(const NotifyForgeRefineResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyForgeRefineResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyForgeRefineResult::IsInitialized() const {
  return true;
}

void NotifyForgeRefineResult::InternalSwap(NotifyForgeRefineResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyForgeRefineResult, _impl_.chance_type_)
      + sizeof(NotifyForgeRefineResult::_impl_.chance_type_)
      - PROTOBUF_FIELD_OFFSET(NotifyForgeRefineResult, _impl_.quality_)>(
          reinterpret_cast<char*>(&_impl_.quality_),
          reinterpret_cast<char*>(&other->_impl_.quality_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyForgeRefineResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[48]);
}

// ===================================================================

class EquipmentPutOnReq::_Internal {
 public:
};

EquipmentPutOnReq::EquipmentPutOnReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.EquipmentPutOnReq)
}
EquipmentPutOnReq::EquipmentPutOnReq(const EquipmentPutOnReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipmentPutOnReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.slot_idx_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.slot_idx_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.slot_idx_));
  // @@protoc_insertion_point(copy_constructor:idlepb.EquipmentPutOnReq)
}

inline void EquipmentPutOnReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){uint64_t{0u}}
    , decltype(_impl_.slot_idx_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipmentPutOnReq::~EquipmentPutOnReq() {
  // @@protoc_insertion_point(destructor:idlepb.EquipmentPutOnReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipmentPutOnReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipmentPutOnReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipmentPutOnReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.EquipmentPutOnReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.slot_idx_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.slot_idx_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipmentPutOnReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 slot_idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.slot_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipmentPutOnReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.EquipmentPutOnReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 slot_idx = 1;
  if (this->_internal_slot_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_slot_idx(), target);
  }

  // uint64 item_id = 2;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.EquipmentPutOnReq)
  return target;
}

size_t EquipmentPutOnReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.EquipmentPutOnReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 item_id = 2;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_item_id());
  }

  // int32 slot_idx = 1;
  if (this->_internal_slot_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipmentPutOnReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipmentPutOnReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipmentPutOnReq::GetClassData() const { return &_class_data_; }


void EquipmentPutOnReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipmentPutOnReq*>(&to_msg);
  auto& from = static_cast<const EquipmentPutOnReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.EquipmentPutOnReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_slot_idx() != 0) {
    _this->_internal_set_slot_idx(from._internal_slot_idx());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentPutOnReq::CopyFrom(const EquipmentPutOnReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.EquipmentPutOnReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentPutOnReq::IsInitialized() const {
  return true;
}

void EquipmentPutOnReq::InternalSwap(EquipmentPutOnReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipmentPutOnReq, _impl_.slot_idx_)
      + sizeof(EquipmentPutOnReq::_impl_.slot_idx_)
      - PROTOBUF_FIELD_OFFSET(EquipmentPutOnReq, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipmentPutOnReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[49]);
}

// ===================================================================

class EquipmentPutOnAck::_Internal {
 public:
};

EquipmentPutOnAck::EquipmentPutOnAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.EquipmentPutOnAck)
}
EquipmentPutOnAck::EquipmentPutOnAck(const EquipmentPutOnAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipmentPutOnAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.EquipmentPutOnAck)
}

inline void EquipmentPutOnAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipmentPutOnAck::~EquipmentPutOnAck() {
  // @@protoc_insertion_point(destructor:idlepb.EquipmentPutOnAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipmentPutOnAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipmentPutOnAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipmentPutOnAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.EquipmentPutOnAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipmentPutOnAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipmentPutOnAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.EquipmentPutOnAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.EquipmentPutOnAck)
  return target;
}

size_t EquipmentPutOnAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.EquipmentPutOnAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipmentPutOnAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipmentPutOnAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipmentPutOnAck::GetClassData() const { return &_class_data_; }


void EquipmentPutOnAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipmentPutOnAck*>(&to_msg);
  auto& from = static_cast<const EquipmentPutOnAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.EquipmentPutOnAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentPutOnAck::CopyFrom(const EquipmentPutOnAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.EquipmentPutOnAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentPutOnAck::IsInitialized() const {
  return true;
}

void EquipmentPutOnAck::InternalSwap(EquipmentPutOnAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipmentPutOnAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[50]);
}

// ===================================================================

class EquipmentTakeOffReq::_Internal {
 public:
};

EquipmentTakeOffReq::EquipmentTakeOffReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.EquipmentTakeOffReq)
}
EquipmentTakeOffReq::EquipmentTakeOffReq(const EquipmentTakeOffReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipmentTakeOffReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.slot_idx_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.slot_idx_ = from._impl_.slot_idx_;
  // @@protoc_insertion_point(copy_constructor:idlepb.EquipmentTakeOffReq)
}

inline void EquipmentTakeOffReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.slot_idx_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipmentTakeOffReq::~EquipmentTakeOffReq() {
  // @@protoc_insertion_point(destructor:idlepb.EquipmentTakeOffReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipmentTakeOffReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipmentTakeOffReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipmentTakeOffReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.EquipmentTakeOffReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_idx_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipmentTakeOffReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 slot_idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.slot_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipmentTakeOffReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.EquipmentTakeOffReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 slot_idx = 1;
  if (this->_internal_slot_idx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_slot_idx(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.EquipmentTakeOffReq)
  return target;
}

size_t EquipmentTakeOffReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.EquipmentTakeOffReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 slot_idx = 1;
  if (this->_internal_slot_idx() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_idx());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipmentTakeOffReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipmentTakeOffReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipmentTakeOffReq::GetClassData() const { return &_class_data_; }


void EquipmentTakeOffReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipmentTakeOffReq*>(&to_msg);
  auto& from = static_cast<const EquipmentTakeOffReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.EquipmentTakeOffReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_slot_idx() != 0) {
    _this->_internal_set_slot_idx(from._internal_slot_idx());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentTakeOffReq::CopyFrom(const EquipmentTakeOffReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.EquipmentTakeOffReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentTakeOffReq::IsInitialized() const {
  return true;
}

void EquipmentTakeOffReq::InternalSwap(EquipmentTakeOffReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.slot_idx_, other->_impl_.slot_idx_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipmentTakeOffReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[51]);
}

// ===================================================================

class EquipmentTakeOffAck::_Internal {
 public:
};

EquipmentTakeOffAck::EquipmentTakeOffAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.EquipmentTakeOffAck)
}
EquipmentTakeOffAck::EquipmentTakeOffAck(const EquipmentTakeOffAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipmentTakeOffAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.EquipmentTakeOffAck)
}

inline void EquipmentTakeOffAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipmentTakeOffAck::~EquipmentTakeOffAck() {
  // @@protoc_insertion_point(destructor:idlepb.EquipmentTakeOffAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipmentTakeOffAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipmentTakeOffAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipmentTakeOffAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.EquipmentTakeOffAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipmentTakeOffAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipmentTakeOffAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.EquipmentTakeOffAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.EquipmentTakeOffAck)
  return target;
}

size_t EquipmentTakeOffAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.EquipmentTakeOffAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipmentTakeOffAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipmentTakeOffAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipmentTakeOffAck::GetClassData() const { return &_class_data_; }


void EquipmentTakeOffAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipmentTakeOffAck*>(&to_msg);
  auto& from = static_cast<const EquipmentTakeOffAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.EquipmentTakeOffAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentTakeOffAck::CopyFrom(const EquipmentTakeOffAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.EquipmentTakeOffAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentTakeOffAck::IsInitialized() const {
  return true;
}

void EquipmentTakeOffAck::InternalSwap(EquipmentTakeOffAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipmentTakeOffAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[52]);
}

// ===================================================================

class GetInventoryDataReq::_Internal {
 public:
};

GetInventoryDataReq::GetInventoryDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetInventoryDataReq)
}
GetInventoryDataReq::GetInventoryDataReq(const GetInventoryDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetInventoryDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetInventoryDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInventoryDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInventoryDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetInventoryDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[53]);
}

// ===================================================================

class GetInventoryDataAck::_Internal {
 public:
};

void GetInventoryDataAck::clear_items() {
  _impl_.items_.Clear();
}
GetInventoryDataAck::GetInventoryDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetInventoryDataAck)
}
GetInventoryDataAck::GetInventoryDataAck(const GetInventoryDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetInventoryDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.unlocked_equipment_slots_){from._impl_.unlocked_equipment_slots_}
    , /*decltype(_impl_._unlocked_equipment_slots_cached_byte_size_)*/{0}
    , decltype(_impl_.inventory_space_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.inventory_space_num_ = from._impl_.inventory_space_num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetInventoryDataAck)
}

inline void GetInventoryDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.unlocked_equipment_slots_){arena}
    , /*decltype(_impl_._unlocked_equipment_slots_cached_byte_size_)*/{0}
    , decltype(_impl_.inventory_space_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetInventoryDataAck::~GetInventoryDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetInventoryDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInventoryDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.unlocked_equipment_slots_.~RepeatedField();
}

void GetInventoryDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetInventoryDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetInventoryDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.unlocked_equipment_slots_.Clear();
  _impl_.inventory_space_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInventoryDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.ItemData items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 unlocked_equipment_slots = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_unlocked_equipment_slots(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_unlocked_equipment_slots(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 inventory_space_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.inventory_space_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInventoryDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetInventoryDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 unlocked_equipment_slots = 2;
  {
    int byte_size = _impl_._unlocked_equipment_slots_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_unlocked_equipment_slots(), byte_size, target);
    }
  }

  // int32 inventory_space_num = 3;
  if (this->_internal_inventory_space_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_inventory_space_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetInventoryDataAck)
  return target;
}

size_t GetInventoryDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetInventoryDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ItemData items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 unlocked_equipment_slots = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.unlocked_equipment_slots_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._unlocked_equipment_slots_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 inventory_space_num = 3;
  if (this->_internal_inventory_space_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_inventory_space_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInventoryDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetInventoryDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInventoryDataAck::GetClassData() const { return &_class_data_; }


void GetInventoryDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetInventoryDataAck*>(&to_msg);
  auto& from = static_cast<const GetInventoryDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetInventoryDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_impl_.unlocked_equipment_slots_.MergeFrom(from._impl_.unlocked_equipment_slots_);
  if (from._internal_inventory_space_num() != 0) {
    _this->_internal_set_inventory_space_num(from._internal_inventory_space_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInventoryDataAck::CopyFrom(const GetInventoryDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetInventoryDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInventoryDataAck::IsInitialized() const {
  return true;
}

void GetInventoryDataAck::InternalSwap(GetInventoryDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.unlocked_equipment_slots_.InternalSwap(&other->_impl_.unlocked_equipment_slots_);
  swap(_impl_.inventory_space_num_, other->_impl_.inventory_space_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInventoryDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[54]);
}

// ===================================================================

class AlchemyRefineStartReq::_Internal {
 public:
};

AlchemyRefineStartReq::AlchemyRefineStartReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineStartReq)
}
AlchemyRefineStartReq::AlchemyRefineStartReq(const AlchemyRefineStartReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlchemyRefineStartReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.recipe_id_){}
    , decltype(_impl_.material_id_){}
    , decltype(_impl_.target_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.recipe_id_, &from._impl_.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.target_num_) -
    reinterpret_cast<char*>(&_impl_.recipe_id_)) + sizeof(_impl_.target_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineStartReq)
}

inline void AlchemyRefineStartReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.recipe_id_){0}
    , decltype(_impl_.material_id_){0}
    , decltype(_impl_.target_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AlchemyRefineStartReq::~AlchemyRefineStartReq() {
  // @@protoc_insertion_point(destructor:idlepb.AlchemyRefineStartReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlchemyRefineStartReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AlchemyRefineStartReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlchemyRefineStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AlchemyRefineStartReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.target_num_) -
      reinterpret_cast<char*>(&_impl_.recipe_id_)) + sizeof(_impl_.target_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlchemyRefineStartReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 recipe_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.recipe_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 material_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.material_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.target_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlchemyRefineStartReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AlchemyRefineStartReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 recipe_id = 1;
  if (this->_internal_recipe_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_recipe_id(), target);
  }

  // int32 material_id = 2;
  if (this->_internal_material_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_material_id(), target);
  }

  // int32 target_num = 3;
  if (this->_internal_target_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_target_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AlchemyRefineStartReq)
  return target;
}

size_t AlchemyRefineStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AlchemyRefineStartReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 recipe_id = 1;
  if (this->_internal_recipe_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_recipe_id());
  }

  // int32 material_id = 2;
  if (this->_internal_material_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_material_id());
  }

  // int32 target_num = 3;
  if (this->_internal_target_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineStartReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlchemyRefineStartReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineStartReq::GetClassData() const { return &_class_data_; }


void AlchemyRefineStartReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlchemyRefineStartReq*>(&to_msg);
  auto& from = static_cast<const AlchemyRefineStartReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AlchemyRefineStartReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_recipe_id() != 0) {
    _this->_internal_set_recipe_id(from._internal_recipe_id());
  }
  if (from._internal_material_id() != 0) {
    _this->_internal_set_material_id(from._internal_material_id());
  }
  if (from._internal_target_num() != 0) {
    _this->_internal_set_target_num(from._internal_target_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlchemyRefineStartReq::CopyFrom(const AlchemyRefineStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AlchemyRefineStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlchemyRefineStartReq::IsInitialized() const {
  return true;
}

void AlchemyRefineStartReq::InternalSwap(AlchemyRefineStartReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AlchemyRefineStartReq, _impl_.target_num_)
      + sizeof(AlchemyRefineStartReq::_impl_.target_num_)
      - PROTOBUF_FIELD_OFFSET(AlchemyRefineStartReq, _impl_.recipe_id_)>(
          reinterpret_cast<char*>(&_impl_.recipe_id_),
          reinterpret_cast<char*>(&other->_impl_.recipe_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineStartReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[55]);
}

// ===================================================================

class AlchemyRefineStartAck::_Internal {
 public:
};

AlchemyRefineStartAck::AlchemyRefineStartAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineStartAck)
}
AlchemyRefineStartAck::AlchemyRefineStartAck(const AlchemyRefineStartAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlchemyRefineStartAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineStartAck)
}

inline void AlchemyRefineStartAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AlchemyRefineStartAck::~AlchemyRefineStartAck() {
  // @@protoc_insertion_point(destructor:idlepb.AlchemyRefineStartAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlchemyRefineStartAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AlchemyRefineStartAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlchemyRefineStartAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AlchemyRefineStartAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlchemyRefineStartAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlchemyRefineStartAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AlchemyRefineStartAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AlchemyRefineStartAck)
  return target;
}

size_t AlchemyRefineStartAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AlchemyRefineStartAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineStartAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlchemyRefineStartAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineStartAck::GetClassData() const { return &_class_data_; }


void AlchemyRefineStartAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlchemyRefineStartAck*>(&to_msg);
  auto& from = static_cast<const AlchemyRefineStartAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AlchemyRefineStartAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlchemyRefineStartAck::CopyFrom(const AlchemyRefineStartAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AlchemyRefineStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlchemyRefineStartAck::IsInitialized() const {
  return true;
}

void AlchemyRefineStartAck::InternalSwap(AlchemyRefineStartAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineStartAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[56]);
}

// ===================================================================

class AlchemyRefineCancelReq::_Internal {
 public:
};

AlchemyRefineCancelReq::AlchemyRefineCancelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineCancelReq)
}
AlchemyRefineCancelReq::AlchemyRefineCancelReq(const AlchemyRefineCancelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AlchemyRefineCancelReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineCancelReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineCancelReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineCancelReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineCancelReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[57]);
}

// ===================================================================

class AlchemyRefineCancelAck::_Internal {
 public:
};

AlchemyRefineCancelAck::AlchemyRefineCancelAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineCancelAck)
}
AlchemyRefineCancelAck::AlchemyRefineCancelAck(const AlchemyRefineCancelAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlchemyRefineCancelAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineCancelAck)
}

inline void AlchemyRefineCancelAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AlchemyRefineCancelAck::~AlchemyRefineCancelAck() {
  // @@protoc_insertion_point(destructor:idlepb.AlchemyRefineCancelAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlchemyRefineCancelAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AlchemyRefineCancelAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlchemyRefineCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AlchemyRefineCancelAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlchemyRefineCancelAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlchemyRefineCancelAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AlchemyRefineCancelAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AlchemyRefineCancelAck)
  return target;
}

size_t AlchemyRefineCancelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AlchemyRefineCancelAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineCancelAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlchemyRefineCancelAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineCancelAck::GetClassData() const { return &_class_data_; }


void AlchemyRefineCancelAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlchemyRefineCancelAck*>(&to_msg);
  auto& from = static_cast<const AlchemyRefineCancelAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AlchemyRefineCancelAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlchemyRefineCancelAck::CopyFrom(const AlchemyRefineCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AlchemyRefineCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlchemyRefineCancelAck::IsInitialized() const {
  return true;
}

void AlchemyRefineCancelAck::InternalSwap(AlchemyRefineCancelAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineCancelAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[58]);
}

// ===================================================================

class AlchemyRefineExtractReq::_Internal {
 public:
};

AlchemyRefineExtractReq::AlchemyRefineExtractReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineExtractReq)
}
AlchemyRefineExtractReq::AlchemyRefineExtractReq(const AlchemyRefineExtractReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AlchemyRefineExtractReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineExtractReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineExtractReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineExtractReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineExtractReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[59]);
}

// ===================================================================

class AlchemyRefineExtractAck::_Internal {
 public:
};

AlchemyRefineExtractAck::AlchemyRefineExtractAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AlchemyRefineExtractAck)
}
AlchemyRefineExtractAck::AlchemyRefineExtractAck(const AlchemyRefineExtractAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AlchemyRefineExtractAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AlchemyRefineExtractAck)
}

inline void AlchemyRefineExtractAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AlchemyRefineExtractAck::~AlchemyRefineExtractAck() {
  // @@protoc_insertion_point(destructor:idlepb.AlchemyRefineExtractAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AlchemyRefineExtractAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AlchemyRefineExtractAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AlchemyRefineExtractAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AlchemyRefineExtractAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlchemyRefineExtractAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlchemyRefineExtractAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AlchemyRefineExtractAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AlchemyRefineExtractAck)
  return target;
}

size_t AlchemyRefineExtractAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AlchemyRefineExtractAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlchemyRefineExtractAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AlchemyRefineExtractAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlchemyRefineExtractAck::GetClassData() const { return &_class_data_; }


void AlchemyRefineExtractAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AlchemyRefineExtractAck*>(&to_msg);
  auto& from = static_cast<const AlchemyRefineExtractAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AlchemyRefineExtractAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlchemyRefineExtractAck::CopyFrom(const AlchemyRefineExtractAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AlchemyRefineExtractAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlchemyRefineExtractAck::IsInitialized() const {
  return true;
}

void AlchemyRefineExtractAck::InternalSwap(AlchemyRefineExtractAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AlchemyRefineExtractAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[60]);
}

// ===================================================================

class CreateCharacterReq::_Internal {
 public:
  static const ::idlepb::CharacterModelConfig& data(const CreateCharacterReq* msg);
};

const ::idlepb::CharacterModelConfig&
CreateCharacterReq::_Internal::data(const CreateCharacterReq* msg) {
  return *msg->_impl_.data_;
}
void CreateCharacterReq::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
CreateCharacterReq::CreateCharacterReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.CreateCharacterReq)
}
CreateCharacterReq::CreateCharacterReq(const CreateCharacterReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateCharacterReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_data_){from._impl_.model_data_}
    , /*decltype(_impl_._model_data_cached_byte_size_)*/{0}
    , decltype(_impl_.hero_name_){}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.skeleton_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hero_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hero_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hero_name().empty()) {
    _this->_impl_.hero_name_.Set(from._internal_hero_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::CharacterModelConfig(*from._impl_.data_);
  }
  _this->_impl_.skeleton_type_ = from._impl_.skeleton_type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.CreateCharacterReq)
}

inline void CreateCharacterReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_data_){arena}
    , /*decltype(_impl_._model_data_cached_byte_size_)*/{0}
    , decltype(_impl_.hero_name_){}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.skeleton_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hero_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hero_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateCharacterReq::~CreateCharacterReq() {
  // @@protoc_insertion_point(destructor:idlepb.CreateCharacterReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateCharacterReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_data_.~RepeatedField();
  _impl_.hero_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void CreateCharacterReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateCharacterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.CreateCharacterReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_data_.Clear();
  _impl_.hero_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.skeleton_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hero_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hero_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.CreateCharacterReq.hero_name"));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.CharacterModelConfig data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 skeleton_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.skeleton_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 model_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_model_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 56) {
          _internal_add_model_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateCharacterReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.CreateCharacterReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hero_name = 1;
  if (!this->_internal_hero_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hero_name().data(), static_cast<int>(this->_internal_hero_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.CreateCharacterReq.hero_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hero_name(), target);
  }

  // .idlepb.CharacterModelConfig data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // int32 skeleton_type = 6;
  if (this->_internal_skeleton_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_skeleton_type(), target);
  }

  // repeated int32 model_data = 7;
  {
    int byte_size = _impl_._model_data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          7, _internal_model_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.CreateCharacterReq)
  return target;
}

size_t CreateCharacterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.CreateCharacterReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 model_data = 7;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.model_data_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._model_data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string hero_name = 1;
  if (!this->_internal_hero_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hero_name());
  }

  // .idlepb.CharacterModelConfig data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // int32 skeleton_type = 6;
  if (this->_internal_skeleton_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_skeleton_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCharacterReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateCharacterReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCharacterReq::GetClassData() const { return &_class_data_; }


void CreateCharacterReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateCharacterReq*>(&to_msg);
  auto& from = static_cast<const CreateCharacterReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.CreateCharacterReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.model_data_.MergeFrom(from._impl_.model_data_);
  if (!from._internal_hero_name().empty()) {
    _this->_internal_set_hero_name(from._internal_hero_name());
  }
  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::CharacterModelConfig::MergeFrom(
        from._internal_data());
  }
  if (from._internal_skeleton_type() != 0) {
    _this->_internal_set_skeleton_type(from._internal_skeleton_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCharacterReq::CopyFrom(const CreateCharacterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.CreateCharacterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterReq::IsInitialized() const {
  return true;
}

void CreateCharacterReq::InternalSwap(CreateCharacterReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.model_data_.InternalSwap(&other->_impl_.model_data_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hero_name_, lhs_arena,
      &other->_impl_.hero_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCharacterReq, _impl_.skeleton_type_)
      + sizeof(CreateCharacterReq::_impl_.skeleton_type_)
      - PROTOBUF_FIELD_OFFSET(CreateCharacterReq, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[61]);
}

// ===================================================================

class CreateCharacterAck::_Internal {
 public:
};

CreateCharacterAck::CreateCharacterAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.CreateCharacterAck)
}
CreateCharacterAck::CreateCharacterAck(const CreateCharacterAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateCharacterAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.CreateCharacterAck)
}

inline void CreateCharacterAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateCharacterAck::~CreateCharacterAck() {
  // @@protoc_insertion_point(destructor:idlepb.CreateCharacterAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateCharacterAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CreateCharacterAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateCharacterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.CreateCharacterAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateCharacterAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.CreateCharacterAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.CreateCharacterAck)
  return target;
}

size_t CreateCharacterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.CreateCharacterAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCharacterAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateCharacterAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCharacterAck::GetClassData() const { return &_class_data_; }


void CreateCharacterAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateCharacterAck*>(&to_msg);
  auto& from = static_cast<const CreateCharacterAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.CreateCharacterAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCharacterAck::CopyFrom(const CreateCharacterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.CreateCharacterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterAck::IsInitialized() const {
  return true;
}

void CreateCharacterAck::InternalSwap(CreateCharacterAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[62]);
}

// ===================================================================

class SystemNotice::_Internal {
 public:
};

SystemNotice::SystemNotice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SystemNotice)
}
SystemNotice::SystemNotice(const SystemNotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SystemNotice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.s1_){}
    , decltype(_impl_.s2_){}
    , decltype(_impl_.s3_){}
    , decltype(_impl_.n1_){}
    , decltype(_impl_.n2_){}
    , decltype(_impl_.n3_){}
    , decltype(_impl_.style_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s1().empty()) {
    _this->_impl_.s1_.Set(from._internal_s1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s2().empty()) {
    _this->_impl_.s2_.Set(from._internal_s2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.s3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_s3().empty()) {
    _this->_impl_.s3_.Set(from._internal_s3(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.n1_, &from._impl_.n1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.style_) -
    reinterpret_cast<char*>(&_impl_.n1_)) + sizeof(_impl_.style_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SystemNotice)
}

inline void SystemNotice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.s1_){}
    , decltype(_impl_.s2_){}
    , decltype(_impl_.s3_){}
    , decltype(_impl_.n1_){int64_t{0}}
    , decltype(_impl_.n2_){int64_t{0}}
    , decltype(_impl_.n3_){int64_t{0}}
    , decltype(_impl_.style_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.s1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.s2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.s3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.s3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SystemNotice::~SystemNotice() {
  // @@protoc_insertion_point(destructor:idlepb.SystemNotice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SystemNotice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
  _impl_.s1_.Destroy();
  _impl_.s2_.Destroy();
  _impl_.s3_.Destroy();
}

void SystemNotice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SystemNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SystemNotice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.s1_.ClearToEmpty();
  _impl_.s2_.ClearToEmpty();
  _impl_.s3_.ClearToEmpty();
  ::memset(&_impl_.n1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.style_) -
      reinterpret_cast<char*>(&_impl_.n1_)) + sizeof(_impl_.style_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemNotice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 style = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.style_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SystemNotice.text"));
        } else
          goto handle_unusual;
        continue;
      // string s1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_s1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SystemNotice.s1"));
        } else
          goto handle_unusual;
        continue;
      // string s2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_s2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SystemNotice.s2"));
        } else
          goto handle_unusual;
        continue;
      // string s3 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_s3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SystemNotice.s3"));
        } else
          goto handle_unusual;
        continue;
      // int64 n1 = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _impl_.n1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 n2 = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _impl_.n2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 n3 = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _impl_.n3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SystemNotice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SystemNotice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 style = 1;
  if (this->_internal_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_style(), target);
  }

  // string text = 2;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SystemNotice.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  // string s1 = 10;
  if (!this->_internal_s1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s1().data(), static_cast<int>(this->_internal_s1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SystemNotice.s1");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_s1(), target);
  }

  // string s2 = 11;
  if (!this->_internal_s2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s2().data(), static_cast<int>(this->_internal_s2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SystemNotice.s2");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_s2(), target);
  }

  // string s3 = 12;
  if (!this->_internal_s3().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s3().data(), static_cast<int>(this->_internal_s3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SystemNotice.s3");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_s3(), target);
  }

  // int64 n1 = 20;
  if (this->_internal_n1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(20, this->_internal_n1(), target);
  }

  // int64 n2 = 21;
  if (this->_internal_n2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(21, this->_internal_n2(), target);
  }

  // int64 n3 = 22;
  if (this->_internal_n3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(22, this->_internal_n3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SystemNotice)
  return target;
}

size_t SystemNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SystemNotice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 2;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string s1 = 10;
  if (!this->_internal_s1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s1());
  }

  // string s2 = 11;
  if (!this->_internal_s2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s2());
  }

  // string s3 = 12;
  if (!this->_internal_s3().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s3());
  }

  // int64 n1 = 20;
  if (this->_internal_n1() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_n1());
  }

  // int64 n2 = 21;
  if (this->_internal_n2() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_n2());
  }

  // int64 n3 = 22;
  if (this->_internal_n3() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_n3());
  }

  // int32 style = 1;
  if (this->_internal_style() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_style());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SystemNotice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SystemNotice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SystemNotice::GetClassData() const { return &_class_data_; }


void SystemNotice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SystemNotice*>(&to_msg);
  auto& from = static_cast<const SystemNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SystemNotice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (!from._internal_s1().empty()) {
    _this->_internal_set_s1(from._internal_s1());
  }
  if (!from._internal_s2().empty()) {
    _this->_internal_set_s2(from._internal_s2());
  }
  if (!from._internal_s3().empty()) {
    _this->_internal_set_s3(from._internal_s3());
  }
  if (from._internal_n1() != 0) {
    _this->_internal_set_n1(from._internal_n1());
  }
  if (from._internal_n2() != 0) {
    _this->_internal_set_n2(from._internal_n2());
  }
  if (from._internal_n3() != 0) {
    _this->_internal_set_n3(from._internal_n3());
  }
  if (from._internal_style() != 0) {
    _this->_internal_set_style(from._internal_style());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SystemNotice::CopyFrom(const SystemNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SystemNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemNotice::IsInitialized() const {
  return true;
}

void SystemNotice::InternalSwap(SystemNotice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.s1_, lhs_arena,
      &other->_impl_.s1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.s2_, lhs_arena,
      &other->_impl_.s2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.s3_, lhs_arena,
      &other->_impl_.s3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemNotice, _impl_.style_)
      + sizeof(SystemNotice::_impl_.style_)
      - PROTOBUF_FIELD_OFFSET(SystemNotice, _impl_.n1_)>(
          reinterpret_cast<char*>(&_impl_.n1_),
          reinterpret_cast<char*>(&other->_impl_.n1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[63]);
}

// ===================================================================

class GetRoleShopDataReq::_Internal {
 public:
};

GetRoleShopDataReq::GetRoleShopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleShopDataReq)
}
GetRoleShopDataReq::GetRoleShopDataReq(const GetRoleShopDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleShopDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleShopDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleShopDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleShopDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleShopDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[64]);
}

// ===================================================================

class GetRoleShopDataAck::_Internal {
 public:
  static const ::idlepb::RoleShopData& data(const GetRoleShopDataAck* msg);
};

const ::idlepb::RoleShopData&
GetRoleShopDataAck::_Internal::data(const GetRoleShopDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleShopDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleShopDataAck::GetRoleShopDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleShopDataAck)
}
GetRoleShopDataAck::GetRoleShopDataAck(const GetRoleShopDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleShopDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleShopData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleShopDataAck)
}

inline void GetRoleShopDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleShopDataAck::~GetRoleShopDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleShopDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleShopDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleShopDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleShopDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleShopDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleShopDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleShopData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleShopDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleShopDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleShopData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleShopDataAck)
  return target;
}

size_t GetRoleShopDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleShopDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleShopData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleShopDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleShopDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleShopDataAck::GetClassData() const { return &_class_data_; }


void GetRoleShopDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleShopDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleShopDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleShopDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleShopData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleShopDataAck::CopyFrom(const GetRoleShopDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleShopDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleShopDataAck::IsInitialized() const {
  return true;
}

void GetRoleShopDataAck::InternalSwap(GetRoleShopDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleShopDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[65]);
}

// ===================================================================

class RefreshShopReq::_Internal {
 public:
};

RefreshShopReq::RefreshShopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshShopReq)
}
RefreshShopReq::RefreshShopReq(const RefreshShopReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RefreshShopReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshShopReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshShopReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshShopReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RefreshShopReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[66]);
}

// ===================================================================

class RefreshShopAck::_Internal {
 public:
  static const ::idlepb::RoleShopData& data(const RefreshShopAck* msg);
};

const ::idlepb::RoleShopData&
RefreshShopAck::_Internal::data(const RefreshShopAck* msg) {
  return *msg->_impl_.data_;
}
void RefreshShopAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshShopAck::RefreshShopAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshShopAck)
}
RefreshShopAck::RefreshShopAck(const RefreshShopAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshShopAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleShopData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshShopAck)
}

inline void RefreshShopAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshShopAck::~RefreshShopAck() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshShopAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshShopAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshShopAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshShopAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshShopAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshShopAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleShopData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshShopAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshShopAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.RoleShopData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshShopAck)
  return target;
}

size_t RefreshShopAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshShopAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleShopData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshShopAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshShopAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshShopAck::GetClassData() const { return &_class_data_; }


void RefreshShopAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshShopAck*>(&to_msg);
  auto& from = static_cast<const RefreshShopAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshShopAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleShopData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshShopAck::CopyFrom(const RefreshShopAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshShopAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshShopAck::IsInitialized() const {
  return true;
}

void RefreshShopAck::InternalSwap(RefreshShopAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshShopAck, _impl_.ok_)
      + sizeof(RefreshShopAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(RefreshShopAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshShopAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[67]);
}

// ===================================================================

class BuyShopItemReq::_Internal {
 public:
};

BuyShopItemReq::BuyShopItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuyShopItemReq)
}
BuyShopItemReq::BuyShopItemReq(const BuyShopItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuyShopItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.BuyShopItemReq)
}

inline void BuyShopItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuyShopItemReq::~BuyShopItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.BuyShopItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuyShopItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyShopItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuyShopItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuyShopItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyShopItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyShopItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuyShopItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuyShopItemReq)
  return target;
}

size_t BuyShopItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuyShopItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyShopItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuyShopItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyShopItemReq::GetClassData() const { return &_class_data_; }


void BuyShopItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuyShopItemReq*>(&to_msg);
  auto& from = static_cast<const BuyShopItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuyShopItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyShopItemReq::CopyFrom(const BuyShopItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuyShopItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyShopItemReq::IsInitialized() const {
  return true;
}

void BuyShopItemReq::InternalSwap(BuyShopItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyShopItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[68]);
}

// ===================================================================

class BuyShopItemAck::_Internal {
 public:
};

BuyShopItemAck::BuyShopItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuyShopItemAck)
}
BuyShopItemAck::BuyShopItemAck(const BuyShopItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuyShopItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.BuyShopItemAck)
}

inline void BuyShopItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuyShopItemAck::~BuyShopItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.BuyShopItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuyShopItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyShopItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuyShopItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuyShopItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyShopItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyShopItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuyShopItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuyShopItemAck)
  return target;
}

size_t BuyShopItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuyShopItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyShopItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuyShopItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyShopItemAck::GetClassData() const { return &_class_data_; }


void BuyShopItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuyShopItemAck*>(&to_msg);
  auto& from = static_cast<const BuyShopItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuyShopItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyShopItemAck::CopyFrom(const BuyShopItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuyShopItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyShopItemAck::IsInitialized() const {
  return true;
}

void BuyShopItemAck::InternalSwap(BuyShopItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyShopItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[69]);
}

// ===================================================================

class GetRoleDeluxeShopDataReq::_Internal {
 public:
};

GetRoleDeluxeShopDataReq::GetRoleDeluxeShopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleDeluxeShopDataReq)
}
GetRoleDeluxeShopDataReq::GetRoleDeluxeShopDataReq(const GetRoleDeluxeShopDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleDeluxeShopDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleDeluxeShopDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleDeluxeShopDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleDeluxeShopDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleDeluxeShopDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[70]);
}

// ===================================================================

class GetRoleDeluxeShopDataAck::_Internal {
 public:
  static const ::idlepb::RoleDeluxeShopData& data(const GetRoleDeluxeShopDataAck* msg);
};

const ::idlepb::RoleDeluxeShopData&
GetRoleDeluxeShopDataAck::_Internal::data(const GetRoleDeluxeShopDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleDeluxeShopDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleDeluxeShopDataAck::GetRoleDeluxeShopDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleDeluxeShopDataAck)
}
GetRoleDeluxeShopDataAck::GetRoleDeluxeShopDataAck(const GetRoleDeluxeShopDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleDeluxeShopDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleDeluxeShopData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleDeluxeShopDataAck)
}

inline void GetRoleDeluxeShopDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleDeluxeShopDataAck::~GetRoleDeluxeShopDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleDeluxeShopDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleDeluxeShopDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleDeluxeShopDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleDeluxeShopDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleDeluxeShopDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleDeluxeShopDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleDeluxeShopData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleDeluxeShopDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleDeluxeShopDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleDeluxeShopData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleDeluxeShopDataAck)
  return target;
}

size_t GetRoleDeluxeShopDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleDeluxeShopDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleDeluxeShopData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleDeluxeShopDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleDeluxeShopDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleDeluxeShopDataAck::GetClassData() const { return &_class_data_; }


void GetRoleDeluxeShopDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleDeluxeShopDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleDeluxeShopDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleDeluxeShopDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleDeluxeShopData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleDeluxeShopDataAck::CopyFrom(const GetRoleDeluxeShopDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleDeluxeShopDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleDeluxeShopDataAck::IsInitialized() const {
  return true;
}

void GetRoleDeluxeShopDataAck::InternalSwap(GetRoleDeluxeShopDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleDeluxeShopDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[71]);
}

// ===================================================================

class RefreshDeluxeShopReq::_Internal {
 public:
};

RefreshDeluxeShopReq::RefreshDeluxeShopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshDeluxeShopReq)
}
RefreshDeluxeShopReq::RefreshDeluxeShopReq(const RefreshDeluxeShopReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RefreshDeluxeShopReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshDeluxeShopReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshDeluxeShopReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshDeluxeShopReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RefreshDeluxeShopReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[72]);
}

// ===================================================================

class RefreshDeluxeShopAck::_Internal {
 public:
  static const ::idlepb::RoleDeluxeShopData& data(const RefreshDeluxeShopAck* msg);
};

const ::idlepb::RoleDeluxeShopData&
RefreshDeluxeShopAck::_Internal::data(const RefreshDeluxeShopAck* msg) {
  return *msg->_impl_.data_;
}
void RefreshDeluxeShopAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshDeluxeShopAck::RefreshDeluxeShopAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshDeluxeShopAck)
}
RefreshDeluxeShopAck::RefreshDeluxeShopAck(const RefreshDeluxeShopAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshDeluxeShopAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleDeluxeShopData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshDeluxeShopAck)
}

inline void RefreshDeluxeShopAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshDeluxeShopAck::~RefreshDeluxeShopAck() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshDeluxeShopAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshDeluxeShopAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshDeluxeShopAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshDeluxeShopAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshDeluxeShopAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshDeluxeShopAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleDeluxeShopData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshDeluxeShopAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshDeluxeShopAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.RoleDeluxeShopData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshDeluxeShopAck)
  return target;
}

size_t RefreshDeluxeShopAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshDeluxeShopAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleDeluxeShopData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshDeluxeShopAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshDeluxeShopAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshDeluxeShopAck::GetClassData() const { return &_class_data_; }


void RefreshDeluxeShopAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshDeluxeShopAck*>(&to_msg);
  auto& from = static_cast<const RefreshDeluxeShopAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshDeluxeShopAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleDeluxeShopData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshDeluxeShopAck::CopyFrom(const RefreshDeluxeShopAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshDeluxeShopAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshDeluxeShopAck::IsInitialized() const {
  return true;
}

void RefreshDeluxeShopAck::InternalSwap(RefreshDeluxeShopAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefreshDeluxeShopAck, _impl_.ok_)
      + sizeof(RefreshDeluxeShopAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(RefreshDeluxeShopAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshDeluxeShopAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[73]);
}

// ===================================================================

class BuyDeluxeShopItemReq::_Internal {
 public:
};

BuyDeluxeShopItemReq::BuyDeluxeShopItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuyDeluxeShopItemReq)
}
BuyDeluxeShopItemReq::BuyDeluxeShopItemReq(const BuyDeluxeShopItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuyDeluxeShopItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.BuyDeluxeShopItemReq)
}

inline void BuyDeluxeShopItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuyDeluxeShopItemReq::~BuyDeluxeShopItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.BuyDeluxeShopItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuyDeluxeShopItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyDeluxeShopItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuyDeluxeShopItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuyDeluxeShopItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyDeluxeShopItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyDeluxeShopItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuyDeluxeShopItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuyDeluxeShopItemReq)
  return target;
}

size_t BuyDeluxeShopItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuyDeluxeShopItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyDeluxeShopItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuyDeluxeShopItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyDeluxeShopItemReq::GetClassData() const { return &_class_data_; }


void BuyDeluxeShopItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuyDeluxeShopItemReq*>(&to_msg);
  auto& from = static_cast<const BuyDeluxeShopItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuyDeluxeShopItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyDeluxeShopItemReq::CopyFrom(const BuyDeluxeShopItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuyDeluxeShopItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyDeluxeShopItemReq::IsInitialized() const {
  return true;
}

void BuyDeluxeShopItemReq::InternalSwap(BuyDeluxeShopItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyDeluxeShopItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[74]);
}

// ===================================================================

class BuyDeluxeShopItemAck::_Internal {
 public:
};

BuyDeluxeShopItemAck::BuyDeluxeShopItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuyDeluxeShopItemAck)
}
BuyDeluxeShopItemAck::BuyDeluxeShopItemAck(const BuyDeluxeShopItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuyDeluxeShopItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.BuyDeluxeShopItemAck)
}

inline void BuyDeluxeShopItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuyDeluxeShopItemAck::~BuyDeluxeShopItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.BuyDeluxeShopItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuyDeluxeShopItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuyDeluxeShopItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuyDeluxeShopItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuyDeluxeShopItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuyDeluxeShopItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuyDeluxeShopItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuyDeluxeShopItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuyDeluxeShopItemAck)
  return target;
}

size_t BuyDeluxeShopItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuyDeluxeShopItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuyDeluxeShopItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuyDeluxeShopItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuyDeluxeShopItemAck::GetClassData() const { return &_class_data_; }


void BuyDeluxeShopItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuyDeluxeShopItemAck*>(&to_msg);
  auto& from = static_cast<const BuyDeluxeShopItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuyDeluxeShopItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuyDeluxeShopItemAck::CopyFrom(const BuyDeluxeShopItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuyDeluxeShopItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyDeluxeShopItemAck::IsInitialized() const {
  return true;
}

void BuyDeluxeShopItemAck::InternalSwap(BuyDeluxeShopItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuyDeluxeShopItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[75]);
}

// ===================================================================

class UnlockDeluxeShopReq::_Internal {
 public:
};

UnlockDeluxeShopReq::UnlockDeluxeShopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockDeluxeShopReq)
}
UnlockDeluxeShopReq::UnlockDeluxeShopReq(const UnlockDeluxeShopReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UnlockDeluxeShopReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockDeluxeShopReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockDeluxeShopReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockDeluxeShopReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UnlockDeluxeShopReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[76]);
}

// ===================================================================

class UnlockDeluxeShopAck::_Internal {
 public:
  static const ::idlepb::RoleDeluxeShopData& data(const UnlockDeluxeShopAck* msg);
};

const ::idlepb::RoleDeluxeShopData&
UnlockDeluxeShopAck::_Internal::data(const UnlockDeluxeShopAck* msg) {
  return *msg->_impl_.data_;
}
void UnlockDeluxeShopAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
UnlockDeluxeShopAck::UnlockDeluxeShopAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockDeluxeShopAck)
}
UnlockDeluxeShopAck::UnlockDeluxeShopAck(const UnlockDeluxeShopAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockDeluxeShopAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleDeluxeShopData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockDeluxeShopAck)
}

inline void UnlockDeluxeShopAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockDeluxeShopAck::~UnlockDeluxeShopAck() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockDeluxeShopAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockDeluxeShopAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void UnlockDeluxeShopAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockDeluxeShopAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockDeluxeShopAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockDeluxeShopAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleDeluxeShopData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockDeluxeShopAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockDeluxeShopAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.RoleDeluxeShopData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockDeluxeShopAck)
  return target;
}

size_t UnlockDeluxeShopAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockDeluxeShopAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleDeluxeShopData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockDeluxeShopAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockDeluxeShopAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockDeluxeShopAck::GetClassData() const { return &_class_data_; }


void UnlockDeluxeShopAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockDeluxeShopAck*>(&to_msg);
  auto& from = static_cast<const UnlockDeluxeShopAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockDeluxeShopAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleDeluxeShopData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockDeluxeShopAck::CopyFrom(const UnlockDeluxeShopAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockDeluxeShopAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockDeluxeShopAck::IsInitialized() const {
  return true;
}

void UnlockDeluxeShopAck::InternalSwap(UnlockDeluxeShopAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnlockDeluxeShopAck, _impl_.ok_)
      + sizeof(UnlockDeluxeShopAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(UnlockDeluxeShopAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockDeluxeShopAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[77]);
}

// ===================================================================

class RefreshDeluxeShopUnlocked::_Internal {
 public:
};

RefreshDeluxeShopUnlocked::RefreshDeluxeShopUnlocked(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshDeluxeShopUnlocked)
}
RefreshDeluxeShopUnlocked::RefreshDeluxeShopUnlocked(const RefreshDeluxeShopUnlocked& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshDeluxeShopUnlocked* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_unlocked_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_unlocked_ = from._impl_.is_unlocked_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshDeluxeShopUnlocked)
}

inline void RefreshDeluxeShopUnlocked::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_unlocked_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshDeluxeShopUnlocked::~RefreshDeluxeShopUnlocked() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshDeluxeShopUnlocked)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshDeluxeShopUnlocked::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefreshDeluxeShopUnlocked::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshDeluxeShopUnlocked::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshDeluxeShopUnlocked)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_unlocked_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshDeluxeShopUnlocked::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_unlocked = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_unlocked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshDeluxeShopUnlocked::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshDeluxeShopUnlocked)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_unlocked = 1;
  if (this->_internal_is_unlocked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_unlocked(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshDeluxeShopUnlocked)
  return target;
}

size_t RefreshDeluxeShopUnlocked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshDeluxeShopUnlocked)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_unlocked = 1;
  if (this->_internal_is_unlocked() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshDeluxeShopUnlocked::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshDeluxeShopUnlocked::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshDeluxeShopUnlocked::GetClassData() const { return &_class_data_; }


void RefreshDeluxeShopUnlocked::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshDeluxeShopUnlocked*>(&to_msg);
  auto& from = static_cast<const RefreshDeluxeShopUnlocked&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshDeluxeShopUnlocked)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_unlocked() != 0) {
    _this->_internal_set_is_unlocked(from._internal_is_unlocked());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshDeluxeShopUnlocked::CopyFrom(const RefreshDeluxeShopUnlocked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshDeluxeShopUnlocked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshDeluxeShopUnlocked::IsInitialized() const {
  return true;
}

void RefreshDeluxeShopUnlocked::InternalSwap(RefreshDeluxeShopUnlocked* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_unlocked_, other->_impl_.is_unlocked_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshDeluxeShopUnlocked::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[78]);
}

// ===================================================================

class UnlockArenaReq::_Internal {
 public:
};

UnlockArenaReq::UnlockArenaReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockArenaReq)
}
UnlockArenaReq::UnlockArenaReq(const UnlockArenaReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockArenaReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arena_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.arena_id_ = from._impl_.arena_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockArenaReq)
}

inline void UnlockArenaReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arena_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockArenaReq::~UnlockArenaReq() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockArenaReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockArenaReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockArenaReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockArenaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockArenaReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arena_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockArenaReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 arena_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.arena_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockArenaReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockArenaReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arena_id = 1;
  if (this->_internal_arena_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_arena_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockArenaReq)
  return target;
}

size_t UnlockArenaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockArenaReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 arena_id = 1;
  if (this->_internal_arena_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_arena_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockArenaReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockArenaReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockArenaReq::GetClassData() const { return &_class_data_; }


void UnlockArenaReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockArenaReq*>(&to_msg);
  auto& from = static_cast<const UnlockArenaReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockArenaReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_arena_id() != 0) {
    _this->_internal_set_arena_id(from._internal_arena_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockArenaReq::CopyFrom(const UnlockArenaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockArenaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockArenaReq::IsInitialized() const {
  return true;
}

void UnlockArenaReq::InternalSwap(UnlockArenaReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.arena_id_, other->_impl_.arena_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockArenaReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[79]);
}

// ===================================================================

class UnlockArenaAck::_Internal {
 public:
};

UnlockArenaAck::UnlockArenaAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockArenaAck)
}
UnlockArenaAck::UnlockArenaAck(const UnlockArenaAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockArenaAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockArenaAck)
}

inline void UnlockArenaAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockArenaAck::~UnlockArenaAck() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockArenaAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockArenaAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockArenaAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockArenaAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockArenaAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockArenaAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockArenaAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockArenaAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockArenaAck)
  return target;
}

size_t UnlockArenaAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockArenaAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockArenaAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockArenaAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockArenaAck::GetClassData() const { return &_class_data_; }


void UnlockArenaAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockArenaAck*>(&to_msg);
  auto& from = static_cast<const UnlockArenaAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockArenaAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockArenaAck::CopyFrom(const UnlockArenaAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockArenaAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockArenaAck::IsInitialized() const {
  return true;
}

void UnlockArenaAck::InternalSwap(UnlockArenaAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockArenaAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[80]);
}

// ===================================================================

class NotifyUnlockArenaChallengeResult::_Internal {
 public:
};

NotifyUnlockArenaChallengeResult::NotifyUnlockArenaChallengeResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyUnlockArenaChallengeResult)
}
NotifyUnlockArenaChallengeResult::NotifyUnlockArenaChallengeResult(const NotifyUnlockArenaChallengeResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyUnlockArenaChallengeResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.arena_id_){}
    , decltype(_impl_.door_id_){}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.arena_id_, &from._impl_.arena_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ok_) -
    reinterpret_cast<char*>(&_impl_.arena_id_)) + sizeof(_impl_.ok_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyUnlockArenaChallengeResult)
}

inline void NotifyUnlockArenaChallengeResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.arena_id_){0}
    , decltype(_impl_.door_id_){0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyUnlockArenaChallengeResult::~NotifyUnlockArenaChallengeResult() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyUnlockArenaChallengeResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyUnlockArenaChallengeResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyUnlockArenaChallengeResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyUnlockArenaChallengeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyUnlockArenaChallengeResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.arena_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ok_) -
      reinterpret_cast<char*>(&_impl_.arena_id_)) + sizeof(_impl_.ok_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUnlockArenaChallengeResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 arena_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.arena_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 door_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.door_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ok = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUnlockArenaChallengeResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyUnlockArenaChallengeResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arena_id = 1;
  if (this->_internal_arena_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_arena_id(), target);
  }

  // int32 door_id = 2;
  if (this->_internal_door_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_door_id(), target);
  }

  // bool ok = 3;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyUnlockArenaChallengeResult)
  return target;
}

size_t NotifyUnlockArenaChallengeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyUnlockArenaChallengeResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 arena_id = 1;
  if (this->_internal_arena_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_arena_id());
  }

  // int32 door_id = 2;
  if (this->_internal_door_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_door_id());
  }

  // bool ok = 3;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUnlockArenaChallengeResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyUnlockArenaChallengeResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUnlockArenaChallengeResult::GetClassData() const { return &_class_data_; }


void NotifyUnlockArenaChallengeResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyUnlockArenaChallengeResult*>(&to_msg);
  auto& from = static_cast<const NotifyUnlockArenaChallengeResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyUnlockArenaChallengeResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_arena_id() != 0) {
    _this->_internal_set_arena_id(from._internal_arena_id());
  }
  if (from._internal_door_id() != 0) {
    _this->_internal_set_door_id(from._internal_door_id());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUnlockArenaChallengeResult::CopyFrom(const NotifyUnlockArenaChallengeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyUnlockArenaChallengeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUnlockArenaChallengeResult::IsInitialized() const {
  return true;
}

void NotifyUnlockArenaChallengeResult::InternalSwap(NotifyUnlockArenaChallengeResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyUnlockArenaChallengeResult, _impl_.ok_)
      + sizeof(NotifyUnlockArenaChallengeResult::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(NotifyUnlockArenaChallengeResult, _impl_.arena_id_)>(
          reinterpret_cast<char*>(&_impl_.arena_id_),
          reinterpret_cast<char*>(&other->_impl_.arena_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUnlockArenaChallengeResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[81]);
}

// ===================================================================

class RequestRefreshRoleCombatPower::_Internal {
 public:
};

RequestRefreshRoleCombatPower::RequestRefreshRoleCombatPower(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestRefreshRoleCombatPower)
}
RequestRefreshRoleCombatPower::RequestRefreshRoleCombatPower(const RequestRefreshRoleCombatPower& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RequestRefreshRoleCombatPower* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestRefreshRoleCombatPower)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestRefreshRoleCombatPower::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestRefreshRoleCombatPower::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestRefreshRoleCombatPower::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[82]);
}

// ===================================================================

class NotifyRoleCombatPower::_Internal {
 public:
};

NotifyRoleCombatPower::NotifyRoleCombatPower(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyRoleCombatPower)
}
NotifyRoleCombatPower::NotifyRoleCombatPower(const NotifyRoleCombatPower& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyRoleCombatPower* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.old_value_){}
    , decltype(_impl_.new_value_){}
    , decltype(_impl_.show_notice_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.old_value_, &from._impl_.old_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.show_notice_) -
    reinterpret_cast<char*>(&_impl_.old_value_)) + sizeof(_impl_.show_notice_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyRoleCombatPower)
}

inline void NotifyRoleCombatPower::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.old_value_){int64_t{0}}
    , decltype(_impl_.new_value_){int64_t{0}}
    , decltype(_impl_.show_notice_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyRoleCombatPower::~NotifyRoleCombatPower() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyRoleCombatPower)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyRoleCombatPower::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyRoleCombatPower::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyRoleCombatPower::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyRoleCombatPower)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.old_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.show_notice_) -
      reinterpret_cast<char*>(&_impl_.old_value_)) + sizeof(_impl_.show_notice_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRoleCombatPower::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 old_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.old_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 new_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.new_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool show_notice = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.show_notice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyRoleCombatPower::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyRoleCombatPower)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 old_value = 1;
  if (this->_internal_old_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_old_value(), target);
  }

  // int64 new_value = 2;
  if (this->_internal_new_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_new_value(), target);
  }

  // bool show_notice = 3;
  if (this->_internal_show_notice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_show_notice(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyRoleCombatPower)
  return target;
}

size_t NotifyRoleCombatPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyRoleCombatPower)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 old_value = 1;
  if (this->_internal_old_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_old_value());
  }

  // int64 new_value = 2;
  if (this->_internal_new_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_new_value());
  }

  // bool show_notice = 3;
  if (this->_internal_show_notice() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyRoleCombatPower::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyRoleCombatPower::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyRoleCombatPower::GetClassData() const { return &_class_data_; }


void NotifyRoleCombatPower::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyRoleCombatPower*>(&to_msg);
  auto& from = static_cast<const NotifyRoleCombatPower&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyRoleCombatPower)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_old_value() != 0) {
    _this->_internal_set_old_value(from._internal_old_value());
  }
  if (from._internal_new_value() != 0) {
    _this->_internal_set_new_value(from._internal_new_value());
  }
  if (from._internal_show_notice() != 0) {
    _this->_internal_set_show_notice(from._internal_show_notice());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyRoleCombatPower::CopyFrom(const NotifyRoleCombatPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyRoleCombatPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRoleCombatPower::IsInitialized() const {
  return true;
}

void NotifyRoleCombatPower::InternalSwap(NotifyRoleCombatPower* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyRoleCombatPower, _impl_.show_notice_)
      + sizeof(NotifyRoleCombatPower::_impl_.show_notice_)
      - PROTOBUF_FIELD_OFFSET(NotifyRoleCombatPower, _impl_.old_value_)>(
          reinterpret_cast<char*>(&_impl_.old_value_),
          reinterpret_cast<char*>(&other->_impl_.old_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRoleCombatPower::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[83]);
}

// ===================================================================

class GameSystemChatMessage::_Internal {
 public:
};

GameSystemChatMessage::GameSystemChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GameSystemChatMessage)
}
GameSystemChatMessage::GameSystemChatMessage(const GameSystemChatMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GameSystemChatMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_content_){}
    , decltype(_impl_.chat_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.chat_content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_chat_content().empty()) {
    _this->_impl_.chat_content_.Set(from._internal_chat_content(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.chat_type_ = from._impl_.chat_type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GameSystemChatMessage)
}

inline void GameSystemChatMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_content_){}
    , decltype(_impl_.chat_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.chat_content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.chat_content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GameSystemChatMessage::~GameSystemChatMessage() {
  // @@protoc_insertion_point(destructor:idlepb.GameSystemChatMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GameSystemChatMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.chat_content_.Destroy();
}

void GameSystemChatMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GameSystemChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GameSystemChatMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chat_content_.ClearToEmpty();
  _impl_.chat_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GameSystemChatMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chat_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.chat_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes chat_content = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_chat_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GameSystemChatMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GameSystemChatMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chat_type = 1;
  if (this->_internal_chat_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chat_type(), target);
  }

  // bytes chat_content = 10;
  if (!this->_internal_chat_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_chat_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GameSystemChatMessage)
  return target;
}

size_t GameSystemChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GameSystemChatMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes chat_content = 10;
  if (!this->_internal_chat_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_chat_content());
  }

  // int32 chat_type = 1;
  if (this->_internal_chat_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chat_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GameSystemChatMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GameSystemChatMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GameSystemChatMessage::GetClassData() const { return &_class_data_; }


void GameSystemChatMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GameSystemChatMessage*>(&to_msg);
  auto& from = static_cast<const GameSystemChatMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GameSystemChatMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chat_content().empty()) {
    _this->_internal_set_chat_content(from._internal_chat_content());
  }
  if (from._internal_chat_type() != 0) {
    _this->_internal_set_chat_type(from._internal_chat_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GameSystemChatMessage::CopyFrom(const GameSystemChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GameSystemChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSystemChatMessage::IsInitialized() const {
  return true;
}

void GameSystemChatMessage::InternalSwap(GameSystemChatMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.chat_content_, lhs_arena,
      &other->_impl_.chat_content_, rhs_arena
  );
  swap(_impl_.chat_type_, other->_impl_.chat_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GameSystemChatMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[84]);
}

// ===================================================================

class ReplicateQuestProgressChange::_Internal {
 public:
};

ReplicateQuestProgressChange::ReplicateQuestProgressChange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReplicateQuestProgressChange)
}
ReplicateQuestProgressChange::ReplicateQuestProgressChange(const ReplicateQuestProgressChange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplicateQuestProgressChange* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.target_id_){}
    , decltype(_impl_.amount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.quest_id_, &from._impl_.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.amount_) -
    reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.amount_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ReplicateQuestProgressChange)
}

inline void ReplicateQuestProgressChange::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){0}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.target_id_){0}
    , decltype(_impl_.amount_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReplicateQuestProgressChange::~ReplicateQuestProgressChange() {
  // @@protoc_insertion_point(destructor:idlepb.ReplicateQuestProgressChange)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplicateQuestProgressChange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReplicateQuestProgressChange::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplicateQuestProgressChange::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReplicateQuestProgressChange)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.amount_) -
      reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.amount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplicateQuestProgressChange::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.QuestRequirementType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::QuestRequirementType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 target_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplicateQuestProgressChange::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReplicateQuestProgressChange)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_quest_id(), target);
  }

  // .idlepb.QuestRequirementType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // int32 target_id = 3;
  if (this->_internal_target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_target_id(), target);
  }

  // int32 amount = 4;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReplicateQuestProgressChange)
  return target;
}

size_t ReplicateQuestProgressChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReplicateQuestProgressChange)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quest_id());
  }

  // .idlepb.QuestRequirementType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 target_id = 3;
  if (this->_internal_target_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_id());
  }

  // int32 amount = 4;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplicateQuestProgressChange::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplicateQuestProgressChange::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplicateQuestProgressChange::GetClassData() const { return &_class_data_; }


void ReplicateQuestProgressChange::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplicateQuestProgressChange*>(&to_msg);
  auto& from = static_cast<const ReplicateQuestProgressChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReplicateQuestProgressChange)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quest_id() != 0) {
    _this->_internal_set_quest_id(from._internal_quest_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_target_id() != 0) {
    _this->_internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplicateQuestProgressChange::CopyFrom(const ReplicateQuestProgressChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReplicateQuestProgressChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplicateQuestProgressChange::IsInitialized() const {
  return true;
}

void ReplicateQuestProgressChange::InternalSwap(ReplicateQuestProgressChange* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplicateQuestProgressChange, _impl_.amount_)
      + sizeof(ReplicateQuestProgressChange::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(ReplicateQuestProgressChange, _impl_.quest_id_)>(
          reinterpret_cast<char*>(&_impl_.quest_id_),
          reinterpret_cast<char*>(&other->_impl_.quest_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplicateQuestProgressChange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[85]);
}

// ===================================================================

class QuestOpReq::_Internal {
 public:
};

QuestOpReq::QuestOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.QuestOpReq)
}
QuestOpReq::QuestOpReq(const QuestOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuestOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_){}
    , decltype(_impl_.quest_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.operation_, &from._impl_.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.quest_id_) -
    reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.quest_id_));
  // @@protoc_insertion_point(copy_constructor:idlepb.QuestOpReq)
}

inline void QuestOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_){0}
    , decltype(_impl_.quest_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuestOpReq::~QuestOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.QuestOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuestOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QuestOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuestOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.QuestOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.operation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.quest_id_) -
      reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.quest_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuestOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.QuestOpType operation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::idlepb::QuestOpType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 quest_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuestOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.QuestOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.QuestOpType operation = 1;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_operation(), target);
  }

  // int32 quest_id = 2;
  if (this->_internal_quest_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_quest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.QuestOpReq)
  return target;
}

size_t QuestOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.QuestOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.QuestOpType operation = 1;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  // int32 quest_id = 2;
  if (this->_internal_quest_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quest_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuestOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuestOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuestOpReq::GetClassData() const { return &_class_data_; }


void QuestOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuestOpReq*>(&to_msg);
  auto& from = static_cast<const QuestOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.QuestOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  if (from._internal_quest_id() != 0) {
    _this->_internal_set_quest_id(from._internal_quest_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuestOpReq::CopyFrom(const QuestOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.QuestOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestOpReq::IsInitialized() const {
  return true;
}

void QuestOpReq::InternalSwap(QuestOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuestOpReq, _impl_.quest_id_)
      + sizeof(QuestOpReq::_impl_.quest_id_)
      - PROTOBUF_FIELD_OFFSET(QuestOpReq, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QuestOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[86]);
}

// ===================================================================

class QuestOpAck::_Internal {
 public:
};

QuestOpAck::QuestOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.QuestOpAck)
}
QuestOpAck::QuestOpAck(const QuestOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuestOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.init_progress_){from._impl_.init_progress_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.QuestOpAck)
}

inline void QuestOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.init_progress_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuestOpAck::~QuestOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.QuestOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuestOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.init_progress_.~RepeatedPtrField();
}

void QuestOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuestOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.QuestOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.init_progress_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuestOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ReplicateQuestProgressChange init_progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_init_progress(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuestOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.QuestOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.ReplicateQuestProgressChange init_progress = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_init_progress_size()); i < n; i++) {
    const auto& repfield = this->_internal_init_progress(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.QuestOpAck)
  return target;
}

size_t QuestOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.QuestOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ReplicateQuestProgressChange init_progress = 2;
  total_size += 1UL * this->_internal_init_progress_size();
  for (const auto& msg : this->_impl_.init_progress_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuestOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuestOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuestOpAck::GetClassData() const { return &_class_data_; }


void QuestOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuestOpAck*>(&to_msg);
  auto& from = static_cast<const QuestOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.QuestOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.init_progress_.MergeFrom(from._impl_.init_progress_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuestOpAck::CopyFrom(const QuestOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.QuestOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestOpAck::IsInitialized() const {
  return true;
}

void QuestOpAck::InternalSwap(QuestOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.init_progress_.InternalSwap(&other->_impl_.init_progress_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuestOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[87]);
}

// ===================================================================

class GetQuestDataReq::_Internal {
 public:
};

GetQuestDataReq::GetQuestDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetQuestDataReq)
}
GetQuestDataReq::GetQuestDataReq(const GetQuestDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetQuestDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetQuestDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQuestDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQuestDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetQuestDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[88]);
}

// ===================================================================

class GetQuestDataAck::_Internal {
 public:
  static const ::idlepb::RoleQuestData& data(const GetQuestDataAck* msg);
};

const ::idlepb::RoleQuestData&
GetQuestDataAck::_Internal::data(const GetQuestDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetQuestDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetQuestDataAck::GetQuestDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetQuestDataAck)
}
GetQuestDataAck::GetQuestDataAck(const GetQuestDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetQuestDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleQuestData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetQuestDataAck)
}

inline void GetQuestDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetQuestDataAck::~GetQuestDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetQuestDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetQuestDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetQuestDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetQuestDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetQuestDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetQuestDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleQuestData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetQuestDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetQuestDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleQuestData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetQuestDataAck)
  return target;
}

size_t GetQuestDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetQuestDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleQuestData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetQuestDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetQuestDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetQuestDataAck::GetClassData() const { return &_class_data_; }


void GetQuestDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetQuestDataAck*>(&to_msg);
  auto& from = static_cast<const GetQuestDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetQuestDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleQuestData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetQuestDataAck::CopyFrom(const GetQuestDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetQuestDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQuestDataAck::IsInitialized() const {
  return true;
}

void GetQuestDataAck::InternalSwap(GetQuestDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQuestDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[89]);
}

// ===================================================================

class GetRoleLeaderboardDataReq::_Internal {
 public:
};

GetRoleLeaderboardDataReq::GetRoleLeaderboardDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleLeaderboardDataReq)
}
GetRoleLeaderboardDataReq::GetRoleLeaderboardDataReq(const GetRoleLeaderboardDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleLeaderboardDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.role_id_ = from._impl_.role_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleLeaderboardDataReq)
}

inline void GetRoleLeaderboardDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleLeaderboardDataReq::~GetRoleLeaderboardDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleLeaderboardDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleLeaderboardDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoleLeaderboardDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleLeaderboardDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleLeaderboardDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleLeaderboardDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleLeaderboardDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleLeaderboardDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleLeaderboardDataReq)
  return target;
}

size_t GetRoleLeaderboardDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleLeaderboardDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_role_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleLeaderboardDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleLeaderboardDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleLeaderboardDataReq::GetClassData() const { return &_class_data_; }


void GetRoleLeaderboardDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleLeaderboardDataReq*>(&to_msg);
  auto& from = static_cast<const GetRoleLeaderboardDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleLeaderboardDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleLeaderboardDataReq::CopyFrom(const GetRoleLeaderboardDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleLeaderboardDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleLeaderboardDataReq::IsInitialized() const {
  return true;
}

void GetRoleLeaderboardDataReq::InternalSwap(GetRoleLeaderboardDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.role_id_, other->_impl_.role_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleLeaderboardDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[90]);
}

// ===================================================================

class GetRoleLeaderboardDataAck::_Internal {
 public:
  static const ::idlepb::RoleLeaderboardData& data(const GetRoleLeaderboardDataAck* msg);
};

const ::idlepb::RoleLeaderboardData&
GetRoleLeaderboardDataAck::_Internal::data(const GetRoleLeaderboardDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleLeaderboardDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleLeaderboardDataAck::GetRoleLeaderboardDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleLeaderboardDataAck)
}
GetRoleLeaderboardDataAck::GetRoleLeaderboardDataAck(const GetRoleLeaderboardDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleLeaderboardDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.leaderboard_rank_){from._impl_.leaderboard_rank_}
    , /*decltype(_impl_._leaderboard_rank_cached_byte_size_)*/{0}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.param_n1_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleLeaderboardData(*from._impl_.data_);
  }
  _this->_impl_.param_n1_ = from._impl_.param_n1_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleLeaderboardDataAck)
}

inline void GetRoleLeaderboardDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.leaderboard_rank_){arena}
    , /*decltype(_impl_._leaderboard_rank_cached_byte_size_)*/{0}
    , decltype(_impl_.data_){nullptr}
    , decltype(_impl_.param_n1_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleLeaderboardDataAck::~GetRoleLeaderboardDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleLeaderboardDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleLeaderboardDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.leaderboard_rank_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleLeaderboardDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleLeaderboardDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleLeaderboardDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.leaderboard_rank_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.param_n1_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleLeaderboardDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleLeaderboardData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 param_n1 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.param_n1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 leaderboard_rank = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_leaderboard_rank(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 96) {
          _internal_add_leaderboard_rank(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleLeaderboardDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleLeaderboardDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleLeaderboardData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // int64 param_n1 = 11;
  if (this->_internal_param_n1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(11, this->_internal_param_n1(), target);
  }

  // repeated int32 leaderboard_rank = 12;
  {
    int byte_size = _impl_._leaderboard_rank_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          12, _internal_leaderboard_rank(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleLeaderboardDataAck)
  return target;
}

size_t GetRoleLeaderboardDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleLeaderboardDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 leaderboard_rank = 12;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.leaderboard_rank_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._leaderboard_rank_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .idlepb.RoleLeaderboardData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // int64 param_n1 = 11;
  if (this->_internal_param_n1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_param_n1());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleLeaderboardDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleLeaderboardDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleLeaderboardDataAck::GetClassData() const { return &_class_data_; }


void GetRoleLeaderboardDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleLeaderboardDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleLeaderboardDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleLeaderboardDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.leaderboard_rank_.MergeFrom(from._impl_.leaderboard_rank_);
  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleLeaderboardData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_param_n1() != 0) {
    _this->_internal_set_param_n1(from._internal_param_n1());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleLeaderboardDataAck::CopyFrom(const GetRoleLeaderboardDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleLeaderboardDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleLeaderboardDataAck::IsInitialized() const {
  return true;
}

void GetRoleLeaderboardDataAck::InternalSwap(GetRoleLeaderboardDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.leaderboard_rank_.InternalSwap(&other->_impl_.leaderboard_rank_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRoleLeaderboardDataAck, _impl_.param_n1_)
      + sizeof(GetRoleLeaderboardDataAck::_impl_.param_n1_)
      - PROTOBUF_FIELD_OFFSET(GetRoleLeaderboardDataAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleLeaderboardDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[91]);
}

// ===================================================================

class GetLeaderboardPreviewReq::_Internal {
 public:
};

GetLeaderboardPreviewReq::GetLeaderboardPreviewReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLeaderboardPreviewReq)
}
GetLeaderboardPreviewReq::GetLeaderboardPreviewReq(const GetLeaderboardPreviewReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLeaderboardPreviewReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLeaderboardPreviewReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLeaderboardPreviewReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLeaderboardPreviewReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLeaderboardPreviewReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[92]);
}

// ===================================================================

class GetLeaderboardPreviewAck::_Internal {
 public:
  static const ::idlepb::RoleLeaderboardData& my_data(const GetLeaderboardPreviewAck* msg);
  static const ::idlepb::SeptDataOnLeaderboard& sept(const GetLeaderboardPreviewAck* msg);
};

const ::idlepb::RoleLeaderboardData&
GetLeaderboardPreviewAck::_Internal::my_data(const GetLeaderboardPreviewAck* msg) {
  return *msg->_impl_.my_data_;
}
const ::idlepb::SeptDataOnLeaderboard&
GetLeaderboardPreviewAck::_Internal::sept(const GetLeaderboardPreviewAck* msg) {
  return *msg->_impl_.sept_;
}
void GetLeaderboardPreviewAck::clear_champions() {
  _impl_.champions_.Clear();
}
void GetLeaderboardPreviewAck::clear_role_model_configs() {
  _impl_.role_model_configs_.Clear();
}
void GetLeaderboardPreviewAck::clear_my_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.my_data_ != nullptr) {
    delete _impl_.my_data_;
  }
  _impl_.my_data_ = nullptr;
}
void GetLeaderboardPreviewAck::clear_equipments() {
  _impl_.equipments_.Clear();
}
void GetLeaderboardPreviewAck::clear_sept() {
  if (GetArenaForAllocation() == nullptr && _impl_.sept_ != nullptr) {
    delete _impl_.sept_;
  }
  _impl_.sept_ = nullptr;
}
GetLeaderboardPreviewAck::GetLeaderboardPreviewAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLeaderboardPreviewAck)
}
GetLeaderboardPreviewAck::GetLeaderboardPreviewAck(const GetLeaderboardPreviewAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLeaderboardPreviewAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.champions_){from._impl_.champions_}
    , decltype(_impl_.role_model_configs_){from._impl_.role_model_configs_}
    , decltype(_impl_.equipments_){from._impl_.equipments_}
    , decltype(_impl_.my_data_){nullptr}
    , decltype(_impl_.sept_){nullptr}
    , decltype(_impl_.last_refresh_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_my_data()) {
    _this->_impl_.my_data_ = new ::idlepb::RoleLeaderboardData(*from._impl_.my_data_);
  }
  if (from._internal_has_sept()) {
    _this->_impl_.sept_ = new ::idlepb::SeptDataOnLeaderboard(*from._impl_.sept_);
  }
  _this->_impl_.last_refresh_time_ = from._impl_.last_refresh_time_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLeaderboardPreviewAck)
}

inline void GetLeaderboardPreviewAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.champions_){arena}
    , decltype(_impl_.role_model_configs_){arena}
    , decltype(_impl_.equipments_){arena}
    , decltype(_impl_.my_data_){nullptr}
    , decltype(_impl_.sept_){nullptr}
    , decltype(_impl_.last_refresh_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLeaderboardPreviewAck::~GetLeaderboardPreviewAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetLeaderboardPreviewAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLeaderboardPreviewAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.champions_.~RepeatedPtrField();
  _impl_.role_model_configs_.~RepeatedPtrField();
  _impl_.equipments_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.my_data_;
  if (this != internal_default_instance()) delete _impl_.sept_;
}

void GetLeaderboardPreviewAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLeaderboardPreviewAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetLeaderboardPreviewAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.champions_.Clear();
  _impl_.role_model_configs_.Clear();
  _impl_.equipments_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.my_data_ != nullptr) {
    delete _impl_.my_data_;
  }
  _impl_.my_data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.sept_ != nullptr) {
    delete _impl_.sept_;
  }
  _impl_.sept_ = nullptr;
  _impl_.last_refresh_time_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLeaderboardPreviewAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.LeaderboardListItem champions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_champions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CharacterModelConfig role_model_configs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role_model_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleLeaderboardData my_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_my_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ItemData equipments = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_equipments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.SeptDataOnLeaderboard sept = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sept(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 last_refresh_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.last_refresh_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLeaderboardPreviewAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetLeaderboardPreviewAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.LeaderboardListItem champions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_champions_size()); i < n; i++) {
    const auto& repfield = this->_internal_champions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.CharacterModelConfig role_model_configs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_role_model_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_role_model_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .idlepb.RoleLeaderboardData my_data = 3;
  if (this->_internal_has_my_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::my_data(this),
        _Internal::my_data(this).GetCachedSize(), target, stream);
  }

  // repeated .idlepb.ItemData equipments = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_equipments_size()); i < n; i++) {
    const auto& repfield = this->_internal_equipments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .idlepb.SeptDataOnLeaderboard sept = 5;
  if (this->_internal_has_sept()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sept(this),
        _Internal::sept(this).GetCachedSize(), target, stream);
  }

  // int64 last_refresh_time = 6;
  if (this->_internal_last_refresh_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_last_refresh_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetLeaderboardPreviewAck)
  return target;
}

size_t GetLeaderboardPreviewAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetLeaderboardPreviewAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.LeaderboardListItem champions = 1;
  total_size += 1UL * this->_internal_champions_size();
  for (const auto& msg : this->_impl_.champions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.CharacterModelConfig role_model_configs = 2;
  total_size += 1UL * this->_internal_role_model_configs_size();
  for (const auto& msg : this->_impl_.role_model_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.ItemData equipments = 4;
  total_size += 1UL * this->_internal_equipments_size();
  for (const auto& msg : this->_impl_.equipments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.RoleLeaderboardData my_data = 3;
  if (this->_internal_has_my_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.my_data_);
  }

  // .idlepb.SeptDataOnLeaderboard sept = 5;
  if (this->_internal_has_sept()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sept_);
  }

  // int64 last_refresh_time = 6;
  if (this->_internal_last_refresh_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_refresh_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLeaderboardPreviewAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLeaderboardPreviewAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLeaderboardPreviewAck::GetClassData() const { return &_class_data_; }


void GetLeaderboardPreviewAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLeaderboardPreviewAck*>(&to_msg);
  auto& from = static_cast<const GetLeaderboardPreviewAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetLeaderboardPreviewAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.champions_.MergeFrom(from._impl_.champions_);
  _this->_impl_.role_model_configs_.MergeFrom(from._impl_.role_model_configs_);
  _this->_impl_.equipments_.MergeFrom(from._impl_.equipments_);
  if (from._internal_has_my_data()) {
    _this->_internal_mutable_my_data()->::idlepb::RoleLeaderboardData::MergeFrom(
        from._internal_my_data());
  }
  if (from._internal_has_sept()) {
    _this->_internal_mutable_sept()->::idlepb::SeptDataOnLeaderboard::MergeFrom(
        from._internal_sept());
  }
  if (from._internal_last_refresh_time() != 0) {
    _this->_internal_set_last_refresh_time(from._internal_last_refresh_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLeaderboardPreviewAck::CopyFrom(const GetLeaderboardPreviewAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetLeaderboardPreviewAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLeaderboardPreviewAck::IsInitialized() const {
  return true;
}

void GetLeaderboardPreviewAck::InternalSwap(GetLeaderboardPreviewAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.champions_.InternalSwap(&other->_impl_.champions_);
  _impl_.role_model_configs_.InternalSwap(&other->_impl_.role_model_configs_);
  _impl_.equipments_.InternalSwap(&other->_impl_.equipments_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLeaderboardPreviewAck, _impl_.last_refresh_time_)
      + sizeof(GetLeaderboardPreviewAck::_impl_.last_refresh_time_)
      - PROTOBUF_FIELD_OFFSET(GetLeaderboardPreviewAck, _impl_.my_data_)>(
          reinterpret_cast<char*>(&_impl_.my_data_),
          reinterpret_cast<char*>(&other->_impl_.my_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLeaderboardPreviewAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[93]);
}

// ===================================================================

class GetLeaderboardDataReq::_Internal {
 public:
};

GetLeaderboardDataReq::GetLeaderboardDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLeaderboardDataReq)
}
GetLeaderboardDataReq::GetLeaderboardDataReq(const GetLeaderboardDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLeaderboardDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLeaderboardDataReq)
}

inline void GetLeaderboardDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLeaderboardDataReq::~GetLeaderboardDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetLeaderboardDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLeaderboardDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetLeaderboardDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLeaderboardDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetLeaderboardDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLeaderboardDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.LeaderboardType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::LeaderboardType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLeaderboardDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetLeaderboardDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.LeaderboardType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetLeaderboardDataReq)
  return target;
}

size_t GetLeaderboardDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetLeaderboardDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.LeaderboardType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLeaderboardDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLeaderboardDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLeaderboardDataReq::GetClassData() const { return &_class_data_; }


void GetLeaderboardDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLeaderboardDataReq*>(&to_msg);
  auto& from = static_cast<const GetLeaderboardDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetLeaderboardDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLeaderboardDataReq::CopyFrom(const GetLeaderboardDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetLeaderboardDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLeaderboardDataReq::IsInitialized() const {
  return true;
}

void GetLeaderboardDataReq::InternalSwap(GetLeaderboardDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLeaderboardDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[94]);
}

// ===================================================================

class GetLeaderboardDataAck::_Internal {
 public:
};

void GetLeaderboardDataAck::clear_data() {
  _impl_.data_.Clear();
}
void GetLeaderboardDataAck::clear_role_model_configs() {
  _impl_.role_model_configs_.Clear();
}
void GetLeaderboardDataAck::clear_equipments() {
  _impl_.equipments_.Clear();
}
void GetLeaderboardDataAck::clear_shanghetu_records() {
  _impl_.shanghetu_records_.Clear();
}
void GetLeaderboardDataAck::clear_septs() {
  _impl_.septs_.Clear();
}
GetLeaderboardDataAck::GetLeaderboardDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLeaderboardDataAck)
}
GetLeaderboardDataAck::GetLeaderboardDataAck(const GetLeaderboardDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLeaderboardDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.role_model_configs_){from._impl_.role_model_configs_}
    , decltype(_impl_.equipments_){from._impl_.equipments_}
    , decltype(_impl_.shanghetu_records_){from._impl_.shanghetu_records_}
    , decltype(_impl_.top3_clicklike_num_){from._impl_.top3_clicklike_num_}
    , /*decltype(_impl_._top3_clicklike_num_cached_byte_size_)*/{0}
    , decltype(_impl_.septs_){from._impl_.septs_}
    , decltype(_impl_.rank1_message_){}
    , decltype(_impl_.last_refresh_time_){}
    , decltype(_impl_.my_rank_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rank1_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rank1_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rank1_message().empty()) {
    _this->_impl_.rank1_message_.Set(from._internal_rank1_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.last_refresh_time_, &from._impl_.last_refresh_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.my_rank_) -
    reinterpret_cast<char*>(&_impl_.last_refresh_time_)) + sizeof(_impl_.my_rank_));
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLeaderboardDataAck)
}

inline void GetLeaderboardDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , decltype(_impl_.role_model_configs_){arena}
    , decltype(_impl_.equipments_){arena}
    , decltype(_impl_.shanghetu_records_){arena}
    , decltype(_impl_.top3_clicklike_num_){arena}
    , /*decltype(_impl_._top3_clicklike_num_cached_byte_size_)*/{0}
    , decltype(_impl_.septs_){arena}
    , decltype(_impl_.rank1_message_){}
    , decltype(_impl_.last_refresh_time_){int64_t{0}}
    , decltype(_impl_.my_rank_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.rank1_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rank1_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLeaderboardDataAck::~GetLeaderboardDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetLeaderboardDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLeaderboardDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.role_model_configs_.~RepeatedPtrField();
  _impl_.equipments_.~RepeatedPtrField();
  _impl_.shanghetu_records_.~RepeatedPtrField();
  _impl_.top3_clicklike_num_.~RepeatedField();
  _impl_.septs_.~RepeatedPtrField();
  _impl_.rank1_message_.Destroy();
}

void GetLeaderboardDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLeaderboardDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetLeaderboardDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.role_model_configs_.Clear();
  _impl_.equipments_.Clear();
  _impl_.shanghetu_records_.Clear();
  _impl_.top3_clicklike_num_.Clear();
  _impl_.septs_.Clear();
  _impl_.rank1_message_.ClearToEmpty();
  ::memset(&_impl_.last_refresh_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.my_rank_) -
      reinterpret_cast<char*>(&_impl_.last_refresh_time_)) + sizeof(_impl_.my_rank_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLeaderboardDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 last_refresh_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.last_refresh_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.LeaderboardListItem data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 my_rank = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.my_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rank1_message = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_rank1_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.GetLeaderboardDataAck.rank1_message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CharacterModelConfig role_model_configs = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role_model_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ItemData equipments = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_equipments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ShanhetuRecord shanghetu_records = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shanghetu_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 top3_clicklike_num = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_top3_clicklike_num(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 96) {
          _internal_add_top3_clicklike_num(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SeptDataOnLeaderboard septs = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_septs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLeaderboardDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetLeaderboardDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 last_refresh_time = 1;
  if (this->_internal_last_refresh_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_last_refresh_time(), target);
  }

  // repeated .idlepb.LeaderboardListItem data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 my_rank = 6;
  if (this->_internal_my_rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_my_rank(), target);
  }

  // string rank1_message = 7;
  if (!this->_internal_rank1_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rank1_message().data(), static_cast<int>(this->_internal_rank1_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.GetLeaderboardDataAck.rank1_message");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_rank1_message(), target);
  }

  // repeated .idlepb.CharacterModelConfig role_model_configs = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_role_model_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_role_model_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.ItemData equipments = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_equipments_size()); i < n; i++) {
    const auto& repfield = this->_internal_equipments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.ShanhetuRecord shanghetu_records = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_shanghetu_records_size()); i < n; i++) {
    const auto& repfield = this->_internal_shanghetu_records(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 top3_clicklike_num = 12;
  {
    int byte_size = _impl_._top3_clicklike_num_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          12, _internal_top3_clicklike_num(), byte_size, target);
    }
  }

  // repeated .idlepb.SeptDataOnLeaderboard septs = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_septs_size()); i < n; i++) {
    const auto& repfield = this->_internal_septs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetLeaderboardDataAck)
  return target;
}

size_t GetLeaderboardDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetLeaderboardDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.LeaderboardListItem data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.CharacterModelConfig role_model_configs = 9;
  total_size += 1UL * this->_internal_role_model_configs_size();
  for (const auto& msg : this->_impl_.role_model_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.ItemData equipments = 10;
  total_size += 1UL * this->_internal_equipments_size();
  for (const auto& msg : this->_impl_.equipments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.ShanhetuRecord shanghetu_records = 11;
  total_size += 1UL * this->_internal_shanghetu_records_size();
  for (const auto& msg : this->_impl_.shanghetu_records_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 top3_clicklike_num = 12;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.top3_clicklike_num_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._top3_clicklike_num_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .idlepb.SeptDataOnLeaderboard septs = 13;
  total_size += 1UL * this->_internal_septs_size();
  for (const auto& msg : this->_impl_.septs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string rank1_message = 7;
  if (!this->_internal_rank1_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rank1_message());
  }

  // int64 last_refresh_time = 1;
  if (this->_internal_last_refresh_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_refresh_time());
  }

  // int32 my_rank = 6;
  if (this->_internal_my_rank() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_my_rank());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLeaderboardDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLeaderboardDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLeaderboardDataAck::GetClassData() const { return &_class_data_; }


void GetLeaderboardDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLeaderboardDataAck*>(&to_msg);
  auto& from = static_cast<const GetLeaderboardDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetLeaderboardDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_impl_.role_model_configs_.MergeFrom(from._impl_.role_model_configs_);
  _this->_impl_.equipments_.MergeFrom(from._impl_.equipments_);
  _this->_impl_.shanghetu_records_.MergeFrom(from._impl_.shanghetu_records_);
  _this->_impl_.top3_clicklike_num_.MergeFrom(from._impl_.top3_clicklike_num_);
  _this->_impl_.septs_.MergeFrom(from._impl_.septs_);
  if (!from._internal_rank1_message().empty()) {
    _this->_internal_set_rank1_message(from._internal_rank1_message());
  }
  if (from._internal_last_refresh_time() != 0) {
    _this->_internal_set_last_refresh_time(from._internal_last_refresh_time());
  }
  if (from._internal_my_rank() != 0) {
    _this->_internal_set_my_rank(from._internal_my_rank());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLeaderboardDataAck::CopyFrom(const GetLeaderboardDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetLeaderboardDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLeaderboardDataAck::IsInitialized() const {
  return true;
}

void GetLeaderboardDataAck::InternalSwap(GetLeaderboardDataAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.role_model_configs_.InternalSwap(&other->_impl_.role_model_configs_);
  _impl_.equipments_.InternalSwap(&other->_impl_.equipments_);
  _impl_.shanghetu_records_.InternalSwap(&other->_impl_.shanghetu_records_);
  _impl_.top3_clicklike_num_.InternalSwap(&other->_impl_.top3_clicklike_num_);
  _impl_.septs_.InternalSwap(&other->_impl_.septs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rank1_message_, lhs_arena,
      &other->_impl_.rank1_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLeaderboardDataAck, _impl_.my_rank_)
      + sizeof(GetLeaderboardDataAck::_impl_.my_rank_)
      - PROTOBUF_FIELD_OFFSET(GetLeaderboardDataAck, _impl_.last_refresh_time_)>(
          reinterpret_cast<char*>(&_impl_.last_refresh_time_),
          reinterpret_cast<char*>(&other->_impl_.last_refresh_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLeaderboardDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[95]);
}

// ===================================================================

class LeaderboardClickLikeReq::_Internal {
 public:
};

LeaderboardClickLikeReq::LeaderboardClickLikeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LeaderboardClickLikeReq)
}
LeaderboardClickLikeReq::LeaderboardClickLikeReq(const LeaderboardClickLikeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaderboardClickLikeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.LeaderboardClickLikeReq)
}

inline void LeaderboardClickLikeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LeaderboardClickLikeReq::~LeaderboardClickLikeReq() {
  // @@protoc_insertion_point(destructor:idlepb.LeaderboardClickLikeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaderboardClickLikeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaderboardClickLikeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaderboardClickLikeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LeaderboardClickLikeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaderboardClickLikeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.LeaderboardType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::LeaderboardType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaderboardClickLikeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LeaderboardClickLikeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_role_id(), target);
  }

  // .idlepb.LeaderboardType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LeaderboardClickLikeReq)
  return target;
}

size_t LeaderboardClickLikeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LeaderboardClickLikeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_role_id());
  }

  // .idlepb.LeaderboardType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaderboardClickLikeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaderboardClickLikeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaderboardClickLikeReq::GetClassData() const { return &_class_data_; }


void LeaderboardClickLikeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaderboardClickLikeReq*>(&to_msg);
  auto& from = static_cast<const LeaderboardClickLikeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LeaderboardClickLikeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaderboardClickLikeReq::CopyFrom(const LeaderboardClickLikeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LeaderboardClickLikeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderboardClickLikeReq::IsInitialized() const {
  return true;
}

void LeaderboardClickLikeReq::InternalSwap(LeaderboardClickLikeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaderboardClickLikeReq, _impl_.type_)
      + sizeof(LeaderboardClickLikeReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(LeaderboardClickLikeReq, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaderboardClickLikeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[96]);
}

// ===================================================================

class LeaderboardClickLikeAck::_Internal {
 public:
};

LeaderboardClickLikeAck::LeaderboardClickLikeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LeaderboardClickLikeAck)
}
LeaderboardClickLikeAck::LeaderboardClickLikeAck(const LeaderboardClickLikeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaderboardClickLikeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.LeaderboardClickLikeAck)
}

inline void LeaderboardClickLikeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LeaderboardClickLikeAck::~LeaderboardClickLikeAck() {
  // @@protoc_insertion_point(destructor:idlepb.LeaderboardClickLikeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaderboardClickLikeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaderboardClickLikeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaderboardClickLikeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LeaderboardClickLikeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaderboardClickLikeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaderboardClickLikeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LeaderboardClickLikeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LeaderboardClickLikeAck)
  return target;
}

size_t LeaderboardClickLikeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LeaderboardClickLikeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaderboardClickLikeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaderboardClickLikeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaderboardClickLikeAck::GetClassData() const { return &_class_data_; }


void LeaderboardClickLikeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaderboardClickLikeAck*>(&to_msg);
  auto& from = static_cast<const LeaderboardClickLikeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LeaderboardClickLikeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaderboardClickLikeAck::CopyFrom(const LeaderboardClickLikeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LeaderboardClickLikeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderboardClickLikeAck::IsInitialized() const {
  return true;
}

void LeaderboardClickLikeAck::InternalSwap(LeaderboardClickLikeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaderboardClickLikeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[97]);
}

// ===================================================================

class LeaderboardUpdateMessageReq::_Internal {
 public:
};

LeaderboardUpdateMessageReq::LeaderboardUpdateMessageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LeaderboardUpdateMessageReq)
}
LeaderboardUpdateMessageReq::LeaderboardUpdateMessageReq(const LeaderboardUpdateMessageReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaderboardUpdateMessageReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.new_message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.new_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_message().empty()) {
    _this->_impl_.new_message_.Set(from._internal_new_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.LeaderboardUpdateMessageReq)
}

inline void LeaderboardUpdateMessageReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.new_message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.new_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LeaderboardUpdateMessageReq::~LeaderboardUpdateMessageReq() {
  // @@protoc_insertion_point(destructor:idlepb.LeaderboardUpdateMessageReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaderboardUpdateMessageReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.new_message_.Destroy();
}

void LeaderboardUpdateMessageReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaderboardUpdateMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LeaderboardUpdateMessageReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaderboardUpdateMessageReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string new_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_new_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.LeaderboardUpdateMessageReq.new_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaderboardUpdateMessageReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LeaderboardUpdateMessageReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_message = 1;
  if (!this->_internal_new_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_message().data(), static_cast<int>(this->_internal_new_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.LeaderboardUpdateMessageReq.new_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_new_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LeaderboardUpdateMessageReq)
  return target;
}

size_t LeaderboardUpdateMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LeaderboardUpdateMessageReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string new_message = 1;
  if (!this->_internal_new_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaderboardUpdateMessageReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaderboardUpdateMessageReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaderboardUpdateMessageReq::GetClassData() const { return &_class_data_; }


void LeaderboardUpdateMessageReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaderboardUpdateMessageReq*>(&to_msg);
  auto& from = static_cast<const LeaderboardUpdateMessageReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LeaderboardUpdateMessageReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_message().empty()) {
    _this->_internal_set_new_message(from._internal_new_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaderboardUpdateMessageReq::CopyFrom(const LeaderboardUpdateMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LeaderboardUpdateMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderboardUpdateMessageReq::IsInitialized() const {
  return true;
}

void LeaderboardUpdateMessageReq::InternalSwap(LeaderboardUpdateMessageReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.new_message_, lhs_arena,
      &other->_impl_.new_message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaderboardUpdateMessageReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[98]);
}

// ===================================================================

class LeaderboardUpdateMessageAck::_Internal {
 public:
};

LeaderboardUpdateMessageAck::LeaderboardUpdateMessageAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LeaderboardUpdateMessageAck)
}
LeaderboardUpdateMessageAck::LeaderboardUpdateMessageAck(const LeaderboardUpdateMessageAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaderboardUpdateMessageAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.LeaderboardUpdateMessageAck)
}

inline void LeaderboardUpdateMessageAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LeaderboardUpdateMessageAck::~LeaderboardUpdateMessageAck() {
  // @@protoc_insertion_point(destructor:idlepb.LeaderboardUpdateMessageAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaderboardUpdateMessageAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaderboardUpdateMessageAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaderboardUpdateMessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LeaderboardUpdateMessageAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaderboardUpdateMessageAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaderboardUpdateMessageAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LeaderboardUpdateMessageAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LeaderboardUpdateMessageAck)
  return target;
}

size_t LeaderboardUpdateMessageAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LeaderboardUpdateMessageAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaderboardUpdateMessageAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaderboardUpdateMessageAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaderboardUpdateMessageAck::GetClassData() const { return &_class_data_; }


void LeaderboardUpdateMessageAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaderboardUpdateMessageAck*>(&to_msg);
  auto& from = static_cast<const LeaderboardUpdateMessageAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LeaderboardUpdateMessageAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaderboardUpdateMessageAck::CopyFrom(const LeaderboardUpdateMessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LeaderboardUpdateMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderboardUpdateMessageAck::IsInitialized() const {
  return true;
}

void LeaderboardUpdateMessageAck::InternalSwap(LeaderboardUpdateMessageAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaderboardUpdateMessageAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[99]);
}

// ===================================================================

class GetMonsterTowerChallengeListReq::_Internal {
 public:
};

GetMonsterTowerChallengeListReq::GetMonsterTowerChallengeListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMonsterTowerChallengeListReq)
}
GetMonsterTowerChallengeListReq::GetMonsterTowerChallengeListReq(const GetMonsterTowerChallengeListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMonsterTowerChallengeListReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.challenge_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.challenge_id_ = from._impl_.challenge_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMonsterTowerChallengeListReq)
}

inline void GetMonsterTowerChallengeListReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.challenge_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMonsterTowerChallengeListReq::~GetMonsterTowerChallengeListReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetMonsterTowerChallengeListReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMonsterTowerChallengeListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMonsterTowerChallengeListReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMonsterTowerChallengeListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMonsterTowerChallengeListReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.challenge_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonsterTowerChallengeListReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 challenge_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.challenge_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMonsterTowerChallengeListReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMonsterTowerChallengeListReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 challenge_id = 1;
  if (this->_internal_challenge_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_challenge_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMonsterTowerChallengeListReq)
  return target;
}

size_t GetMonsterTowerChallengeListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMonsterTowerChallengeListReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 challenge_id = 1;
  if (this->_internal_challenge_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_challenge_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMonsterTowerChallengeListReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMonsterTowerChallengeListReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMonsterTowerChallengeListReq::GetClassData() const { return &_class_data_; }


void GetMonsterTowerChallengeListReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMonsterTowerChallengeListReq*>(&to_msg);
  auto& from = static_cast<const GetMonsterTowerChallengeListReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMonsterTowerChallengeListReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_challenge_id() != 0) {
    _this->_internal_set_challenge_id(from._internal_challenge_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMonsterTowerChallengeListReq::CopyFrom(const GetMonsterTowerChallengeListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMonsterTowerChallengeListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonsterTowerChallengeListReq::IsInitialized() const {
  return true;
}

void GetMonsterTowerChallengeListReq::InternalSwap(GetMonsterTowerChallengeListReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.challenge_id_, other->_impl_.challenge_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonsterTowerChallengeListReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[100]);
}

// ===================================================================

class GetMonsterTowerChallengeListAck::_Internal {
 public:
};

void GetMonsterTowerChallengeListAck::clear_data() {
  _impl_.data_.Clear();
}
void GetMonsterTowerChallengeListAck::clear_model_configs() {
  _impl_.model_configs_.Clear();
}
GetMonsterTowerChallengeListAck::GetMonsterTowerChallengeListAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMonsterTowerChallengeListAck)
}
GetMonsterTowerChallengeListAck::GetMonsterTowerChallengeListAck(const GetMonsterTowerChallengeListAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMonsterTowerChallengeListAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , decltype(_impl_.model_configs_){from._impl_.model_configs_}
    , decltype(_impl_.all_list_progress_){from._impl_.all_list_progress_}
    , /*decltype(_impl_._all_list_progress_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMonsterTowerChallengeListAck)
}

inline void GetMonsterTowerChallengeListAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , decltype(_impl_.model_configs_){arena}
    , decltype(_impl_.all_list_progress_){arena}
    , /*decltype(_impl_._all_list_progress_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMonsterTowerChallengeListAck::~GetMonsterTowerChallengeListAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetMonsterTowerChallengeListAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMonsterTowerChallengeListAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
  _impl_.model_configs_.~RepeatedPtrField();
  _impl_.all_list_progress_.~RepeatedField();
}

void GetMonsterTowerChallengeListAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMonsterTowerChallengeListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMonsterTowerChallengeListAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.model_configs_.Clear();
  _impl_.all_list_progress_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonsterTowerChallengeListAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.LeaderboardListItem data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CharacterModelConfig model_configs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 all_list_progress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_all_list_progress(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_all_list_progress(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMonsterTowerChallengeListAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMonsterTowerChallengeListAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.LeaderboardListItem data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.CharacterModelConfig model_configs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_model_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_model_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 all_list_progress = 3;
  {
    int byte_size = _impl_._all_list_progress_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_all_list_progress(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMonsterTowerChallengeListAck)
  return target;
}

size_t GetMonsterTowerChallengeListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMonsterTowerChallengeListAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.LeaderboardListItem data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.CharacterModelConfig model_configs = 2;
  total_size += 1UL * this->_internal_model_configs_size();
  for (const auto& msg : this->_impl_.model_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 all_list_progress = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.all_list_progress_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._all_list_progress_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMonsterTowerChallengeListAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMonsterTowerChallengeListAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMonsterTowerChallengeListAck::GetClassData() const { return &_class_data_; }


void GetMonsterTowerChallengeListAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMonsterTowerChallengeListAck*>(&to_msg);
  auto& from = static_cast<const GetMonsterTowerChallengeListAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMonsterTowerChallengeListAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_impl_.model_configs_.MergeFrom(from._impl_.model_configs_);
  _this->_impl_.all_list_progress_.MergeFrom(from._impl_.all_list_progress_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMonsterTowerChallengeListAck::CopyFrom(const GetMonsterTowerChallengeListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMonsterTowerChallengeListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonsterTowerChallengeListAck::IsInitialized() const {
  return true;
}

void GetMonsterTowerChallengeListAck::InternalSwap(GetMonsterTowerChallengeListAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.model_configs_.InternalSwap(&other->_impl_.model_configs_);
  _impl_.all_list_progress_.InternalSwap(&other->_impl_.all_list_progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonsterTowerChallengeListAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[101]);
}

// ===================================================================

class GetMonsterTowerChallengeRewardReq::_Internal {
 public:
};

GetMonsterTowerChallengeRewardReq::GetMonsterTowerChallengeRewardReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMonsterTowerChallengeRewardReq)
}
GetMonsterTowerChallengeRewardReq::GetMonsterTowerChallengeRewardReq(const GetMonsterTowerChallengeRewardReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMonsterTowerChallengeRewardReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.challenge_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.challenge_id_ = from._impl_.challenge_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMonsterTowerChallengeRewardReq)
}

inline void GetMonsterTowerChallengeRewardReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.challenge_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMonsterTowerChallengeRewardReq::~GetMonsterTowerChallengeRewardReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetMonsterTowerChallengeRewardReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMonsterTowerChallengeRewardReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMonsterTowerChallengeRewardReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMonsterTowerChallengeRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMonsterTowerChallengeRewardReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.challenge_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonsterTowerChallengeRewardReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 challenge_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.challenge_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMonsterTowerChallengeRewardReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMonsterTowerChallengeRewardReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 challenge_id = 1;
  if (this->_internal_challenge_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_challenge_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMonsterTowerChallengeRewardReq)
  return target;
}

size_t GetMonsterTowerChallengeRewardReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMonsterTowerChallengeRewardReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 challenge_id = 1;
  if (this->_internal_challenge_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_challenge_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMonsterTowerChallengeRewardReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMonsterTowerChallengeRewardReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMonsterTowerChallengeRewardReq::GetClassData() const { return &_class_data_; }


void GetMonsterTowerChallengeRewardReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMonsterTowerChallengeRewardReq*>(&to_msg);
  auto& from = static_cast<const GetMonsterTowerChallengeRewardReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMonsterTowerChallengeRewardReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_challenge_id() != 0) {
    _this->_internal_set_challenge_id(from._internal_challenge_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMonsterTowerChallengeRewardReq::CopyFrom(const GetMonsterTowerChallengeRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMonsterTowerChallengeRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonsterTowerChallengeRewardReq::IsInitialized() const {
  return true;
}

void GetMonsterTowerChallengeRewardReq::InternalSwap(GetMonsterTowerChallengeRewardReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.challenge_id_, other->_impl_.challenge_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonsterTowerChallengeRewardReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[102]);
}

// ===================================================================

class GetMonsterTowerChallengeRewardAck::_Internal {
 public:
};

GetMonsterTowerChallengeRewardAck::GetMonsterTowerChallengeRewardAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMonsterTowerChallengeRewardAck)
}
GetMonsterTowerChallengeRewardAck::GetMonsterTowerChallengeRewardAck(const GetMonsterTowerChallengeRewardAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMonsterTowerChallengeRewardAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMonsterTowerChallengeRewardAck)
}

inline void GetMonsterTowerChallengeRewardAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMonsterTowerChallengeRewardAck::~GetMonsterTowerChallengeRewardAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetMonsterTowerChallengeRewardAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMonsterTowerChallengeRewardAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMonsterTowerChallengeRewardAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMonsterTowerChallengeRewardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMonsterTowerChallengeRewardAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMonsterTowerChallengeRewardAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMonsterTowerChallengeRewardAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMonsterTowerChallengeRewardAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMonsterTowerChallengeRewardAck)
  return target;
}

size_t GetMonsterTowerChallengeRewardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMonsterTowerChallengeRewardAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMonsterTowerChallengeRewardAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMonsterTowerChallengeRewardAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMonsterTowerChallengeRewardAck::GetClassData() const { return &_class_data_; }


void GetMonsterTowerChallengeRewardAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMonsterTowerChallengeRewardAck*>(&to_msg);
  auto& from = static_cast<const GetMonsterTowerChallengeRewardAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMonsterTowerChallengeRewardAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMonsterTowerChallengeRewardAck::CopyFrom(const GetMonsterTowerChallengeRewardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMonsterTowerChallengeRewardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMonsterTowerChallengeRewardAck::IsInitialized() const {
  return true;
}

void GetMonsterTowerChallengeRewardAck::InternalSwap(GetMonsterTowerChallengeRewardAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMonsterTowerChallengeRewardAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[103]);
}

// ===================================================================

class GetFuZeRewardReq::_Internal {
 public:
};

GetFuZeRewardReq::GetFuZeRewardReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetFuZeRewardReq)
}
GetFuZeRewardReq::GetFuZeRewardReq(const GetFuZeRewardReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetFuZeRewardReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetFuZeRewardReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFuZeRewardReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFuZeRewardReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetFuZeRewardReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[104]);
}

// ===================================================================

class GetFuZeRewardAck::_Internal {
 public:
};

GetFuZeRewardAck::GetFuZeRewardAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetFuZeRewardAck)
}
GetFuZeRewardAck::GetFuZeRewardAck(const GetFuZeRewardAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFuZeRewardAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetFuZeRewardAck)
}

inline void GetFuZeRewardAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFuZeRewardAck::~GetFuZeRewardAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetFuZeRewardAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFuZeRewardAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetFuZeRewardAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFuZeRewardAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetFuZeRewardAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFuZeRewardAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFuZeRewardAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetFuZeRewardAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetFuZeRewardAck)
  return target;
}

size_t GetFuZeRewardAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetFuZeRewardAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFuZeRewardAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFuZeRewardAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFuZeRewardAck::GetClassData() const { return &_class_data_; }


void GetFuZeRewardAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFuZeRewardAck*>(&to_msg);
  auto& from = static_cast<const GetFuZeRewardAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetFuZeRewardAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFuZeRewardAck::CopyFrom(const GetFuZeRewardAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetFuZeRewardAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFuZeRewardAck::IsInitialized() const {
  return true;
}

void GetFuZeRewardAck::InternalSwap(GetFuZeRewardAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFuZeRewardAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[105]);
}

// ===================================================================

class GetRoleMailDataReq::_Internal {
 public:
};

GetRoleMailDataReq::GetRoleMailDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleMailDataReq)
}
GetRoleMailDataReq::GetRoleMailDataReq(const GetRoleMailDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleMailDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.only_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.only_num_ = from._impl_.only_num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleMailDataReq)
}

inline void GetRoleMailDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.only_num_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleMailDataReq::~GetRoleMailDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleMailDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleMailDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoleMailDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleMailDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleMailDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.only_num_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleMailDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool only_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.only_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleMailDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleMailDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool only_num = 1;
  if (this->_internal_only_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_only_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleMailDataReq)
  return target;
}

size_t GetRoleMailDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleMailDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool only_num = 1;
  if (this->_internal_only_num() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleMailDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleMailDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleMailDataReq::GetClassData() const { return &_class_data_; }


void GetRoleMailDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleMailDataReq*>(&to_msg);
  auto& from = static_cast<const GetRoleMailDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleMailDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_only_num() != 0) {
    _this->_internal_set_only_num(from._internal_only_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleMailDataReq::CopyFrom(const GetRoleMailDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleMailDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleMailDataReq::IsInitialized() const {
  return true;
}

void GetRoleMailDataReq::InternalSwap(GetRoleMailDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.only_num_, other->_impl_.only_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleMailDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[106]);
}

// ===================================================================

class GetRoleMailDataAck::_Internal {
 public:
};

void GetRoleMailDataAck::clear_mail_box() {
  _impl_.mail_box_.Clear();
}
GetRoleMailDataAck::GetRoleMailDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleMailDataAck)
}
GetRoleMailDataAck::GetRoleMailDataAck(const GetRoleMailDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleMailDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_box_){from._impl_.mail_box_}
    , decltype(_impl_.unread_mail_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.unread_mail_num_ = from._impl_.unread_mail_num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleMailDataAck)
}

inline void GetRoleMailDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_box_){arena}
    , decltype(_impl_.unread_mail_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleMailDataAck::~GetRoleMailDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleMailDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleMailDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mail_box_.~RepeatedPtrField();
}

void GetRoleMailDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleMailDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleMailDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mail_box_.Clear();
  _impl_.unread_mail_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleMailDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 unread_mail_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.unread_mail_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.Mail mail_box = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mail_box(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleMailDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleMailDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 unread_mail_num = 1;
  if (this->_internal_unread_mail_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_unread_mail_num(), target);
  }

  // repeated .idlepb.Mail mail_box = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mail_box_size()); i < n; i++) {
    const auto& repfield = this->_internal_mail_box(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleMailDataAck)
  return target;
}

size_t GetRoleMailDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleMailDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.Mail mail_box = 2;
  total_size += 1UL * this->_internal_mail_box_size();
  for (const auto& msg : this->_impl_.mail_box_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 unread_mail_num = 1;
  if (this->_internal_unread_mail_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unread_mail_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleMailDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleMailDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleMailDataAck::GetClassData() const { return &_class_data_; }


void GetRoleMailDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleMailDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleMailDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleMailDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.mail_box_.MergeFrom(from._impl_.mail_box_);
  if (from._internal_unread_mail_num() != 0) {
    _this->_internal_set_unread_mail_num(from._internal_unread_mail_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleMailDataAck::CopyFrom(const GetRoleMailDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleMailDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleMailDataAck::IsInitialized() const {
  return true;
}

void GetRoleMailDataAck::InternalSwap(GetRoleMailDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mail_box_.InternalSwap(&other->_impl_.mail_box_);
  swap(_impl_.unread_mail_num_, other->_impl_.unread_mail_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleMailDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[107]);
}

// ===================================================================

class UpdateRoleMail::_Internal {
 public:
};

UpdateRoleMail::UpdateRoleMail(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateRoleMail)
}
UpdateRoleMail::UpdateRoleMail(const UpdateRoleMail& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateRoleMail* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateRoleMail)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRoleMail::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRoleMail::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateRoleMail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[108]);
}

// ===================================================================

class ReadMailReq::_Internal {
 public:
};

ReadMailReq::ReadMailReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReadMailReq)
}
ReadMailReq::ReadMailReq(const ReadMailReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadMailReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReadMailReq)
}

inline void ReadMailReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReadMailReq::~ReadMailReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReadMailReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadMailReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReadMailReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReadMailReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadMailReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadMailReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReadMailReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReadMailReq)
  return target;
}

size_t ReadMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReadMailReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadMailReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadMailReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadMailReq::GetClassData() const { return &_class_data_; }


void ReadMailReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadMailReq*>(&to_msg);
  auto& from = static_cast<const ReadMailReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReadMailReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMailReq::CopyFrom(const ReadMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReadMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadMailReq::IsInitialized() const {
  return true;
}

void ReadMailReq::InternalSwap(ReadMailReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadMailReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[109]);
}

// ===================================================================

class ReadMailAck::_Internal {
 public:
  static const ::idlepb::Mail& mail(const ReadMailAck* msg);
};

const ::idlepb::Mail&
ReadMailAck::_Internal::mail(const ReadMailAck* msg) {
  return *msg->_impl_.mail_;
}
void ReadMailAck::clear_mail() {
  if (GetArenaForAllocation() == nullptr && _impl_.mail_ != nullptr) {
    delete _impl_.mail_;
  }
  _impl_.mail_ = nullptr;
}
ReadMailAck::ReadMailAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReadMailAck)
}
ReadMailAck::ReadMailAck(const ReadMailAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadMailAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mail()) {
    _this->_impl_.mail_ = new ::idlepb::Mail(*from._impl_.mail_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReadMailAck)
}

inline void ReadMailAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReadMailAck::~ReadMailAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReadMailAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadMailAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.mail_;
}

void ReadMailAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReadMailAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.mail_ != nullptr) {
    delete _impl_.mail_;
  }
  _impl_.mail_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadMailAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.Mail mail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mail(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadMailAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReadMailAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.Mail mail = 2;
  if (this->_internal_has_mail()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::mail(this),
        _Internal::mail(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReadMailAck)
  return target;
}

size_t ReadMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReadMailAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.Mail mail = 2;
  if (this->_internal_has_mail()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mail_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadMailAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadMailAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadMailAck::GetClassData() const { return &_class_data_; }


void ReadMailAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadMailAck*>(&to_msg);
  auto& from = static_cast<const ReadMailAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReadMailAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mail()) {
    _this->_internal_mutable_mail()->::idlepb::Mail::MergeFrom(
        from._internal_mail());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMailAck::CopyFrom(const ReadMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReadMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadMailAck::IsInitialized() const {
  return true;
}

void ReadMailAck::InternalSwap(ReadMailAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadMailAck, _impl_.ok_)
      + sizeof(ReadMailAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ReadMailAck, _impl_.mail_)>(
          reinterpret_cast<char*>(&_impl_.mail_),
          reinterpret_cast<char*>(&other->_impl_.mail_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadMailAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[110]);
}

// ===================================================================

class GetMailAttachmentReq::_Internal {
 public:
};

GetMailAttachmentReq::GetMailAttachmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMailAttachmentReq)
}
GetMailAttachmentReq::GetMailAttachmentReq(const GetMailAttachmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMailAttachmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMailAttachmentReq)
}

inline void GetMailAttachmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMailAttachmentReq::~GetMailAttachmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetMailAttachmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMailAttachmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMailAttachmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMailAttachmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMailAttachmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMailAttachmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMailAttachmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMailAttachmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMailAttachmentReq)
  return target;
}

size_t GetMailAttachmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMailAttachmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMailAttachmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMailAttachmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMailAttachmentReq::GetClassData() const { return &_class_data_; }


void GetMailAttachmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMailAttachmentReq*>(&to_msg);
  auto& from = static_cast<const GetMailAttachmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMailAttachmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMailAttachmentReq::CopyFrom(const GetMailAttachmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMailAttachmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMailAttachmentReq::IsInitialized() const {
  return true;
}

void GetMailAttachmentReq::InternalSwap(GetMailAttachmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMailAttachmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[111]);
}

// ===================================================================

class GetMailAttachmentAck::_Internal {
 public:
  static const ::idlepb::Mail& mail_data(const GetMailAttachmentAck* msg);
};

const ::idlepb::Mail&
GetMailAttachmentAck::_Internal::mail_data(const GetMailAttachmentAck* msg) {
  return *msg->_impl_.mail_data_;
}
void GetMailAttachmentAck::clear_mail_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.mail_data_ != nullptr) {
    delete _impl_.mail_data_;
  }
  _impl_.mail_data_ = nullptr;
}
GetMailAttachmentAck::GetMailAttachmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetMailAttachmentAck)
}
GetMailAttachmentAck::GetMailAttachmentAck(const GetMailAttachmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetMailAttachmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_data_){nullptr}
    , decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mail_data()) {
    _this->_impl_.mail_data_ = new ::idlepb::Mail(*from._impl_.mail_data_);
  }
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetMailAttachmentAck)
}

inline void GetMailAttachmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_data_){nullptr}
    , decltype(_impl_.result_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetMailAttachmentAck::~GetMailAttachmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetMailAttachmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMailAttachmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.mail_data_;
}

void GetMailAttachmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetMailAttachmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetMailAttachmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.mail_data_ != nullptr) {
    delete _impl_.mail_data_;
  }
  _impl_.mail_data_ = nullptr;
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMailAttachmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.MailOperation result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::idlepb::MailOperation>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.Mail mail_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mail_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMailAttachmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetMailAttachmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.MailOperation result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // .idlepb.Mail mail_data = 2;
  if (this->_internal_has_mail_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::mail_data(this),
        _Internal::mail_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetMailAttachmentAck)
  return target;
}

size_t GetMailAttachmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetMailAttachmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.Mail mail_data = 2;
  if (this->_internal_has_mail_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.mail_data_);
  }

  // .idlepb.MailOperation result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMailAttachmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetMailAttachmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMailAttachmentAck::GetClassData() const { return &_class_data_; }


void GetMailAttachmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetMailAttachmentAck*>(&to_msg);
  auto& from = static_cast<const GetMailAttachmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetMailAttachmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mail_data()) {
    _this->_internal_mutable_mail_data()->::idlepb::Mail::MergeFrom(
        from._internal_mail_data());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMailAttachmentAck::CopyFrom(const GetMailAttachmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetMailAttachmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMailAttachmentAck::IsInitialized() const {
  return true;
}

void GetMailAttachmentAck::InternalSwap(GetMailAttachmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMailAttachmentAck, _impl_.result_)
      + sizeof(GetMailAttachmentAck::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(GetMailAttachmentAck, _impl_.mail_data_)>(
          reinterpret_cast<char*>(&_impl_.mail_data_),
          reinterpret_cast<char*>(&other->_impl_.mail_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMailAttachmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[112]);
}

// ===================================================================

class DeleteMailReq::_Internal {
 public:
};

DeleteMailReq::DeleteMailReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DeleteMailReq)
}
DeleteMailReq::DeleteMailReq(const DeleteMailReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteMailReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DeleteMailReq)
}

inline void DeleteMailReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteMailReq::~DeleteMailReq() {
  // @@protoc_insertion_point(destructor:idlepb.DeleteMailReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteMailReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteMailReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DeleteMailReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMailReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMailReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DeleteMailReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DeleteMailReq)
  return target;
}

size_t DeleteMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DeleteMailReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMailReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteMailReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMailReq::GetClassData() const { return &_class_data_; }


void DeleteMailReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteMailReq*>(&to_msg);
  auto& from = static_cast<const DeleteMailReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DeleteMailReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMailReq::CopyFrom(const DeleteMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DeleteMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMailReq::IsInitialized() const {
  return true;
}

void DeleteMailReq::InternalSwap(DeleteMailReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMailReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[113]);
}

// ===================================================================

class DeleteMailAck::_Internal {
 public:
};

DeleteMailAck::DeleteMailAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DeleteMailAck)
}
DeleteMailAck::DeleteMailAck(const DeleteMailAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteMailAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DeleteMailAck)
}

inline void DeleteMailAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteMailAck::~DeleteMailAck() {
  // @@protoc_insertion_point(destructor:idlepb.DeleteMailAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteMailAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeleteMailAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DeleteMailAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMailAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMailAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DeleteMailAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DeleteMailAck)
  return target;
}

size_t DeleteMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DeleteMailAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMailAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteMailAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMailAck::GetClassData() const { return &_class_data_; }


void DeleteMailAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteMailAck*>(&to_msg);
  auto& from = static_cast<const DeleteMailAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DeleteMailAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMailAck::CopyFrom(const DeleteMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DeleteMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMailAck::IsInitialized() const {
  return true;
}

void DeleteMailAck::InternalSwap(DeleteMailAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMailAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[114]);
}

// ===================================================================

class OneClickGetMailAttachmentReq::_Internal {
 public:
};

OneClickGetMailAttachmentReq::OneClickGetMailAttachmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickGetMailAttachmentReq)
}
OneClickGetMailAttachmentReq::OneClickGetMailAttachmentReq(const OneClickGetMailAttachmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickGetMailAttachmentReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickGetMailAttachmentReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickGetMailAttachmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickGetMailAttachmentReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickGetMailAttachmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[115]);
}

// ===================================================================

class OneClickGetMailAttachmentAck::_Internal {
 public:
};

void OneClickGetMailAttachmentAck::clear_mail_box() {
  _impl_.mail_box_.Clear();
}
OneClickGetMailAttachmentAck::OneClickGetMailAttachmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickGetMailAttachmentAck)
}
OneClickGetMailAttachmentAck::OneClickGetMailAttachmentAck(const OneClickGetMailAttachmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickGetMailAttachmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_box_){from._impl_.mail_box_}
    , decltype(_impl_.result_){}
    , decltype(_impl_.unread_mail_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.result_, &from._impl_.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unread_mail_num_) -
    reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.unread_mail_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickGetMailAttachmentAck)
}

inline void OneClickGetMailAttachmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mail_box_){arena}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.unread_mail_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickGetMailAttachmentAck::~OneClickGetMailAttachmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickGetMailAttachmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickGetMailAttachmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mail_box_.~RepeatedPtrField();
}

void OneClickGetMailAttachmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickGetMailAttachmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickGetMailAttachmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mail_box_.Clear();
  ::memset(&_impl_.result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unread_mail_num_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.unread_mail_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickGetMailAttachmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.MailOperation result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::idlepb::MailOperation>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 unread_mail_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.unread_mail_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.Mail mail_box = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mail_box(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickGetMailAttachmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickGetMailAttachmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.MailOperation result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // int32 unread_mail_num = 2;
  if (this->_internal_unread_mail_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_unread_mail_num(), target);
  }

  // repeated .idlepb.Mail mail_box = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mail_box_size()); i < n; i++) {
    const auto& repfield = this->_internal_mail_box(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickGetMailAttachmentAck)
  return target;
}

size_t OneClickGetMailAttachmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickGetMailAttachmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.Mail mail_box = 3;
  total_size += 1UL * this->_internal_mail_box_size();
  for (const auto& msg : this->_impl_.mail_box_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.MailOperation result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  // int32 unread_mail_num = 2;
  if (this->_internal_unread_mail_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unread_mail_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickGetMailAttachmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickGetMailAttachmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickGetMailAttachmentAck::GetClassData() const { return &_class_data_; }


void OneClickGetMailAttachmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickGetMailAttachmentAck*>(&to_msg);
  auto& from = static_cast<const OneClickGetMailAttachmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickGetMailAttachmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.mail_box_.MergeFrom(from._impl_.mail_box_);
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_unread_mail_num() != 0) {
    _this->_internal_set_unread_mail_num(from._internal_unread_mail_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickGetMailAttachmentAck::CopyFrom(const OneClickGetMailAttachmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickGetMailAttachmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickGetMailAttachmentAck::IsInitialized() const {
  return true;
}

void OneClickGetMailAttachmentAck::InternalSwap(OneClickGetMailAttachmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mail_box_.InternalSwap(&other->_impl_.mail_box_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OneClickGetMailAttachmentAck, _impl_.unread_mail_num_)
      + sizeof(OneClickGetMailAttachmentAck::_impl_.unread_mail_num_)
      - PROTOBUF_FIELD_OFFSET(OneClickGetMailAttachmentAck, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickGetMailAttachmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[116]);
}

// ===================================================================

class OneClickReadMailReq::_Internal {
 public:
};

OneClickReadMailReq::OneClickReadMailReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickReadMailReq)
}
OneClickReadMailReq::OneClickReadMailReq(const OneClickReadMailReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickReadMailReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickReadMailReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickReadMailReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickReadMailReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickReadMailReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[117]);
}

// ===================================================================

class OneClickReadMailAck::_Internal {
 public:
};

OneClickReadMailAck::OneClickReadMailAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickReadMailAck)
}
OneClickReadMailAck::OneClickReadMailAck(const OneClickReadMailAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickReadMailAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickReadMailAck)
}

inline void OneClickReadMailAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickReadMailAck::~OneClickReadMailAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickReadMailAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickReadMailAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OneClickReadMailAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickReadMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickReadMailAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickReadMailAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickReadMailAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickReadMailAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickReadMailAck)
  return target;
}

size_t OneClickReadMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickReadMailAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickReadMailAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickReadMailAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickReadMailAck::GetClassData() const { return &_class_data_; }


void OneClickReadMailAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickReadMailAck*>(&to_msg);
  auto& from = static_cast<const OneClickReadMailAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickReadMailAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickReadMailAck::CopyFrom(const OneClickReadMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickReadMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickReadMailAck::IsInitialized() const {
  return true;
}

void OneClickReadMailAck::InternalSwap(OneClickReadMailAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickReadMailAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[118]);
}

// ===================================================================

class OneClickDeleteMailReq::_Internal {
 public:
};

OneClickDeleteMailReq::OneClickDeleteMailReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickDeleteMailReq)
}
OneClickDeleteMailReq::OneClickDeleteMailReq(const OneClickDeleteMailReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickDeleteMailReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickDeleteMailReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickDeleteMailReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickDeleteMailReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickDeleteMailReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[119]);
}

// ===================================================================

class OneClickDeleteMailAck::_Internal {
 public:
};

OneClickDeleteMailAck::OneClickDeleteMailAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickDeleteMailAck)
}
OneClickDeleteMailAck::OneClickDeleteMailAck(const OneClickDeleteMailAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickDeleteMailAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.deleted_index_){from._impl_.deleted_index_}
    , /*decltype(_impl_._deleted_index_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickDeleteMailAck)
}

inline void OneClickDeleteMailAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.deleted_index_){arena}
    , /*decltype(_impl_._deleted_index_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickDeleteMailAck::~OneClickDeleteMailAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickDeleteMailAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickDeleteMailAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.deleted_index_.~RepeatedField();
}

void OneClickDeleteMailAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickDeleteMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickDeleteMailAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deleted_index_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickDeleteMailAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 deleted_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_deleted_index(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_deleted_index(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickDeleteMailAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickDeleteMailAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 deleted_index = 1;
  {
    int byte_size = _impl_._deleted_index_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_deleted_index(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickDeleteMailAck)
  return target;
}

size_t OneClickDeleteMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickDeleteMailAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 deleted_index = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.deleted_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._deleted_index_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickDeleteMailAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickDeleteMailAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickDeleteMailAck::GetClassData() const { return &_class_data_; }


void OneClickDeleteMailAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickDeleteMailAck*>(&to_msg);
  auto& from = static_cast<const OneClickDeleteMailAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickDeleteMailAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.deleted_index_.MergeFrom(from._impl_.deleted_index_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickDeleteMailAck::CopyFrom(const OneClickDeleteMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickDeleteMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickDeleteMailAck::IsInitialized() const {
  return true;
}

void OneClickDeleteMailAck::InternalSwap(OneClickDeleteMailAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.deleted_index_.InternalSwap(&other->_impl_.deleted_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickDeleteMailAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[120]);
}

// ===================================================================

class UnlockFunctionModuleReq::_Internal {
 public:
};

UnlockFunctionModuleReq::UnlockFunctionModuleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockFunctionModuleReq)
}
UnlockFunctionModuleReq::UnlockFunctionModuleReq(const UnlockFunctionModuleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockFunctionModuleReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockFunctionModuleReq)
}

inline void UnlockFunctionModuleReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockFunctionModuleReq::~UnlockFunctionModuleReq() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockFunctionModuleReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockFunctionModuleReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockFunctionModuleReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockFunctionModuleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockFunctionModuleReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockFunctionModuleReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.FunctionModuleType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::FunctionModuleType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockFunctionModuleReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockFunctionModuleReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.FunctionModuleType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockFunctionModuleReq)
  return target;
}

size_t UnlockFunctionModuleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockFunctionModuleReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.FunctionModuleType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockFunctionModuleReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockFunctionModuleReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockFunctionModuleReq::GetClassData() const { return &_class_data_; }


void UnlockFunctionModuleReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockFunctionModuleReq*>(&to_msg);
  auto& from = static_cast<const UnlockFunctionModuleReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockFunctionModuleReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockFunctionModuleReq::CopyFrom(const UnlockFunctionModuleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockFunctionModuleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockFunctionModuleReq::IsInitialized() const {
  return true;
}

void UnlockFunctionModuleReq::InternalSwap(UnlockFunctionModuleReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockFunctionModuleReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[121]);
}

// ===================================================================

class UnlockFunctionModuleAck::_Internal {
 public:
};

UnlockFunctionModuleAck::UnlockFunctionModuleAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UnlockFunctionModuleAck)
}
UnlockFunctionModuleAck::UnlockFunctionModuleAck(const UnlockFunctionModuleAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnlockFunctionModuleAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UnlockFunctionModuleAck)
}

inline void UnlockFunctionModuleAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnlockFunctionModuleAck::~UnlockFunctionModuleAck() {
  // @@protoc_insertion_point(destructor:idlepb.UnlockFunctionModuleAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnlockFunctionModuleAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnlockFunctionModuleAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnlockFunctionModuleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UnlockFunctionModuleAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnlockFunctionModuleAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnlockFunctionModuleAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UnlockFunctionModuleAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UnlockFunctionModuleAck)
  return target;
}

size_t UnlockFunctionModuleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UnlockFunctionModuleAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnlockFunctionModuleAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnlockFunctionModuleAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnlockFunctionModuleAck::GetClassData() const { return &_class_data_; }


void UnlockFunctionModuleAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnlockFunctionModuleAck*>(&to_msg);
  auto& from = static_cast<const UnlockFunctionModuleAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UnlockFunctionModuleAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockFunctionModuleAck::CopyFrom(const UnlockFunctionModuleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UnlockFunctionModuleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockFunctionModuleAck::IsInitialized() const {
  return true;
}

void UnlockFunctionModuleAck::InternalSwap(UnlockFunctionModuleAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnlockFunctionModuleAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[122]);
}

// ===================================================================

class NotifyUnlockedModuels::_Internal {
 public:
};

NotifyUnlockedModuels::NotifyUnlockedModuels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyUnlockedModuels)
}
NotifyUnlockedModuels::NotifyUnlockedModuels(const NotifyUnlockedModuels& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyUnlockedModuels* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unlocked_modules_){from._impl_.unlocked_modules_}
    , /*decltype(_impl_._unlocked_modules_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyUnlockedModuels)
}

inline void NotifyUnlockedModuels::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unlocked_modules_){arena}
    , /*decltype(_impl_._unlocked_modules_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyUnlockedModuels::~NotifyUnlockedModuels() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyUnlockedModuels)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyUnlockedModuels::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unlocked_modules_.~RepeatedField();
}

void NotifyUnlockedModuels::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyUnlockedModuels::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyUnlockedModuels)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unlocked_modules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyUnlockedModuels::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 unlocked_modules = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_unlocked_modules(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_unlocked_modules(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyUnlockedModuels::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyUnlockedModuels)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 unlocked_modules = 1;
  {
    int byte_size = _impl_._unlocked_modules_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_unlocked_modules(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyUnlockedModuels)
  return target;
}

size_t NotifyUnlockedModuels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyUnlockedModuels)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 unlocked_modules = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.unlocked_modules_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._unlocked_modules_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyUnlockedModuels::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyUnlockedModuels::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyUnlockedModuels::GetClassData() const { return &_class_data_; }


void NotifyUnlockedModuels::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyUnlockedModuels*>(&to_msg);
  auto& from = static_cast<const NotifyUnlockedModuels&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyUnlockedModuels)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unlocked_modules_.MergeFrom(from._impl_.unlocked_modules_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyUnlockedModuels::CopyFrom(const NotifyUnlockedModuels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyUnlockedModuels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyUnlockedModuels::IsInitialized() const {
  return true;
}

void NotifyUnlockedModuels::InternalSwap(NotifyUnlockedModuels* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unlocked_modules_.InternalSwap(&other->_impl_.unlocked_modules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyUnlockedModuels::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[123]);
}

// ===================================================================

class UpdateChat::_Internal {
 public:
  static const ::idlepb::ChatMessage& chat_message(const UpdateChat* msg);
};

const ::idlepb::ChatMessage&
UpdateChat::_Internal::chat_message(const UpdateChat* msg) {
  return *msg->_impl_.chat_message_;
}
void UpdateChat::clear_chat_message() {
  if (GetArenaForAllocation() == nullptr && _impl_.chat_message_ != nullptr) {
    delete _impl_.chat_message_;
  }
  _impl_.chat_message_ = nullptr;
}
UpdateChat::UpdateChat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateChat)
}
UpdateChat::UpdateChat(const UpdateChat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateChat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_message_){nullptr}
    , decltype(_impl_.channel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chat_message()) {
    _this->_impl_.chat_message_ = new ::idlepb::ChatMessage(*from._impl_.chat_message_);
  }
  _this->_impl_.channel_ = from._impl_.channel_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateChat)
}

inline void UpdateChat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.chat_message_){nullptr}
    , decltype(_impl_.channel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateChat::~UpdateChat() {
  // @@protoc_insertion_point(destructor:idlepb.UpdateChat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateChat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.chat_message_;
}

void UpdateChat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateChat::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpdateChat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.chat_message_ != nullptr) {
    delete _impl_.chat_message_;
  }
  _impl_.chat_message_ = nullptr;
  _impl_.channel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateChat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.ChatMessageChannel channel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::idlepb::ChatMessageChannel>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ChatMessage chat_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chat_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateChat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpdateChat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.ChatMessageChannel channel = 1;
  if (this->_internal_channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_channel(), target);
  }

  // .idlepb.ChatMessage chat_message = 2;
  if (this->_internal_has_chat_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::chat_message(this),
        _Internal::chat_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpdateChat)
  return target;
}

size_t UpdateChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpdateChat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ChatMessage chat_message = 2;
  if (this->_internal_has_chat_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.chat_message_);
  }

  // .idlepb.ChatMessageChannel channel = 1;
  if (this->_internal_channel() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_channel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateChat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateChat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateChat::GetClassData() const { return &_class_data_; }


void UpdateChat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateChat*>(&to_msg);
  auto& from = static_cast<const UpdateChat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpdateChat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_chat_message()) {
    _this->_internal_mutable_chat_message()->::idlepb::ChatMessage::MergeFrom(
        from._internal_chat_message());
  }
  if (from._internal_channel() != 0) {
    _this->_internal_set_channel(from._internal_channel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateChat::CopyFrom(const UpdateChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpdateChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateChat::IsInitialized() const {
  return true;
}

void UpdateChat::InternalSwap(UpdateChat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateChat, _impl_.channel_)
      + sizeof(UpdateChat::_impl_.channel_)
      - PROTOBUF_FIELD_OFFSET(UpdateChat, _impl_.chat_message_)>(
          reinterpret_cast<char*>(&_impl_.chat_message_),
          reinterpret_cast<char*>(&other->_impl_.chat_message_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateChat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[124]);
}

// ===================================================================

class SendChatMessageReq::_Internal {
 public:
};

SendChatMessageReq::SendChatMessageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SendChatMessageReq)
}
SendChatMessageReq::SendChatMessageReq(const SendChatMessageReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendChatMessageReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.role_id_){}
    , decltype(_impl_.channel_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SendChatMessageReq)
}

inline void SendChatMessageReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.role_id_){uint64_t{0u}}
    , decltype(_impl_.channel_){0}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendChatMessageReq::~SendChatMessageReq() {
  // @@protoc_insertion_point(destructor:idlepb.SendChatMessageReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendChatMessageReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void SendChatMessageReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendChatMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SendChatMessageReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendChatMessageReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ChatMessageChannel channel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::idlepb::ChatMessageChannel>(val));
        } else
          goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SendChatMessageReq.text"));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ChatMessageType type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::ChatMessageType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendChatMessageReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SendChatMessageReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_role_id(), target);
  }

  // .idlepb.ChatMessageChannel channel = 2;
  if (this->_internal_channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_channel(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SendChatMessageReq.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  // .idlepb.ChatMessageType type = 4;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SendChatMessageReq)
  return target;
}

size_t SendChatMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SendChatMessageReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_role_id());
  }

  // .idlepb.ChatMessageChannel channel = 2;
  if (this->_internal_channel() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_channel());
  }

  // .idlepb.ChatMessageType type = 4;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendChatMessageReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendChatMessageReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendChatMessageReq::GetClassData() const { return &_class_data_; }


void SendChatMessageReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendChatMessageReq*>(&to_msg);
  auto& from = static_cast<const SendChatMessageReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SendChatMessageReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_channel() != 0) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendChatMessageReq::CopyFrom(const SendChatMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SendChatMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendChatMessageReq::IsInitialized() const {
  return true;
}

void SendChatMessageReq::InternalSwap(SendChatMessageReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendChatMessageReq, _impl_.type_)
      + sizeof(SendChatMessageReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SendChatMessageReq, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendChatMessageReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[125]);
}

// ===================================================================

class SendChatMessageAck::_Internal {
 public:
};

SendChatMessageAck::SendChatMessageAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SendChatMessageAck)
}
SendChatMessageAck::SendChatMessageAck(const SendChatMessageAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendChatMessageAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SendChatMessageAck)
}

inline void SendChatMessageAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SendChatMessageAck::~SendChatMessageAck() {
  // @@protoc_insertion_point(destructor:idlepb.SendChatMessageAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendChatMessageAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SendChatMessageAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendChatMessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SendChatMessageAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendChatMessageAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendChatMessageAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SendChatMessageAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SendChatMessageAck)
  return target;
}

size_t SendChatMessageAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SendChatMessageAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendChatMessageAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendChatMessageAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendChatMessageAck::GetClassData() const { return &_class_data_; }


void SendChatMessageAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendChatMessageAck*>(&to_msg);
  auto& from = static_cast<const SendChatMessageAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SendChatMessageAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendChatMessageAck::CopyFrom(const SendChatMessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SendChatMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendChatMessageAck::IsInitialized() const {
  return true;
}

void SendChatMessageAck::InternalSwap(SendChatMessageAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendChatMessageAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[126]);
}

// ===================================================================

class GetChatRecordReq::_Internal {
 public:
};

GetChatRecordReq::GetChatRecordReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetChatRecordReq)
}
GetChatRecordReq::GetChatRecordReq(const GetChatRecordReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetChatRecordReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetChatRecordReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChatRecordReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChatRecordReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetChatRecordReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[127]);
}

// ===================================================================

class GetChatRecordAck::_Internal {
 public:
  static const ::idlepb::ChatData& public_chat_record(const GetChatRecordAck* msg);
  static const ::idlepb::RolePrivateChatRecord& private_chat_record(const GetChatRecordAck* msg);
};

const ::idlepb::ChatData&
GetChatRecordAck::_Internal::public_chat_record(const GetChatRecordAck* msg) {
  return *msg->_impl_.public_chat_record_;
}
const ::idlepb::RolePrivateChatRecord&
GetChatRecordAck::_Internal::private_chat_record(const GetChatRecordAck* msg) {
  return *msg->_impl_.private_chat_record_;
}
void GetChatRecordAck::clear_public_chat_record() {
  if (GetArenaForAllocation() == nullptr && _impl_.public_chat_record_ != nullptr) {
    delete _impl_.public_chat_record_;
  }
  _impl_.public_chat_record_ = nullptr;
}
void GetChatRecordAck::clear_private_chat_record() {
  if (GetArenaForAllocation() == nullptr && _impl_.private_chat_record_ != nullptr) {
    delete _impl_.private_chat_record_;
  }
  _impl_.private_chat_record_ = nullptr;
}
void GetChatRecordAck::clear_sept_record() {
  _impl_.sept_record_.Clear();
}
GetChatRecordAck::GetChatRecordAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetChatRecordAck)
}
GetChatRecordAck::GetChatRecordAck(const GetChatRecordAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChatRecordAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_record_){from._impl_.sept_record_}
    , decltype(_impl_.public_chat_record_){nullptr}
    , decltype(_impl_.private_chat_record_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_public_chat_record()) {
    _this->_impl_.public_chat_record_ = new ::idlepb::ChatData(*from._impl_.public_chat_record_);
  }
  if (from._internal_has_private_chat_record()) {
    _this->_impl_.private_chat_record_ = new ::idlepb::RolePrivateChatRecord(*from._impl_.private_chat_record_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetChatRecordAck)
}

inline void GetChatRecordAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_record_){arena}
    , decltype(_impl_.public_chat_record_){nullptr}
    , decltype(_impl_.private_chat_record_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetChatRecordAck::~GetChatRecordAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetChatRecordAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChatRecordAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sept_record_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.public_chat_record_;
  if (this != internal_default_instance()) delete _impl_.private_chat_record_;
}

void GetChatRecordAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChatRecordAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetChatRecordAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sept_record_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.public_chat_record_ != nullptr) {
    delete _impl_.public_chat_record_;
  }
  _impl_.public_chat_record_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.private_chat_record_ != nullptr) {
    delete _impl_.private_chat_record_;
  }
  _impl_.private_chat_record_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChatRecordAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.ChatData public_chat_record = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_public_chat_record(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RolePrivateChatRecord private_chat_record = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_private_chat_record(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.ChatMessage sept_record = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sept_record(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChatRecordAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetChatRecordAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.ChatData public_chat_record = 1;
  if (this->_internal_has_public_chat_record()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::public_chat_record(this),
        _Internal::public_chat_record(this).GetCachedSize(), target, stream);
  }

  // .idlepb.RolePrivateChatRecord private_chat_record = 2;
  if (this->_internal_has_private_chat_record()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::private_chat_record(this),
        _Internal::private_chat_record(this).GetCachedSize(), target, stream);
  }

  // repeated .idlepb.ChatMessage sept_record = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sept_record_size()); i < n; i++) {
    const auto& repfield = this->_internal_sept_record(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetChatRecordAck)
  return target;
}

size_t GetChatRecordAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetChatRecordAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.ChatMessage sept_record = 3;
  total_size += 1UL * this->_internal_sept_record_size();
  for (const auto& msg : this->_impl_.sept_record_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.ChatData public_chat_record = 1;
  if (this->_internal_has_public_chat_record()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.public_chat_record_);
  }

  // .idlepb.RolePrivateChatRecord private_chat_record = 2;
  if (this->_internal_has_private_chat_record()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.private_chat_record_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChatRecordAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChatRecordAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChatRecordAck::GetClassData() const { return &_class_data_; }


void GetChatRecordAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChatRecordAck*>(&to_msg);
  auto& from = static_cast<const GetChatRecordAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetChatRecordAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sept_record_.MergeFrom(from._impl_.sept_record_);
  if (from._internal_has_public_chat_record()) {
    _this->_internal_mutable_public_chat_record()->::idlepb::ChatData::MergeFrom(
        from._internal_public_chat_record());
  }
  if (from._internal_has_private_chat_record()) {
    _this->_internal_mutable_private_chat_record()->::idlepb::RolePrivateChatRecord::MergeFrom(
        from._internal_private_chat_record());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChatRecordAck::CopyFrom(const GetChatRecordAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetChatRecordAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChatRecordAck::IsInitialized() const {
  return true;
}

void GetChatRecordAck::InternalSwap(GetChatRecordAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sept_record_.InternalSwap(&other->_impl_.sept_record_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetChatRecordAck, _impl_.private_chat_record_)
      + sizeof(GetChatRecordAck::_impl_.private_chat_record_)
      - PROTOBUF_FIELD_OFFSET(GetChatRecordAck, _impl_.public_chat_record_)>(
          reinterpret_cast<char*>(&_impl_.public_chat_record_),
          reinterpret_cast<char*>(&other->_impl_.public_chat_record_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChatRecordAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[128]);
}

// ===================================================================

class DeletePrivateChatRecordReq::_Internal {
 public:
};

DeletePrivateChatRecordReq::DeletePrivateChatRecordReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DeletePrivateChatRecordReq)
}
DeletePrivateChatRecordReq::DeletePrivateChatRecordReq(const DeletePrivateChatRecordReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeletePrivateChatRecordReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.role_id_ = from._impl_.role_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DeletePrivateChatRecordReq)
}

inline void DeletePrivateChatRecordReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeletePrivateChatRecordReq::~DeletePrivateChatRecordReq() {
  // @@protoc_insertion_point(destructor:idlepb.DeletePrivateChatRecordReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePrivateChatRecordReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeletePrivateChatRecordReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeletePrivateChatRecordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DeletePrivateChatRecordReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePrivateChatRecordReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePrivateChatRecordReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DeletePrivateChatRecordReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DeletePrivateChatRecordReq)
  return target;
}

size_t DeletePrivateChatRecordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DeletePrivateChatRecordReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_role_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePrivateChatRecordReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeletePrivateChatRecordReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePrivateChatRecordReq::GetClassData() const { return &_class_data_; }


void DeletePrivateChatRecordReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeletePrivateChatRecordReq*>(&to_msg);
  auto& from = static_cast<const DeletePrivateChatRecordReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DeletePrivateChatRecordReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePrivateChatRecordReq::CopyFrom(const DeletePrivateChatRecordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DeletePrivateChatRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePrivateChatRecordReq::IsInitialized() const {
  return true;
}

void DeletePrivateChatRecordReq::InternalSwap(DeletePrivateChatRecordReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.role_id_, other->_impl_.role_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePrivateChatRecordReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[129]);
}

// ===================================================================

class DeletePrivateChatRecordAck::_Internal {
 public:
};

DeletePrivateChatRecordAck::DeletePrivateChatRecordAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DeletePrivateChatRecordAck)
}
DeletePrivateChatRecordAck::DeletePrivateChatRecordAck(const DeletePrivateChatRecordAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeletePrivateChatRecordAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DeletePrivateChatRecordAck)
}

inline void DeletePrivateChatRecordAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeletePrivateChatRecordAck::~DeletePrivateChatRecordAck() {
  // @@protoc_insertion_point(destructor:idlepb.DeletePrivateChatRecordAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePrivateChatRecordAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeletePrivateChatRecordAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeletePrivateChatRecordAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DeletePrivateChatRecordAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePrivateChatRecordAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePrivateChatRecordAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DeletePrivateChatRecordAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DeletePrivateChatRecordAck)
  return target;
}

size_t DeletePrivateChatRecordAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DeletePrivateChatRecordAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePrivateChatRecordAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeletePrivateChatRecordAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePrivateChatRecordAck::GetClassData() const { return &_class_data_; }


void DeletePrivateChatRecordAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeletePrivateChatRecordAck*>(&to_msg);
  auto& from = static_cast<const DeletePrivateChatRecordAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DeletePrivateChatRecordAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePrivateChatRecordAck::CopyFrom(const DeletePrivateChatRecordAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DeletePrivateChatRecordAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePrivateChatRecordAck::IsInitialized() const {
  return true;
}

void DeletePrivateChatRecordAck::InternalSwap(DeletePrivateChatRecordAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePrivateChatRecordAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[130]);
}

// ===================================================================

class ClearChatUnreadNumReq::_Internal {
 public:
};

ClearChatUnreadNumReq::ClearChatUnreadNumReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ClearChatUnreadNumReq)
}
ClearChatUnreadNumReq::ClearChatUnreadNumReq(const ClearChatUnreadNumReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ClearChatUnreadNumReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.role_id_ = from._impl_.role_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ClearChatUnreadNumReq)
}

inline void ClearChatUnreadNumReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ClearChatUnreadNumReq::~ClearChatUnreadNumReq() {
  // @@protoc_insertion_point(destructor:idlepb.ClearChatUnreadNumReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClearChatUnreadNumReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ClearChatUnreadNumReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ClearChatUnreadNumReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ClearChatUnreadNumReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearChatUnreadNumReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ClearChatUnreadNumReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ClearChatUnreadNumReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ClearChatUnreadNumReq)
  return target;
}

size_t ClearChatUnreadNumReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ClearChatUnreadNumReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_role_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClearChatUnreadNumReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ClearChatUnreadNumReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClearChatUnreadNumReq::GetClassData() const { return &_class_data_; }


void ClearChatUnreadNumReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ClearChatUnreadNumReq*>(&to_msg);
  auto& from = static_cast<const ClearChatUnreadNumReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ClearChatUnreadNumReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClearChatUnreadNumReq::CopyFrom(const ClearChatUnreadNumReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ClearChatUnreadNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearChatUnreadNumReq::IsInitialized() const {
  return true;
}

void ClearChatUnreadNumReq::InternalSwap(ClearChatUnreadNumReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.role_id_, other->_impl_.role_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearChatUnreadNumReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[131]);
}

// ===================================================================

class ClearChatUnreadNumAck::_Internal {
 public:
};

ClearChatUnreadNumAck::ClearChatUnreadNumAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ClearChatUnreadNumAck)
}
ClearChatUnreadNumAck::ClearChatUnreadNumAck(const ClearChatUnreadNumAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ClearChatUnreadNumAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ClearChatUnreadNumAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClearChatUnreadNumAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClearChatUnreadNumAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ClearChatUnreadNumAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[132]);
}

// ===================================================================

class GetRoleInfoCacheReq::_Internal {
 public:
};

GetRoleInfoCacheReq::GetRoleInfoCacheReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleInfoCacheReq)
}
GetRoleInfoCacheReq::GetRoleInfoCacheReq(const GetRoleInfoCacheReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleInfoCacheReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_ids_){from._impl_.role_ids_}
    , /*decltype(_impl_._role_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleInfoCacheReq)
}

inline void GetRoleInfoCacheReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_ids_){arena}
    , /*decltype(_impl_._role_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleInfoCacheReq::~GetRoleInfoCacheReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleInfoCacheReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleInfoCacheReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_ids_.~RepeatedField();
}

void GetRoleInfoCacheReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleInfoCacheReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleInfoCacheReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleInfoCacheReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 role_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleInfoCacheReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleInfoCacheReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 role_ids = 1;
  {
    int byte_size = _impl_._role_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_role_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleInfoCacheReq)
  return target;
}

size_t GetRoleInfoCacheReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleInfoCacheReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 role_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.role_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._role_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleInfoCacheReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleInfoCacheReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleInfoCacheReq::GetClassData() const { return &_class_data_; }


void GetRoleInfoCacheReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleInfoCacheReq*>(&to_msg);
  auto& from = static_cast<const GetRoleInfoCacheReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleInfoCacheReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.role_ids_.MergeFrom(from._impl_.role_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleInfoCacheReq::CopyFrom(const GetRoleInfoCacheReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleInfoCacheReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleInfoCacheReq::IsInitialized() const {
  return true;
}

void GetRoleInfoCacheReq::InternalSwap(GetRoleInfoCacheReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.role_ids_.InternalSwap(&other->_impl_.role_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleInfoCacheReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[133]);
}

// ===================================================================

class GetRoleInfoCacheAck::_Internal {
 public:
};

void GetRoleInfoCacheAck::clear_role_infos() {
  _impl_.role_infos_.Clear();
}
GetRoleInfoCacheAck::GetRoleInfoCacheAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleInfoCacheAck)
}
GetRoleInfoCacheAck::GetRoleInfoCacheAck(const GetRoleInfoCacheAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleInfoCacheAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){from._impl_.role_infos_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleInfoCacheAck)
}

inline void GetRoleInfoCacheAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleInfoCacheAck::~GetRoleInfoCacheAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleInfoCacheAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleInfoCacheAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_infos_.~RepeatedPtrField();
}

void GetRoleInfoCacheAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleInfoCacheAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleInfoCacheAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_infos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleInfoCacheAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.SimpleRoleInfo role_infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleInfoCacheAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleInfoCacheAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.SimpleRoleInfo role_infos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_role_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_role_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleInfoCacheAck)
  return target;
}

size_t GetRoleInfoCacheAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleInfoCacheAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleRoleInfo role_infos = 1;
  total_size += 1UL * this->_internal_role_infos_size();
  for (const auto& msg : this->_impl_.role_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleInfoCacheAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleInfoCacheAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleInfoCacheAck::GetClassData() const { return &_class_data_; }


void GetRoleInfoCacheAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleInfoCacheAck*>(&to_msg);
  auto& from = static_cast<const GetRoleInfoCacheAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleInfoCacheAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.role_infos_.MergeFrom(from._impl_.role_infos_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleInfoCacheAck::CopyFrom(const GetRoleInfoCacheAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleInfoCacheAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleInfoCacheAck::IsInitialized() const {
  return true;
}

void GetRoleInfoCacheAck::InternalSwap(GetRoleInfoCacheAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.role_infos_.InternalSwap(&other->_impl_.role_infos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleInfoCacheAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[134]);
}

// ===================================================================

class ForgeRefineStartReq::_Internal {
 public:
};

ForgeRefineStartReq::ForgeRefineStartReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineStartReq)
}
ForgeRefineStartReq::ForgeRefineStartReq(const ForgeRefineStartReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeRefineStartReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.recipe_id_){}
    , decltype(_impl_.material_id_){}
    , decltype(_impl_.ext_material_id_){}
    , decltype(_impl_.target_num_){}
    , decltype(_impl_.auto_sell_poor_){}
    , decltype(_impl_.auto_sell_middle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.recipe_id_, &from._impl_.recipe_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.auto_sell_middle_) -
    reinterpret_cast<char*>(&_impl_.recipe_id_)) + sizeof(_impl_.auto_sell_middle_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineStartReq)
}

inline void ForgeRefineStartReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.recipe_id_){0}
    , decltype(_impl_.material_id_){0}
    , decltype(_impl_.ext_material_id_){0}
    , decltype(_impl_.target_num_){0}
    , decltype(_impl_.auto_sell_poor_){false}
    , decltype(_impl_.auto_sell_middle_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeRefineStartReq::~ForgeRefineStartReq() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeRefineStartReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeRefineStartReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeRefineStartReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeRefineStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeRefineStartReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.recipe_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.auto_sell_middle_) -
      reinterpret_cast<char*>(&_impl_.recipe_id_)) + sizeof(_impl_.auto_sell_middle_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeRefineStartReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 recipe_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.recipe_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 material_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.material_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ext_material_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.ext_material_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.target_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_sell_poor = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.auto_sell_poor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_sell_middle = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.auto_sell_middle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeRefineStartReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeRefineStartReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 recipe_id = 1;
  if (this->_internal_recipe_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_recipe_id(), target);
  }

  // int32 material_id = 2;
  if (this->_internal_material_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_material_id(), target);
  }

  // int32 ext_material_id = 3;
  if (this->_internal_ext_material_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_ext_material_id(), target);
  }

  // int32 target_num = 4;
  if (this->_internal_target_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_target_num(), target);
  }

  // bool auto_sell_poor = 5;
  if (this->_internal_auto_sell_poor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_auto_sell_poor(), target);
  }

  // bool auto_sell_middle = 6;
  if (this->_internal_auto_sell_middle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_auto_sell_middle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeRefineStartReq)
  return target;
}

size_t ForgeRefineStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeRefineStartReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 recipe_id = 1;
  if (this->_internal_recipe_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_recipe_id());
  }

  // int32 material_id = 2;
  if (this->_internal_material_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_material_id());
  }

  // int32 ext_material_id = 3;
  if (this->_internal_ext_material_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ext_material_id());
  }

  // int32 target_num = 4;
  if (this->_internal_target_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_num());
  }

  // bool auto_sell_poor = 5;
  if (this->_internal_auto_sell_poor() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_sell_middle = 6;
  if (this->_internal_auto_sell_middle() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineStartReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeRefineStartReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineStartReq::GetClassData() const { return &_class_data_; }


void ForgeRefineStartReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeRefineStartReq*>(&to_msg);
  auto& from = static_cast<const ForgeRefineStartReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeRefineStartReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_recipe_id() != 0) {
    _this->_internal_set_recipe_id(from._internal_recipe_id());
  }
  if (from._internal_material_id() != 0) {
    _this->_internal_set_material_id(from._internal_material_id());
  }
  if (from._internal_ext_material_id() != 0) {
    _this->_internal_set_ext_material_id(from._internal_ext_material_id());
  }
  if (from._internal_target_num() != 0) {
    _this->_internal_set_target_num(from._internal_target_num());
  }
  if (from._internal_auto_sell_poor() != 0) {
    _this->_internal_set_auto_sell_poor(from._internal_auto_sell_poor());
  }
  if (from._internal_auto_sell_middle() != 0) {
    _this->_internal_set_auto_sell_middle(from._internal_auto_sell_middle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeRefineStartReq::CopyFrom(const ForgeRefineStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeRefineStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeRefineStartReq::IsInitialized() const {
  return true;
}

void ForgeRefineStartReq::InternalSwap(ForgeRefineStartReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ForgeRefineStartReq, _impl_.auto_sell_middle_)
      + sizeof(ForgeRefineStartReq::_impl_.auto_sell_middle_)
      - PROTOBUF_FIELD_OFFSET(ForgeRefineStartReq, _impl_.recipe_id_)>(
          reinterpret_cast<char*>(&_impl_.recipe_id_),
          reinterpret_cast<char*>(&other->_impl_.recipe_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineStartReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[135]);
}

// ===================================================================

class ForgeRefineStartAck::_Internal {
 public:
};

ForgeRefineStartAck::ForgeRefineStartAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineStartAck)
}
ForgeRefineStartAck::ForgeRefineStartAck(const ForgeRefineStartAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeRefineStartAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineStartAck)
}

inline void ForgeRefineStartAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeRefineStartAck::~ForgeRefineStartAck() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeRefineStartAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeRefineStartAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeRefineStartAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeRefineStartAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeRefineStartAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeRefineStartAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeRefineStartAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeRefineStartAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeRefineStartAck)
  return target;
}

size_t ForgeRefineStartAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeRefineStartAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineStartAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeRefineStartAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineStartAck::GetClassData() const { return &_class_data_; }


void ForgeRefineStartAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeRefineStartAck*>(&to_msg);
  auto& from = static_cast<const ForgeRefineStartAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeRefineStartAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeRefineStartAck::CopyFrom(const ForgeRefineStartAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeRefineStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeRefineStartAck::IsInitialized() const {
  return true;
}

void ForgeRefineStartAck::InternalSwap(ForgeRefineStartAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineStartAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[136]);
}

// ===================================================================

class ForgeRefineCancelReq::_Internal {
 public:
};

ForgeRefineCancelReq::ForgeRefineCancelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineCancelReq)
}
ForgeRefineCancelReq::ForgeRefineCancelReq(const ForgeRefineCancelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ForgeRefineCancelReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineCancelReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineCancelReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineCancelReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineCancelReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[137]);
}

// ===================================================================

class ForgeRefineCancelAck::_Internal {
 public:
};

ForgeRefineCancelAck::ForgeRefineCancelAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineCancelAck)
}
ForgeRefineCancelAck::ForgeRefineCancelAck(const ForgeRefineCancelAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeRefineCancelAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineCancelAck)
}

inline void ForgeRefineCancelAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeRefineCancelAck::~ForgeRefineCancelAck() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeRefineCancelAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeRefineCancelAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeRefineCancelAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeRefineCancelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeRefineCancelAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeRefineCancelAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeRefineCancelAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeRefineCancelAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeRefineCancelAck)
  return target;
}

size_t ForgeRefineCancelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeRefineCancelAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineCancelAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeRefineCancelAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineCancelAck::GetClassData() const { return &_class_data_; }


void ForgeRefineCancelAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeRefineCancelAck*>(&to_msg);
  auto& from = static_cast<const ForgeRefineCancelAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeRefineCancelAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeRefineCancelAck::CopyFrom(const ForgeRefineCancelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeRefineCancelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeRefineCancelAck::IsInitialized() const {
  return true;
}

void ForgeRefineCancelAck::InternalSwap(ForgeRefineCancelAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineCancelAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[138]);
}

// ===================================================================

class ForgeRefineExtractReq::_Internal {
 public:
};

ForgeRefineExtractReq::ForgeRefineExtractReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineExtractReq)
}
ForgeRefineExtractReq::ForgeRefineExtractReq(const ForgeRefineExtractReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ForgeRefineExtractReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineExtractReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineExtractReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineExtractReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineExtractReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[139]);
}

// ===================================================================

class ForgeRefineExtractAck::_Internal {
 public:
};

ForgeRefineExtractAck::ForgeRefineExtractAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeRefineExtractAck)
}
ForgeRefineExtractAck::ForgeRefineExtractAck(const ForgeRefineExtractAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeRefineExtractAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._items_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeRefineExtractAck)
}

inline void ForgeRefineExtractAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._items_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeRefineExtractAck::~ForgeRefineExtractAck() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeRefineExtractAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeRefineExtractAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedField();
}

void ForgeRefineExtractAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeRefineExtractAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeRefineExtractAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeRefineExtractAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_items(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_items(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeRefineExtractAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeRefineExtractAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated int64 items = 2;
  {
    int byte_size = _impl_._items_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_items(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeRefineExtractAck)
  return target;
}

size_t ForgeRefineExtractAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeRefineExtractAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 items = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.items_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._items_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeRefineExtractAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeRefineExtractAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeRefineExtractAck::GetClassData() const { return &_class_data_; }


void ForgeRefineExtractAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeRefineExtractAck*>(&to_msg);
  auto& from = static_cast<const ForgeRefineExtractAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeRefineExtractAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeRefineExtractAck::CopyFrom(const ForgeRefineExtractAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeRefineExtractAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeRefineExtractAck::IsInitialized() const {
  return true;
}

void ForgeRefineExtractAck::InternalSwap(ForgeRefineExtractAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeRefineExtractAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[140]);
}

// ===================================================================

class GetForgeLostEquipmentDataReq::_Internal {
 public:
};

GetForgeLostEquipmentDataReq::GetForgeLostEquipmentDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetForgeLostEquipmentDataReq)
}
GetForgeLostEquipmentDataReq::GetForgeLostEquipmentDataReq(const GetForgeLostEquipmentDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetForgeLostEquipmentDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetForgeLostEquipmentDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForgeLostEquipmentDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForgeLostEquipmentDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetForgeLostEquipmentDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[141]);
}

// ===================================================================

class GetForgeLostEquipmentDataAck::_Internal {
 public:
};

void GetForgeLostEquipmentDataAck::clear_data() {
  _impl_.data_.Clear();
}
GetForgeLostEquipmentDataAck::GetForgeLostEquipmentDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetForgeLostEquipmentDataAck)
}
GetForgeLostEquipmentDataAck::GetForgeLostEquipmentDataAck(const GetForgeLostEquipmentDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetForgeLostEquipmentDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetForgeLostEquipmentDataAck)
}

inline void GetForgeLostEquipmentDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetForgeLostEquipmentDataAck::~GetForgeLostEquipmentDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetForgeLostEquipmentDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetForgeLostEquipmentDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
}

void GetForgeLostEquipmentDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetForgeLostEquipmentDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetForgeLostEquipmentDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetForgeLostEquipmentDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.LostEquipmentData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetForgeLostEquipmentDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetForgeLostEquipmentDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.LostEquipmentData data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetForgeLostEquipmentDataAck)
  return target;
}

size_t GetForgeLostEquipmentDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetForgeLostEquipmentDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.LostEquipmentData data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetForgeLostEquipmentDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetForgeLostEquipmentDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetForgeLostEquipmentDataAck::GetClassData() const { return &_class_data_; }


void GetForgeLostEquipmentDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetForgeLostEquipmentDataAck*>(&to_msg);
  auto& from = static_cast<const GetForgeLostEquipmentDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetForgeLostEquipmentDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetForgeLostEquipmentDataAck::CopyFrom(const GetForgeLostEquipmentDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetForgeLostEquipmentDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForgeLostEquipmentDataAck::IsInitialized() const {
  return true;
}

void GetForgeLostEquipmentDataAck::InternalSwap(GetForgeLostEquipmentDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetForgeLostEquipmentDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[142]);
}

// ===================================================================

class ForgeDestroyReq::_Internal {
 public:
};

ForgeDestroyReq::ForgeDestroyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeDestroyReq)
}
ForgeDestroyReq::ForgeDestroyReq(const ForgeDestroyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeDestroyReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.uid_ = from._impl_.uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeDestroyReq)
}

inline void ForgeDestroyReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeDestroyReq::~ForgeDestroyReq() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeDestroyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeDestroyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeDestroyReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeDestroyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeDestroyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeDestroyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeDestroyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeDestroyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeDestroyReq)
  return target;
}

size_t ForgeDestroyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeDestroyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeDestroyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeDestroyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeDestroyReq::GetClassData() const { return &_class_data_; }


void ForgeDestroyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeDestroyReq*>(&to_msg);
  auto& from = static_cast<const ForgeDestroyReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeDestroyReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeDestroyReq::CopyFrom(const ForgeDestroyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeDestroyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeDestroyReq::IsInitialized() const {
  return true;
}

void ForgeDestroyReq::InternalSwap(ForgeDestroyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.uid_, other->_impl_.uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeDestroyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[143]);
}

// ===================================================================

class ForgeDestroyAck::_Internal {
 public:
};

ForgeDestroyAck::ForgeDestroyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeDestroyAck)
}
ForgeDestroyAck::ForgeDestroyAck(const ForgeDestroyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeDestroyAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeDestroyAck)
}

inline void ForgeDestroyAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeDestroyAck::~ForgeDestroyAck() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeDestroyAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeDestroyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeDestroyAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeDestroyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeDestroyAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeDestroyAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeDestroyAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeDestroyAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeDestroyAck)
  return target;
}

size_t ForgeDestroyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeDestroyAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeDestroyAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeDestroyAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeDestroyAck::GetClassData() const { return &_class_data_; }


void ForgeDestroyAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeDestroyAck*>(&to_msg);
  auto& from = static_cast<const ForgeDestroyAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeDestroyAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeDestroyAck::CopyFrom(const ForgeDestroyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeDestroyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeDestroyAck::IsInitialized() const {
  return true;
}

void ForgeDestroyAck::InternalSwap(ForgeDestroyAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeDestroyAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[144]);
}

// ===================================================================

class ForgeFindBackReq::_Internal {
 public:
};

ForgeFindBackReq::ForgeFindBackReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeFindBackReq)
}
ForgeFindBackReq::ForgeFindBackReq(const ForgeFindBackReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeFindBackReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.uid_ = from._impl_.uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeFindBackReq)
}

inline void ForgeFindBackReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeFindBackReq::~ForgeFindBackReq() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeFindBackReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeFindBackReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeFindBackReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeFindBackReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeFindBackReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeFindBackReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeFindBackReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeFindBackReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeFindBackReq)
  return target;
}

size_t ForgeFindBackReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeFindBackReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeFindBackReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeFindBackReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeFindBackReq::GetClassData() const { return &_class_data_; }


void ForgeFindBackReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeFindBackReq*>(&to_msg);
  auto& from = static_cast<const ForgeFindBackReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeFindBackReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeFindBackReq::CopyFrom(const ForgeFindBackReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeFindBackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeFindBackReq::IsInitialized() const {
  return true;
}

void ForgeFindBackReq::InternalSwap(ForgeFindBackReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.uid_, other->_impl_.uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeFindBackReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[145]);
}

// ===================================================================

class ForgeFindBackAck::_Internal {
 public:
};

ForgeFindBackAck::ForgeFindBackAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ForgeFindBackAck)
}
ForgeFindBackAck::ForgeFindBackAck(const ForgeFindBackAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ForgeFindBackAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ForgeFindBackAck)
}

inline void ForgeFindBackAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ForgeFindBackAck::~ForgeFindBackAck() {
  // @@protoc_insertion_point(destructor:idlepb.ForgeFindBackAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ForgeFindBackAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ForgeFindBackAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ForgeFindBackAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ForgeFindBackAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForgeFindBackAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ForgeFindBackAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ForgeFindBackAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ForgeFindBackAck)
  return target;
}

size_t ForgeFindBackAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ForgeFindBackAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForgeFindBackAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ForgeFindBackAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForgeFindBackAck::GetClassData() const { return &_class_data_; }


void ForgeFindBackAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ForgeFindBackAck*>(&to_msg);
  auto& from = static_cast<const ForgeFindBackAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ForgeFindBackAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForgeFindBackAck::CopyFrom(const ForgeFindBackAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ForgeFindBackAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgeFindBackAck::IsInitialized() const {
  return true;
}

void ForgeFindBackAck::InternalSwap(ForgeFindBackAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgeFindBackAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[146]);
}

// ===================================================================

class RequestPillElixirDataReq::_Internal {
 public:
};

RequestPillElixirDataReq::RequestPillElixirDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestPillElixirDataReq)
}
RequestPillElixirDataReq::RequestPillElixirDataReq(const RequestPillElixirDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RequestPillElixirDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestPillElixirDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestPillElixirDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestPillElixirDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestPillElixirDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[147]);
}

// ===================================================================

class RequestPillElixirDataAck::_Internal {
 public:
  static const ::idlepb::RolePillElixirData& data(const RequestPillElixirDataAck* msg);
};

const ::idlepb::RolePillElixirData&
RequestPillElixirDataAck::_Internal::data(const RequestPillElixirDataAck* msg) {
  return *msg->_impl_.data_;
}
void RequestPillElixirDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RequestPillElixirDataAck::RequestPillElixirDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestPillElixirDataAck)
}
RequestPillElixirDataAck::RequestPillElixirDataAck(const RequestPillElixirDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestPillElixirDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RolePillElixirData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestPillElixirDataAck)
}

inline void RequestPillElixirDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestPillElixirDataAck::~RequestPillElixirDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestPillElixirDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestPillElixirDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RequestPillElixirDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestPillElixirDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestPillElixirDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestPillElixirDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RolePillElixirData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestPillElixirDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestPillElixirDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RolePillElixirData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestPillElixirDataAck)
  return target;
}

size_t RequestPillElixirDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestPillElixirDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RolePillElixirData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestPillElixirDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestPillElixirDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestPillElixirDataAck::GetClassData() const { return &_class_data_; }


void RequestPillElixirDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestPillElixirDataAck*>(&to_msg);
  auto& from = static_cast<const RequestPillElixirDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestPillElixirDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RolePillElixirData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestPillElixirDataAck::CopyFrom(const RequestPillElixirDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestPillElixirDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestPillElixirDataAck::IsInitialized() const {
  return true;
}

void RequestPillElixirDataAck::InternalSwap(RequestPillElixirDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestPillElixirDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[148]);
}

// ===================================================================

class GetOnePillElixirDataReq::_Internal {
 public:
};

GetOnePillElixirDataReq::GetOnePillElixirDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetOnePillElixirDataReq)
}
GetOnePillElixirDataReq::GetOnePillElixirDataReq(const GetOnePillElixirDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOnePillElixirDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_cfg_id_ = from._impl_.item_cfg_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetOnePillElixirDataReq)
}

inline void GetOnePillElixirDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOnePillElixirDataReq::~GetOnePillElixirDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetOnePillElixirDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOnePillElixirDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOnePillElixirDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOnePillElixirDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetOnePillElixirDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_cfg_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOnePillElixirDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOnePillElixirDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetOnePillElixirDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_cfg_id = 1;
  if (this->_internal_item_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetOnePillElixirDataReq)
  return target;
}

size_t GetOnePillElixirDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetOnePillElixirDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_cfg_id = 1;
  if (this->_internal_item_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOnePillElixirDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOnePillElixirDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOnePillElixirDataReq::GetClassData() const { return &_class_data_; }


void GetOnePillElixirDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOnePillElixirDataReq*>(&to_msg);
  auto& from = static_cast<const GetOnePillElixirDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetOnePillElixirDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_cfg_id() != 0) {
    _this->_internal_set_item_cfg_id(from._internal_item_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOnePillElixirDataReq::CopyFrom(const GetOnePillElixirDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetOnePillElixirDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnePillElixirDataReq::IsInitialized() const {
  return true;
}

void GetOnePillElixirDataReq::InternalSwap(GetOnePillElixirDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_cfg_id_, other->_impl_.item_cfg_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOnePillElixirDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[149]);
}

// ===================================================================

class GetOnePillElixirDataAck::_Internal {
 public:
  static const ::idlepb::PillElixirData& data(const GetOnePillElixirDataAck* msg);
};

const ::idlepb::PillElixirData&
GetOnePillElixirDataAck::_Internal::data(const GetOnePillElixirDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetOnePillElixirDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetOnePillElixirDataAck::GetOnePillElixirDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetOnePillElixirDataAck)
}
GetOnePillElixirDataAck::GetOnePillElixirDataAck(const GetOnePillElixirDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOnePillElixirDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::PillElixirData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetOnePillElixirDataAck)
}

inline void GetOnePillElixirDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOnePillElixirDataAck::~GetOnePillElixirDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetOnePillElixirDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOnePillElixirDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetOnePillElixirDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOnePillElixirDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetOnePillElixirDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOnePillElixirDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.PillElixirData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOnePillElixirDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetOnePillElixirDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.PillElixirData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetOnePillElixirDataAck)
  return target;
}

size_t GetOnePillElixirDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetOnePillElixirDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.PillElixirData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOnePillElixirDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOnePillElixirDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOnePillElixirDataAck::GetClassData() const { return &_class_data_; }


void GetOnePillElixirDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOnePillElixirDataAck*>(&to_msg);
  auto& from = static_cast<const GetOnePillElixirDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetOnePillElixirDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::PillElixirData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOnePillElixirDataAck::CopyFrom(const GetOnePillElixirDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetOnePillElixirDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnePillElixirDataAck::IsInitialized() const {
  return true;
}

void GetOnePillElixirDataAck::InternalSwap(GetOnePillElixirDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOnePillElixirDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[150]);
}

// ===================================================================

class RequestModifyPillElixirFilterReq::_Internal {
 public:
};

RequestModifyPillElixirFilterReq::RequestModifyPillElixirFilterReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestModifyPillElixirFilterReq)
}
RequestModifyPillElixirFilterReq::RequestModifyPillElixirFilterReq(const RequestModifyPillElixirFilterReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestModifyPillElixirFilterReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.limit_double_){}
    , decltype(_impl_.limit_exp_){}
    , decltype(_impl_.limit_property_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.limit_double_, &from._impl_.limit_double_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.limit_property_) -
    reinterpret_cast<char*>(&_impl_.limit_double_)) + sizeof(_impl_.limit_property_));
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestModifyPillElixirFilterReq)
}

inline void RequestModifyPillElixirFilterReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.limit_double_){0}
    , decltype(_impl_.limit_exp_){0}
    , decltype(_impl_.limit_property_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestModifyPillElixirFilterReq::~RequestModifyPillElixirFilterReq() {
  // @@protoc_insertion_point(destructor:idlepb.RequestModifyPillElixirFilterReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestModifyPillElixirFilterReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestModifyPillElixirFilterReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestModifyPillElixirFilterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestModifyPillElixirFilterReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.limit_double_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.limit_property_) -
      reinterpret_cast<char*>(&_impl_.limit_double_)) + sizeof(_impl_.limit_property_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestModifyPillElixirFilterReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 limit_double = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.limit_double_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 limit_exp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.limit_exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 limit_property = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.limit_property_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestModifyPillElixirFilterReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestModifyPillElixirFilterReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 limit_double = 1;
  if (this->_internal_limit_double() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_limit_double(), target);
  }

  // int32 limit_exp = 2;
  if (this->_internal_limit_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_limit_exp(), target);
  }

  // int32 limit_property = 3;
  if (this->_internal_limit_property() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_limit_property(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestModifyPillElixirFilterReq)
  return target;
}

size_t RequestModifyPillElixirFilterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestModifyPillElixirFilterReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 limit_double = 1;
  if (this->_internal_limit_double() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit_double());
  }

  // int32 limit_exp = 2;
  if (this->_internal_limit_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit_exp());
  }

  // int32 limit_property = 3;
  if (this->_internal_limit_property() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit_property());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestModifyPillElixirFilterReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestModifyPillElixirFilterReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestModifyPillElixirFilterReq::GetClassData() const { return &_class_data_; }


void RequestModifyPillElixirFilterReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestModifyPillElixirFilterReq*>(&to_msg);
  auto& from = static_cast<const RequestModifyPillElixirFilterReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestModifyPillElixirFilterReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_limit_double() != 0) {
    _this->_internal_set_limit_double(from._internal_limit_double());
  }
  if (from._internal_limit_exp() != 0) {
    _this->_internal_set_limit_exp(from._internal_limit_exp());
  }
  if (from._internal_limit_property() != 0) {
    _this->_internal_set_limit_property(from._internal_limit_property());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestModifyPillElixirFilterReq::CopyFrom(const RequestModifyPillElixirFilterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestModifyPillElixirFilterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestModifyPillElixirFilterReq::IsInitialized() const {
  return true;
}

void RequestModifyPillElixirFilterReq::InternalSwap(RequestModifyPillElixirFilterReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestModifyPillElixirFilterReq, _impl_.limit_property_)
      + sizeof(RequestModifyPillElixirFilterReq::_impl_.limit_property_)
      - PROTOBUF_FIELD_OFFSET(RequestModifyPillElixirFilterReq, _impl_.limit_double_)>(
          reinterpret_cast<char*>(&_impl_.limit_double_),
          reinterpret_cast<char*>(&other->_impl_.limit_double_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestModifyPillElixirFilterReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[151]);
}

// ===================================================================

class RequestModifyPillElixirFilterAck::_Internal {
 public:
};

RequestModifyPillElixirFilterAck::RequestModifyPillElixirFilterAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestModifyPillElixirFilterAck)
}
RequestModifyPillElixirFilterAck::RequestModifyPillElixirFilterAck(const RequestModifyPillElixirFilterAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestModifyPillElixirFilterAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestModifyPillElixirFilterAck)
}

inline void RequestModifyPillElixirFilterAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestModifyPillElixirFilterAck::~RequestModifyPillElixirFilterAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestModifyPillElixirFilterAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestModifyPillElixirFilterAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestModifyPillElixirFilterAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestModifyPillElixirFilterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestModifyPillElixirFilterAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestModifyPillElixirFilterAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestModifyPillElixirFilterAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestModifyPillElixirFilterAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestModifyPillElixirFilterAck)
  return target;
}

size_t RequestModifyPillElixirFilterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestModifyPillElixirFilterAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestModifyPillElixirFilterAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestModifyPillElixirFilterAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestModifyPillElixirFilterAck::GetClassData() const { return &_class_data_; }


void RequestModifyPillElixirFilterAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestModifyPillElixirFilterAck*>(&to_msg);
  auto& from = static_cast<const RequestModifyPillElixirFilterAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestModifyPillElixirFilterAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestModifyPillElixirFilterAck::CopyFrom(const RequestModifyPillElixirFilterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestModifyPillElixirFilterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestModifyPillElixirFilterAck::IsInitialized() const {
  return true;
}

void RequestModifyPillElixirFilterAck::InternalSwap(RequestModifyPillElixirFilterAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestModifyPillElixirFilterAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[152]);
}

// ===================================================================

class UsePillElixirReport::_Internal {
 public:
};

UsePillElixirReport::UsePillElixirReport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UsePillElixirReport)
}
UsePillElixirReport::UsePillElixirReport(const UsePillElixirReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UsePillElixirReport* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.num_){}
    , decltype(_impl_.property_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.property_num_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.property_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.UsePillElixirReport)
}

inline void UsePillElixirReport::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , decltype(_impl_.num_){0}
    , decltype(_impl_.property_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UsePillElixirReport::~UsePillElixirReport() {
  // @@protoc_insertion_point(destructor:idlepb.UsePillElixirReport)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UsePillElixirReport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UsePillElixirReport::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UsePillElixirReport::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UsePillElixirReport)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.property_num_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.property_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UsePillElixirReport::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float property_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.property_num_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UsePillElixirReport::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UsePillElixirReport)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  // float property_num = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_property_num = this->_internal_property_num();
  uint32_t raw_property_num;
  memcpy(&raw_property_num, &tmp_property_num, sizeof(tmp_property_num));
  if (raw_property_num != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_property_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UsePillElixirReport)
  return target;
}

size_t UsePillElixirReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UsePillElixirReport)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  // float property_num = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_property_num = this->_internal_property_num();
  uint32_t raw_property_num;
  memcpy(&raw_property_num, &tmp_property_num, sizeof(tmp_property_num));
  if (raw_property_num != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UsePillElixirReport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UsePillElixirReport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UsePillElixirReport::GetClassData() const { return &_class_data_; }


void UsePillElixirReport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UsePillElixirReport*>(&to_msg);
  auto& from = static_cast<const UsePillElixirReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UsePillElixirReport)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_property_num = from._internal_property_num();
  uint32_t raw_property_num;
  memcpy(&raw_property_num, &tmp_property_num, sizeof(tmp_property_num));
  if (raw_property_num != 0) {
    _this->_internal_set_property_num(from._internal_property_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UsePillElixirReport::CopyFrom(const UsePillElixirReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UsePillElixirReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsePillElixirReport::IsInitialized() const {
  return true;
}

void UsePillElixirReport::InternalSwap(UsePillElixirReport* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UsePillElixirReport, _impl_.property_num_)
      + sizeof(UsePillElixirReport::_impl_.property_num_)
      - PROTOBUF_FIELD_OFFSET(UsePillElixirReport, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UsePillElixirReport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[153]);
}

// ===================================================================

class UsePillElixirReq::_Internal {
 public:
};

UsePillElixirReq::UsePillElixirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UsePillElixirReq)
}
UsePillElixirReq::UsePillElixirReq(const UsePillElixirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UsePillElixirReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UsePillElixirReq)
}

inline void UsePillElixirReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UsePillElixirReq::~UsePillElixirReq() {
  // @@protoc_insertion_point(destructor:idlepb.UsePillElixirReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UsePillElixirReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UsePillElixirReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UsePillElixirReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UsePillElixirReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UsePillElixirReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UsePillElixirReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UsePillElixirReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UsePillElixirReq)
  return target;
}

size_t UsePillElixirReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UsePillElixirReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UsePillElixirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UsePillElixirReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UsePillElixirReq::GetClassData() const { return &_class_data_; }


void UsePillElixirReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UsePillElixirReq*>(&to_msg);
  auto& from = static_cast<const UsePillElixirReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UsePillElixirReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UsePillElixirReq::CopyFrom(const UsePillElixirReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UsePillElixirReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsePillElixirReq::IsInitialized() const {
  return true;
}

void UsePillElixirReq::InternalSwap(UsePillElixirReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsePillElixirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[154]);
}

// ===================================================================

class UsePillElixirAck::_Internal {
 public:
};

UsePillElixirAck::UsePillElixirAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UsePillElixirAck)
}
UsePillElixirAck::UsePillElixirAck(const UsePillElixirAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UsePillElixirAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UsePillElixirAck)
}

inline void UsePillElixirAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UsePillElixirAck::~UsePillElixirAck() {
  // @@protoc_insertion_point(destructor:idlepb.UsePillElixirAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UsePillElixirAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UsePillElixirAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UsePillElixirAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UsePillElixirAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UsePillElixirAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UsePillElixirAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UsePillElixirAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UsePillElixirAck)
  return target;
}

size_t UsePillElixirAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UsePillElixirAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UsePillElixirAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UsePillElixirAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UsePillElixirAck::GetClassData() const { return &_class_data_; }


void UsePillElixirAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UsePillElixirAck*>(&to_msg);
  auto& from = static_cast<const UsePillElixirAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UsePillElixirAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UsePillElixirAck::CopyFrom(const UsePillElixirAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UsePillElixirAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsePillElixirAck::IsInitialized() const {
  return true;
}

void UsePillElixirAck::InternalSwap(UsePillElixirAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UsePillElixirAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[155]);
}

// ===================================================================

class OneClickUsePillElixirReq::_Internal {
 public:
};

OneClickUsePillElixirReq::OneClickUsePillElixirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickUsePillElixirReq)
}
OneClickUsePillElixirReq::OneClickUsePillElixirReq(const OneClickUsePillElixirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickUsePillElixirReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickUsePillElixirReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickUsePillElixirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickUsePillElixirReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickUsePillElixirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[156]);
}

// ===================================================================

class OneClickUsePillElixirAck::_Internal {
 public:
};

OneClickUsePillElixirAck::OneClickUsePillElixirAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickUsePillElixirAck)
}
OneClickUsePillElixirAck::OneClickUsePillElixirAck(const OneClickUsePillElixirAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickUsePillElixirAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.report_){from._impl_.report_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickUsePillElixirAck)
}

inline void OneClickUsePillElixirAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.report_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickUsePillElixirAck::~OneClickUsePillElixirAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickUsePillElixirAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickUsePillElixirAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.report_.~RepeatedPtrField();
}

void OneClickUsePillElixirAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickUsePillElixirAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickUsePillElixirAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.report_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickUsePillElixirAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.UsePillElixirReport report = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_report(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickUsePillElixirAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickUsePillElixirAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.UsePillElixirReport report = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_report_size()); i < n; i++) {
    const auto& repfield = this->_internal_report(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickUsePillElixirAck)
  return target;
}

size_t OneClickUsePillElixirAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickUsePillElixirAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.UsePillElixirReport report = 1;
  total_size += 1UL * this->_internal_report_size();
  for (const auto& msg : this->_impl_.report_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickUsePillElixirAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickUsePillElixirAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickUsePillElixirAck::GetClassData() const { return &_class_data_; }


void OneClickUsePillElixirAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickUsePillElixirAck*>(&to_msg);
  auto& from = static_cast<const OneClickUsePillElixirAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickUsePillElixirAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.report_.MergeFrom(from._impl_.report_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickUsePillElixirAck::CopyFrom(const OneClickUsePillElixirAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickUsePillElixirAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickUsePillElixirAck::IsInitialized() const {
  return true;
}

void OneClickUsePillElixirAck::InternalSwap(OneClickUsePillElixirAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.report_.InternalSwap(&other->_impl_.report_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickUsePillElixirAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[157]);
}

// ===================================================================

class TradePillElixirReq::_Internal {
 public:
};

TradePillElixirReq::TradePillElixirReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.TradePillElixirReq)
}
TradePillElixirReq::TradePillElixirReq(const TradePillElixirReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TradePillElixirReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.TradePillElixirReq)
}

inline void TradePillElixirReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TradePillElixirReq::~TradePillElixirReq() {
  // @@protoc_insertion_point(destructor:idlepb.TradePillElixirReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TradePillElixirReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TradePillElixirReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TradePillElixirReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.TradePillElixirReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TradePillElixirReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TradePillElixirReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.TradePillElixirReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.TradePillElixirReq)
  return target;
}

size_t TradePillElixirReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.TradePillElixirReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TradePillElixirReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TradePillElixirReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TradePillElixirReq::GetClassData() const { return &_class_data_; }


void TradePillElixirReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TradePillElixirReq*>(&to_msg);
  auto& from = static_cast<const TradePillElixirReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.TradePillElixirReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TradePillElixirReq::CopyFrom(const TradePillElixirReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.TradePillElixirReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradePillElixirReq::IsInitialized() const {
  return true;
}

void TradePillElixirReq::InternalSwap(TradePillElixirReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TradePillElixirReq, _impl_.num_)
      + sizeof(TradePillElixirReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(TradePillElixirReq, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TradePillElixirReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[158]);
}

// ===================================================================

class TradePillElixirAck::_Internal {
 public:
};

TradePillElixirAck::TradePillElixirAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.TradePillElixirAck)
}
TradePillElixirAck::TradePillElixirAck(const TradePillElixirAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TradePillElixirAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.TradePillElixirAck)
}

inline void TradePillElixirAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TradePillElixirAck::~TradePillElixirAck() {
  // @@protoc_insertion_point(destructor:idlepb.TradePillElixirAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TradePillElixirAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TradePillElixirAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TradePillElixirAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.TradePillElixirAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TradePillElixirAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TradePillElixirAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.TradePillElixirAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.TradePillElixirAck)
  return target;
}

size_t TradePillElixirAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.TradePillElixirAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TradePillElixirAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TradePillElixirAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TradePillElixirAck::GetClassData() const { return &_class_data_; }


void TradePillElixirAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TradePillElixirAck*>(&to_msg);
  auto& from = static_cast<const TradePillElixirAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.TradePillElixirAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TradePillElixirAck::CopyFrom(const TradePillElixirAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.TradePillElixirAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradePillElixirAck::IsInitialized() const {
  return true;
}

void TradePillElixirAck::InternalSwap(TradePillElixirAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TradePillElixirAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[159]);
}

// ===================================================================

class NotifyAutoModeStatus::_Internal {
 public:
};

NotifyAutoModeStatus::NotifyAutoModeStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyAutoModeStatus)
}
NotifyAutoModeStatus::NotifyAutoModeStatus(const NotifyAutoModeStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyAutoModeStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.enable_ = from._impl_.enable_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyAutoModeStatus)
}

inline void NotifyAutoModeStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyAutoModeStatus::~NotifyAutoModeStatus() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyAutoModeStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyAutoModeStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyAutoModeStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyAutoModeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyAutoModeStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyAutoModeStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyAutoModeStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyAutoModeStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyAutoModeStatus)
  return target;
}

size_t NotifyAutoModeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyAutoModeStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyAutoModeStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyAutoModeStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyAutoModeStatus::GetClassData() const { return &_class_data_; }


void NotifyAutoModeStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyAutoModeStatus*>(&to_msg);
  auto& from = static_cast<const NotifyAutoModeStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyAutoModeStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyAutoModeStatus::CopyFrom(const NotifyAutoModeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyAutoModeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyAutoModeStatus::IsInitialized() const {
  return true;
}

void NotifyAutoModeStatus::InternalSwap(NotifyAutoModeStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.enable_, other->_impl_.enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyAutoModeStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[160]);
}

// ===================================================================

class SetAutoMode::_Internal {
 public:
};

SetAutoMode::SetAutoMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetAutoMode)
}
SetAutoMode::SetAutoMode(const SetAutoMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAutoMode* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.enable_ = from._impl_.enable_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetAutoMode)
}

inline void SetAutoMode::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAutoMode::~SetAutoMode() {
  // @@protoc_insertion_point(destructor:idlepb.SetAutoMode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAutoMode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAutoMode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAutoMode::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetAutoMode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAutoMode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAutoMode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetAutoMode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetAutoMode)
  return target;
}

size_t SetAutoMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetAutoMode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAutoMode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAutoMode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAutoMode::GetClassData() const { return &_class_data_; }


void SetAutoMode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAutoMode*>(&to_msg);
  auto& from = static_cast<const SetAutoMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetAutoMode)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAutoMode::CopyFrom(const SetAutoMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetAutoMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAutoMode::IsInitialized() const {
  return true;
}

void SetAutoMode::InternalSwap(SetAutoMode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.enable_, other->_impl_.enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAutoMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[161]);
}

// ===================================================================

class ReinforceEquipmentReq::_Internal {
 public:
};

ReinforceEquipmentReq::ReinforceEquipmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReinforceEquipmentReq)
}
ReinforceEquipmentReq::ReinforceEquipmentReq(const ReinforceEquipmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReinforceEquipmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReinforceEquipmentReq)
}

inline void ReinforceEquipmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReinforceEquipmentReq::~ReinforceEquipmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReinforceEquipmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReinforceEquipmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReinforceEquipmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReinforceEquipmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReinforceEquipmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinforceEquipmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReinforceEquipmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReinforceEquipmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReinforceEquipmentReq)
  return target;
}

size_t ReinforceEquipmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReinforceEquipmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinforceEquipmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReinforceEquipmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinforceEquipmentReq::GetClassData() const { return &_class_data_; }


void ReinforceEquipmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReinforceEquipmentReq*>(&to_msg);
  auto& from = static_cast<const ReinforceEquipmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReinforceEquipmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReinforceEquipmentReq::CopyFrom(const ReinforceEquipmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReinforceEquipmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinforceEquipmentReq::IsInitialized() const {
  return true;
}

void ReinforceEquipmentReq::InternalSwap(ReinforceEquipmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinforceEquipmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[162]);
}

// ===================================================================

class ReinforceEquipmentAck::_Internal {
 public:
};

ReinforceEquipmentAck::ReinforceEquipmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReinforceEquipmentAck)
}
ReinforceEquipmentAck::ReinforceEquipmentAck(const ReinforceEquipmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReinforceEquipmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReinforceEquipmentAck)
}

inline void ReinforceEquipmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReinforceEquipmentAck::~ReinforceEquipmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReinforceEquipmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReinforceEquipmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReinforceEquipmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReinforceEquipmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReinforceEquipmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinforceEquipmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReinforceEquipmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReinforceEquipmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReinforceEquipmentAck)
  return target;
}

size_t ReinforceEquipmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReinforceEquipmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinforceEquipmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReinforceEquipmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinforceEquipmentAck::GetClassData() const { return &_class_data_; }


void ReinforceEquipmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReinforceEquipmentAck*>(&to_msg);
  auto& from = static_cast<const ReinforceEquipmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReinforceEquipmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReinforceEquipmentAck::CopyFrom(const ReinforceEquipmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReinforceEquipmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinforceEquipmentAck::IsInitialized() const {
  return true;
}

void ReinforceEquipmentAck::InternalSwap(ReinforceEquipmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinforceEquipmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[163]);
}

// ===================================================================

class QiWenEquipmentReq::_Internal {
 public:
};

QiWenEquipmentReq::QiWenEquipmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.QiWenEquipmentReq)
}
QiWenEquipmentReq::QiWenEquipmentReq(const QiWenEquipmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QiWenEquipmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.commit_materials_){from._impl_.commit_materials_}
    , /*decltype(_impl_._commit_materials_cached_byte_size_)*/{0}
    , decltype(_impl_.id_){}
    , decltype(_impl_.select_abc_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.select_abc_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.select_abc_));
  // @@protoc_insertion_point(copy_constructor:idlepb.QiWenEquipmentReq)
}

inline void QiWenEquipmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.commit_materials_){arena}
    , /*decltype(_impl_._commit_materials_cached_byte_size_)*/{0}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.select_abc_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QiWenEquipmentReq::~QiWenEquipmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.QiWenEquipmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QiWenEquipmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.commit_materials_.~RepeatedField();
}

void QiWenEquipmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QiWenEquipmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.QiWenEquipmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commit_materials_.Clear();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.select_abc_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.select_abc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QiWenEquipmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 select_abc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.select_abc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 commit_materials = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_commit_materials(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_commit_materials(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QiWenEquipmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.QiWenEquipmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // int32 select_abc = 2;
  if (this->_internal_select_abc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_select_abc(), target);
  }

  // repeated int64 commit_materials = 3;
  {
    int byte_size = _impl_._commit_materials_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_commit_materials(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.QiWenEquipmentReq)
  return target;
}

size_t QiWenEquipmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.QiWenEquipmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 commit_materials = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.commit_materials_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._commit_materials_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int32 select_abc = 2;
  if (this->_internal_select_abc() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_select_abc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QiWenEquipmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QiWenEquipmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QiWenEquipmentReq::GetClassData() const { return &_class_data_; }


void QiWenEquipmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QiWenEquipmentReq*>(&to_msg);
  auto& from = static_cast<const QiWenEquipmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.QiWenEquipmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.commit_materials_.MergeFrom(from._impl_.commit_materials_);
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_select_abc() != 0) {
    _this->_internal_set_select_abc(from._internal_select_abc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QiWenEquipmentReq::CopyFrom(const QiWenEquipmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.QiWenEquipmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QiWenEquipmentReq::IsInitialized() const {
  return true;
}

void QiWenEquipmentReq::InternalSwap(QiWenEquipmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.commit_materials_.InternalSwap(&other->_impl_.commit_materials_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QiWenEquipmentReq, _impl_.select_abc_)
      + sizeof(QiWenEquipmentReq::_impl_.select_abc_)
      - PROTOBUF_FIELD_OFFSET(QiWenEquipmentReq, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QiWenEquipmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[164]);
}

// ===================================================================

class QiWenEquipmentAck::_Internal {
 public:
};

QiWenEquipmentAck::QiWenEquipmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.QiWenEquipmentAck)
}
QiWenEquipmentAck::QiWenEquipmentAck(const QiWenEquipmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QiWenEquipmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.QiWenEquipmentAck)
}

inline void QiWenEquipmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QiWenEquipmentAck::~QiWenEquipmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.QiWenEquipmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QiWenEquipmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QiWenEquipmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QiWenEquipmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.QiWenEquipmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QiWenEquipmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QiWenEquipmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.QiWenEquipmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.QiWenEquipmentAck)
  return target;
}

size_t QiWenEquipmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.QiWenEquipmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QiWenEquipmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QiWenEquipmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QiWenEquipmentAck::GetClassData() const { return &_class_data_; }


void QiWenEquipmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QiWenEquipmentAck*>(&to_msg);
  auto& from = static_cast<const QiWenEquipmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.QiWenEquipmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QiWenEquipmentAck::CopyFrom(const QiWenEquipmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.QiWenEquipmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QiWenEquipmentAck::IsInitialized() const {
  return true;
}

void QiWenEquipmentAck::InternalSwap(QiWenEquipmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QiWenEquipmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[165]);
}

// ===================================================================

class RefineEquipmentReq::_Internal {
 public:
};

RefineEquipmentReq::RefineEquipmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefineEquipmentReq)
}
RefineEquipmentReq::RefineEquipmentReq(const RefineEquipmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefineEquipmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefineEquipmentReq)
}

inline void RefineEquipmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefineEquipmentReq::~RefineEquipmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.RefineEquipmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefineEquipmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefineEquipmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefineEquipmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefineEquipmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefineEquipmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefineEquipmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefineEquipmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefineEquipmentReq)
  return target;
}

size_t RefineEquipmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefineEquipmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefineEquipmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefineEquipmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefineEquipmentReq::GetClassData() const { return &_class_data_; }


void RefineEquipmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefineEquipmentReq*>(&to_msg);
  auto& from = static_cast<const RefineEquipmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefineEquipmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefineEquipmentReq::CopyFrom(const RefineEquipmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefineEquipmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefineEquipmentReq::IsInitialized() const {
  return true;
}

void RefineEquipmentReq::InternalSwap(RefineEquipmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefineEquipmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[166]);
}

// ===================================================================

class RefineEquipmentAck::_Internal {
 public:
};

RefineEquipmentAck::RefineEquipmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefineEquipmentAck)
}
RefineEquipmentAck::RefineEquipmentAck(const RefineEquipmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefineEquipmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefineEquipmentAck)
}

inline void RefineEquipmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefineEquipmentAck::~RefineEquipmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.RefineEquipmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefineEquipmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RefineEquipmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefineEquipmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefineEquipmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefineEquipmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefineEquipmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefineEquipmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefineEquipmentAck)
  return target;
}

size_t RefineEquipmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefineEquipmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefineEquipmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefineEquipmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefineEquipmentAck::GetClassData() const { return &_class_data_; }


void RefineEquipmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefineEquipmentAck*>(&to_msg);
  auto& from = static_cast<const RefineEquipmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefineEquipmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefineEquipmentAck::CopyFrom(const RefineEquipmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefineEquipmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefineEquipmentAck::IsInitialized() const {
  return true;
}

void RefineEquipmentAck::InternalSwap(RefineEquipmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefineEquipmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[167]);
}

// ===================================================================

class ResetEquipmentReq::_Internal {
 public:
};

ResetEquipmentReq::ResetEquipmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ResetEquipmentReq)
}
ResetEquipmentReq::ResetEquipmentReq(const ResetEquipmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResetEquipmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){from._impl_.id_}
    , /*decltype(_impl_._id_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ResetEquipmentReq)
}

inline void ResetEquipmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){arena}
    , /*decltype(_impl_._id_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResetEquipmentReq::~ResetEquipmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.ResetEquipmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetEquipmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.~RepeatedField();
}

void ResetEquipmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResetEquipmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ResetEquipmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEquipmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_id(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetEquipmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ResetEquipmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 id = 1;
  {
    int byte_size = _impl_._id_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_id(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ResetEquipmentReq)
  return target;
}

size_t ResetEquipmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ResetEquipmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 id = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.id_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetEquipmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResetEquipmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetEquipmentReq::GetClassData() const { return &_class_data_; }


void ResetEquipmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResetEquipmentReq*>(&to_msg);
  auto& from = static_cast<const ResetEquipmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ResetEquipmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.id_.MergeFrom(from._impl_.id_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetEquipmentReq::CopyFrom(const ResetEquipmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ResetEquipmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEquipmentReq::IsInitialized() const {
  return true;
}

void ResetEquipmentReq::InternalSwap(ResetEquipmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEquipmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[168]);
}

// ===================================================================

class ResetEquipmentAck::_Internal {
 public:
};

void ResetEquipmentAck::clear_items() {
  _impl_.items_.Clear();
}
ResetEquipmentAck::ResetEquipmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ResetEquipmentAck)
}
ResetEquipmentAck::ResetEquipmentAck(const ResetEquipmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResetEquipmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ResetEquipmentAck)
}

inline void ResetEquipmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResetEquipmentAck::~ResetEquipmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.ResetEquipmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetEquipmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void ResetEquipmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResetEquipmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ResetEquipmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEquipmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetEquipmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ResetEquipmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.SimpleItemData items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ResetEquipmentAck)
  return target;
}

size_t ResetEquipmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ResetEquipmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetEquipmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResetEquipmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetEquipmentAck::GetClassData() const { return &_class_data_; }


void ResetEquipmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResetEquipmentAck*>(&to_msg);
  auto& from = static_cast<const ResetEquipmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ResetEquipmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetEquipmentAck::CopyFrom(const ResetEquipmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ResetEquipmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEquipmentAck::IsInitialized() const {
  return true;
}

void ResetEquipmentAck::InternalSwap(ResetEquipmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEquipmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[169]);
}

// ===================================================================

class InheritEquipmentReq::_Internal {
 public:
};

InheritEquipmentReq::InheritEquipmentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.InheritEquipmentReq)
}
InheritEquipmentReq::InheritEquipmentReq(const InheritEquipmentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InheritEquipmentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.equipment_from_){}
    , decltype(_impl_.equipment_to_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.equipment_from_, &from._impl_.equipment_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.equipment_to_) -
    reinterpret_cast<char*>(&_impl_.equipment_from_)) + sizeof(_impl_.equipment_to_));
  // @@protoc_insertion_point(copy_constructor:idlepb.InheritEquipmentReq)
}

inline void InheritEquipmentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.equipment_from_){int64_t{0}}
    , decltype(_impl_.equipment_to_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InheritEquipmentReq::~InheritEquipmentReq() {
  // @@protoc_insertion_point(destructor:idlepb.InheritEquipmentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InheritEquipmentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InheritEquipmentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InheritEquipmentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.InheritEquipmentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.equipment_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.equipment_to_) -
      reinterpret_cast<char*>(&_impl_.equipment_from_)) + sizeof(_impl_.equipment_to_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InheritEquipmentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 equipment_from = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.equipment_from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 equipment_to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.equipment_to_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InheritEquipmentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.InheritEquipmentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 equipment_from = 1;
  if (this->_internal_equipment_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_equipment_from(), target);
  }

  // int64 equipment_to = 2;
  if (this->_internal_equipment_to() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_equipment_to(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.InheritEquipmentReq)
  return target;
}

size_t InheritEquipmentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.InheritEquipmentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 equipment_from = 1;
  if (this->_internal_equipment_from() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_equipment_from());
  }

  // int64 equipment_to = 2;
  if (this->_internal_equipment_to() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_equipment_to());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InheritEquipmentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InheritEquipmentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InheritEquipmentReq::GetClassData() const { return &_class_data_; }


void InheritEquipmentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InheritEquipmentReq*>(&to_msg);
  auto& from = static_cast<const InheritEquipmentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.InheritEquipmentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_equipment_from() != 0) {
    _this->_internal_set_equipment_from(from._internal_equipment_from());
  }
  if (from._internal_equipment_to() != 0) {
    _this->_internal_set_equipment_to(from._internal_equipment_to());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InheritEquipmentReq::CopyFrom(const InheritEquipmentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.InheritEquipmentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InheritEquipmentReq::IsInitialized() const {
  return true;
}

void InheritEquipmentReq::InternalSwap(InheritEquipmentReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InheritEquipmentReq, _impl_.equipment_to_)
      + sizeof(InheritEquipmentReq::_impl_.equipment_to_)
      - PROTOBUF_FIELD_OFFSET(InheritEquipmentReq, _impl_.equipment_from_)>(
          reinterpret_cast<char*>(&_impl_.equipment_from_),
          reinterpret_cast<char*>(&other->_impl_.equipment_from_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InheritEquipmentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[170]);
}

// ===================================================================

class InheritEquipmentAck::_Internal {
 public:
};

void InheritEquipmentAck::clear_items() {
  _impl_.items_.Clear();
}
InheritEquipmentAck::InheritEquipmentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.InheritEquipmentAck)
}
InheritEquipmentAck::InheritEquipmentAck(const InheritEquipmentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InheritEquipmentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.InheritEquipmentAck)
}

inline void InheritEquipmentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InheritEquipmentAck::~InheritEquipmentAck() {
  // @@protoc_insertion_point(destructor:idlepb.InheritEquipmentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InheritEquipmentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void InheritEquipmentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InheritEquipmentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.InheritEquipmentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InheritEquipmentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InheritEquipmentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.InheritEquipmentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.SimpleItemData items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.InheritEquipmentAck)
  return target;
}

size_t InheritEquipmentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.InheritEquipmentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InheritEquipmentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InheritEquipmentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InheritEquipmentAck::GetClassData() const { return &_class_data_; }


void InheritEquipmentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InheritEquipmentAck*>(&to_msg);
  auto& from = static_cast<const InheritEquipmentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.InheritEquipmentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InheritEquipmentAck::CopyFrom(const InheritEquipmentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.InheritEquipmentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InheritEquipmentAck::IsInitialized() const {
  return true;
}

void InheritEquipmentAck::InternalSwap(InheritEquipmentAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InheritEquipmentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[171]);
}

// ===================================================================

class LockItemReq::_Internal {
 public:
};

LockItemReq::LockItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LockItemReq)
}
LockItemReq::LockItemReq(const LockItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LockItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.LockItemReq)
}

inline void LockItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LockItemReq::~LockItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.LockItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LockItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LockItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LockItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LockItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LockItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LockItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LockItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LockItemReq)
  return target;
}

size_t LockItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LockItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LockItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LockItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LockItemReq::GetClassData() const { return &_class_data_; }


void LockItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LockItemReq*>(&to_msg);
  auto& from = static_cast<const LockItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LockItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LockItemReq::CopyFrom(const LockItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LockItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockItemReq::IsInitialized() const {
  return true;
}

void LockItemReq::InternalSwap(LockItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LockItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[172]);
}

// ===================================================================

class LockItemAck::_Internal {
 public:
};

LockItemAck::LockItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LockItemAck)
}
LockItemAck::LockItemAck(const LockItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LockItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.LockItemAck)
}

inline void LockItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LockItemAck::~LockItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.LockItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LockItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LockItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LockItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LockItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LockItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LockItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LockItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LockItemAck)
  return target;
}

size_t LockItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LockItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LockItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LockItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LockItemAck::GetClassData() const { return &_class_data_; }


void LockItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LockItemAck*>(&to_msg);
  auto& from = static_cast<const LockItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LockItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LockItemAck::CopyFrom(const LockItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LockItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockItemAck::IsInitialized() const {
  return true;
}

void LockItemAck::InternalSwap(LockItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LockItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[173]);
}

// ===================================================================

class CollectionActivatedSuit::_Internal {
 public:
};

CollectionActivatedSuit::CollectionActivatedSuit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.CollectionActivatedSuit)
}
CollectionActivatedSuit::CollectionActivatedSuit(const CollectionActivatedSuit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionActivatedSuit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.index_){}
    , decltype(_impl_.combat_power_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.combat_power_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.combat_power_));
  // @@protoc_insertion_point(copy_constructor:idlepb.CollectionActivatedSuit)
}

inline void CollectionActivatedSuit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.index_){0}
    , decltype(_impl_.combat_power_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionActivatedSuit::~CollectionActivatedSuit() {
  // @@protoc_insertion_point(destructor:idlepb.CollectionActivatedSuit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionActivatedSuit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CollectionActivatedSuit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionActivatedSuit::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.CollectionActivatedSuit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.combat_power_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.combat_power_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionActivatedSuit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float combat_power = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.combat_power_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionActivatedSuit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.CollectionActivatedSuit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // float combat_power = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_combat_power = this->_internal_combat_power();
  uint32_t raw_combat_power;
  memcpy(&raw_combat_power, &tmp_combat_power, sizeof(tmp_combat_power));
  if (raw_combat_power != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_combat_power(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.CollectionActivatedSuit)
  return target;
}

size_t CollectionActivatedSuit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.CollectionActivatedSuit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  // float combat_power = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_combat_power = this->_internal_combat_power();
  uint32_t raw_combat_power;
  memcpy(&raw_combat_power, &tmp_combat_power, sizeof(tmp_combat_power));
  if (raw_combat_power != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionActivatedSuit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionActivatedSuit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionActivatedSuit::GetClassData() const { return &_class_data_; }


void CollectionActivatedSuit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionActivatedSuit*>(&to_msg);
  auto& from = static_cast<const CollectionActivatedSuit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.CollectionActivatedSuit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_combat_power = from._internal_combat_power();
  uint32_t raw_combat_power;
  memcpy(&raw_combat_power, &tmp_combat_power, sizeof(tmp_combat_power));
  if (raw_combat_power != 0) {
    _this->_internal_set_combat_power(from._internal_combat_power());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionActivatedSuit::CopyFrom(const CollectionActivatedSuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.CollectionActivatedSuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionActivatedSuit::IsInitialized() const {
  return true;
}

void CollectionActivatedSuit::InternalSwap(CollectionActivatedSuit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CollectionActivatedSuit, _impl_.combat_power_)
      + sizeof(CollectionActivatedSuit::_impl_.combat_power_)
      - PROTOBUF_FIELD_OFFSET(CollectionActivatedSuit, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionActivatedSuit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[174]);
}

// ===================================================================

class GetRoleCollectionDataReq::_Internal {
 public:
};

GetRoleCollectionDataReq::GetRoleCollectionDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleCollectionDataReq)
}
GetRoleCollectionDataReq::GetRoleCollectionDataReq(const GetRoleCollectionDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleCollectionDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleCollectionDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleCollectionDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleCollectionDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleCollectionDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[175]);
}

// ===================================================================

class GetRoleCollectionDataRsp::_Internal {
 public:
};

void GetRoleCollectionDataRsp::clear_entries() {
  _impl_.entries_.Clear();
}
void GetRoleCollectionDataRsp::clear_common_pieces() {
  _impl_.common_pieces_.Clear();
}
void GetRoleCollectionDataRsp::clear_zone_active_awards() {
  _impl_.zone_active_awards_.Clear();
}
GetRoleCollectionDataRsp::GetRoleCollectionDataRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleCollectionDataRsp)
}
GetRoleCollectionDataRsp::GetRoleCollectionDataRsp(const GetRoleCollectionDataRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleCollectionDataRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){from._impl_.entries_}
    , decltype(_impl_.common_pieces_){from._impl_.common_pieces_}
    , decltype(_impl_.actived_suite_){from._impl_.actived_suite_}
    , decltype(_impl_.draw_award_done_histories_){from._impl_.draw_award_done_histories_}
    , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.can_award_histories_){from._impl_.can_award_histories_}
    , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.zone_active_awards_){from._impl_.zone_active_awards_}
    , decltype(_impl_.next_reset_enhance_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.next_reset_enhance_ticks_ = from._impl_.next_reset_enhance_ticks_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleCollectionDataRsp)
}

inline void GetRoleCollectionDataRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){arena}
    , decltype(_impl_.common_pieces_){arena}
    , decltype(_impl_.actived_suite_){arena}
    , decltype(_impl_.draw_award_done_histories_){arena}
    , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.can_award_histories_){arena}
    , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.zone_active_awards_){arena}
    , decltype(_impl_.next_reset_enhance_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleCollectionDataRsp::~GetRoleCollectionDataRsp() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleCollectionDataRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleCollectionDataRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
  _impl_.common_pieces_.~RepeatedPtrField();
  _impl_.actived_suite_.~RepeatedPtrField();
  _impl_.draw_award_done_histories_.~RepeatedField();
  _impl_.can_award_histories_.~RepeatedField();
  _impl_.zone_active_awards_.~RepeatedPtrField();
}

void GetRoleCollectionDataRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleCollectionDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleCollectionDataRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.common_pieces_.Clear();
  _impl_.actived_suite_.Clear();
  _impl_.draw_award_done_histories_.Clear();
  _impl_.can_award_histories_.Clear();
  _impl_.zone_active_awards_.Clear();
  _impl_.next_reset_enhance_ticks_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleCollectionDataRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.CollectionEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CommonCollectionPieceData common_pieces = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_common_pieces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CollectionActivatedSuit actived_suite = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actived_suite(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 draw_award_done_histories = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_draw_award_done_histories(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_draw_award_done_histories(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 can_award_histories = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_can_award_histories(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_can_award_histories(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_zone_active_awards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 next_reset_enhance_ticks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.next_reset_enhance_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleCollectionDataRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleCollectionDataRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.CollectionEntry entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.CommonCollectionPieceData common_pieces = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_common_pieces_size()); i < n; i++) {
    const auto& repfield = this->_internal_common_pieces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.CollectionActivatedSuit actived_suite = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_actived_suite_size()); i < n; i++) {
    const auto& repfield = this->_internal_actived_suite(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 draw_award_done_histories = 4;
  {
    int byte_size = _impl_._draw_award_done_histories_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_draw_award_done_histories(), byte_size, target);
    }
  }

  // repeated int32 can_award_histories = 5;
  {
    int byte_size = _impl_._can_award_histories_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_can_award_histories(), byte_size, target);
    }
  }

  // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_zone_active_awards_size()); i < n; i++) {
    const auto& repfield = this->_internal_zone_active_awards(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 next_reset_enhance_ticks = 7;
  if (this->_internal_next_reset_enhance_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_next_reset_enhance_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleCollectionDataRsp)
  return target;
}

size_t GetRoleCollectionDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleCollectionDataRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.CollectionEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_impl_.entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.CommonCollectionPieceData common_pieces = 2;
  total_size += 1UL * this->_internal_common_pieces_size();
  for (const auto& msg : this->_impl_.common_pieces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.CollectionActivatedSuit actived_suite = 3;
  total_size += 1UL * this->_internal_actived_suite_size();
  for (const auto& msg : this->_impl_.actived_suite_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 draw_award_done_histories = 4;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.draw_award_done_histories_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._draw_award_done_histories_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 can_award_histories = 5;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.can_award_histories_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._can_award_histories_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 6;
  total_size += 1UL * this->_internal_zone_active_awards_size();
  for (const auto& msg : this->_impl_.zone_active_awards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 next_reset_enhance_ticks = 7;
  if (this->_internal_next_reset_enhance_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_next_reset_enhance_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleCollectionDataRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleCollectionDataRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleCollectionDataRsp::GetClassData() const { return &_class_data_; }


void GetRoleCollectionDataRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleCollectionDataRsp*>(&to_msg);
  auto& from = static_cast<const GetRoleCollectionDataRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleCollectionDataRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  _this->_impl_.common_pieces_.MergeFrom(from._impl_.common_pieces_);
  _this->_impl_.actived_suite_.MergeFrom(from._impl_.actived_suite_);
  _this->_impl_.draw_award_done_histories_.MergeFrom(from._impl_.draw_award_done_histories_);
  _this->_impl_.can_award_histories_.MergeFrom(from._impl_.can_award_histories_);
  _this->_impl_.zone_active_awards_.MergeFrom(from._impl_.zone_active_awards_);
  if (from._internal_next_reset_enhance_ticks() != 0) {
    _this->_internal_set_next_reset_enhance_ticks(from._internal_next_reset_enhance_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleCollectionDataRsp::CopyFrom(const GetRoleCollectionDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleCollectionDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleCollectionDataRsp::IsInitialized() const {
  return true;
}

void GetRoleCollectionDataRsp::InternalSwap(GetRoleCollectionDataRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  _impl_.common_pieces_.InternalSwap(&other->_impl_.common_pieces_);
  _impl_.actived_suite_.InternalSwap(&other->_impl_.actived_suite_);
  _impl_.draw_award_done_histories_.InternalSwap(&other->_impl_.draw_award_done_histories_);
  _impl_.can_award_histories_.InternalSwap(&other->_impl_.can_award_histories_);
  _impl_.zone_active_awards_.InternalSwap(&other->_impl_.zone_active_awards_);
  swap(_impl_.next_reset_enhance_ticks_, other->_impl_.next_reset_enhance_ticks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleCollectionDataRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[176]);
}

// ===================================================================

class RoleCollectionOpReq::_Internal {
 public:
};

void RoleCollectionOpReq::clear_consume_list() {
  _impl_.consume_list_.Clear();
}
RoleCollectionOpReq::RoleCollectionOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RoleCollectionOpReq)
}
RoleCollectionOpReq::RoleCollectionOpReq(const RoleCollectionOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoleCollectionOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.consume_list_){from._impl_.consume_list_}
    , decltype(_impl_.op_type_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.is_preview_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.op_type_, &from._impl_.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_preview_) -
    reinterpret_cast<char*>(&_impl_.op_type_)) + sizeof(_impl_.is_preview_));
  // @@protoc_insertion_point(copy_constructor:idlepb.RoleCollectionOpReq)
}

inline void RoleCollectionOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.consume_list_){arena}
    , decltype(_impl_.op_type_){0}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.is_preview_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RoleCollectionOpReq::~RoleCollectionOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.RoleCollectionOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoleCollectionOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.consume_list_.~RepeatedPtrField();
}

void RoleCollectionOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoleCollectionOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RoleCollectionOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.consume_list_.Clear();
  ::memset(&_impl_.op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_preview_) -
      reinterpret_cast<char*>(&_impl_.op_type_)) + sizeof(_impl_.is_preview_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoleCollectionOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleCollectionOpType op_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_op_type(static_cast<::idlepb::RoleCollectionOpType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.MapValueInt32 consume_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_consume_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool is_preview = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_preview_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoleCollectionOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RoleCollectionOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleCollectionOpType op_type = 1;
  if (this->_internal_op_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_op_type(), target);
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // repeated .idlepb.MapValueInt32 consume_list = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_consume_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_consume_list(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool is_preview = 4;
  if (this->_internal_is_preview() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_preview(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RoleCollectionOpReq)
  return target;
}

size_t RoleCollectionOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RoleCollectionOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.MapValueInt32 consume_list = 3;
  total_size += 1UL * this->_internal_consume_list_size();
  for (const auto& msg : this->_impl_.consume_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.RoleCollectionOpType op_type = 1;
  if (this->_internal_op_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_op_type());
  }

  // int32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // bool is_preview = 4;
  if (this->_internal_is_preview() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoleCollectionOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoleCollectionOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoleCollectionOpReq::GetClassData() const { return &_class_data_; }


void RoleCollectionOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoleCollectionOpReq*>(&to_msg);
  auto& from = static_cast<const RoleCollectionOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RoleCollectionOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.consume_list_.MergeFrom(from._impl_.consume_list_);
  if (from._internal_op_type() != 0) {
    _this->_internal_set_op_type(from._internal_op_type());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_is_preview() != 0) {
    _this->_internal_set_is_preview(from._internal_is_preview());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoleCollectionOpReq::CopyFrom(const RoleCollectionOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RoleCollectionOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCollectionOpReq::IsInitialized() const {
  return true;
}

void RoleCollectionOpReq::InternalSwap(RoleCollectionOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.consume_list_.InternalSwap(&other->_impl_.consume_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoleCollectionOpReq, _impl_.is_preview_)
      + sizeof(RoleCollectionOpReq::_impl_.is_preview_)
      - PROTOBUF_FIELD_OFFSET(RoleCollectionOpReq, _impl_.op_type_)>(
          reinterpret_cast<char*>(&_impl_.op_type_),
          reinterpret_cast<char*>(&other->_impl_.op_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoleCollectionOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[177]);
}

// ===================================================================

class RoleCollectionOpAck::_Internal {
 public:
};

void RoleCollectionOpAck::clear_items() {
  _impl_.items_.Clear();
}
RoleCollectionOpAck::RoleCollectionOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RoleCollectionOpAck)
}
RoleCollectionOpAck::RoleCollectionOpAck(const RoleCollectionOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoleCollectionOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.op_type_){}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.op_type_, &from._impl_.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ok_) -
    reinterpret_cast<char*>(&_impl_.op_type_)) + sizeof(_impl_.ok_));
  // @@protoc_insertion_point(copy_constructor:idlepb.RoleCollectionOpAck)
}

inline void RoleCollectionOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.op_type_){0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RoleCollectionOpAck::~RoleCollectionOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.RoleCollectionOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoleCollectionOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void RoleCollectionOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoleCollectionOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RoleCollectionOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  ::memset(&_impl_.op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.ok_) -
      reinterpret_cast<char*>(&_impl_.op_type_)) + sizeof(_impl_.ok_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoleCollectionOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleCollectionOpType op_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_op_type(static_cast<::idlepb::RoleCollectionOpType>(val));
        } else
          goto handle_unusual;
        continue;
      // bool ok = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoleCollectionOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RoleCollectionOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleCollectionOpType op_type = 1;
  if (this->_internal_op_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_op_type(), target);
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ok(), target);
  }

  // repeated .idlepb.SimpleItemData items = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RoleCollectionOpAck)
  return target;
}

size_t RoleCollectionOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RoleCollectionOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 3;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.RoleCollectionOpType op_type = 1;
  if (this->_internal_op_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_op_type());
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoleCollectionOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoleCollectionOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoleCollectionOpAck::GetClassData() const { return &_class_data_; }


void RoleCollectionOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoleCollectionOpAck*>(&to_msg);
  auto& from = static_cast<const RoleCollectionOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RoleCollectionOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_op_type() != 0) {
    _this->_internal_set_op_type(from._internal_op_type());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoleCollectionOpAck::CopyFrom(const RoleCollectionOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RoleCollectionOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCollectionOpAck::IsInitialized() const {
  return true;
}

void RoleCollectionOpAck::InternalSwap(RoleCollectionOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoleCollectionOpAck, _impl_.ok_)
      + sizeof(RoleCollectionOpAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(RoleCollectionOpAck, _impl_.op_type_)>(
          reinterpret_cast<char*>(&_impl_.op_type_),
          reinterpret_cast<char*>(&other->_impl_.op_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoleCollectionOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[178]);
}

// ===================================================================

class NotifyRoleCollectionData::_Internal {
 public:
  static const ::idlepb::CollectionEntry& entry(const NotifyRoleCollectionData* msg);
};

const ::idlepb::CollectionEntry&
NotifyRoleCollectionData::_Internal::entry(const NotifyRoleCollectionData* msg) {
  return *msg->_impl_.entry_;
}
void NotifyRoleCollectionData::clear_entry() {
  if (GetArenaForAllocation() == nullptr && _impl_.entry_ != nullptr) {
    delete _impl_.entry_;
  }
  _impl_.entry_ = nullptr;
}
NotifyRoleCollectionData::NotifyRoleCollectionData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyRoleCollectionData)
}
NotifyRoleCollectionData::NotifyRoleCollectionData(const NotifyRoleCollectionData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyRoleCollectionData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entry_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entry()) {
    _this->_impl_.entry_ = new ::idlepb::CollectionEntry(*from._impl_.entry_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyRoleCollectionData)
}

inline void NotifyRoleCollectionData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entry_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyRoleCollectionData::~NotifyRoleCollectionData() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyRoleCollectionData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyRoleCollectionData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entry_;
}

void NotifyRoleCollectionData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyRoleCollectionData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyRoleCollectionData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.entry_ != nullptr) {
    delete _impl_.entry_;
  }
  _impl_.entry_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRoleCollectionData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.CollectionEntry entry = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entry(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyRoleCollectionData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyRoleCollectionData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.CollectionEntry entry = 1;
  if (this->_internal_has_entry()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entry(this),
        _Internal::entry(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyRoleCollectionData)
  return target;
}

size_t NotifyRoleCollectionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyRoleCollectionData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CollectionEntry entry = 1;
  if (this->_internal_has_entry()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entry_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyRoleCollectionData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyRoleCollectionData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyRoleCollectionData::GetClassData() const { return &_class_data_; }


void NotifyRoleCollectionData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyRoleCollectionData*>(&to_msg);
  auto& from = static_cast<const NotifyRoleCollectionData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyRoleCollectionData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_entry()) {
    _this->_internal_mutable_entry()->::idlepb::CollectionEntry::MergeFrom(
        from._internal_entry());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyRoleCollectionData::CopyFrom(const NotifyRoleCollectionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyRoleCollectionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRoleCollectionData::IsInitialized() const {
  return true;
}

void NotifyRoleCollectionData::InternalSwap(NotifyRoleCollectionData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.entry_, other->_impl_.entry_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRoleCollectionData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[179]);
}

// ===================================================================

class NotifyCommonCollectionPieceData::_Internal {
 public:
};

void NotifyCommonCollectionPieceData::clear_common_pieces() {
  _impl_.common_pieces_.Clear();
}
NotifyCommonCollectionPieceData::NotifyCommonCollectionPieceData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyCommonCollectionPieceData)
}
NotifyCommonCollectionPieceData::NotifyCommonCollectionPieceData(const NotifyCommonCollectionPieceData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyCommonCollectionPieceData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_pieces_){from._impl_.common_pieces_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyCommonCollectionPieceData)
}

inline void NotifyCommonCollectionPieceData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_pieces_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyCommonCollectionPieceData::~NotifyCommonCollectionPieceData() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyCommonCollectionPieceData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyCommonCollectionPieceData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.common_pieces_.~RepeatedPtrField();
}

void NotifyCommonCollectionPieceData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyCommonCollectionPieceData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyCommonCollectionPieceData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.common_pieces_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyCommonCollectionPieceData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.CommonCollectionPieceData common_pieces = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_common_pieces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyCommonCollectionPieceData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyCommonCollectionPieceData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.CommonCollectionPieceData common_pieces = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_common_pieces_size()); i < n; i++) {
    const auto& repfield = this->_internal_common_pieces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyCommonCollectionPieceData)
  return target;
}

size_t NotifyCommonCollectionPieceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyCommonCollectionPieceData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.CommonCollectionPieceData common_pieces = 1;
  total_size += 1UL * this->_internal_common_pieces_size();
  for (const auto& msg : this->_impl_.common_pieces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyCommonCollectionPieceData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyCommonCollectionPieceData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyCommonCollectionPieceData::GetClassData() const { return &_class_data_; }


void NotifyCommonCollectionPieceData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyCommonCollectionPieceData*>(&to_msg);
  auto& from = static_cast<const NotifyCommonCollectionPieceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyCommonCollectionPieceData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.common_pieces_.MergeFrom(from._impl_.common_pieces_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyCommonCollectionPieceData::CopyFrom(const NotifyCommonCollectionPieceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyCommonCollectionPieceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyCommonCollectionPieceData::IsInitialized() const {
  return true;
}

void NotifyCommonCollectionPieceData::InternalSwap(NotifyCommonCollectionPieceData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.common_pieces_.InternalSwap(&other->_impl_.common_pieces_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyCommonCollectionPieceData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[180]);
}

// ===================================================================

class NotifyCollectionActivatedSuit::_Internal {
 public:
};

NotifyCollectionActivatedSuit::NotifyCollectionActivatedSuit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyCollectionActivatedSuit)
}
NotifyCollectionActivatedSuit::NotifyCollectionActivatedSuit(const NotifyCollectionActivatedSuit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyCollectionActivatedSuit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.actived_suite_){from._impl_.actived_suite_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyCollectionActivatedSuit)
}

inline void NotifyCollectionActivatedSuit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.actived_suite_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyCollectionActivatedSuit::~NotifyCollectionActivatedSuit() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyCollectionActivatedSuit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyCollectionActivatedSuit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.actived_suite_.~RepeatedPtrField();
}

void NotifyCollectionActivatedSuit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyCollectionActivatedSuit::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyCollectionActivatedSuit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actived_suite_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyCollectionActivatedSuit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.CollectionActivatedSuit actived_suite = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actived_suite(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyCollectionActivatedSuit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyCollectionActivatedSuit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.CollectionActivatedSuit actived_suite = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_actived_suite_size()); i < n; i++) {
    const auto& repfield = this->_internal_actived_suite(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyCollectionActivatedSuit)
  return target;
}

size_t NotifyCollectionActivatedSuit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyCollectionActivatedSuit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.CollectionActivatedSuit actived_suite = 1;
  total_size += 1UL * this->_internal_actived_suite_size();
  for (const auto& msg : this->_impl_.actived_suite_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyCollectionActivatedSuit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyCollectionActivatedSuit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyCollectionActivatedSuit::GetClassData() const { return &_class_data_; }


void NotifyCollectionActivatedSuit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyCollectionActivatedSuit*>(&to_msg);
  auto& from = static_cast<const NotifyCollectionActivatedSuit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyCollectionActivatedSuit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.actived_suite_.MergeFrom(from._impl_.actived_suite_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyCollectionActivatedSuit::CopyFrom(const NotifyCollectionActivatedSuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyCollectionActivatedSuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyCollectionActivatedSuit::IsInitialized() const {
  return true;
}

void NotifyCollectionActivatedSuit::InternalSwap(NotifyCollectionActivatedSuit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.actived_suite_.InternalSwap(&other->_impl_.actived_suite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyCollectionActivatedSuit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[181]);
}

// ===================================================================

class ShareSelfRoleCollectionReq::_Internal {
 public:
};

ShareSelfRoleCollectionReq::ShareSelfRoleCollectionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfRoleCollectionReq)
}
ShareSelfRoleCollectionReq::ShareSelfRoleCollectionReq(const ShareSelfRoleCollectionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfRoleCollectionReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfRoleCollectionReq)
}

inline void ShareSelfRoleCollectionReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfRoleCollectionReq::~ShareSelfRoleCollectionReq() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfRoleCollectionReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfRoleCollectionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShareSelfRoleCollectionReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfRoleCollectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfRoleCollectionReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfRoleCollectionReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfRoleCollectionReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfRoleCollectionReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfRoleCollectionReq)
  return target;
}

size_t ShareSelfRoleCollectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfRoleCollectionReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfRoleCollectionReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfRoleCollectionReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfRoleCollectionReq::GetClassData() const { return &_class_data_; }


void ShareSelfRoleCollectionReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfRoleCollectionReq*>(&to_msg);
  auto& from = static_cast<const ShareSelfRoleCollectionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfRoleCollectionReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfRoleCollectionReq::CopyFrom(const ShareSelfRoleCollectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfRoleCollectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfRoleCollectionReq::IsInitialized() const {
  return true;
}

void ShareSelfRoleCollectionReq::InternalSwap(ShareSelfRoleCollectionReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfRoleCollectionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[182]);
}

// ===================================================================

class ShareSelfRoleCollectionRsp::_Internal {
 public:
};

ShareSelfRoleCollectionRsp::ShareSelfRoleCollectionRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfRoleCollectionRsp)
}
ShareSelfRoleCollectionRsp::ShareSelfRoleCollectionRsp(const ShareSelfRoleCollectionRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfRoleCollectionRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.share_id_ = from._impl_.share_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfRoleCollectionRsp)
}

inline void ShareSelfRoleCollectionRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfRoleCollectionRsp::~ShareSelfRoleCollectionRsp() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfRoleCollectionRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfRoleCollectionRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShareSelfRoleCollectionRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfRoleCollectionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfRoleCollectionRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfRoleCollectionRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.share_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfRoleCollectionRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfRoleCollectionRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_share_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfRoleCollectionRsp)
  return target;
}

size_t ShareSelfRoleCollectionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfRoleCollectionRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_share_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfRoleCollectionRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfRoleCollectionRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfRoleCollectionRsp::GetClassData() const { return &_class_data_; }


void ShareSelfRoleCollectionRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfRoleCollectionRsp*>(&to_msg);
  auto& from = static_cast<const ShareSelfRoleCollectionRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfRoleCollectionRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_share_id() != 0) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfRoleCollectionRsp::CopyFrom(const ShareSelfRoleCollectionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfRoleCollectionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfRoleCollectionRsp::IsInitialized() const {
  return true;
}

void ShareSelfRoleCollectionRsp::InternalSwap(ShareSelfRoleCollectionRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.share_id_, other->_impl_.share_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfRoleCollectionRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[183]);
}

// ===================================================================

class GetShareRoleCollectionDataReq::_Internal {
 public:
};

GetShareRoleCollectionDataReq::GetShareRoleCollectionDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShareRoleCollectionDataReq)
}
GetShareRoleCollectionDataReq::GetShareRoleCollectionDataReq(const GetShareRoleCollectionDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShareRoleCollectionDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.share_id_ = from._impl_.share_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShareRoleCollectionDataReq)
}

inline void GetShareRoleCollectionDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShareRoleCollectionDataReq::~GetShareRoleCollectionDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetShareRoleCollectionDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShareRoleCollectionDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetShareRoleCollectionDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShareRoleCollectionDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShareRoleCollectionDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShareRoleCollectionDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.share_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShareRoleCollectionDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShareRoleCollectionDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_share_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShareRoleCollectionDataReq)
  return target;
}

size_t GetShareRoleCollectionDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShareRoleCollectionDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_share_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShareRoleCollectionDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShareRoleCollectionDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShareRoleCollectionDataReq::GetClassData() const { return &_class_data_; }


void GetShareRoleCollectionDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShareRoleCollectionDataReq*>(&to_msg);
  auto& from = static_cast<const GetShareRoleCollectionDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShareRoleCollectionDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_share_id() != 0) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShareRoleCollectionDataReq::CopyFrom(const GetShareRoleCollectionDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShareRoleCollectionDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareRoleCollectionDataReq::IsInitialized() const {
  return true;
}

void GetShareRoleCollectionDataReq::InternalSwap(GetShareRoleCollectionDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.share_id_, other->_impl_.share_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShareRoleCollectionDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[184]);
}

// ===================================================================

class GetShareRoleCollectionDataRsp::_Internal {
 public:
  static const ::idlepb::CollectionEntry& collection_data(const GetShareRoleCollectionDataRsp* msg);
};

const ::idlepb::CollectionEntry&
GetShareRoleCollectionDataRsp::_Internal::collection_data(const GetShareRoleCollectionDataRsp* msg) {
  return *msg->_impl_.collection_data_;
}
void GetShareRoleCollectionDataRsp::clear_collection_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.collection_data_ != nullptr) {
    delete _impl_.collection_data_;
  }
  _impl_.collection_data_ = nullptr;
}
GetShareRoleCollectionDataRsp::GetShareRoleCollectionDataRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShareRoleCollectionDataRsp)
}
GetShareRoleCollectionDataRsp::GetShareRoleCollectionDataRsp(const GetShareRoleCollectionDataRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShareRoleCollectionDataRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.collection_data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_collection_data()) {
    _this->_impl_.collection_data_ = new ::idlepb::CollectionEntry(*from._impl_.collection_data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShareRoleCollectionDataRsp)
}

inline void GetShareRoleCollectionDataRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.collection_data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShareRoleCollectionDataRsp::~GetShareRoleCollectionDataRsp() {
  // @@protoc_insertion_point(destructor:idlepb.GetShareRoleCollectionDataRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShareRoleCollectionDataRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.collection_data_;
}

void GetShareRoleCollectionDataRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShareRoleCollectionDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShareRoleCollectionDataRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.collection_data_ != nullptr) {
    delete _impl_.collection_data_;
  }
  _impl_.collection_data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShareRoleCollectionDataRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.CollectionEntry collection_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_collection_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShareRoleCollectionDataRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShareRoleCollectionDataRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.CollectionEntry collection_data = 2;
  if (this->_internal_has_collection_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::collection_data(this),
        _Internal::collection_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShareRoleCollectionDataRsp)
  return target;
}

size_t GetShareRoleCollectionDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShareRoleCollectionDataRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CollectionEntry collection_data = 2;
  if (this->_internal_has_collection_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.collection_data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShareRoleCollectionDataRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShareRoleCollectionDataRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShareRoleCollectionDataRsp::GetClassData() const { return &_class_data_; }


void GetShareRoleCollectionDataRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShareRoleCollectionDataRsp*>(&to_msg);
  auto& from = static_cast<const GetShareRoleCollectionDataRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShareRoleCollectionDataRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_collection_data()) {
    _this->_internal_mutable_collection_data()->::idlepb::CollectionEntry::MergeFrom(
        from._internal_collection_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShareRoleCollectionDataRsp::CopyFrom(const GetShareRoleCollectionDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShareRoleCollectionDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareRoleCollectionDataRsp::IsInitialized() const {
  return true;
}

void GetShareRoleCollectionDataRsp::InternalSwap(GetShareRoleCollectionDataRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetShareRoleCollectionDataRsp, _impl_.ok_)
      + sizeof(GetShareRoleCollectionDataRsp::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(GetShareRoleCollectionDataRsp, _impl_.collection_data_)>(
          reinterpret_cast<char*>(&_impl_.collection_data_),
          reinterpret_cast<char*>(&other->_impl_.collection_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShareRoleCollectionDataRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[185]);
}

// ===================================================================

class NotifyRoleCollectionHistories::_Internal {
 public:
};

NotifyRoleCollectionHistories::NotifyRoleCollectionHistories(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyRoleCollectionHistories)
}
NotifyRoleCollectionHistories::NotifyRoleCollectionHistories(const NotifyRoleCollectionHistories& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyRoleCollectionHistories* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.draw_award_done_histories_){from._impl_.draw_award_done_histories_}
    , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.can_award_histories_){from._impl_.can_award_histories_}
    , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyRoleCollectionHistories)
}

inline void NotifyRoleCollectionHistories::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.draw_award_done_histories_){arena}
    , /*decltype(_impl_._draw_award_done_histories_cached_byte_size_)*/{0}
    , decltype(_impl_.can_award_histories_){arena}
    , /*decltype(_impl_._can_award_histories_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyRoleCollectionHistories::~NotifyRoleCollectionHistories() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyRoleCollectionHistories)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyRoleCollectionHistories::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.draw_award_done_histories_.~RepeatedField();
  _impl_.can_award_histories_.~RepeatedField();
}

void NotifyRoleCollectionHistories::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyRoleCollectionHistories::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyRoleCollectionHistories)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.draw_award_done_histories_.Clear();
  _impl_.can_award_histories_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRoleCollectionHistories::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 draw_award_done_histories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_draw_award_done_histories(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_draw_award_done_histories(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 can_award_histories = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_can_award_histories(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_can_award_histories(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyRoleCollectionHistories::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyRoleCollectionHistories)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 draw_award_done_histories = 1;
  {
    int byte_size = _impl_._draw_award_done_histories_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_draw_award_done_histories(), byte_size, target);
    }
  }

  // repeated int32 can_award_histories = 2;
  {
    int byte_size = _impl_._can_award_histories_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_can_award_histories(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyRoleCollectionHistories)
  return target;
}

size_t NotifyRoleCollectionHistories::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyRoleCollectionHistories)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 draw_award_done_histories = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.draw_award_done_histories_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._draw_award_done_histories_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 can_award_histories = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.can_award_histories_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._can_award_histories_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyRoleCollectionHistories::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyRoleCollectionHistories::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyRoleCollectionHistories::GetClassData() const { return &_class_data_; }


void NotifyRoleCollectionHistories::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyRoleCollectionHistories*>(&to_msg);
  auto& from = static_cast<const NotifyRoleCollectionHistories&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyRoleCollectionHistories)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.draw_award_done_histories_.MergeFrom(from._impl_.draw_award_done_histories_);
  _this->_impl_.can_award_histories_.MergeFrom(from._impl_.can_award_histories_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyRoleCollectionHistories::CopyFrom(const NotifyRoleCollectionHistories& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyRoleCollectionHistories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRoleCollectionHistories::IsInitialized() const {
  return true;
}

void NotifyRoleCollectionHistories::InternalSwap(NotifyRoleCollectionHistories* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.draw_award_done_histories_.InternalSwap(&other->_impl_.draw_award_done_histories_);
  _impl_.can_award_histories_.InternalSwap(&other->_impl_.can_award_histories_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRoleCollectionHistories::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[186]);
}

// ===================================================================

class NotifyCollectionZoneActiveAwards::_Internal {
 public:
};

void NotifyCollectionZoneActiveAwards::clear_zone_active_awards() {
  _impl_.zone_active_awards_.Clear();
}
NotifyCollectionZoneActiveAwards::NotifyCollectionZoneActiveAwards(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyCollectionZoneActiveAwards)
}
NotifyCollectionZoneActiveAwards::NotifyCollectionZoneActiveAwards(const NotifyCollectionZoneActiveAwards& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyCollectionZoneActiveAwards* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.zone_active_awards_){from._impl_.zone_active_awards_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyCollectionZoneActiveAwards)
}

inline void NotifyCollectionZoneActiveAwards::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.zone_active_awards_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyCollectionZoneActiveAwards::~NotifyCollectionZoneActiveAwards() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyCollectionZoneActiveAwards)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyCollectionZoneActiveAwards::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.zone_active_awards_.~RepeatedPtrField();
}

void NotifyCollectionZoneActiveAwards::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyCollectionZoneActiveAwards::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyCollectionZoneActiveAwards)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zone_active_awards_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyCollectionZoneActiveAwards::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_zone_active_awards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyCollectionZoneActiveAwards::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyCollectionZoneActiveAwards)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_zone_active_awards_size()); i < n; i++) {
    const auto& repfield = this->_internal_zone_active_awards(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyCollectionZoneActiveAwards)
  return target;
}

size_t NotifyCollectionZoneActiveAwards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyCollectionZoneActiveAwards)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.CollectionZoneActiveAwardData zone_active_awards = 1;
  total_size += 1UL * this->_internal_zone_active_awards_size();
  for (const auto& msg : this->_impl_.zone_active_awards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyCollectionZoneActiveAwards::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyCollectionZoneActiveAwards::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyCollectionZoneActiveAwards::GetClassData() const { return &_class_data_; }


void NotifyCollectionZoneActiveAwards::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyCollectionZoneActiveAwards*>(&to_msg);
  auto& from = static_cast<const NotifyCollectionZoneActiveAwards&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyCollectionZoneActiveAwards)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.zone_active_awards_.MergeFrom(from._impl_.zone_active_awards_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyCollectionZoneActiveAwards::CopyFrom(const NotifyCollectionZoneActiveAwards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyCollectionZoneActiveAwards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyCollectionZoneActiveAwards::IsInitialized() const {
  return true;
}

void NotifyCollectionZoneActiveAwards::InternalSwap(NotifyCollectionZoneActiveAwards* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.zone_active_awards_.InternalSwap(&other->_impl_.zone_active_awards_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyCollectionZoneActiveAwards::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[187]);
}

// ===================================================================

class NotifyRoleCollectionNextResetEnhanceTicks::_Internal {
 public:
};

NotifyRoleCollectionNextResetEnhanceTicks::NotifyRoleCollectionNextResetEnhanceTicks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
}
NotifyRoleCollectionNextResetEnhanceTicks::NotifyRoleCollectionNextResetEnhanceTicks(const NotifyRoleCollectionNextResetEnhanceTicks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyRoleCollectionNextResetEnhanceTicks* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.next_reset_enhance_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.next_reset_enhance_ticks_ = from._impl_.next_reset_enhance_ticks_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
}

inline void NotifyRoleCollectionNextResetEnhanceTicks::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.next_reset_enhance_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyRoleCollectionNextResetEnhanceTicks::~NotifyRoleCollectionNextResetEnhanceTicks() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyRoleCollectionNextResetEnhanceTicks::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyRoleCollectionNextResetEnhanceTicks::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyRoleCollectionNextResetEnhanceTicks::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.next_reset_enhance_ticks_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyRoleCollectionNextResetEnhanceTicks::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 next_reset_enhance_ticks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.next_reset_enhance_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyRoleCollectionNextResetEnhanceTicks::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 next_reset_enhance_ticks = 1;
  if (this->_internal_next_reset_enhance_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_next_reset_enhance_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  return target;
}

size_t NotifyRoleCollectionNextResetEnhanceTicks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 next_reset_enhance_ticks = 1;
  if (this->_internal_next_reset_enhance_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_next_reset_enhance_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyRoleCollectionNextResetEnhanceTicks::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyRoleCollectionNextResetEnhanceTicks::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyRoleCollectionNextResetEnhanceTicks::GetClassData() const { return &_class_data_; }


void NotifyRoleCollectionNextResetEnhanceTicks::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyRoleCollectionNextResetEnhanceTicks*>(&to_msg);
  auto& from = static_cast<const NotifyRoleCollectionNextResetEnhanceTicks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_next_reset_enhance_ticks() != 0) {
    _this->_internal_set_next_reset_enhance_ticks(from._internal_next_reset_enhance_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyRoleCollectionNextResetEnhanceTicks::CopyFrom(const NotifyRoleCollectionNextResetEnhanceTicks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyRoleCollectionNextResetEnhanceTicks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRoleCollectionNextResetEnhanceTicks::IsInitialized() const {
  return true;
}

void NotifyRoleCollectionNextResetEnhanceTicks::InternalSwap(NotifyRoleCollectionNextResetEnhanceTicks* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.next_reset_enhance_ticks_, other->_impl_.next_reset_enhance_ticks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyRoleCollectionNextResetEnhanceTicks::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[188]);
}

// ===================================================================

class RoleBattleHistoryList::_Internal {
 public:
};

void RoleBattleHistoryList::clear_entries() {
  _impl_.entries_.Clear();
}
RoleBattleHistoryList::RoleBattleHistoryList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RoleBattleHistoryList)
}
RoleBattleHistoryList::RoleBattleHistoryList(const RoleBattleHistoryList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoleBattleHistoryList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){from._impl_.entries_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RoleBattleHistoryList)
}

inline void RoleBattleHistoryList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RoleBattleHistoryList::~RoleBattleHistoryList() {
  // @@protoc_insertion_point(destructor:idlepb.RoleBattleHistoryList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoleBattleHistoryList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
}

void RoleBattleHistoryList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoleBattleHistoryList::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RoleBattleHistoryList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoleBattleHistoryList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.RoleBattleInfo entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoleBattleHistoryList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RoleBattleHistoryList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.RoleBattleInfo entries = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RoleBattleHistoryList)
  return target;
}

size_t RoleBattleHistoryList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RoleBattleHistoryList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.RoleBattleInfo entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_impl_.entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoleBattleHistoryList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoleBattleHistoryList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoleBattleHistoryList::GetClassData() const { return &_class_data_; }


void RoleBattleHistoryList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoleBattleHistoryList*>(&to_msg);
  auto& from = static_cast<const RoleBattleHistoryList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RoleBattleHistoryList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoleBattleHistoryList::CopyFrom(const RoleBattleHistoryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RoleBattleHistoryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleBattleHistoryList::IsInitialized() const {
  return true;
}

void RoleBattleHistoryList::InternalSwap(RoleBattleHistoryList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoleBattleHistoryList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[189]);
}

// ===================================================================

class NotifySoloArenaChallengeOver::_Internal {
 public:
  static const ::idlepb::BattleInfo& info(const NotifySoloArenaChallengeOver* msg);
};

const ::idlepb::BattleInfo&
NotifySoloArenaChallengeOver::_Internal::info(const NotifySoloArenaChallengeOver* msg) {
  return *msg->_impl_.info_;
}
void NotifySoloArenaChallengeOver::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
NotifySoloArenaChallengeOver::NotifySoloArenaChallengeOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifySoloArenaChallengeOver)
}
NotifySoloArenaChallengeOver::NotifySoloArenaChallengeOver(const NotifySoloArenaChallengeOver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifySoloArenaChallengeOver* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.win_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::idlepb::BattleInfo(*from._impl_.info_);
  }
  _this->_impl_.win_ = from._impl_.win_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifySoloArenaChallengeOver)
}

inline void NotifySoloArenaChallengeOver::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.win_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifySoloArenaChallengeOver::~NotifySoloArenaChallengeOver() {
  // @@protoc_insertion_point(destructor:idlepb.NotifySoloArenaChallengeOver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifySoloArenaChallengeOver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void NotifySoloArenaChallengeOver::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifySoloArenaChallengeOver::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifySoloArenaChallengeOver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.win_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifySoloArenaChallengeOver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool win = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.BattleInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifySoloArenaChallengeOver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifySoloArenaChallengeOver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool win = 1;
  if (this->_internal_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_win(), target);
  }

  // .idlepb.BattleInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifySoloArenaChallengeOver)
  return target;
}

size_t NotifySoloArenaChallengeOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifySoloArenaChallengeOver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.BattleInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // bool win = 1;
  if (this->_internal_win() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifySoloArenaChallengeOver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifySoloArenaChallengeOver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifySoloArenaChallengeOver::GetClassData() const { return &_class_data_; }


void NotifySoloArenaChallengeOver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifySoloArenaChallengeOver*>(&to_msg);
  auto& from = static_cast<const NotifySoloArenaChallengeOver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifySoloArenaChallengeOver)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::idlepb::BattleInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_win() != 0) {
    _this->_internal_set_win(from._internal_win());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifySoloArenaChallengeOver::CopyFrom(const NotifySoloArenaChallengeOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifySoloArenaChallengeOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifySoloArenaChallengeOver::IsInitialized() const {
  return true;
}

void NotifySoloArenaChallengeOver::InternalSwap(NotifySoloArenaChallengeOver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifySoloArenaChallengeOver, _impl_.win_)
      + sizeof(NotifySoloArenaChallengeOver::_impl_.win_)
      - PROTOBUF_FIELD_OFFSET(NotifySoloArenaChallengeOver, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifySoloArenaChallengeOver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[190]);
}

// ===================================================================

class SoloArenaChallengeReq::_Internal {
 public:
};

SoloArenaChallengeReq::SoloArenaChallengeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SoloArenaChallengeReq)
}
SoloArenaChallengeReq::SoloArenaChallengeReq(const SoloArenaChallengeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SoloArenaChallengeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.target_role_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.target_role_id_ = from._impl_.target_role_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SoloArenaChallengeReq)
}

inline void SoloArenaChallengeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.target_role_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SoloArenaChallengeReq::~SoloArenaChallengeReq() {
  // @@protoc_insertion_point(destructor:idlepb.SoloArenaChallengeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SoloArenaChallengeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SoloArenaChallengeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SoloArenaChallengeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SoloArenaChallengeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_role_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoloArenaChallengeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 target_role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.target_role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SoloArenaChallengeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SoloArenaChallengeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 target_role_id = 1;
  if (this->_internal_target_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_target_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SoloArenaChallengeReq)
  return target;
}

size_t SoloArenaChallengeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SoloArenaChallengeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 target_role_id = 1;
  if (this->_internal_target_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_target_role_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SoloArenaChallengeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SoloArenaChallengeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SoloArenaChallengeReq::GetClassData() const { return &_class_data_; }


void SoloArenaChallengeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SoloArenaChallengeReq*>(&to_msg);
  auto& from = static_cast<const SoloArenaChallengeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SoloArenaChallengeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_target_role_id() != 0) {
    _this->_internal_set_target_role_id(from._internal_target_role_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SoloArenaChallengeReq::CopyFrom(const SoloArenaChallengeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SoloArenaChallengeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoloArenaChallengeReq::IsInitialized() const {
  return true;
}

void SoloArenaChallengeReq::InternalSwap(SoloArenaChallengeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.target_role_id_, other->_impl_.target_role_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SoloArenaChallengeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[191]);
}

// ===================================================================

class SoloArenaChallengeAck::_Internal {
 public:
};

SoloArenaChallengeAck::SoloArenaChallengeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SoloArenaChallengeAck)
}
SoloArenaChallengeAck::SoloArenaChallengeAck(const SoloArenaChallengeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SoloArenaChallengeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SoloArenaChallengeAck)
}

inline void SoloArenaChallengeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SoloArenaChallengeAck::~SoloArenaChallengeAck() {
  // @@protoc_insertion_point(destructor:idlepb.SoloArenaChallengeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SoloArenaChallengeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SoloArenaChallengeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SoloArenaChallengeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SoloArenaChallengeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoloArenaChallengeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SoloArenaChallengeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SoloArenaChallengeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SoloArenaChallengeAck)
  return target;
}

size_t SoloArenaChallengeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SoloArenaChallengeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SoloArenaChallengeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SoloArenaChallengeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SoloArenaChallengeAck::GetClassData() const { return &_class_data_; }


void SoloArenaChallengeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SoloArenaChallengeAck*>(&to_msg);
  auto& from = static_cast<const SoloArenaChallengeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SoloArenaChallengeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SoloArenaChallengeAck::CopyFrom(const SoloArenaChallengeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SoloArenaChallengeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoloArenaChallengeAck::IsInitialized() const {
  return true;
}

void SoloArenaChallengeAck::InternalSwap(SoloArenaChallengeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SoloArenaChallengeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[192]);
}

// ===================================================================

class SoloArenaQuickEndReq::_Internal {
 public:
};

SoloArenaQuickEndReq::SoloArenaQuickEndReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SoloArenaQuickEndReq)
}
SoloArenaQuickEndReq::SoloArenaQuickEndReq(const SoloArenaQuickEndReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SoloArenaQuickEndReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_exit_ = from._impl_.is_exit_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SoloArenaQuickEndReq)
}

inline void SoloArenaQuickEndReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SoloArenaQuickEndReq::~SoloArenaQuickEndReq() {
  // @@protoc_insertion_point(destructor:idlepb.SoloArenaQuickEndReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SoloArenaQuickEndReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SoloArenaQuickEndReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SoloArenaQuickEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SoloArenaQuickEndReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_exit_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoloArenaQuickEndReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_exit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SoloArenaQuickEndReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SoloArenaQuickEndReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_exit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SoloArenaQuickEndReq)
  return target;
}

size_t SoloArenaQuickEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SoloArenaQuickEndReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SoloArenaQuickEndReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SoloArenaQuickEndReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SoloArenaQuickEndReq::GetClassData() const { return &_class_data_; }


void SoloArenaQuickEndReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SoloArenaQuickEndReq*>(&to_msg);
  auto& from = static_cast<const SoloArenaQuickEndReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SoloArenaQuickEndReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_exit() != 0) {
    _this->_internal_set_is_exit(from._internal_is_exit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SoloArenaQuickEndReq::CopyFrom(const SoloArenaQuickEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SoloArenaQuickEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoloArenaQuickEndReq::IsInitialized() const {
  return true;
}

void SoloArenaQuickEndReq::InternalSwap(SoloArenaQuickEndReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_exit_, other->_impl_.is_exit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SoloArenaQuickEndReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[193]);
}

// ===================================================================

class SoloArenaQuickEndAck::_Internal {
 public:
};

SoloArenaQuickEndAck::SoloArenaQuickEndAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.SoloArenaQuickEndAck)
}
SoloArenaQuickEndAck::SoloArenaQuickEndAck(const SoloArenaQuickEndAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SoloArenaQuickEndAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.SoloArenaQuickEndAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SoloArenaQuickEndAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SoloArenaQuickEndAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SoloArenaQuickEndAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[194]);
}

// ===================================================================

class GetSoloArenaHistoryListReq::_Internal {
 public:
};

GetSoloArenaHistoryListReq::GetSoloArenaHistoryListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetSoloArenaHistoryListReq)
}
GetSoloArenaHistoryListReq::GetSoloArenaHistoryListReq(const GetSoloArenaHistoryListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSoloArenaHistoryListReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetSoloArenaHistoryListReq)
}

inline void GetSoloArenaHistoryListReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSoloArenaHistoryListReq::~GetSoloArenaHistoryListReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetSoloArenaHistoryListReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSoloArenaHistoryListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetSoloArenaHistoryListReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSoloArenaHistoryListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetSoloArenaHistoryListReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSoloArenaHistoryListReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.SoloType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::SoloType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSoloArenaHistoryListReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetSoloArenaHistoryListReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.SoloType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetSoloArenaHistoryListReq)
  return target;
}

size_t GetSoloArenaHistoryListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetSoloArenaHistoryListReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.SoloType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSoloArenaHistoryListReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSoloArenaHistoryListReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSoloArenaHistoryListReq::GetClassData() const { return &_class_data_; }


void GetSoloArenaHistoryListReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSoloArenaHistoryListReq*>(&to_msg);
  auto& from = static_cast<const GetSoloArenaHistoryListReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetSoloArenaHistoryListReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSoloArenaHistoryListReq::CopyFrom(const GetSoloArenaHistoryListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetSoloArenaHistoryListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSoloArenaHistoryListReq::IsInitialized() const {
  return true;
}

void GetSoloArenaHistoryListReq::InternalSwap(GetSoloArenaHistoryListReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSoloArenaHistoryListReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[195]);
}

// ===================================================================

class GetSoloArenaHistoryListAck::_Internal {
 public:
  static const ::idlepb::RoleBattleHistoryList& data(const GetSoloArenaHistoryListAck* msg);
};

const ::idlepb::RoleBattleHistoryList&
GetSoloArenaHistoryListAck::_Internal::data(const GetSoloArenaHistoryListAck* msg) {
  return *msg->_impl_.data_;
}
GetSoloArenaHistoryListAck::GetSoloArenaHistoryListAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetSoloArenaHistoryListAck)
}
GetSoloArenaHistoryListAck::GetSoloArenaHistoryListAck(const GetSoloArenaHistoryListAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSoloArenaHistoryListAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleBattleHistoryList(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetSoloArenaHistoryListAck)
}

inline void GetSoloArenaHistoryListAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSoloArenaHistoryListAck::~GetSoloArenaHistoryListAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetSoloArenaHistoryListAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSoloArenaHistoryListAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetSoloArenaHistoryListAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSoloArenaHistoryListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetSoloArenaHistoryListAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSoloArenaHistoryListAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleBattleHistoryList data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSoloArenaHistoryListAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetSoloArenaHistoryListAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleBattleHistoryList data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetSoloArenaHistoryListAck)
  return target;
}

size_t GetSoloArenaHistoryListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetSoloArenaHistoryListAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleBattleHistoryList data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSoloArenaHistoryListAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSoloArenaHistoryListAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSoloArenaHistoryListAck::GetClassData() const { return &_class_data_; }


void GetSoloArenaHistoryListAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSoloArenaHistoryListAck*>(&to_msg);
  auto& from = static_cast<const GetSoloArenaHistoryListAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetSoloArenaHistoryListAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleBattleHistoryList::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSoloArenaHistoryListAck::CopyFrom(const GetSoloArenaHistoryListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetSoloArenaHistoryListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSoloArenaHistoryListAck::IsInitialized() const {
  return true;
}

void GetSoloArenaHistoryListAck::InternalSwap(GetSoloArenaHistoryListAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSoloArenaHistoryListAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[196]);
}

// ===================================================================

class ReplaySoloArenaHistoryReq::_Internal {
 public:
};

ReplaySoloArenaHistoryReq::ReplaySoloArenaHistoryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReplaySoloArenaHistoryReq)
}
ReplaySoloArenaHistoryReq::ReplaySoloArenaHistoryReq(const ReplaySoloArenaHistoryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplaySoloArenaHistoryReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.history_world_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.history_world_id_ = from._impl_.history_world_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReplaySoloArenaHistoryReq)
}

inline void ReplaySoloArenaHistoryReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.history_world_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReplaySoloArenaHistoryReq::~ReplaySoloArenaHistoryReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReplaySoloArenaHistoryReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplaySoloArenaHistoryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReplaySoloArenaHistoryReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplaySoloArenaHistoryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReplaySoloArenaHistoryReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.history_world_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaySoloArenaHistoryReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 history_world_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.history_world_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplaySoloArenaHistoryReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReplaySoloArenaHistoryReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 history_world_id = 1;
  if (this->_internal_history_world_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_history_world_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReplaySoloArenaHistoryReq)
  return target;
}

size_t ReplaySoloArenaHistoryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReplaySoloArenaHistoryReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 history_world_id = 1;
  if (this->_internal_history_world_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_history_world_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplaySoloArenaHistoryReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplaySoloArenaHistoryReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplaySoloArenaHistoryReq::GetClassData() const { return &_class_data_; }


void ReplaySoloArenaHistoryReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplaySoloArenaHistoryReq*>(&to_msg);
  auto& from = static_cast<const ReplaySoloArenaHistoryReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReplaySoloArenaHistoryReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_history_world_id() != 0) {
    _this->_internal_set_history_world_id(from._internal_history_world_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaySoloArenaHistoryReq::CopyFrom(const ReplaySoloArenaHistoryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReplaySoloArenaHistoryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaySoloArenaHistoryReq::IsInitialized() const {
  return true;
}

void ReplaySoloArenaHistoryReq::InternalSwap(ReplaySoloArenaHistoryReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.history_world_id_, other->_impl_.history_world_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaySoloArenaHistoryReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[197]);
}

// ===================================================================

class ReplaySoloArenaHistoryAck::_Internal {
 public:
  static const ::idlepb::CompressedData& data(const ReplaySoloArenaHistoryAck* msg);
};

const ::idlepb::CompressedData&
ReplaySoloArenaHistoryAck::_Internal::data(const ReplaySoloArenaHistoryAck* msg) {
  return *msg->_impl_.data_;
}
void ReplaySoloArenaHistoryAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ReplaySoloArenaHistoryAck::ReplaySoloArenaHistoryAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReplaySoloArenaHistoryAck)
}
ReplaySoloArenaHistoryAck::ReplaySoloArenaHistoryAck(const ReplaySoloArenaHistoryAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplaySoloArenaHistoryAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::CompressedData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReplaySoloArenaHistoryAck)
}

inline void ReplaySoloArenaHistoryAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReplaySoloArenaHistoryAck::~ReplaySoloArenaHistoryAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReplaySoloArenaHistoryAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplaySoloArenaHistoryAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ReplaySoloArenaHistoryAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplaySoloArenaHistoryAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReplaySoloArenaHistoryAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaySoloArenaHistoryAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.CompressedData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplaySoloArenaHistoryAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReplaySoloArenaHistoryAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.CompressedData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReplaySoloArenaHistoryAck)
  return target;
}

size_t ReplaySoloArenaHistoryAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReplaySoloArenaHistoryAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.CompressedData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplaySoloArenaHistoryAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplaySoloArenaHistoryAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplaySoloArenaHistoryAck::GetClassData() const { return &_class_data_; }


void ReplaySoloArenaHistoryAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplaySoloArenaHistoryAck*>(&to_msg);
  auto& from = static_cast<const ReplaySoloArenaHistoryAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReplaySoloArenaHistoryAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::CompressedData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaySoloArenaHistoryAck::CopyFrom(const ReplaySoloArenaHistoryAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReplaySoloArenaHistoryAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaySoloArenaHistoryAck::IsInitialized() const {
  return true;
}

void ReplaySoloArenaHistoryAck::InternalSwap(ReplaySoloArenaHistoryAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplaySoloArenaHistoryAck, _impl_.ok_)
      + sizeof(ReplaySoloArenaHistoryAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ReplaySoloArenaHistoryAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaySoloArenaHistoryAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[198]);
}

// ===================================================================

class GetBattleHistoryInfoReq::_Internal {
 public:
};

GetBattleHistoryInfoReq::GetBattleHistoryInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetBattleHistoryInfoReq)
}
GetBattleHistoryInfoReq::GetBattleHistoryInfoReq(const GetBattleHistoryInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBattleHistoryInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.history_world_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.history_world_id_ = from._impl_.history_world_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetBattleHistoryInfoReq)
}

inline void GetBattleHistoryInfoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.history_world_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBattleHistoryInfoReq::~GetBattleHistoryInfoReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetBattleHistoryInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBattleHistoryInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBattleHistoryInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBattleHistoryInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetBattleHistoryInfoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.history_world_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBattleHistoryInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 history_world_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.history_world_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBattleHistoryInfoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetBattleHistoryInfoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 history_world_id = 1;
  if (this->_internal_history_world_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_history_world_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetBattleHistoryInfoReq)
  return target;
}

size_t GetBattleHistoryInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetBattleHistoryInfoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 history_world_id = 1;
  if (this->_internal_history_world_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_history_world_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBattleHistoryInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBattleHistoryInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBattleHistoryInfoReq::GetClassData() const { return &_class_data_; }


void GetBattleHistoryInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBattleHistoryInfoReq*>(&to_msg);
  auto& from = static_cast<const GetBattleHistoryInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetBattleHistoryInfoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_history_world_id() != 0) {
    _this->_internal_set_history_world_id(from._internal_history_world_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBattleHistoryInfoReq::CopyFrom(const GetBattleHistoryInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetBattleHistoryInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBattleHistoryInfoReq::IsInitialized() const {
  return true;
}

void GetBattleHistoryInfoReq::InternalSwap(GetBattleHistoryInfoReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.history_world_id_, other->_impl_.history_world_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBattleHistoryInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[199]);
}

// ===================================================================

class GetBattleHistoryInfoAck::_Internal {
 public:
  static const ::idlepb::BattleInfo& info(const GetBattleHistoryInfoAck* msg);
};

const ::idlepb::BattleInfo&
GetBattleHistoryInfoAck::_Internal::info(const GetBattleHistoryInfoAck* msg) {
  return *msg->_impl_.info_;
}
void GetBattleHistoryInfoAck::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
GetBattleHistoryInfoAck::GetBattleHistoryInfoAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetBattleHistoryInfoAck)
}
GetBattleHistoryInfoAck::GetBattleHistoryInfoAck(const GetBattleHistoryInfoAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBattleHistoryInfoAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::idlepb::BattleInfo(*from._impl_.info_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetBattleHistoryInfoAck)
}

inline void GetBattleHistoryInfoAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBattleHistoryInfoAck::~GetBattleHistoryInfoAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetBattleHistoryInfoAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBattleHistoryInfoAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void GetBattleHistoryInfoAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBattleHistoryInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetBattleHistoryInfoAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBattleHistoryInfoAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.BattleInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBattleHistoryInfoAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetBattleHistoryInfoAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.BattleInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetBattleHistoryInfoAck)
  return target;
}

size_t GetBattleHistoryInfoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetBattleHistoryInfoAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.BattleInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBattleHistoryInfoAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBattleHistoryInfoAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBattleHistoryInfoAck::GetClassData() const { return &_class_data_; }


void GetBattleHistoryInfoAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBattleHistoryInfoAck*>(&to_msg);
  auto& from = static_cast<const GetBattleHistoryInfoAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetBattleHistoryInfoAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::idlepb::BattleInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBattleHistoryInfoAck::CopyFrom(const GetBattleHistoryInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetBattleHistoryInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBattleHistoryInfoAck::IsInitialized() const {
  return true;
}

void GetBattleHistoryInfoAck::InternalSwap(GetBattleHistoryInfoAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBattleHistoryInfoAck, _impl_.ok_)
      + sizeof(GetBattleHistoryInfoAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(GetBattleHistoryInfoAck, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBattleHistoryInfoAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[200]);
}

// ===================================================================

class NotifyEnterOpenClientWorld::_Internal {
 public:
};

NotifyEnterOpenClientWorld::NotifyEnterOpenClientWorld(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyEnterOpenClientWorld)
}
NotifyEnterOpenClientWorld::NotifyEnterOpenClientWorld(const NotifyEnterOpenClientWorld& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyEnterOpenClientWorld* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.world_cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.world_cfg_id_ = from._impl_.world_cfg_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyEnterOpenClientWorld)
}

inline void NotifyEnterOpenClientWorld::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.world_cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyEnterOpenClientWorld::~NotifyEnterOpenClientWorld() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyEnterOpenClientWorld)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyEnterOpenClientWorld::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyEnterOpenClientWorld::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyEnterOpenClientWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyEnterOpenClientWorld)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.world_cfg_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyEnterOpenClientWorld::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 world_cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.world_cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyEnterOpenClientWorld::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyEnterOpenClientWorld)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 world_cfg_id = 1;
  if (this->_internal_world_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_world_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyEnterOpenClientWorld)
  return target;
}

size_t NotifyEnterOpenClientWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyEnterOpenClientWorld)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 world_cfg_id = 1;
  if (this->_internal_world_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_world_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyEnterOpenClientWorld::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyEnterOpenClientWorld::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyEnterOpenClientWorld::GetClassData() const { return &_class_data_; }


void NotifyEnterOpenClientWorld::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyEnterOpenClientWorld*>(&to_msg);
  auto& from = static_cast<const NotifyEnterOpenClientWorld&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyEnterOpenClientWorld)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_world_cfg_id() != 0) {
    _this->_internal_set_world_cfg_id(from._internal_world_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyEnterOpenClientWorld::CopyFrom(const NotifyEnterOpenClientWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyEnterOpenClientWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyEnterOpenClientWorld::IsInitialized() const {
  return true;
}

void NotifyEnterOpenClientWorld::InternalSwap(NotifyEnterOpenClientWorld* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.world_cfg_id_, other->_impl_.world_cfg_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyEnterOpenClientWorld::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[201]);
}

// ===================================================================

class NotifyMonsterTowerData::_Internal {
 public:
  static const ::idlepb::RoleMonsterTowerData& data(const NotifyMonsterTowerData* msg);
};

const ::idlepb::RoleMonsterTowerData&
NotifyMonsterTowerData::_Internal::data(const NotifyMonsterTowerData* msg) {
  return *msg->_impl_.data_;
}
void NotifyMonsterTowerData::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
NotifyMonsterTowerData::NotifyMonsterTowerData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyMonsterTowerData)
}
NotifyMonsterTowerData::NotifyMonsterTowerData(const NotifyMonsterTowerData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyMonsterTowerData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleMonsterTowerData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyMonsterTowerData)
}

inline void NotifyMonsterTowerData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyMonsterTowerData::~NotifyMonsterTowerData() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyMonsterTowerData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyMonsterTowerData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void NotifyMonsterTowerData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyMonsterTowerData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyMonsterTowerData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyMonsterTowerData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleMonsterTowerData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyMonsterTowerData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyMonsterTowerData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleMonsterTowerData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyMonsterTowerData)
  return target;
}

size_t NotifyMonsterTowerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyMonsterTowerData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleMonsterTowerData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyMonsterTowerData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyMonsterTowerData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyMonsterTowerData::GetClassData() const { return &_class_data_; }


void NotifyMonsterTowerData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyMonsterTowerData*>(&to_msg);
  auto& from = static_cast<const NotifyMonsterTowerData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyMonsterTowerData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleMonsterTowerData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyMonsterTowerData::CopyFrom(const NotifyMonsterTowerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyMonsterTowerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyMonsterTowerData::IsInitialized() const {
  return true;
}

void NotifyMonsterTowerData::InternalSwap(NotifyMonsterTowerData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyMonsterTowerData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[202]);
}

// ===================================================================

class NotifyMonsterTowerChallengeOver::_Internal {
 public:
};

NotifyMonsterTowerChallengeOver::NotifyMonsterTowerChallengeOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyMonsterTowerChallengeOver)
}
NotifyMonsterTowerChallengeOver::NotifyMonsterTowerChallengeOver(const NotifyMonsterTowerChallengeOver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyMonsterTowerChallengeOver* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.floor_){}
    , decltype(_impl_.win_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.floor_, &from._impl_.floor_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.win_) -
    reinterpret_cast<char*>(&_impl_.floor_)) + sizeof(_impl_.win_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyMonsterTowerChallengeOver)
}

inline void NotifyMonsterTowerChallengeOver::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.floor_){0}
    , decltype(_impl_.win_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyMonsterTowerChallengeOver::~NotifyMonsterTowerChallengeOver() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyMonsterTowerChallengeOver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyMonsterTowerChallengeOver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyMonsterTowerChallengeOver::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyMonsterTowerChallengeOver::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyMonsterTowerChallengeOver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.floor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.win_) -
      reinterpret_cast<char*>(&_impl_.floor_)) + sizeof(_impl_.win_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyMonsterTowerChallengeOver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 floor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.floor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool win = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyMonsterTowerChallengeOver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyMonsterTowerChallengeOver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 floor = 1;
  if (this->_internal_floor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_floor(), target);
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_win(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyMonsterTowerChallengeOver)
  return target;
}

size_t NotifyMonsterTowerChallengeOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyMonsterTowerChallengeOver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 floor = 1;
  if (this->_internal_floor() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_floor());
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyMonsterTowerChallengeOver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyMonsterTowerChallengeOver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyMonsterTowerChallengeOver::GetClassData() const { return &_class_data_; }


void NotifyMonsterTowerChallengeOver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyMonsterTowerChallengeOver*>(&to_msg);
  auto& from = static_cast<const NotifyMonsterTowerChallengeOver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyMonsterTowerChallengeOver)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_floor() != 0) {
    _this->_internal_set_floor(from._internal_floor());
  }
  if (from._internal_win() != 0) {
    _this->_internal_set_win(from._internal_win());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyMonsterTowerChallengeOver::CopyFrom(const NotifyMonsterTowerChallengeOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyMonsterTowerChallengeOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyMonsterTowerChallengeOver::IsInitialized() const {
  return true;
}

void NotifyMonsterTowerChallengeOver::InternalSwap(NotifyMonsterTowerChallengeOver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyMonsterTowerChallengeOver, _impl_.win_)
      + sizeof(NotifyMonsterTowerChallengeOver::_impl_.win_)
      - PROTOBUF_FIELD_OFFSET(NotifyMonsterTowerChallengeOver, _impl_.floor_)>(
          reinterpret_cast<char*>(&_impl_.floor_),
          reinterpret_cast<char*>(&other->_impl_.floor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyMonsterTowerChallengeOver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[203]);
}

// ===================================================================

class MonsterTowerChallengeReq::_Internal {
 public:
};

MonsterTowerChallengeReq::MonsterTowerChallengeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerChallengeReq)
}
MonsterTowerChallengeReq::MonsterTowerChallengeReq(const MonsterTowerChallengeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerChallengeReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerChallengeReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerChallengeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerChallengeReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerChallengeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[204]);
}

// ===================================================================

class MonsterTowerChallengeAck::_Internal {
 public:
};

MonsterTowerChallengeAck::MonsterTowerChallengeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerChallengeAck)
}
MonsterTowerChallengeAck::MonsterTowerChallengeAck(const MonsterTowerChallengeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerChallengeAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerChallengeAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerChallengeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerChallengeAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerChallengeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[205]);
}

// ===================================================================

class MonsterTowerDrawIdleAwardReq::_Internal {
 public:
};

MonsterTowerDrawIdleAwardReq::MonsterTowerDrawIdleAwardReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerDrawIdleAwardReq)
}
MonsterTowerDrawIdleAwardReq::MonsterTowerDrawIdleAwardReq(const MonsterTowerDrawIdleAwardReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerDrawIdleAwardReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerDrawIdleAwardReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerDrawIdleAwardReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerDrawIdleAwardReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerDrawIdleAwardReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[206]);
}

// ===================================================================

class MonsterTowerDrawIdleAwardAck::_Internal {
 public:
};

MonsterTowerDrawIdleAwardAck::MonsterTowerDrawIdleAwardAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerDrawIdleAwardAck)
}
MonsterTowerDrawIdleAwardAck::MonsterTowerDrawIdleAwardAck(const MonsterTowerDrawIdleAwardAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerDrawIdleAwardAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerDrawIdleAwardAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerDrawIdleAwardAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerDrawIdleAwardAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerDrawIdleAwardAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[207]);
}

// ===================================================================

class MonsterTowerClosedDoorTrainingReq::_Internal {
 public:
};

MonsterTowerClosedDoorTrainingReq::MonsterTowerClosedDoorTrainingReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerClosedDoorTrainingReq)
}
MonsterTowerClosedDoorTrainingReq::MonsterTowerClosedDoorTrainingReq(const MonsterTowerClosedDoorTrainingReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerClosedDoorTrainingReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerClosedDoorTrainingReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerClosedDoorTrainingReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerClosedDoorTrainingReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerClosedDoorTrainingReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[208]);
}

// ===================================================================

class MonsterTowerClosedDoorTrainingAck::_Internal {
 public:
};

MonsterTowerClosedDoorTrainingAck::MonsterTowerClosedDoorTrainingAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerClosedDoorTrainingAck)
}
MonsterTowerClosedDoorTrainingAck::MonsterTowerClosedDoorTrainingAck(const MonsterTowerClosedDoorTrainingAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerClosedDoorTrainingAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerClosedDoorTrainingAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerClosedDoorTrainingAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerClosedDoorTrainingAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerClosedDoorTrainingAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[209]);
}

// ===================================================================

class MonsterTowerQuickEndReq::_Internal {
 public:
};

MonsterTowerQuickEndReq::MonsterTowerQuickEndReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerQuickEndReq)
}
MonsterTowerQuickEndReq::MonsterTowerQuickEndReq(const MonsterTowerQuickEndReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MonsterTowerQuickEndReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_exit_ = from._impl_.is_exit_;
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerQuickEndReq)
}

inline void MonsterTowerQuickEndReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MonsterTowerQuickEndReq::~MonsterTowerQuickEndReq() {
  // @@protoc_insertion_point(destructor:idlepb.MonsterTowerQuickEndReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MonsterTowerQuickEndReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MonsterTowerQuickEndReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MonsterTowerQuickEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.MonsterTowerQuickEndReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_exit_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MonsterTowerQuickEndReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_exit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MonsterTowerQuickEndReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.MonsterTowerQuickEndReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_exit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.MonsterTowerQuickEndReq)
  return target;
}

size_t MonsterTowerQuickEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.MonsterTowerQuickEndReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerQuickEndReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MonsterTowerQuickEndReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerQuickEndReq::GetClassData() const { return &_class_data_; }


void MonsterTowerQuickEndReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MonsterTowerQuickEndReq*>(&to_msg);
  auto& from = static_cast<const MonsterTowerQuickEndReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.MonsterTowerQuickEndReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_exit() != 0) {
    _this->_internal_set_is_exit(from._internal_is_exit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MonsterTowerQuickEndReq::CopyFrom(const MonsterTowerQuickEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.MonsterTowerQuickEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterTowerQuickEndReq::IsInitialized() const {
  return true;
}

void MonsterTowerQuickEndReq::InternalSwap(MonsterTowerQuickEndReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_exit_, other->_impl_.is_exit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerQuickEndReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[210]);
}

// ===================================================================

class MonsterTowerQuickEndAck::_Internal {
 public:
};

MonsterTowerQuickEndAck::MonsterTowerQuickEndAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.MonsterTowerQuickEndAck)
}
MonsterTowerQuickEndAck::MonsterTowerQuickEndAck(const MonsterTowerQuickEndAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MonsterTowerQuickEndAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.MonsterTowerQuickEndAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MonsterTowerQuickEndAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MonsterTowerQuickEndAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MonsterTowerQuickEndAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[211]);
}

// ===================================================================

class NotifyFightModeData::_Internal {
 public:
  static const ::idlepb::RoleFightModeData& data(const NotifyFightModeData* msg);
};

const ::idlepb::RoleFightModeData&
NotifyFightModeData::_Internal::data(const NotifyFightModeData* msg) {
  return *msg->_impl_.data_;
}
void NotifyFightModeData::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
NotifyFightModeData::NotifyFightModeData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyFightModeData)
}
NotifyFightModeData::NotifyFightModeData(const NotifyFightModeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyFightModeData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleFightModeData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyFightModeData)
}

inline void NotifyFightModeData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyFightModeData::~NotifyFightModeData() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyFightModeData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyFightModeData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void NotifyFightModeData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyFightModeData::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyFightModeData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyFightModeData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleFightModeData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyFightModeData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyFightModeData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleFightModeData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyFightModeData)
  return target;
}

size_t NotifyFightModeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyFightModeData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleFightModeData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyFightModeData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyFightModeData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyFightModeData::GetClassData() const { return &_class_data_; }


void NotifyFightModeData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyFightModeData*>(&to_msg);
  auto& from = static_cast<const NotifyFightModeData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyFightModeData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleFightModeData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyFightModeData::CopyFrom(const NotifyFightModeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyFightModeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyFightModeData::IsInitialized() const {
  return true;
}

void NotifyFightModeData::InternalSwap(NotifyFightModeData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyFightModeData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[212]);
}

// ===================================================================

class SetFightModeReq::_Internal {
 public:
};

SetFightModeReq::SetFightModeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetFightModeReq)
}
SetFightModeReq::SetFightModeReq(const SetFightModeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetFightModeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.mode_ = from._impl_.mode_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetFightModeReq)
}

inline void SetFightModeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetFightModeReq::~SetFightModeReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetFightModeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetFightModeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetFightModeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetFightModeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetFightModeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetFightModeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.FightMode mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::idlepb::FightMode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetFightModeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetFightModeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.FightMode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetFightModeReq)
  return target;
}

size_t SetFightModeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetFightModeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.FightMode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetFightModeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetFightModeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetFightModeReq::GetClassData() const { return &_class_data_; }


void SetFightModeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetFightModeReq*>(&to_msg);
  auto& from = static_cast<const SetFightModeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetFightModeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetFightModeReq::CopyFrom(const SetFightModeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetFightModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFightModeReq::IsInitialized() const {
  return true;
}

void SetFightModeReq::InternalSwap(SetFightModeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetFightModeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[213]);
}

// ===================================================================

class SetFightModeAck::_Internal {
 public:
};

SetFightModeAck::SetFightModeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetFightModeAck)
}
SetFightModeAck::SetFightModeAck(const SetFightModeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetFightModeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , decltype(_impl_.error_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.ok_, &from._impl_.ok_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_code_) -
    reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.error_code_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SetFightModeAck)
}

inline void SetFightModeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , decltype(_impl_.error_code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetFightModeAck::~SetFightModeAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetFightModeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetFightModeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetFightModeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetFightModeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetFightModeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ok_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_code_) -
      reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.error_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetFightModeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.SetFightModeAckErrorCode error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::idlepb::SetFightModeAckErrorCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetFightModeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetFightModeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.SetFightModeAckErrorCode error_code = 2;
  if (this->_internal_error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_error_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetFightModeAck)
  return target;
}

size_t SetFightModeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetFightModeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  // .idlepb.SetFightModeAckErrorCode error_code = 2;
  if (this->_internal_error_code() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetFightModeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetFightModeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetFightModeAck::GetClassData() const { return &_class_data_; }


void SetFightModeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetFightModeAck*>(&to_msg);
  auto& from = static_cast<const SetFightModeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetFightModeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  if (from._internal_error_code() != 0) {
    _this->_internal_set_error_code(from._internal_error_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetFightModeAck::CopyFrom(const SetFightModeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetFightModeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFightModeAck::IsInitialized() const {
  return true;
}

void SetFightModeAck::InternalSwap(SetFightModeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetFightModeAck, _impl_.error_code_)
      + sizeof(SetFightModeAck::_impl_.error_code_)
      - PROTOBUF_FIELD_OFFSET(SetFightModeAck, _impl_.ok_)>(
          reinterpret_cast<char*>(&_impl_.ok_),
          reinterpret_cast<char*>(&other->_impl_.ok_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetFightModeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[214]);
}

// ===================================================================

class NotifyInventorySpaceNum::_Internal {
 public:
};

NotifyInventorySpaceNum::NotifyInventorySpaceNum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyInventorySpaceNum)
}
NotifyInventorySpaceNum::NotifyInventorySpaceNum(const NotifyInventorySpaceNum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyInventorySpaceNum* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.num_ = from._impl_.num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyInventorySpaceNum)
}

inline void NotifyInventorySpaceNum::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyInventorySpaceNum::~NotifyInventorySpaceNum() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyInventorySpaceNum)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyInventorySpaceNum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyInventorySpaceNum::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyInventorySpaceNum::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyInventorySpaceNum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyInventorySpaceNum::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyInventorySpaceNum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyInventorySpaceNum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyInventorySpaceNum)
  return target;
}

size_t NotifyInventorySpaceNum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyInventorySpaceNum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyInventorySpaceNum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyInventorySpaceNum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyInventorySpaceNum::GetClassData() const { return &_class_data_; }


void NotifyInventorySpaceNum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyInventorySpaceNum*>(&to_msg);
  auto& from = static_cast<const NotifyInventorySpaceNum&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyInventorySpaceNum)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyInventorySpaceNum::CopyFrom(const NotifyInventorySpaceNum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyInventorySpaceNum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyInventorySpaceNum::IsInitialized() const {
  return true;
}

void NotifyInventorySpaceNum::InternalSwap(NotifyInventorySpaceNum* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.num_, other->_impl_.num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyInventorySpaceNum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[215]);
}

// ===================================================================

class NotifyInventoryFullMailItem::_Internal {
 public:
};

NotifyInventoryFullMailItem::NotifyInventoryFullMailItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyInventoryFullMailItem)
}
NotifyInventoryFullMailItem::NotifyInventoryFullMailItem(const NotifyInventoryFullMailItem& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NotifyInventoryFullMailItem* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyInventoryFullMailItem)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyInventoryFullMailItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyInventoryFullMailItem::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyInventoryFullMailItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[216]);
}

// ===================================================================

class NotifyQiCollectorRank::_Internal {
 public:
};

NotifyQiCollectorRank::NotifyQiCollectorRank(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyQiCollectorRank)
}
NotifyQiCollectorRank::NotifyQiCollectorRank(const NotifyQiCollectorRank& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyQiCollectorRank* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rank_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.rank_ = from._impl_.rank_;
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyQiCollectorRank)
}

inline void NotifyQiCollectorRank::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rank_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyQiCollectorRank::~NotifyQiCollectorRank() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyQiCollectorRank)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyQiCollectorRank::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyQiCollectorRank::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyQiCollectorRank::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyQiCollectorRank)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rank_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyQiCollectorRank::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyQiCollectorRank::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyQiCollectorRank)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->_internal_rank() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_rank(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyQiCollectorRank)
  return target;
}

size_t NotifyQiCollectorRank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyQiCollectorRank)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->_internal_rank() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_rank());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyQiCollectorRank::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyQiCollectorRank::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyQiCollectorRank::GetClassData() const { return &_class_data_; }


void NotifyQiCollectorRank::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyQiCollectorRank*>(&to_msg);
  auto& from = static_cast<const NotifyQiCollectorRank&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyQiCollectorRank)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rank() != 0) {
    _this->_internal_set_rank(from._internal_rank());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyQiCollectorRank::CopyFrom(const NotifyQiCollectorRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyQiCollectorRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyQiCollectorRank::IsInitialized() const {
  return true;
}

void NotifyQiCollectorRank::InternalSwap(NotifyQiCollectorRank* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.rank_, other->_impl_.rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyQiCollectorRank::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[217]);
}

// ===================================================================

class UpgradeQiCollectorReq::_Internal {
 public:
};

UpgradeQiCollectorReq::UpgradeQiCollectorReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.UpgradeQiCollectorReq)
}
UpgradeQiCollectorReq::UpgradeQiCollectorReq(const UpgradeQiCollectorReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpgradeQiCollectorReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.UpgradeQiCollectorReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpgradeQiCollectorReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpgradeQiCollectorReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpgradeQiCollectorReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[218]);
}

// ===================================================================

class UpgradeQiCollectorAck::_Internal {
 public:
};

UpgradeQiCollectorAck::UpgradeQiCollectorAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpgradeQiCollectorAck)
}
UpgradeQiCollectorAck::UpgradeQiCollectorAck(const UpgradeQiCollectorAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpgradeQiCollectorAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UpgradeQiCollectorAck)
}

inline void UpgradeQiCollectorAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpgradeQiCollectorAck::~UpgradeQiCollectorAck() {
  // @@protoc_insertion_point(destructor:idlepb.UpgradeQiCollectorAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpgradeQiCollectorAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpgradeQiCollectorAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpgradeQiCollectorAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpgradeQiCollectorAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeQiCollectorAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpgradeQiCollectorAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpgradeQiCollectorAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpgradeQiCollectorAck)
  return target;
}

size_t UpgradeQiCollectorAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpgradeQiCollectorAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpgradeQiCollectorAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpgradeQiCollectorAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpgradeQiCollectorAck::GetClassData() const { return &_class_data_; }


void UpgradeQiCollectorAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpgradeQiCollectorAck*>(&to_msg);
  auto& from = static_cast<const UpgradeQiCollectorAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpgradeQiCollectorAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpgradeQiCollectorAck::CopyFrom(const UpgradeQiCollectorAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpgradeQiCollectorAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeQiCollectorAck::IsInitialized() const {
  return true;
}

void UpgradeQiCollectorAck::InternalSwap(UpgradeQiCollectorAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeQiCollectorAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[219]);
}

// ===================================================================

class GetRoleAllStatsReq::_Internal {
 public:
};

GetRoleAllStatsReq::GetRoleAllStatsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleAllStatsReq)
}
GetRoleAllStatsReq::GetRoleAllStatsReq(const GetRoleAllStatsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleAllStatsReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleAllStatsReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleAllStatsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleAllStatsReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleAllStatsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[220]);
}

// ===================================================================

class GetRoleAllStatsAck::_Internal {
 public:
  static const ::idlepb::GameStatsAllModuleData& all_stats_data(const GetRoleAllStatsAck* msg);
};

const ::idlepb::GameStatsAllModuleData&
GetRoleAllStatsAck::_Internal::all_stats_data(const GetRoleAllStatsAck* msg) {
  return *msg->_impl_.all_stats_data_;
}
void GetRoleAllStatsAck::clear_all_stats_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.all_stats_data_ != nullptr) {
    delete _impl_.all_stats_data_;
  }
  _impl_.all_stats_data_ = nullptr;
}
GetRoleAllStatsAck::GetRoleAllStatsAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleAllStatsAck)
}
GetRoleAllStatsAck::GetRoleAllStatsAck(const GetRoleAllStatsAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleAllStatsAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stats_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_all_stats_data()) {
    _this->_impl_.all_stats_data_ = new ::idlepb::GameStatsAllModuleData(*from._impl_.all_stats_data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleAllStatsAck)
}

inline void GetRoleAllStatsAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.all_stats_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleAllStatsAck::~GetRoleAllStatsAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleAllStatsAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleAllStatsAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.all_stats_data_;
}

void GetRoleAllStatsAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleAllStatsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleAllStatsAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.all_stats_data_ != nullptr) {
    delete _impl_.all_stats_data_;
  }
  _impl_.all_stats_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleAllStatsAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.GameStatsAllModuleData all_stats_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_stats_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleAllStatsAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleAllStatsAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.GameStatsAllModuleData all_stats_data = 1;
  if (this->_internal_has_all_stats_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::all_stats_data(this),
        _Internal::all_stats_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleAllStatsAck)
  return target;
}

size_t GetRoleAllStatsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleAllStatsAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.GameStatsAllModuleData all_stats_data = 1;
  if (this->_internal_has_all_stats_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.all_stats_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleAllStatsAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleAllStatsAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleAllStatsAck::GetClassData() const { return &_class_data_; }


void GetRoleAllStatsAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleAllStatsAck*>(&to_msg);
  auto& from = static_cast<const GetRoleAllStatsAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleAllStatsAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_all_stats_data()) {
    _this->_internal_mutable_all_stats_data()->::idlepb::GameStatsAllModuleData::MergeFrom(
        from._internal_all_stats_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleAllStatsAck::CopyFrom(const GetRoleAllStatsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleAllStatsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleAllStatsAck::IsInitialized() const {
  return true;
}

void GetRoleAllStatsAck::InternalSwap(GetRoleAllStatsAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.all_stats_data_, other->_impl_.all_stats_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleAllStatsAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[221]);
}

// ===================================================================

class GetShanhetuDataReq::_Internal {
 public:
};

GetShanhetuDataReq::GetShanhetuDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShanhetuDataReq)
}
GetShanhetuDataReq::GetShanhetuDataReq(const GetShanhetuDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetShanhetuDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShanhetuDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShanhetuDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShanhetuDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetShanhetuDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[222]);
}

// ===================================================================

class GetShanhetuDataAck::_Internal {
 public:
  static const ::idlepb::RoleShanhetuData& data(const GetShanhetuDataAck* msg);
};

const ::idlepb::RoleShanhetuData&
GetShanhetuDataAck::_Internal::data(const GetShanhetuDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetShanhetuDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetShanhetuDataAck::GetShanhetuDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShanhetuDataAck)
}
GetShanhetuDataAck::GetShanhetuDataAck(const GetShanhetuDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShanhetuDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleShanhetuData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShanhetuDataAck)
}

inline void GetShanhetuDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShanhetuDataAck::~GetShanhetuDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetShanhetuDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShanhetuDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetShanhetuDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShanhetuDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShanhetuDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShanhetuDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleShanhetuData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShanhetuDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShanhetuDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleShanhetuData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShanhetuDataAck)
  return target;
}

size_t GetShanhetuDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShanhetuDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleShanhetuData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShanhetuDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShanhetuDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShanhetuDataAck::GetClassData() const { return &_class_data_; }


void GetShanhetuDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShanhetuDataAck*>(&to_msg);
  auto& from = static_cast<const GetShanhetuDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShanhetuDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleShanhetuData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShanhetuDataAck::CopyFrom(const GetShanhetuDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShanhetuDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShanhetuDataAck::IsInitialized() const {
  return true;
}

void GetShanhetuDataAck::InternalSwap(GetShanhetuDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShanhetuDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[223]);
}

// ===================================================================

class SetShanhetuUseConfigReq::_Internal {
 public:
};

SetShanhetuUseConfigReq::SetShanhetuUseConfigReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetShanhetuUseConfigReq)
}
SetShanhetuUseConfigReq::SetShanhetuUseConfigReq(const SetShanhetuUseConfigReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetShanhetuUseConfigReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.auto_skip_green_){}
    , decltype(_impl_.auto_skip_blue_){}
    , decltype(_impl_.auto_skip_perpo_){}
    , decltype(_impl_.auto_skip_gold_){}
    , decltype(_impl_.auto_skip_red_){}
    , decltype(_impl_.auto_select_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.auto_skip_green_, &from._impl_.auto_skip_green_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.auto_select_) -
    reinterpret_cast<char*>(&_impl_.auto_skip_green_)) + sizeof(_impl_.auto_select_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SetShanhetuUseConfigReq)
}

inline void SetShanhetuUseConfigReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.auto_skip_green_){false}
    , decltype(_impl_.auto_skip_blue_){false}
    , decltype(_impl_.auto_skip_perpo_){false}
    , decltype(_impl_.auto_skip_gold_){false}
    , decltype(_impl_.auto_skip_red_){false}
    , decltype(_impl_.auto_select_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetShanhetuUseConfigReq::~SetShanhetuUseConfigReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetShanhetuUseConfigReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetShanhetuUseConfigReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetShanhetuUseConfigReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetShanhetuUseConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetShanhetuUseConfigReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.auto_skip_green_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.auto_select_) -
      reinterpret_cast<char*>(&_impl_.auto_skip_green_)) + sizeof(_impl_.auto_select_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetShanhetuUseConfigReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool auto_skip_green = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.auto_skip_green_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_skip_blue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.auto_skip_blue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_skip_perpo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.auto_skip_perpo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_skip_gold = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.auto_skip_gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_skip_red = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.auto_skip_red_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 auto_select = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.auto_select_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetShanhetuUseConfigReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetShanhetuUseConfigReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool auto_skip_green = 1;
  if (this->_internal_auto_skip_green() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_auto_skip_green(), target);
  }

  // bool auto_skip_blue = 2;
  if (this->_internal_auto_skip_blue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_auto_skip_blue(), target);
  }

  // bool auto_skip_perpo = 3;
  if (this->_internal_auto_skip_perpo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_auto_skip_perpo(), target);
  }

  // bool auto_skip_gold = 4;
  if (this->_internal_auto_skip_gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_auto_skip_gold(), target);
  }

  // bool auto_skip_red = 5;
  if (this->_internal_auto_skip_red() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_auto_skip_red(), target);
  }

  // int32 auto_select = 6;
  if (this->_internal_auto_select() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_auto_select(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetShanhetuUseConfigReq)
  return target;
}

size_t SetShanhetuUseConfigReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetShanhetuUseConfigReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool auto_skip_green = 1;
  if (this->_internal_auto_skip_green() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_skip_blue = 2;
  if (this->_internal_auto_skip_blue() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_skip_perpo = 3;
  if (this->_internal_auto_skip_perpo() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_skip_gold = 4;
  if (this->_internal_auto_skip_gold() != 0) {
    total_size += 1 + 1;
  }

  // bool auto_skip_red = 5;
  if (this->_internal_auto_skip_red() != 0) {
    total_size += 1 + 1;
  }

  // int32 auto_select = 6;
  if (this->_internal_auto_select() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_auto_select());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetShanhetuUseConfigReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetShanhetuUseConfigReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetShanhetuUseConfigReq::GetClassData() const { return &_class_data_; }


void SetShanhetuUseConfigReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetShanhetuUseConfigReq*>(&to_msg);
  auto& from = static_cast<const SetShanhetuUseConfigReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetShanhetuUseConfigReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_auto_skip_green() != 0) {
    _this->_internal_set_auto_skip_green(from._internal_auto_skip_green());
  }
  if (from._internal_auto_skip_blue() != 0) {
    _this->_internal_set_auto_skip_blue(from._internal_auto_skip_blue());
  }
  if (from._internal_auto_skip_perpo() != 0) {
    _this->_internal_set_auto_skip_perpo(from._internal_auto_skip_perpo());
  }
  if (from._internal_auto_skip_gold() != 0) {
    _this->_internal_set_auto_skip_gold(from._internal_auto_skip_gold());
  }
  if (from._internal_auto_skip_red() != 0) {
    _this->_internal_set_auto_skip_red(from._internal_auto_skip_red());
  }
  if (from._internal_auto_select() != 0) {
    _this->_internal_set_auto_select(from._internal_auto_select());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetShanhetuUseConfigReq::CopyFrom(const SetShanhetuUseConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetShanhetuUseConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShanhetuUseConfigReq::IsInitialized() const {
  return true;
}

void SetShanhetuUseConfigReq::InternalSwap(SetShanhetuUseConfigReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetShanhetuUseConfigReq, _impl_.auto_select_)
      + sizeof(SetShanhetuUseConfigReq::_impl_.auto_select_)
      - PROTOBUF_FIELD_OFFSET(SetShanhetuUseConfigReq, _impl_.auto_skip_green_)>(
          reinterpret_cast<char*>(&_impl_.auto_skip_green_),
          reinterpret_cast<char*>(&other->_impl_.auto_skip_green_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetShanhetuUseConfigReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[224]);
}

// ===================================================================

class SetShanhetuUseConfigAck::_Internal {
 public:
};

SetShanhetuUseConfigAck::SetShanhetuUseConfigAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetShanhetuUseConfigAck)
}
SetShanhetuUseConfigAck::SetShanhetuUseConfigAck(const SetShanhetuUseConfigAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetShanhetuUseConfigAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetShanhetuUseConfigAck)
}

inline void SetShanhetuUseConfigAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetShanhetuUseConfigAck::~SetShanhetuUseConfigAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetShanhetuUseConfigAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetShanhetuUseConfigAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetShanhetuUseConfigAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetShanhetuUseConfigAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetShanhetuUseConfigAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetShanhetuUseConfigAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetShanhetuUseConfigAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetShanhetuUseConfigAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetShanhetuUseConfigAck)
  return target;
}

size_t SetShanhetuUseConfigAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetShanhetuUseConfigAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetShanhetuUseConfigAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetShanhetuUseConfigAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetShanhetuUseConfigAck::GetClassData() const { return &_class_data_; }


void SetShanhetuUseConfigAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetShanhetuUseConfigAck*>(&to_msg);
  auto& from = static_cast<const SetShanhetuUseConfigAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetShanhetuUseConfigAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetShanhetuUseConfigAck::CopyFrom(const SetShanhetuUseConfigAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetShanhetuUseConfigAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShanhetuUseConfigAck::IsInitialized() const {
  return true;
}

void SetShanhetuUseConfigAck::InternalSwap(SetShanhetuUseConfigAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetShanhetuUseConfigAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[225]);
}

// ===================================================================

class UseShanhetuReq::_Internal {
 public:
};

UseShanhetuReq::UseShanhetuReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseShanhetuReq)
}
UseShanhetuReq::UseShanhetuReq(const UseShanhetuReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseShanhetuReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.skip_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.UseShanhetuReq)
}

inline void UseShanhetuReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , decltype(_impl_.skip_){false}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseShanhetuReq::~UseShanhetuReq() {
  // @@protoc_insertion_point(destructor:idlepb.UseShanhetuReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseShanhetuReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UseShanhetuReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseShanhetuReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseShanhetuReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseShanhetuReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool skip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.skip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseShanhetuReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseShanhetuReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  // bool skip = 2;
  if (this->_internal_skip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_skip(), target);
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseShanhetuReq)
  return target;
}

size_t UseShanhetuReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseShanhetuReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  // bool skip = 2;
  if (this->_internal_skip() != 0) {
    total_size += 1 + 1;
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseShanhetuReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseShanhetuReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseShanhetuReq::GetClassData() const { return &_class_data_; }


void UseShanhetuReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseShanhetuReq*>(&to_msg);
  auto& from = static_cast<const UseShanhetuReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseShanhetuReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_skip() != 0) {
    _this->_internal_set_skip(from._internal_skip());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseShanhetuReq::CopyFrom(const UseShanhetuReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseShanhetuReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseShanhetuReq::IsInitialized() const {
  return true;
}

void UseShanhetuReq::InternalSwap(UseShanhetuReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UseShanhetuReq, _impl_.num_)
      + sizeof(UseShanhetuReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(UseShanhetuReq, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UseShanhetuReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[226]);
}

// ===================================================================

class UseShanhetuAck::_Internal {
 public:
  static const ::idlepb::ShanhetuMap& map(const UseShanhetuAck* msg);
};

const ::idlepb::ShanhetuMap&
UseShanhetuAck::_Internal::map(const UseShanhetuAck* msg) {
  return *msg->_impl_.map_;
}
void UseShanhetuAck::clear_items() {
  _impl_.items_.Clear();
}
void UseShanhetuAck::clear_map() {
  if (GetArenaForAllocation() == nullptr && _impl_.map_ != nullptr) {
    delete _impl_.map_;
  }
  _impl_.map_ = nullptr;
}
UseShanhetuAck::UseShanhetuAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UseShanhetuAck)
}
UseShanhetuAck::UseShanhetuAck(const UseShanhetuAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UseShanhetuAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.map_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_map()) {
    _this->_impl_.map_ = new ::idlepb::ShanhetuMap(*from._impl_.map_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UseShanhetuAck)
}

inline void UseShanhetuAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.map_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UseShanhetuAck::~UseShanhetuAck() {
  // @@protoc_insertion_point(destructor:idlepb.UseShanhetuAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UseShanhetuAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.map_;
}

void UseShanhetuAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UseShanhetuAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UseShanhetuAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.map_ != nullptr) {
    delete _impl_.map_;
  }
  _impl_.map_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseShanhetuAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ShanhetuMap map = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_map(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UseShanhetuAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UseShanhetuAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.SimpleItemData items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .idlepb.ShanhetuMap map = 3;
  if (this->_internal_has_map()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::map(this),
        _Internal::map(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UseShanhetuAck)
  return target;
}

size_t UseShanhetuAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UseShanhetuAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.ShanhetuMap map = 3;
  if (this->_internal_has_map()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.map_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UseShanhetuAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UseShanhetuAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UseShanhetuAck::GetClassData() const { return &_class_data_; }


void UseShanhetuAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UseShanhetuAck*>(&to_msg);
  auto& from = static_cast<const UseShanhetuAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UseShanhetuAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_has_map()) {
    _this->_internal_mutable_map()->::idlepb::ShanhetuMap::MergeFrom(
        from._internal_map());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UseShanhetuAck::CopyFrom(const UseShanhetuAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UseShanhetuAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseShanhetuAck::IsInitialized() const {
  return true;
}

void UseShanhetuAck::InternalSwap(UseShanhetuAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UseShanhetuAck, _impl_.ok_)
      + sizeof(UseShanhetuAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(UseShanhetuAck, _impl_.map_)>(
          reinterpret_cast<char*>(&_impl_.map_),
          reinterpret_cast<char*>(&other->_impl_.map_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UseShanhetuAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[227]);
}

// ===================================================================

class StepShanhetuReq::_Internal {
 public:
};

StepShanhetuReq::StepShanhetuReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.StepShanhetuReq)
}
StepShanhetuReq::StepShanhetuReq(const StepShanhetuReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StepShanhetuReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.choose_event_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.choose_event_ = from._impl_.choose_event_;
  // @@protoc_insertion_point(copy_constructor:idlepb.StepShanhetuReq)
}

inline void StepShanhetuReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.choose_event_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StepShanhetuReq::~StepShanhetuReq() {
  // @@protoc_insertion_point(destructor:idlepb.StepShanhetuReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StepShanhetuReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StepShanhetuReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StepShanhetuReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.StepShanhetuReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choose_event_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StepShanhetuReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 choose_event = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.choose_event_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StepShanhetuReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.StepShanhetuReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 choose_event = 1;
  if (this->_internal_choose_event() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_choose_event(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.StepShanhetuReq)
  return target;
}

size_t StepShanhetuReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.StepShanhetuReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 choose_event = 1;
  if (this->_internal_choose_event() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_choose_event());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StepShanhetuReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StepShanhetuReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StepShanhetuReq::GetClassData() const { return &_class_data_; }


void StepShanhetuReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StepShanhetuReq*>(&to_msg);
  auto& from = static_cast<const StepShanhetuReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.StepShanhetuReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_choose_event() != 0) {
    _this->_internal_set_choose_event(from._internal_choose_event());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StepShanhetuReq::CopyFrom(const StepShanhetuReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.StepShanhetuReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepShanhetuReq::IsInitialized() const {
  return true;
}

void StepShanhetuReq::InternalSwap(StepShanhetuReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.choose_event_, other->_impl_.choose_event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StepShanhetuReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[228]);
}

// ===================================================================

class StepShanhetuAck::_Internal {
 public:
  static const ::idlepb::ShanhetuRecord& record(const StepShanhetuAck* msg);
};

const ::idlepb::ShanhetuRecord&
StepShanhetuAck::_Internal::record(const StepShanhetuAck* msg) {
  return *msg->_impl_.record_;
}
void StepShanhetuAck::clear_record() {
  if (GetArenaForAllocation() == nullptr && _impl_.record_ != nullptr) {
    delete _impl_.record_;
  }
  _impl_.record_ = nullptr;
}
StepShanhetuAck::StepShanhetuAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.StepShanhetuAck)
}
StepShanhetuAck::StepShanhetuAck(const StepShanhetuAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StepShanhetuAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.record_){nullptr}
    , decltype(_impl_.done_){}
    , decltype(_impl_.current_row_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_record()) {
    _this->_impl_.record_ = new ::idlepb::ShanhetuRecord(*from._impl_.record_);
  }
  ::memcpy(&_impl_.done_, &from._impl_.done_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.current_row_) -
    reinterpret_cast<char*>(&_impl_.done_)) + sizeof(_impl_.current_row_));
  // @@protoc_insertion_point(copy_constructor:idlepb.StepShanhetuAck)
}

inline void StepShanhetuAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.record_){nullptr}
    , decltype(_impl_.done_){false}
    , decltype(_impl_.current_row_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StepShanhetuAck::~StepShanhetuAck() {
  // @@protoc_insertion_point(destructor:idlepb.StepShanhetuAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StepShanhetuAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.record_;
}

void StepShanhetuAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StepShanhetuAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.StepShanhetuAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.record_ != nullptr) {
    delete _impl_.record_;
  }
  _impl_.record_ = nullptr;
  ::memset(&_impl_.done_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.current_row_) -
      reinterpret_cast<char*>(&_impl_.done_)) + sizeof(_impl_.current_row_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StepShanhetuAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool done = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.done_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 current_row = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.current_row_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ShanhetuRecord record = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_record(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StepShanhetuAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.StepShanhetuAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->_internal_done() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_done(), target);
  }

  // int32 current_row = 2;
  if (this->_internal_current_row() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_current_row(), target);
  }

  // .idlepb.ShanhetuRecord record = 3;
  if (this->_internal_has_record()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::record(this),
        _Internal::record(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.StepShanhetuAck)
  return target;
}

size_t StepShanhetuAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.StepShanhetuAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ShanhetuRecord record = 3;
  if (this->_internal_has_record()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.record_);
  }

  // bool done = 1;
  if (this->_internal_done() != 0) {
    total_size += 1 + 1;
  }

  // int32 current_row = 2;
  if (this->_internal_current_row() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_current_row());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StepShanhetuAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StepShanhetuAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StepShanhetuAck::GetClassData() const { return &_class_data_; }


void StepShanhetuAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StepShanhetuAck*>(&to_msg);
  auto& from = static_cast<const StepShanhetuAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.StepShanhetuAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_record()) {
    _this->_internal_mutable_record()->::idlepb::ShanhetuRecord::MergeFrom(
        from._internal_record());
  }
  if (from._internal_done() != 0) {
    _this->_internal_set_done(from._internal_done());
  }
  if (from._internal_current_row() != 0) {
    _this->_internal_set_current_row(from._internal_current_row());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StepShanhetuAck::CopyFrom(const StepShanhetuAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.StepShanhetuAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepShanhetuAck::IsInitialized() const {
  return true;
}

void StepShanhetuAck::InternalSwap(StepShanhetuAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StepShanhetuAck, _impl_.current_row_)
      + sizeof(StepShanhetuAck::_impl_.current_row_)
      - PROTOBUF_FIELD_OFFSET(StepShanhetuAck, _impl_.record_)>(
          reinterpret_cast<char*>(&_impl_.record_),
          reinterpret_cast<char*>(&other->_impl_.record_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StepShanhetuAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[229]);
}

// ===================================================================

class GetShanhetuUseRecordReq::_Internal {
 public:
};

GetShanhetuUseRecordReq::GetShanhetuUseRecordReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShanhetuUseRecordReq)
}
GetShanhetuUseRecordReq::GetShanhetuUseRecordReq(const GetShanhetuUseRecordReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShanhetuUseRecordReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , decltype(_impl_.uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.uid_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.uid_));
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShanhetuUseRecordReq)
}

inline void GetShanhetuUseRecordReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){int64_t{0}}
    , decltype(_impl_.uid_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShanhetuUseRecordReq::~GetShanhetuUseRecordReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetShanhetuUseRecordReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShanhetuUseRecordReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetShanhetuUseRecordReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShanhetuUseRecordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShanhetuUseRecordReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.uid_) -
      reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.uid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShanhetuUseRecordReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShanhetuUseRecordReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShanhetuUseRecordReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_role_id(), target);
  }

  // int64 uid = 2;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShanhetuUseRecordReq)
  return target;
}

size_t GetShanhetuUseRecordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShanhetuUseRecordReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_role_id());
  }

  // int64 uid = 2;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShanhetuUseRecordReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShanhetuUseRecordReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShanhetuUseRecordReq::GetClassData() const { return &_class_data_; }


void GetShanhetuUseRecordReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShanhetuUseRecordReq*>(&to_msg);
  auto& from = static_cast<const GetShanhetuUseRecordReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShanhetuUseRecordReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShanhetuUseRecordReq::CopyFrom(const GetShanhetuUseRecordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShanhetuUseRecordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShanhetuUseRecordReq::IsInitialized() const {
  return true;
}

void GetShanhetuUseRecordReq::InternalSwap(GetShanhetuUseRecordReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetShanhetuUseRecordReq, _impl_.uid_)
      + sizeof(GetShanhetuUseRecordReq::_impl_.uid_)
      - PROTOBUF_FIELD_OFFSET(GetShanhetuUseRecordReq, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShanhetuUseRecordReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[230]);
}

// ===================================================================

class GetShanhetuUseRecordAck::_Internal {
 public:
  static const ::idlepb::ShanhetuRecord& record(const GetShanhetuUseRecordAck* msg);
};

const ::idlepb::ShanhetuRecord&
GetShanhetuUseRecordAck::_Internal::record(const GetShanhetuUseRecordAck* msg) {
  return *msg->_impl_.record_;
}
void GetShanhetuUseRecordAck::clear_record() {
  if (GetArenaForAllocation() == nullptr && _impl_.record_ != nullptr) {
    delete _impl_.record_;
  }
  _impl_.record_ = nullptr;
}
GetShanhetuUseRecordAck::GetShanhetuUseRecordAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShanhetuUseRecordAck)
}
GetShanhetuUseRecordAck::GetShanhetuUseRecordAck(const GetShanhetuUseRecordAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShanhetuUseRecordAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.record_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_record()) {
    _this->_impl_.record_ = new ::idlepb::ShanhetuRecord(*from._impl_.record_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShanhetuUseRecordAck)
}

inline void GetShanhetuUseRecordAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.record_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShanhetuUseRecordAck::~GetShanhetuUseRecordAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetShanhetuUseRecordAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShanhetuUseRecordAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.record_;
}

void GetShanhetuUseRecordAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShanhetuUseRecordAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShanhetuUseRecordAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.record_ != nullptr) {
    delete _impl_.record_;
  }
  _impl_.record_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShanhetuUseRecordAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.ShanhetuRecord record = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_record(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShanhetuUseRecordAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShanhetuUseRecordAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.ShanhetuRecord record = 1;
  if (this->_internal_has_record()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::record(this),
        _Internal::record(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShanhetuUseRecordAck)
  return target;
}

size_t GetShanhetuUseRecordAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShanhetuUseRecordAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ShanhetuRecord record = 1;
  if (this->_internal_has_record()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.record_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShanhetuUseRecordAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShanhetuUseRecordAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShanhetuUseRecordAck::GetClassData() const { return &_class_data_; }


void GetShanhetuUseRecordAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShanhetuUseRecordAck*>(&to_msg);
  auto& from = static_cast<const GetShanhetuUseRecordAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShanhetuUseRecordAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_record()) {
    _this->_internal_mutable_record()->::idlepb::ShanhetuRecord::MergeFrom(
        from._internal_record());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShanhetuUseRecordAck::CopyFrom(const GetShanhetuUseRecordAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShanhetuUseRecordAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShanhetuUseRecordAck::IsInitialized() const {
  return true;
}

void GetShanhetuUseRecordAck::InternalSwap(GetShanhetuUseRecordAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.record_, other->_impl_.record_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShanhetuUseRecordAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[231]);
}

// ===================================================================

class SetAttackLockTypeReq::_Internal {
 public:
};

SetAttackLockTypeReq::SetAttackLockTypeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetAttackLockTypeReq)
}
SetAttackLockTypeReq::SetAttackLockTypeReq(const SetAttackLockTypeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAttackLockTypeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetAttackLockTypeReq)
}

inline void SetAttackLockTypeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAttackLockTypeReq::~SetAttackLockTypeReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetAttackLockTypeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAttackLockTypeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAttackLockTypeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAttackLockTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetAttackLockTypeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAttackLockTypeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.AttackLockType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::AttackLockType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAttackLockTypeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetAttackLockTypeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.AttackLockType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetAttackLockTypeReq)
  return target;
}

size_t SetAttackLockTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetAttackLockTypeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.AttackLockType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAttackLockTypeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAttackLockTypeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAttackLockTypeReq::GetClassData() const { return &_class_data_; }


void SetAttackLockTypeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAttackLockTypeReq*>(&to_msg);
  auto& from = static_cast<const SetAttackLockTypeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetAttackLockTypeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttackLockTypeReq::CopyFrom(const SetAttackLockTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetAttackLockTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttackLockTypeReq::IsInitialized() const {
  return true;
}

void SetAttackLockTypeReq::InternalSwap(SetAttackLockTypeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAttackLockTypeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[232]);
}

// ===================================================================

class SetAttackLockTypeAck::_Internal {
 public:
};

SetAttackLockTypeAck::SetAttackLockTypeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetAttackLockTypeAck)
}
SetAttackLockTypeAck::SetAttackLockTypeAck(const SetAttackLockTypeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAttackLockTypeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetAttackLockTypeAck)
}

inline void SetAttackLockTypeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAttackLockTypeAck::~SetAttackLockTypeAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetAttackLockTypeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAttackLockTypeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAttackLockTypeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAttackLockTypeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetAttackLockTypeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAttackLockTypeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAttackLockTypeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetAttackLockTypeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetAttackLockTypeAck)
  return target;
}

size_t SetAttackLockTypeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetAttackLockTypeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAttackLockTypeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAttackLockTypeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAttackLockTypeAck::GetClassData() const { return &_class_data_; }


void SetAttackLockTypeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAttackLockTypeAck*>(&to_msg);
  auto& from = static_cast<const SetAttackLockTypeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetAttackLockTypeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttackLockTypeAck::CopyFrom(const SetAttackLockTypeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetAttackLockTypeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttackLockTypeAck::IsInitialized() const {
  return true;
}

void SetAttackLockTypeAck::InternalSwap(SetAttackLockTypeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAttackLockTypeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[233]);
}

// ===================================================================

class SetAttackUnlockTypeReq::_Internal {
 public:
};

SetAttackUnlockTypeReq::SetAttackUnlockTypeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetAttackUnlockTypeReq)
}
SetAttackUnlockTypeReq::SetAttackUnlockTypeReq(const SetAttackUnlockTypeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAttackUnlockTypeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetAttackUnlockTypeReq)
}

inline void SetAttackUnlockTypeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAttackUnlockTypeReq::~SetAttackUnlockTypeReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetAttackUnlockTypeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAttackUnlockTypeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAttackUnlockTypeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAttackUnlockTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetAttackUnlockTypeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAttackUnlockTypeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.AttackUnlockType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::AttackUnlockType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAttackUnlockTypeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetAttackUnlockTypeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.AttackUnlockType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetAttackUnlockTypeReq)
  return target;
}

size_t SetAttackUnlockTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetAttackUnlockTypeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.AttackUnlockType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAttackUnlockTypeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAttackUnlockTypeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAttackUnlockTypeReq::GetClassData() const { return &_class_data_; }


void SetAttackUnlockTypeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAttackUnlockTypeReq*>(&to_msg);
  auto& from = static_cast<const SetAttackUnlockTypeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetAttackUnlockTypeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttackUnlockTypeReq::CopyFrom(const SetAttackUnlockTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetAttackUnlockTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttackUnlockTypeReq::IsInitialized() const {
  return true;
}

void SetAttackUnlockTypeReq::InternalSwap(SetAttackUnlockTypeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAttackUnlockTypeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[234]);
}

// ===================================================================

class SetAttackUnlockTypeAck::_Internal {
 public:
};

SetAttackUnlockTypeAck::SetAttackUnlockTypeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetAttackUnlockTypeAck)
}
SetAttackUnlockTypeAck::SetAttackUnlockTypeAck(const SetAttackUnlockTypeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetAttackUnlockTypeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetAttackUnlockTypeAck)
}

inline void SetAttackUnlockTypeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetAttackUnlockTypeAck::~SetAttackUnlockTypeAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetAttackUnlockTypeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetAttackUnlockTypeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetAttackUnlockTypeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetAttackUnlockTypeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetAttackUnlockTypeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetAttackUnlockTypeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetAttackUnlockTypeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetAttackUnlockTypeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetAttackUnlockTypeAck)
  return target;
}

size_t SetAttackUnlockTypeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetAttackUnlockTypeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetAttackUnlockTypeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetAttackUnlockTypeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetAttackUnlockTypeAck::GetClassData() const { return &_class_data_; }


void SetAttackUnlockTypeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetAttackUnlockTypeAck*>(&to_msg);
  auto& from = static_cast<const SetAttackUnlockTypeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetAttackUnlockTypeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetAttackUnlockTypeAck::CopyFrom(const SetAttackUnlockTypeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetAttackUnlockTypeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAttackUnlockTypeAck::IsInitialized() const {
  return true;
}

void SetAttackUnlockTypeAck::InternalSwap(SetAttackUnlockTypeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetAttackUnlockTypeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[235]);
}

// ===================================================================

class SetShowUnlockButtonReq::_Internal {
 public:
};

SetShowUnlockButtonReq::SetShowUnlockButtonReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetShowUnlockButtonReq)
}
SetShowUnlockButtonReq::SetShowUnlockButtonReq(const SetShowUnlockButtonReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetShowUnlockButtonReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.enable_ = from._impl_.enable_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetShowUnlockButtonReq)
}

inline void SetShowUnlockButtonReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.enable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetShowUnlockButtonReq::~SetShowUnlockButtonReq() {
  // @@protoc_insertion_point(destructor:idlepb.SetShowUnlockButtonReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetShowUnlockButtonReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetShowUnlockButtonReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetShowUnlockButtonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetShowUnlockButtonReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetShowUnlockButtonReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool enable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.enable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetShowUnlockButtonReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetShowUnlockButtonReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_enable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetShowUnlockButtonReq)
  return target;
}

size_t SetShowUnlockButtonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetShowUnlockButtonReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool enable = 1;
  if (this->_internal_enable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetShowUnlockButtonReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetShowUnlockButtonReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetShowUnlockButtonReq::GetClassData() const { return &_class_data_; }


void SetShowUnlockButtonReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetShowUnlockButtonReq*>(&to_msg);
  auto& from = static_cast<const SetShowUnlockButtonReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetShowUnlockButtonReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_internal_set_enable(from._internal_enable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetShowUnlockButtonReq::CopyFrom(const SetShowUnlockButtonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetShowUnlockButtonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowUnlockButtonReq::IsInitialized() const {
  return true;
}

void SetShowUnlockButtonReq::InternalSwap(SetShowUnlockButtonReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.enable_, other->_impl_.enable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetShowUnlockButtonReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[236]);
}

// ===================================================================

class SetShowUnlockButtonAck::_Internal {
 public:
};

SetShowUnlockButtonAck::SetShowUnlockButtonAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetShowUnlockButtonAck)
}
SetShowUnlockButtonAck::SetShowUnlockButtonAck(const SetShowUnlockButtonAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetShowUnlockButtonAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetShowUnlockButtonAck)
}

inline void SetShowUnlockButtonAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetShowUnlockButtonAck::~SetShowUnlockButtonAck() {
  // @@protoc_insertion_point(destructor:idlepb.SetShowUnlockButtonAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetShowUnlockButtonAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetShowUnlockButtonAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetShowUnlockButtonAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetShowUnlockButtonAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetShowUnlockButtonAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetShowUnlockButtonAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetShowUnlockButtonAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetShowUnlockButtonAck)
  return target;
}

size_t SetShowUnlockButtonAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetShowUnlockButtonAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetShowUnlockButtonAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetShowUnlockButtonAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetShowUnlockButtonAck::GetClassData() const { return &_class_data_; }


void SetShowUnlockButtonAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetShowUnlockButtonAck*>(&to_msg);
  auto& from = static_cast<const SetShowUnlockButtonAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetShowUnlockButtonAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetShowUnlockButtonAck::CopyFrom(const SetShowUnlockButtonAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetShowUnlockButtonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetShowUnlockButtonAck::IsInitialized() const {
  return true;
}

void SetShowUnlockButtonAck::InternalSwap(SetShowUnlockButtonAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetShowUnlockButtonAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[237]);
}

// ===================================================================

class RefreshRoleNormalSetting::_Internal {
 public:
  static const ::idlepb::RoleNormalSettings& settings(const RefreshRoleNormalSetting* msg);
};

const ::idlepb::RoleNormalSettings&
RefreshRoleNormalSetting::_Internal::settings(const RefreshRoleNormalSetting* msg) {
  return *msg->_impl_.settings_;
}
void RefreshRoleNormalSetting::clear_settings() {
  if (GetArenaForAllocation() == nullptr && _impl_.settings_ != nullptr) {
    delete _impl_.settings_;
  }
  _impl_.settings_ = nullptr;
}
RefreshRoleNormalSetting::RefreshRoleNormalSetting(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshRoleNormalSetting)
}
RefreshRoleNormalSetting::RefreshRoleNormalSetting(const RefreshRoleNormalSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshRoleNormalSetting* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_settings()) {
    _this->_impl_.settings_ = new ::idlepb::RoleNormalSettings(*from._impl_.settings_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshRoleNormalSetting)
}

inline void RefreshRoleNormalSetting::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.settings_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshRoleNormalSetting::~RefreshRoleNormalSetting() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshRoleNormalSetting)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshRoleNormalSetting::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.settings_;
}

void RefreshRoleNormalSetting::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshRoleNormalSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshRoleNormalSetting)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.settings_ != nullptr) {
    delete _impl_.settings_;
  }
  _impl_.settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshRoleNormalSetting::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleNormalSettings settings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshRoleNormalSetting::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshRoleNormalSetting)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleNormalSettings settings = 1;
  if (this->_internal_has_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshRoleNormalSetting)
  return target;
}

size_t RefreshRoleNormalSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshRoleNormalSetting)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleNormalSettings settings = 1;
  if (this->_internal_has_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshRoleNormalSetting::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshRoleNormalSetting::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshRoleNormalSetting::GetClassData() const { return &_class_data_; }


void RefreshRoleNormalSetting::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshRoleNormalSetting*>(&to_msg);
  auto& from = static_cast<const RefreshRoleNormalSetting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshRoleNormalSetting)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_settings()) {
    _this->_internal_mutable_settings()->::idlepb::RoleNormalSettings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshRoleNormalSetting::CopyFrom(const RefreshRoleNormalSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshRoleNormalSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshRoleNormalSetting::IsInitialized() const {
  return true;
}

void RefreshRoleNormalSetting::InternalSwap(RefreshRoleNormalSetting* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.settings_, other->_impl_.settings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshRoleNormalSetting::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[238]);
}

// ===================================================================

class GetUserVarReq::_Internal {
 public:
};

GetUserVarReq::GetUserVarReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetUserVarReq)
}
GetUserVarReq::GetUserVarReq(const GetUserVarReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserVarReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_name().empty()) {
    _this->_impl_.var_name_.Set(from._internal_var_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetUserVarReq)
}

inline void GetUserVarReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserVarReq::~GetUserVarReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetUserVarReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserVarReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_name_.Destroy();
}

void GetUserVarReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserVarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetUserVarReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserVarReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_var_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.GetUserVarReq.var_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserVarReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetUserVarReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_name().data(), static_cast<int>(this->_internal_var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.GetUserVarReq.var_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_var_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetUserVarReq)
  return target;
}

size_t GetUserVarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetUserVarReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserVarReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserVarReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserVarReq::GetClassData() const { return &_class_data_; }


void GetUserVarReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserVarReq*>(&to_msg);
  auto& from = static_cast<const GetUserVarReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetUserVarReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_name().empty()) {
    _this->_internal_set_var_name(from._internal_var_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserVarReq::CopyFrom(const GetUserVarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetUserVarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserVarReq::IsInitialized() const {
  return true;
}

void GetUserVarReq::InternalSwap(GetUserVarReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_name_, lhs_arena,
      &other->_impl_.var_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserVarReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[239]);
}

// ===================================================================

class GetUserVarRsp::_Internal {
 public:
};

GetUserVarRsp::GetUserVarRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetUserVarRsp)
}
GetUserVarRsp::GetUserVarRsp(const GetUserVarRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserVarRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.var_value_ = from._impl_.var_value_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetUserVarRsp)
}

inline void GetUserVarRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserVarRsp::~GetUserVarRsp() {
  // @@protoc_insertion_point(destructor:idlepb.GetUserVarRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserVarRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetUserVarRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserVarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetUserVarRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserVarRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 var_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.var_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserVarRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetUserVarRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 var_value = 1;
  if (this->_internal_var_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_var_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetUserVarRsp)
  return target;
}

size_t GetUserVarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetUserVarRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 var_value = 1;
  if (this->_internal_var_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserVarRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserVarRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserVarRsp::GetClassData() const { return &_class_data_; }


void GetUserVarRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserVarRsp*>(&to_msg);
  auto& from = static_cast<const GetUserVarRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetUserVarRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_var_value() != 0) {
    _this->_internal_set_var_value(from._internal_var_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserVarRsp::CopyFrom(const GetUserVarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetUserVarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserVarRsp::IsInitialized() const {
  return true;
}

void GetUserVarRsp::InternalSwap(GetUserVarRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.var_value_, other->_impl_.var_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserVarRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[240]);
}

// ===================================================================

class GetUserVarsReq::_Internal {
 public:
};

GetUserVarsReq::GetUserVarsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetUserVarsReq)
}
GetUserVarsReq::GetUserVarsReq(const GetUserVarsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserVarsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){from._impl_.var_name_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetUserVarsReq)
}

inline void GetUserVarsReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserVarsReq::~GetUserVarsReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetUserVarsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserVarsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_name_.~RepeatedPtrField();
}

void GetUserVarsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserVarsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetUserVarsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_name_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserVarsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_var_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "idlepb.GetUserVarsReq.var_name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserVarsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetUserVarsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string var_name = 1;
  for (int i = 0, n = this->_internal_var_name_size(); i < n; i++) {
    const auto& s = this->_internal_var_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.GetUserVarsReq.var_name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetUserVarsReq)
  return target;
}

size_t GetUserVarsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetUserVarsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string var_name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.var_name_.size());
  for (int i = 0, n = _impl_.var_name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.var_name_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserVarsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserVarsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserVarsReq::GetClassData() const { return &_class_data_; }


void GetUserVarsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserVarsReq*>(&to_msg);
  auto& from = static_cast<const GetUserVarsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetUserVarsReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.var_name_.MergeFrom(from._impl_.var_name_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserVarsReq::CopyFrom(const GetUserVarsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetUserVarsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserVarsReq::IsInitialized() const {
  return true;
}

void GetUserVarsReq::InternalSwap(GetUserVarsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.var_name_.InternalSwap(&other->_impl_.var_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserVarsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[241]);
}

// ===================================================================

class GetUserVarsRsp::_Internal {
 public:
};

void GetUserVarsRsp::clear_data() {
  _impl_.data_.Clear();
}
GetUserVarsRsp::GetUserVarsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetUserVarsRsp)
}
GetUserVarsRsp::GetUserVarsRsp(const GetUserVarsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserVarsRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetUserVarsRsp)
}

inline void GetUserVarsRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserVarsRsp::~GetUserVarsRsp() {
  // @@protoc_insertion_point(destructor:idlepb.GetUserVarsRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserVarsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedPtrField();
}

void GetUserVarsRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserVarsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetUserVarsRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserVarsRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.StringKeyInt32ValueEntry data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserVarsRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetUserVarsRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.StringKeyInt32ValueEntry data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetUserVarsRsp)
  return target;
}

size_t GetUserVarsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetUserVarsRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.StringKeyInt32ValueEntry data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_impl_.data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserVarsRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserVarsRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserVarsRsp::GetClassData() const { return &_class_data_; }


void GetUserVarsRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserVarsRsp*>(&to_msg);
  auto& from = static_cast<const GetUserVarsRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetUserVarsRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserVarsRsp::CopyFrom(const GetUserVarsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetUserVarsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserVarsRsp::IsInitialized() const {
  return true;
}

void GetUserVarsRsp::InternalSwap(GetUserVarsRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserVarsRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[242]);
}

// ===================================================================

class SetUserVar::_Internal {
 public:
};

SetUserVar::SetUserVar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SetUserVar)
}
SetUserVar::SetUserVar(const SetUserVar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetUserVar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , decltype(_impl_.var_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_name().empty()) {
    _this->_impl_.var_name_.Set(from._internal_var_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.var_value_ = from._impl_.var_value_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SetUserVar)
}

inline void SetUserVar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , decltype(_impl_.var_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetUserVar::~SetUserVar() {
  // @@protoc_insertion_point(destructor:idlepb.SetUserVar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetUserVar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_name_.Destroy();
}

void SetUserVar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetUserVar::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SetUserVar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_name_.ClearToEmpty();
  _impl_.var_value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUserVar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_var_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.SetUserVar.var_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 var_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.var_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetUserVar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SetUserVar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_name().data(), static_cast<int>(this->_internal_var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.SetUserVar.var_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_var_name(), target);
  }

  // int32 var_value = 2;
  if (this->_internal_var_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_var_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SetUserVar)
  return target;
}

size_t SetUserVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SetUserVar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_name());
  }

  // int32 var_value = 2;
  if (this->_internal_var_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_var_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetUserVar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetUserVar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetUserVar::GetClassData() const { return &_class_data_; }


void SetUserVar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetUserVar*>(&to_msg);
  auto& from = static_cast<const SetUserVar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SetUserVar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_name().empty()) {
    _this->_internal_set_var_name(from._internal_var_name());
  }
  if (from._internal_var_value() != 0) {
    _this->_internal_set_var_value(from._internal_var_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetUserVar::CopyFrom(const SetUserVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SetUserVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserVar::IsInitialized() const {
  return true;
}

void SetUserVar::InternalSwap(SetUserVar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_name_, lhs_arena,
      &other->_impl_.var_name_, rhs_arena
  );
  swap(_impl_.var_value_, other->_impl_.var_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUserVar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[243]);
}

// ===================================================================

class DelUserVar::_Internal {
 public:
};

DelUserVar::DelUserVar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DelUserVar)
}
DelUserVar::DelUserVar(const DelUserVar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DelUserVar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_var_name().empty()) {
    _this->_impl_.var_name_.Set(from._internal_var_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.DelUserVar)
}

inline void DelUserVar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.var_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.var_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.var_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DelUserVar::~DelUserVar() {
  // @@protoc_insertion_point(destructor:idlepb.DelUserVar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DelUserVar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.var_name_.Destroy();
}

void DelUserVar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DelUserVar::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DelUserVar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.var_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DelUserVar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_var_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.DelUserVar.var_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DelUserVar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DelUserVar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_var_name().data(), static_cast<int>(this->_internal_var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.DelUserVar.var_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_var_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DelUserVar)
  return target;
}

size_t DelUserVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DelUserVar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (!this->_internal_var_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_var_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DelUserVar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DelUserVar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DelUserVar::GetClassData() const { return &_class_data_; }


void DelUserVar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DelUserVar*>(&to_msg);
  auto& from = static_cast<const DelUserVar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DelUserVar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_var_name().empty()) {
    _this->_internal_set_var_name(from._internal_var_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DelUserVar::CopyFrom(const DelUserVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DelUserVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelUserVar::IsInitialized() const {
  return true;
}

void DelUserVar::InternalSwap(DelUserVar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.var_name_, lhs_arena,
      &other->_impl_.var_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DelUserVar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[244]);
}

// ===================================================================

class ShareSelfItemReq::_Internal {
 public:
};

ShareSelfItemReq::ShareSelfItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfItemReq)
}
ShareSelfItemReq::ShareSelfItemReq(const ShareSelfItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfItemReq)
}

inline void ShareSelfItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfItemReq::~ShareSelfItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShareSelfItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfItemReq)
  return target;
}

size_t ShareSelfItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfItemReq::GetClassData() const { return &_class_data_; }


void ShareSelfItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfItemReq*>(&to_msg);
  auto& from = static_cast<const ShareSelfItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfItemReq::CopyFrom(const ShareSelfItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfItemReq::IsInitialized() const {
  return true;
}

void ShareSelfItemReq::InternalSwap(ShareSelfItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[245]);
}

// ===================================================================

class ShareSelfItemRsp::_Internal {
 public:
};

ShareSelfItemRsp::ShareSelfItemRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfItemRsp)
}
ShareSelfItemRsp::ShareSelfItemRsp(const ShareSelfItemRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfItemRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.share_id_ = from._impl_.share_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfItemRsp)
}

inline void ShareSelfItemRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfItemRsp::~ShareSelfItemRsp() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfItemRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfItemRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShareSelfItemRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfItemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfItemRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfItemRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.share_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfItemRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfItemRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_share_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfItemRsp)
  return target;
}

size_t ShareSelfItemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfItemRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_share_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfItemRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfItemRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfItemRsp::GetClassData() const { return &_class_data_; }


void ShareSelfItemRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfItemRsp*>(&to_msg);
  auto& from = static_cast<const ShareSelfItemRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfItemRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_share_id() != 0) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfItemRsp::CopyFrom(const ShareSelfItemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfItemRsp::IsInitialized() const {
  return true;
}

void ShareSelfItemRsp::InternalSwap(ShareSelfItemRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.share_id_, other->_impl_.share_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfItemRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[246]);
}

// ===================================================================

class ShareSelfItemsReq::_Internal {
 public:
};

ShareSelfItemsReq::ShareSelfItemsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfItemsReq)
}
ShareSelfItemsReq::ShareSelfItemsReq(const ShareSelfItemsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfItemsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){from._impl_.item_id_}
    , /*decltype(_impl_._item_id_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfItemsReq)
}

inline void ShareSelfItemsReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){arena}
    , /*decltype(_impl_._item_id_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfItemsReq::~ShareSelfItemsReq() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfItemsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfItemsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_id_.~RepeatedField();
}

void ShareSelfItemsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfItemsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfItemsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfItemsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_item_id(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_item_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfItemsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfItemsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 item_id = 1;
  {
    int byte_size = _impl_._item_id_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_item_id(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfItemsReq)
  return target;
}

size_t ShareSelfItemsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfItemsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 item_id = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.item_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._item_id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfItemsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfItemsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfItemsReq::GetClassData() const { return &_class_data_; }


void ShareSelfItemsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfItemsReq*>(&to_msg);
  auto& from = static_cast<const ShareSelfItemsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfItemsReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_id_.MergeFrom(from._impl_.item_id_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfItemsReq::CopyFrom(const ShareSelfItemsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfItemsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfItemsReq::IsInitialized() const {
  return true;
}

void ShareSelfItemsReq::InternalSwap(ShareSelfItemsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_id_.InternalSwap(&other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfItemsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[247]);
}

// ===================================================================

class ShareSelfItemsRsp::_Internal {
 public:
};

void ShareSelfItemsRsp::clear_share_id() {
  _impl_.share_id_.Clear();
}
ShareSelfItemsRsp::ShareSelfItemsRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ShareSelfItemsRsp)
}
ShareSelfItemsRsp::ShareSelfItemsRsp(const ShareSelfItemsRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareSelfItemsRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){from._impl_.share_id_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ShareSelfItemsRsp)
}

inline void ShareSelfItemsRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShareSelfItemsRsp::~ShareSelfItemsRsp() {
  // @@protoc_insertion_point(destructor:idlepb.ShareSelfItemsRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareSelfItemsRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.share_id_.~RepeatedPtrField();
}

void ShareSelfItemsRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareSelfItemsRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ShareSelfItemsRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareSelfItemsRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.Int64Pair share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_share_id(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareSelfItemsRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ShareSelfItemsRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.Int64Pair share_id = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_share_id_size()); i < n; i++) {
    const auto& repfield = this->_internal_share_id(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ShareSelfItemsRsp)
  return target;
}

size_t ShareSelfItemsRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ShareSelfItemsRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.Int64Pair share_id = 1;
  total_size += 1UL * this->_internal_share_id_size();
  for (const auto& msg : this->_impl_.share_id_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareSelfItemsRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareSelfItemsRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareSelfItemsRsp::GetClassData() const { return &_class_data_; }


void ShareSelfItemsRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareSelfItemsRsp*>(&to_msg);
  auto& from = static_cast<const ShareSelfItemsRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ShareSelfItemsRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.share_id_.MergeFrom(from._impl_.share_id_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareSelfItemsRsp::CopyFrom(const ShareSelfItemsRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ShareSelfItemsRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareSelfItemsRsp::IsInitialized() const {
  return true;
}

void ShareSelfItemsRsp::InternalSwap(ShareSelfItemsRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.share_id_.InternalSwap(&other->_impl_.share_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareSelfItemsRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[248]);
}

// ===================================================================

class GetShareItemDataReq::_Internal {
 public:
};

GetShareItemDataReq::GetShareItemDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShareItemDataReq)
}
GetShareItemDataReq::GetShareItemDataReq(const GetShareItemDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShareItemDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.share_id_ = from._impl_.share_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShareItemDataReq)
}

inline void GetShareItemDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.share_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShareItemDataReq::~GetShareItemDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetShareItemDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShareItemDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetShareItemDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShareItemDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShareItemDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShareItemDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 share_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.share_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShareItemDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShareItemDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_share_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShareItemDataReq)
  return target;
}

size_t GetShareItemDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShareItemDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 share_id = 1;
  if (this->_internal_share_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_share_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShareItemDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShareItemDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShareItemDataReq::GetClassData() const { return &_class_data_; }


void GetShareItemDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShareItemDataReq*>(&to_msg);
  auto& from = static_cast<const GetShareItemDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShareItemDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_share_id() != 0) {
    _this->_internal_set_share_id(from._internal_share_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShareItemDataReq::CopyFrom(const GetShareItemDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShareItemDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareItemDataReq::IsInitialized() const {
  return true;
}

void GetShareItemDataReq::InternalSwap(GetShareItemDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.share_id_, other->_impl_.share_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShareItemDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[249]);
}

// ===================================================================

class GetShareItemDataRsp::_Internal {
 public:
  static const ::idlepb::ItemData& item_data(const GetShareItemDataRsp* msg);
};

const ::idlepb::ItemData&
GetShareItemDataRsp::_Internal::item_data(const GetShareItemDataRsp* msg) {
  return *msg->_impl_.item_data_;
}
void GetShareItemDataRsp::clear_item_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_data_ != nullptr) {
    delete _impl_.item_data_;
  }
  _impl_.item_data_ = nullptr;
}
GetShareItemDataRsp::GetShareItemDataRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetShareItemDataRsp)
}
GetShareItemDataRsp::GetShareItemDataRsp(const GetShareItemDataRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetShareItemDataRsp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item_data()) {
    _this->_impl_.item_data_ = new ::idlepb::ItemData(*from._impl_.item_data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetShareItemDataRsp)
}

inline void GetShareItemDataRsp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetShareItemDataRsp::~GetShareItemDataRsp() {
  // @@protoc_insertion_point(destructor:idlepb.GetShareItemDataRsp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetShareItemDataRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_data_;
}

void GetShareItemDataRsp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetShareItemDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetShareItemDataRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_data_ != nullptr) {
    delete _impl_.item_data_;
  }
  _impl_.item_data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetShareItemDataRsp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ItemData item_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetShareItemDataRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetShareItemDataRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.ItemData item_data = 2;
  if (this->_internal_has_item_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item_data(this),
        _Internal::item_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetShareItemDataRsp)
  return target;
}

size_t GetShareItemDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetShareItemDataRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ItemData item_data = 2;
  if (this->_internal_has_item_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetShareItemDataRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetShareItemDataRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetShareItemDataRsp::GetClassData() const { return &_class_data_; }


void GetShareItemDataRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetShareItemDataRsp*>(&to_msg);
  auto& from = static_cast<const GetShareItemDataRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetShareItemDataRsp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item_data()) {
    _this->_internal_mutable_item_data()->::idlepb::ItemData::MergeFrom(
        from._internal_item_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetShareItemDataRsp::CopyFrom(const GetShareItemDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetShareItemDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareItemDataRsp::IsInitialized() const {
  return true;
}

void GetShareItemDataRsp::InternalSwap(GetShareItemDataRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetShareItemDataRsp, _impl_.ok_)
      + sizeof(GetShareItemDataRsp::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(GetShareItemDataRsp, _impl_.item_data_)>(
          reinterpret_cast<char*>(&_impl_.item_data_),
          reinterpret_cast<char*>(&other->_impl_.item_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetShareItemDataRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[250]);
}

// ===================================================================

class GetChecklistDataReq::_Internal {
 public:
};

GetChecklistDataReq::GetChecklistDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetChecklistDataReq)
}
GetChecklistDataReq::GetChecklistDataReq(const GetChecklistDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetChecklistDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetChecklistDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChecklistDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChecklistDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetChecklistDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[251]);
}

// ===================================================================

class GetChecklistDataAck::_Internal {
 public:
  static const ::idlepb::RoleChecklistData& data(const GetChecklistDataAck* msg);
};

const ::idlepb::RoleChecklistData&
GetChecklistDataAck::_Internal::data(const GetChecklistDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetChecklistDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetChecklistDataAck::GetChecklistDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetChecklistDataAck)
}
GetChecklistDataAck::GetChecklistDataAck(const GetChecklistDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChecklistDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleChecklistData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetChecklistDataAck)
}

inline void GetChecklistDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetChecklistDataAck::~GetChecklistDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetChecklistDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChecklistDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetChecklistDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChecklistDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetChecklistDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChecklistDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleChecklistData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChecklistDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetChecklistDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleChecklistData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetChecklistDataAck)
  return target;
}

size_t GetChecklistDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetChecklistDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleChecklistData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChecklistDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChecklistDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChecklistDataAck::GetClassData() const { return &_class_data_; }


void GetChecklistDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChecklistDataAck*>(&to_msg);
  auto& from = static_cast<const GetChecklistDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetChecklistDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleChecklistData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChecklistDataAck::CopyFrom(const GetChecklistDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetChecklistDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChecklistDataAck::IsInitialized() const {
  return true;
}

void GetChecklistDataAck::InternalSwap(GetChecklistDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChecklistDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[252]);
}

// ===================================================================

class NotifyChecklist::_Internal {
 public:
};

NotifyChecklist::NotifyChecklist(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyChecklist)
}
NotifyChecklist::NotifyChecklist(const NotifyChecklist& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NotifyChecklist* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyChecklist)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyChecklist::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyChecklist::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyChecklist::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[253]);
}

// ===================================================================

class ChecklistOpReq::_Internal {
 public:
};

ChecklistOpReq::ChecklistOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ChecklistOpReq)
}
ChecklistOpReq::ChecklistOpReq(const ChecklistOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChecklistOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sumbmit_or_receive_){}
    , decltype(_impl_.day_or_week_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.sumbmit_or_receive_, &from._impl_.sumbmit_or_receive_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.day_or_week_) -
    reinterpret_cast<char*>(&_impl_.sumbmit_or_receive_)) + sizeof(_impl_.day_or_week_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ChecklistOpReq)
}

inline void ChecklistOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sumbmit_or_receive_){false}
    , decltype(_impl_.day_or_week_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChecklistOpReq::~ChecklistOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.ChecklistOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChecklistOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChecklistOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChecklistOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ChecklistOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sumbmit_or_receive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.day_or_week_) -
      reinterpret_cast<char*>(&_impl_.sumbmit_or_receive_)) + sizeof(_impl_.day_or_week_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChecklistOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool sumbmit_or_receive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sumbmit_or_receive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool day_or_week = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.day_or_week_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChecklistOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ChecklistOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool sumbmit_or_receive = 1;
  if (this->_internal_sumbmit_or_receive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_sumbmit_or_receive(), target);
  }

  // bool day_or_week = 2;
  if (this->_internal_day_or_week() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_day_or_week(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ChecklistOpReq)
  return target;
}

size_t ChecklistOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ChecklistOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool sumbmit_or_receive = 1;
  if (this->_internal_sumbmit_or_receive() != 0) {
    total_size += 1 + 1;
  }

  // bool day_or_week = 2;
  if (this->_internal_day_or_week() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChecklistOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChecklistOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChecklistOpReq::GetClassData() const { return &_class_data_; }


void ChecklistOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChecklistOpReq*>(&to_msg);
  auto& from = static_cast<const ChecklistOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ChecklistOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sumbmit_or_receive() != 0) {
    _this->_internal_set_sumbmit_or_receive(from._internal_sumbmit_or_receive());
  }
  if (from._internal_day_or_week() != 0) {
    _this->_internal_set_day_or_week(from._internal_day_or_week());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChecklistOpReq::CopyFrom(const ChecklistOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ChecklistOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChecklistOpReq::IsInitialized() const {
  return true;
}

void ChecklistOpReq::InternalSwap(ChecklistOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChecklistOpReq, _impl_.day_or_week_)
      + sizeof(ChecklistOpReq::_impl_.day_or_week_)
      - PROTOBUF_FIELD_OFFSET(ChecklistOpReq, _impl_.sumbmit_or_receive_)>(
          reinterpret_cast<char*>(&_impl_.sumbmit_or_receive_),
          reinterpret_cast<char*>(&other->_impl_.sumbmit_or_receive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChecklistOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[254]);
}

// ===================================================================

class ChecklistOpAck::_Internal {
 public:
  static const ::idlepb::RoleChecklistData& data(const ChecklistOpAck* msg);
};

const ::idlepb::RoleChecklistData&
ChecklistOpAck::_Internal::data(const ChecklistOpAck* msg) {
  return *msg->_impl_.data_;
}
void ChecklistOpAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ChecklistOpAck::ChecklistOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ChecklistOpAck)
}
ChecklistOpAck::ChecklistOpAck(const ChecklistOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChecklistOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleChecklistData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ChecklistOpAck)
}

inline void ChecklistOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChecklistOpAck::~ChecklistOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.ChecklistOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChecklistOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ChecklistOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChecklistOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ChecklistOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChecklistOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.RoleChecklistData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChecklistOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ChecklistOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.RoleChecklistData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ChecklistOpAck)
  return target;
}

size_t ChecklistOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ChecklistOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleChecklistData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChecklistOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChecklistOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChecklistOpAck::GetClassData() const { return &_class_data_; }


void ChecklistOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChecklistOpAck*>(&to_msg);
  auto& from = static_cast<const ChecklistOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ChecklistOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleChecklistData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChecklistOpAck::CopyFrom(const ChecklistOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ChecklistOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChecklistOpAck::IsInitialized() const {
  return true;
}

void ChecklistOpAck::InternalSwap(ChecklistOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChecklistOpAck, _impl_.ok_)
      + sizeof(ChecklistOpAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ChecklistOpAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChecklistOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[255]);
}

// ===================================================================

class UpdateChecklistReq::_Internal {
 public:
};

UpdateChecklistReq::UpdateChecklistReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateChecklistReq)
}
UpdateChecklistReq::UpdateChecklistReq(const UpdateChecklistReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateChecklistReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateChecklistReq)
}

inline void UpdateChecklistReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateChecklistReq::~UpdateChecklistReq() {
  // @@protoc_insertion_point(destructor:idlepb.UpdateChecklistReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateChecklistReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateChecklistReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateChecklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpdateChecklistReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateChecklistReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateChecklistReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpdateChecklistReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpdateChecklistReq)
  return target;
}

size_t UpdateChecklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpdateChecklistReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateChecklistReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateChecklistReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateChecklistReq::GetClassData() const { return &_class_data_; }


void UpdateChecklistReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateChecklistReq*>(&to_msg);
  auto& from = static_cast<const UpdateChecklistReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpdateChecklistReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateChecklistReq::CopyFrom(const UpdateChecklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpdateChecklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateChecklistReq::IsInitialized() const {
  return true;
}

void UpdateChecklistReq::InternalSwap(UpdateChecklistReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateChecklistReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[256]);
}

// ===================================================================

class UpdateChecklistAck::_Internal {
 public:
};

UpdateChecklistAck::UpdateChecklistAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateChecklistAck)
}
UpdateChecklistAck::UpdateChecklistAck(const UpdateChecklistAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateChecklistAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateChecklistAck)
}

inline void UpdateChecklistAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateChecklistAck::~UpdateChecklistAck() {
  // @@protoc_insertion_point(destructor:idlepb.UpdateChecklistAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateChecklistAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateChecklistAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateChecklistAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpdateChecklistAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateChecklistAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateChecklistAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpdateChecklistAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpdateChecklistAck)
  return target;
}

size_t UpdateChecklistAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpdateChecklistAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateChecklistAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateChecklistAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateChecklistAck::GetClassData() const { return &_class_data_; }


void UpdateChecklistAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateChecklistAck*>(&to_msg);
  auto& from = static_cast<const UpdateChecklistAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpdateChecklistAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateChecklistAck::CopyFrom(const UpdateChecklistAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpdateChecklistAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateChecklistAck::IsInitialized() const {
  return true;
}

void UpdateChecklistAck::InternalSwap(UpdateChecklistAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateChecklistAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[257]);
}

// ===================================================================

class GetCommonItemExchangeDataReq::_Internal {
 public:
};

GetCommonItemExchangeDataReq::GetCommonItemExchangeDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetCommonItemExchangeDataReq)
}
GetCommonItemExchangeDataReq::GetCommonItemExchangeDataReq(const GetCommonItemExchangeDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCommonItemExchangeDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.cfg_id_ = from._impl_.cfg_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetCommonItemExchangeDataReq)
}

inline void GetCommonItemExchangeDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetCommonItemExchangeDataReq::~GetCommonItemExchangeDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetCommonItemExchangeDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCommonItemExchangeDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCommonItemExchangeDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCommonItemExchangeDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetCommonItemExchangeDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cfg_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCommonItemExchangeDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCommonItemExchangeDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetCommonItemExchangeDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetCommonItemExchangeDataReq)
  return target;
}

size_t GetCommonItemExchangeDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetCommonItemExchangeDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCommonItemExchangeDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCommonItemExchangeDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCommonItemExchangeDataReq::GetClassData() const { return &_class_data_; }


void GetCommonItemExchangeDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCommonItemExchangeDataReq*>(&to_msg);
  auto& from = static_cast<const GetCommonItemExchangeDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetCommonItemExchangeDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCommonItemExchangeDataReq::CopyFrom(const GetCommonItemExchangeDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetCommonItemExchangeDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCommonItemExchangeDataReq::IsInitialized() const {
  return true;
}

void GetCommonItemExchangeDataReq::InternalSwap(GetCommonItemExchangeDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cfg_id_, other->_impl_.cfg_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCommonItemExchangeDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[258]);
}

// ===================================================================

class GetCommonItemExchangeDataAck::_Internal {
 public:
};

GetCommonItemExchangeDataAck::GetCommonItemExchangeDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetCommonItemExchangeDataAck)
}
GetCommonItemExchangeDataAck::GetCommonItemExchangeDataAck(const GetCommonItemExchangeDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCommonItemExchangeDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.today_exchange_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.today_exchange_num_ = from._impl_.today_exchange_num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetCommonItemExchangeDataAck)
}

inline void GetCommonItemExchangeDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.today_exchange_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetCommonItemExchangeDataAck::~GetCommonItemExchangeDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetCommonItemExchangeDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCommonItemExchangeDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCommonItemExchangeDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCommonItemExchangeDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetCommonItemExchangeDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.today_exchange_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCommonItemExchangeDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 today_exchange_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.today_exchange_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCommonItemExchangeDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetCommonItemExchangeDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 today_exchange_num = 1;
  if (this->_internal_today_exchange_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_today_exchange_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetCommonItemExchangeDataAck)
  return target;
}

size_t GetCommonItemExchangeDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetCommonItemExchangeDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 today_exchange_num = 1;
  if (this->_internal_today_exchange_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_today_exchange_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCommonItemExchangeDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCommonItemExchangeDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCommonItemExchangeDataAck::GetClassData() const { return &_class_data_; }


void GetCommonItemExchangeDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCommonItemExchangeDataAck*>(&to_msg);
  auto& from = static_cast<const GetCommonItemExchangeDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetCommonItemExchangeDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_today_exchange_num() != 0) {
    _this->_internal_set_today_exchange_num(from._internal_today_exchange_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCommonItemExchangeDataAck::CopyFrom(const GetCommonItemExchangeDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetCommonItemExchangeDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCommonItemExchangeDataAck::IsInitialized() const {
  return true;
}

void GetCommonItemExchangeDataAck::InternalSwap(GetCommonItemExchangeDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.today_exchange_num_, other->_impl_.today_exchange_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCommonItemExchangeDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[259]);
}

// ===================================================================

class ExchangeCommonItemReq::_Internal {
 public:
};

ExchangeCommonItemReq::ExchangeCommonItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ExchangeCommonItemReq)
}
ExchangeCommonItemReq::ExchangeCommonItemReq(const ExchangeCommonItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExchangeCommonItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.cfg_id_, &from._impl_.cfg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ExchangeCommonItemReq)
}

inline void ExchangeCommonItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExchangeCommonItemReq::~ExchangeCommonItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.ExchangeCommonItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExchangeCommonItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExchangeCommonItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExchangeCommonItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ExchangeCommonItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.cfg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExchangeCommonItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExchangeCommonItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ExchangeCommonItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ExchangeCommonItemReq)
  return target;
}

size_t ExchangeCommonItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ExchangeCommonItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExchangeCommonItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExchangeCommonItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExchangeCommonItemReq::GetClassData() const { return &_class_data_; }


void ExchangeCommonItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExchangeCommonItemReq*>(&to_msg);
  auto& from = static_cast<const ExchangeCommonItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ExchangeCommonItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExchangeCommonItemReq::CopyFrom(const ExchangeCommonItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ExchangeCommonItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeCommonItemReq::IsInitialized() const {
  return true;
}

void ExchangeCommonItemReq::InternalSwap(ExchangeCommonItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExchangeCommonItemReq, _impl_.num_)
      + sizeof(ExchangeCommonItemReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(ExchangeCommonItemReq, _impl_.cfg_id_)>(
          reinterpret_cast<char*>(&_impl_.cfg_id_),
          reinterpret_cast<char*>(&other->_impl_.cfg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExchangeCommonItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[260]);
}

// ===================================================================

class ExchangeCommonItemAck::_Internal {
 public:
};

ExchangeCommonItemAck::ExchangeCommonItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ExchangeCommonItemAck)
}
ExchangeCommonItemAck::ExchangeCommonItemAck(const ExchangeCommonItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExchangeCommonItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , decltype(_impl_.out_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.ok_, &from._impl_.ok_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.out_num_) -
    reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.out_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ExchangeCommonItemAck)
}

inline void ExchangeCommonItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , decltype(_impl_.out_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExchangeCommonItemAck::~ExchangeCommonItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.ExchangeCommonItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExchangeCommonItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExchangeCommonItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExchangeCommonItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ExchangeCommonItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ok_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.out_num_) -
      reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.out_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExchangeCommonItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 out_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.out_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExchangeCommonItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ExchangeCommonItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // int32 out_num = 2;
  if (this->_internal_out_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_out_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ExchangeCommonItemAck)
  return target;
}

size_t ExchangeCommonItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ExchangeCommonItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  // int32 out_num = 2;
  if (this->_internal_out_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_out_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExchangeCommonItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExchangeCommonItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExchangeCommonItemAck::GetClassData() const { return &_class_data_; }


void ExchangeCommonItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExchangeCommonItemAck*>(&to_msg);
  auto& from = static_cast<const ExchangeCommonItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ExchangeCommonItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  if (from._internal_out_num() != 0) {
    _this->_internal_set_out_num(from._internal_out_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExchangeCommonItemAck::CopyFrom(const ExchangeCommonItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ExchangeCommonItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeCommonItemAck::IsInitialized() const {
  return true;
}

void ExchangeCommonItemAck::InternalSwap(ExchangeCommonItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExchangeCommonItemAck, _impl_.out_num_)
      + sizeof(ExchangeCommonItemAck::_impl_.out_num_)
      - PROTOBUF_FIELD_OFFSET(ExchangeCommonItemAck, _impl_.ok_)>(
          reinterpret_cast<char*>(&_impl_.ok_),
          reinterpret_cast<char*>(&other->_impl_.ok_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExchangeCommonItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[261]);
}

// ===================================================================

class SynthesisCommonItemReq::_Internal {
 public:
};

SynthesisCommonItemReq::SynthesisCommonItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SynthesisCommonItemReq)
}
SynthesisCommonItemReq::SynthesisCommonItemReq(const SynthesisCommonItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SynthesisCommonItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.cfg_id_, &from._impl_.cfg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.SynthesisCommonItemReq)
}

inline void SynthesisCommonItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SynthesisCommonItemReq::~SynthesisCommonItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.SynthesisCommonItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SynthesisCommonItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SynthesisCommonItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SynthesisCommonItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SynthesisCommonItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.cfg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynthesisCommonItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SynthesisCommonItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SynthesisCommonItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SynthesisCommonItemReq)
  return target;
}

size_t SynthesisCommonItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SynthesisCommonItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SynthesisCommonItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SynthesisCommonItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SynthesisCommonItemReq::GetClassData() const { return &_class_data_; }


void SynthesisCommonItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SynthesisCommonItemReq*>(&to_msg);
  auto& from = static_cast<const SynthesisCommonItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SynthesisCommonItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SynthesisCommonItemReq::CopyFrom(const SynthesisCommonItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SynthesisCommonItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynthesisCommonItemReq::IsInitialized() const {
  return true;
}

void SynthesisCommonItemReq::InternalSwap(SynthesisCommonItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SynthesisCommonItemReq, _impl_.num_)
      + sizeof(SynthesisCommonItemReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(SynthesisCommonItemReq, _impl_.cfg_id_)>(
          reinterpret_cast<char*>(&_impl_.cfg_id_),
          reinterpret_cast<char*>(&other->_impl_.cfg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SynthesisCommonItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[262]);
}

// ===================================================================

class SynthesisCommonItemAck::_Internal {
 public:
};

SynthesisCommonItemAck::SynthesisCommonItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.SynthesisCommonItemAck)
}
SynthesisCommonItemAck::SynthesisCommonItemAck(const SynthesisCommonItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SynthesisCommonItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.SynthesisCommonItemAck)
}

inline void SynthesisCommonItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SynthesisCommonItemAck::~SynthesisCommonItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.SynthesisCommonItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SynthesisCommonItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SynthesisCommonItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SynthesisCommonItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.SynthesisCommonItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynthesisCommonItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SynthesisCommonItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.SynthesisCommonItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.SynthesisCommonItemAck)
  return target;
}

size_t SynthesisCommonItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.SynthesisCommonItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SynthesisCommonItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SynthesisCommonItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SynthesisCommonItemAck::GetClassData() const { return &_class_data_; }


void SynthesisCommonItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SynthesisCommonItemAck*>(&to_msg);
  auto& from = static_cast<const SynthesisCommonItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.SynthesisCommonItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SynthesisCommonItemAck::CopyFrom(const SynthesisCommonItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.SynthesisCommonItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynthesisCommonItemAck::IsInitialized() const {
  return true;
}

void SynthesisCommonItemAck::InternalSwap(SynthesisCommonItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynthesisCommonItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[263]);
}

// ===================================================================

class GetRoleSeptShopDataReq::_Internal {
 public:
};

GetRoleSeptShopDataReq::GetRoleSeptShopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleSeptShopDataReq)
}
GetRoleSeptShopDataReq::GetRoleSeptShopDataReq(const GetRoleSeptShopDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleSeptShopDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleSeptShopDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleSeptShopDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleSeptShopDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleSeptShopDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[264]);
}

// ===================================================================

class GetRoleSeptShopDataAck::_Internal {
 public:
  static const ::idlepb::RoleSeptShopData& data(const GetRoleSeptShopDataAck* msg);
};

const ::idlepb::RoleSeptShopData&
GetRoleSeptShopDataAck::_Internal::data(const GetRoleSeptShopDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleSeptShopDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleSeptShopDataAck::GetRoleSeptShopDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleSeptShopDataAck)
}
GetRoleSeptShopDataAck::GetRoleSeptShopDataAck(const GetRoleSeptShopDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleSeptShopDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleSeptShopData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleSeptShopDataAck)
}

inline void GetRoleSeptShopDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleSeptShopDataAck::~GetRoleSeptShopDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleSeptShopDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleSeptShopDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleSeptShopDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleSeptShopDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleSeptShopDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleSeptShopDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleSeptShopData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleSeptShopDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleSeptShopDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleSeptShopData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleSeptShopDataAck)
  return target;
}

size_t GetRoleSeptShopDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleSeptShopDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleSeptShopData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleSeptShopDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleSeptShopDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleSeptShopDataAck::GetClassData() const { return &_class_data_; }


void GetRoleSeptShopDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleSeptShopDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleSeptShopDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleSeptShopDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleSeptShopData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleSeptShopDataAck::CopyFrom(const GetRoleSeptShopDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleSeptShopDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleSeptShopDataAck::IsInitialized() const {
  return true;
}

void GetRoleSeptShopDataAck::InternalSwap(GetRoleSeptShopDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleSeptShopDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[265]);
}

// ===================================================================

class GetRoleSeptQuestDataReq::_Internal {
 public:
};

GetRoleSeptQuestDataReq::GetRoleSeptQuestDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleSeptQuestDataReq)
}
GetRoleSeptQuestDataReq::GetRoleSeptQuestDataReq(const GetRoleSeptQuestDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleSeptQuestDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleSeptQuestDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleSeptQuestDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleSeptQuestDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleSeptQuestDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[266]);
}

// ===================================================================

class GetRoleSeptQuestDataAck::_Internal {
 public:
  static const ::idlepb::RoleSeptQuestData& data(const GetRoleSeptQuestDataAck* msg);
};

const ::idlepb::RoleSeptQuestData&
GetRoleSeptQuestDataAck::_Internal::data(const GetRoleSeptQuestDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleSeptQuestDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleSeptQuestDataAck::GetRoleSeptQuestDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleSeptQuestDataAck)
}
GetRoleSeptQuestDataAck::GetRoleSeptQuestDataAck(const GetRoleSeptQuestDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleSeptQuestDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleSeptQuestData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleSeptQuestDataAck)
}

inline void GetRoleSeptQuestDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleSeptQuestDataAck::~GetRoleSeptQuestDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleSeptQuestDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleSeptQuestDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleSeptQuestDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleSeptQuestDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleSeptQuestDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleSeptQuestDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleSeptQuestData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleSeptQuestDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleSeptQuestDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleSeptQuestData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleSeptQuestDataAck)
  return target;
}

size_t GetRoleSeptQuestDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleSeptQuestDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleSeptQuestData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleSeptQuestDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleSeptQuestDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleSeptQuestDataAck::GetClassData() const { return &_class_data_; }


void GetRoleSeptQuestDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleSeptQuestDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleSeptQuestDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleSeptQuestDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleSeptQuestData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleSeptQuestDataAck::CopyFrom(const GetRoleSeptQuestDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleSeptQuestDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleSeptQuestDataAck::IsInitialized() const {
  return true;
}

void GetRoleSeptQuestDataAck::InternalSwap(GetRoleSeptQuestDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleSeptQuestDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[267]);
}

// ===================================================================

class BuySeptShopItemReq::_Internal {
 public:
};

BuySeptShopItemReq::BuySeptShopItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuySeptShopItemReq)
}
BuySeptShopItemReq::BuySeptShopItemReq(const BuySeptShopItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuySeptShopItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.BuySeptShopItemReq)
}

inline void BuySeptShopItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuySeptShopItemReq::~BuySeptShopItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.BuySeptShopItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuySeptShopItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuySeptShopItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuySeptShopItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuySeptShopItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuySeptShopItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuySeptShopItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuySeptShopItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuySeptShopItemReq)
  return target;
}

size_t BuySeptShopItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuySeptShopItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuySeptShopItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuySeptShopItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuySeptShopItemReq::GetClassData() const { return &_class_data_; }


void BuySeptShopItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuySeptShopItemReq*>(&to_msg);
  auto& from = static_cast<const BuySeptShopItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuySeptShopItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuySeptShopItemReq::CopyFrom(const BuySeptShopItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuySeptShopItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuySeptShopItemReq::IsInitialized() const {
  return true;
}

void BuySeptShopItemReq::InternalSwap(BuySeptShopItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuySeptShopItemReq, _impl_.num_)
      + sizeof(BuySeptShopItemReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(BuySeptShopItemReq, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BuySeptShopItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[268]);
}

// ===================================================================

class BuySeptShopItemAck::_Internal {
 public:
};

BuySeptShopItemAck::BuySeptShopItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.BuySeptShopItemAck)
}
BuySeptShopItemAck::BuySeptShopItemAck(const BuySeptShopItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BuySeptShopItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.BuySeptShopItemAck)
}

inline void BuySeptShopItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BuySeptShopItemAck::~BuySeptShopItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.BuySeptShopItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BuySeptShopItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BuySeptShopItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BuySeptShopItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.BuySeptShopItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BuySeptShopItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BuySeptShopItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.BuySeptShopItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.BuySeptShopItemAck)
  return target;
}

size_t BuySeptShopItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.BuySeptShopItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BuySeptShopItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BuySeptShopItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BuySeptShopItemAck::GetClassData() const { return &_class_data_; }


void BuySeptShopItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BuySeptShopItemAck*>(&to_msg);
  auto& from = static_cast<const BuySeptShopItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.BuySeptShopItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BuySeptShopItemAck::CopyFrom(const BuySeptShopItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.BuySeptShopItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuySeptShopItemAck::IsInitialized() const {
  return true;
}

void BuySeptShopItemAck::InternalSwap(BuySeptShopItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BuySeptShopItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[269]);
}

// ===================================================================

class ReqRoleSeptQuestOpReq::_Internal {
 public:
};

ReqRoleSeptQuestOpReq::ReqRoleSeptQuestOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReqRoleSeptQuestOpReq)
}
ReqRoleSeptQuestOpReq::ReqRoleSeptQuestOpReq(const ReqRoleSeptQuestOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReqRoleSeptQuestOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.uid_ = from._impl_.uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReqRoleSeptQuestOpReq)
}

inline void ReqRoleSeptQuestOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReqRoleSeptQuestOpReq::~ReqRoleSeptQuestOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReqRoleSeptQuestOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqRoleSeptQuestOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqRoleSeptQuestOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReqRoleSeptQuestOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReqRoleSeptQuestOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqRoleSeptQuestOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqRoleSeptQuestOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReqRoleSeptQuestOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReqRoleSeptQuestOpReq)
  return target;
}

size_t ReqRoleSeptQuestOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReqRoleSeptQuestOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqRoleSeptQuestOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReqRoleSeptQuestOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqRoleSeptQuestOpReq::GetClassData() const { return &_class_data_; }


void ReqRoleSeptQuestOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReqRoleSeptQuestOpReq*>(&to_msg);
  auto& from = static_cast<const ReqRoleSeptQuestOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReqRoleSeptQuestOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqRoleSeptQuestOpReq::CopyFrom(const ReqRoleSeptQuestOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReqRoleSeptQuestOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRoleSeptQuestOpReq::IsInitialized() const {
  return true;
}

void ReqRoleSeptQuestOpReq::InternalSwap(ReqRoleSeptQuestOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.uid_, other->_impl_.uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqRoleSeptQuestOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[270]);
}

// ===================================================================

class ReqRoleSeptQuestOpAck::_Internal {
 public:
};

ReqRoleSeptQuestOpAck::ReqRoleSeptQuestOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReqRoleSeptQuestOpAck)
}
ReqRoleSeptQuestOpAck::ReqRoleSeptQuestOpAck(const ReqRoleSeptQuestOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReqRoleSeptQuestOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReqRoleSeptQuestOpAck)
}

inline void ReqRoleSeptQuestOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReqRoleSeptQuestOpAck::~ReqRoleSeptQuestOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReqRoleSeptQuestOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqRoleSeptQuestOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqRoleSeptQuestOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReqRoleSeptQuestOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReqRoleSeptQuestOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqRoleSeptQuestOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqRoleSeptQuestOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReqRoleSeptQuestOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReqRoleSeptQuestOpAck)
  return target;
}

size_t ReqRoleSeptQuestOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReqRoleSeptQuestOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqRoleSeptQuestOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReqRoleSeptQuestOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqRoleSeptQuestOpAck::GetClassData() const { return &_class_data_; }


void ReqRoleSeptQuestOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReqRoleSeptQuestOpAck*>(&to_msg);
  auto& from = static_cast<const ReqRoleSeptQuestOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReqRoleSeptQuestOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqRoleSeptQuestOpAck::CopyFrom(const ReqRoleSeptQuestOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReqRoleSeptQuestOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRoleSeptQuestOpAck::IsInitialized() const {
  return true;
}

void ReqRoleSeptQuestOpAck::InternalSwap(ReqRoleSeptQuestOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqRoleSeptQuestOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[271]);
}

// ===================================================================

class RefreshSeptQuestReq::_Internal {
 public:
};

RefreshSeptQuestReq::RefreshSeptQuestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshSeptQuestReq)
}
RefreshSeptQuestReq::RefreshSeptQuestReq(const RefreshSeptQuestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RefreshSeptQuestReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshSeptQuestReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSeptQuestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSeptQuestReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RefreshSeptQuestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[272]);
}

// ===================================================================

class RefreshSeptQuestAck::_Internal {
 public:
  static const ::idlepb::RoleSeptQuestData& data(const RefreshSeptQuestAck* msg);
};

const ::idlepb::RoleSeptQuestData&
RefreshSeptQuestAck::_Internal::data(const RefreshSeptQuestAck* msg) {
  return *msg->_impl_.data_;
}
void RefreshSeptQuestAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RefreshSeptQuestAck::RefreshSeptQuestAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshSeptQuestAck)
}
RefreshSeptQuestAck::RefreshSeptQuestAck(const RefreshSeptQuestAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshSeptQuestAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleSeptQuestData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshSeptQuestAck)
}

inline void RefreshSeptQuestAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshSeptQuestAck::~RefreshSeptQuestAck() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshSeptQuestAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshSeptQuestAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RefreshSeptQuestAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshSeptQuestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshSeptQuestAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshSeptQuestAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleSeptQuestData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshSeptQuestAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshSeptQuestAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleSeptQuestData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshSeptQuestAck)
  return target;
}

size_t RefreshSeptQuestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshSeptQuestAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleSeptQuestData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshSeptQuestAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshSeptQuestAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshSeptQuestAck::GetClassData() const { return &_class_data_; }


void RefreshSeptQuestAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshSeptQuestAck*>(&to_msg);
  auto& from = static_cast<const RefreshSeptQuestAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshSeptQuestAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleSeptQuestData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshSeptQuestAck::CopyFrom(const RefreshSeptQuestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshSeptQuestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshSeptQuestAck::IsInitialized() const {
  return true;
}

void RefreshSeptQuestAck::InternalSwap(RefreshSeptQuestAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshSeptQuestAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[273]);
}

// ===================================================================

class ReqSeptQuestRankUpReq::_Internal {
 public:
};

ReqSeptQuestRankUpReq::ReqSeptQuestRankUpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ReqSeptQuestRankUpReq)
}
ReqSeptQuestRankUpReq::ReqSeptQuestRankUpReq(const ReqSeptQuestRankUpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReqSeptQuestRankUpReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ReqSeptQuestRankUpReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqSeptQuestRankUpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqSeptQuestRankUpReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReqSeptQuestRankUpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[274]);
}

// ===================================================================

class ReqSeptQuestRankUpAck::_Internal {
 public:
};

ReqSeptQuestRankUpAck::ReqSeptQuestRankUpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReqSeptQuestRankUpAck)
}
ReqSeptQuestRankUpAck::ReqSeptQuestRankUpAck(const ReqSeptQuestRankUpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReqSeptQuestRankUpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReqSeptQuestRankUpAck)
}

inline void ReqSeptQuestRankUpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReqSeptQuestRankUpAck::~ReqSeptQuestRankUpAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReqSeptQuestRankUpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReqSeptQuestRankUpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReqSeptQuestRankUpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReqSeptQuestRankUpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReqSeptQuestRankUpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReqSeptQuestRankUpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReqSeptQuestRankUpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReqSeptQuestRankUpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReqSeptQuestRankUpAck)
  return target;
}

size_t ReqSeptQuestRankUpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReqSeptQuestRankUpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReqSeptQuestRankUpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReqSeptQuestRankUpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReqSeptQuestRankUpAck::GetClassData() const { return &_class_data_; }


void ReqSeptQuestRankUpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReqSeptQuestRankUpAck*>(&to_msg);
  auto& from = static_cast<const ReqSeptQuestRankUpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReqSeptQuestRankUpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReqSeptQuestRankUpAck::CopyFrom(const ReqSeptQuestRankUpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReqSeptQuestRankUpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqSeptQuestRankUpAck::IsInitialized() const {
  return true;
}

void ReqSeptQuestRankUpAck::InternalSwap(ReqSeptQuestRankUpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqSeptQuestRankUpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[275]);
}

// ===================================================================

class GetGongFaDataReq::_Internal {
 public:
};

GetGongFaDataReq::GetGongFaDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetGongFaDataReq)
}
GetGongFaDataReq::GetGongFaDataReq(const GetGongFaDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetGongFaDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetGongFaDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGongFaDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGongFaDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetGongFaDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[276]);
}

// ===================================================================

class GetGongFaDataAck::_Internal {
 public:
  static const ::idlepb::RoleGongFaData& data(const GetGongFaDataAck* msg);
};

const ::idlepb::RoleGongFaData&
GetGongFaDataAck::_Internal::data(const GetGongFaDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetGongFaDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetGongFaDataAck::GetGongFaDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetGongFaDataAck)
}
GetGongFaDataAck::GetGongFaDataAck(const GetGongFaDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetGongFaDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleGongFaData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetGongFaDataAck)
}

inline void GetGongFaDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetGongFaDataAck::~GetGongFaDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetGongFaDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGongFaDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetGongFaDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetGongFaDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetGongFaDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGongFaDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleGongFaData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGongFaDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetGongFaDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleGongFaData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetGongFaDataAck)
  return target;
}

size_t GetGongFaDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetGongFaDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleGongFaData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGongFaDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetGongFaDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGongFaDataAck::GetClassData() const { return &_class_data_; }


void GetGongFaDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetGongFaDataAck*>(&to_msg);
  auto& from = static_cast<const GetGongFaDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetGongFaDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleGongFaData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGongFaDataAck::CopyFrom(const GetGongFaDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetGongFaDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGongFaDataAck::IsInitialized() const {
  return true;
}

void GetGongFaDataAck::InternalSwap(GetGongFaDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGongFaDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[277]);
}

// ===================================================================

class GongFaOpReq::_Internal {
 public:
};

GongFaOpReq::GongFaOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GongFaOpReq)
}
GongFaOpReq::GongFaOpReq(const GongFaOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GongFaOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.gongfa_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.gongfa_id_ = from._impl_.gongfa_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GongFaOpReq)
}

inline void GongFaOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.gongfa_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GongFaOpReq::~GongFaOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.GongFaOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GongFaOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GongFaOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GongFaOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GongFaOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gongfa_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongFaOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 gongfa_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.gongfa_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GongFaOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GongFaOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gongfa_id = 1;
  if (this->_internal_gongfa_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_gongfa_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GongFaOpReq)
  return target;
}

size_t GongFaOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GongFaOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 gongfa_id = 1;
  if (this->_internal_gongfa_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_gongfa_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GongFaOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GongFaOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GongFaOpReq::GetClassData() const { return &_class_data_; }


void GongFaOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GongFaOpReq*>(&to_msg);
  auto& from = static_cast<const GongFaOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GongFaOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gongfa_id() != 0) {
    _this->_internal_set_gongfa_id(from._internal_gongfa_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GongFaOpReq::CopyFrom(const GongFaOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GongFaOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongFaOpReq::IsInitialized() const {
  return true;
}

void GongFaOpReq::InternalSwap(GongFaOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.gongfa_id_, other->_impl_.gongfa_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GongFaOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[278]);
}

// ===================================================================

class GongFaOpAck::_Internal {
 public:
  static const ::idlepb::GongFaData& gongfa_data(const GongFaOpAck* msg);
};

const ::idlepb::GongFaData&
GongFaOpAck::_Internal::gongfa_data(const GongFaOpAck* msg) {
  return *msg->_impl_.gongfa_data_;
}
void GongFaOpAck::clear_gongfa_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.gongfa_data_ != nullptr) {
    delete _impl_.gongfa_data_;
  }
  _impl_.gongfa_data_ = nullptr;
}
GongFaOpAck::GongFaOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GongFaOpAck)
}
GongFaOpAck::GongFaOpAck(const GongFaOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GongFaOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.gongfa_data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_gongfa_data()) {
    _this->_impl_.gongfa_data_ = new ::idlepb::GongFaData(*from._impl_.gongfa_data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GongFaOpAck)
}

inline void GongFaOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.gongfa_data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GongFaOpAck::~GongFaOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.GongFaOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GongFaOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.gongfa_data_;
}

void GongFaOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GongFaOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GongFaOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.gongfa_data_ != nullptr) {
    delete _impl_.gongfa_data_;
  }
  _impl_.gongfa_data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GongFaOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.GongFaData gongfa_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_gongfa_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GongFaOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GongFaOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.GongFaData gongfa_data = 2;
  if (this->_internal_has_gongfa_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::gongfa_data(this),
        _Internal::gongfa_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GongFaOpAck)
  return target;
}

size_t GongFaOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GongFaOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.GongFaData gongfa_data = 2;
  if (this->_internal_has_gongfa_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.gongfa_data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GongFaOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GongFaOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GongFaOpAck::GetClassData() const { return &_class_data_; }


void GongFaOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GongFaOpAck*>(&to_msg);
  auto& from = static_cast<const GongFaOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GongFaOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_gongfa_data()) {
    _this->_internal_mutable_gongfa_data()->::idlepb::GongFaData::MergeFrom(
        from._internal_gongfa_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GongFaOpAck::CopyFrom(const GongFaOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GongFaOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GongFaOpAck::IsInitialized() const {
  return true;
}

void GongFaOpAck::InternalSwap(GongFaOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GongFaOpAck, _impl_.ok_)
      + sizeof(GongFaOpAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(GongFaOpAck, _impl_.gongfa_data_)>(
          reinterpret_cast<char*>(&_impl_.gongfa_data_),
          reinterpret_cast<char*>(&other->_impl_.gongfa_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GongFaOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[279]);
}

// ===================================================================

class ActivateGongFaMaxEffectReq::_Internal {
 public:
};

ActivateGongFaMaxEffectReq::ActivateGongFaMaxEffectReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ActivateGongFaMaxEffectReq)
}
ActivateGongFaMaxEffectReq::ActivateGongFaMaxEffectReq(const ActivateGongFaMaxEffectReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActivateGongFaMaxEffectReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.cfg_id_ = from._impl_.cfg_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ActivateGongFaMaxEffectReq)
}

inline void ActivateGongFaMaxEffectReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ActivateGongFaMaxEffectReq::~ActivateGongFaMaxEffectReq() {
  // @@protoc_insertion_point(destructor:idlepb.ActivateGongFaMaxEffectReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActivateGongFaMaxEffectReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ActivateGongFaMaxEffectReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActivateGongFaMaxEffectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ActivateGongFaMaxEffectReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cfg_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivateGongFaMaxEffectReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivateGongFaMaxEffectReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ActivateGongFaMaxEffectReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ActivateGongFaMaxEffectReq)
  return target;
}

size_t ActivateGongFaMaxEffectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ActivateGongFaMaxEffectReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivateGongFaMaxEffectReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActivateGongFaMaxEffectReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivateGongFaMaxEffectReq::GetClassData() const { return &_class_data_; }


void ActivateGongFaMaxEffectReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActivateGongFaMaxEffectReq*>(&to_msg);
  auto& from = static_cast<const ActivateGongFaMaxEffectReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ActivateGongFaMaxEffectReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivateGongFaMaxEffectReq::CopyFrom(const ActivateGongFaMaxEffectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ActivateGongFaMaxEffectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateGongFaMaxEffectReq::IsInitialized() const {
  return true;
}

void ActivateGongFaMaxEffectReq::InternalSwap(ActivateGongFaMaxEffectReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cfg_id_, other->_impl_.cfg_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivateGongFaMaxEffectReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[280]);
}

// ===================================================================

class ActivateGongFaMaxEffectAck::_Internal {
 public:
};

ActivateGongFaMaxEffectAck::ActivateGongFaMaxEffectAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ActivateGongFaMaxEffectAck)
}
ActivateGongFaMaxEffectAck::ActivateGongFaMaxEffectAck(const ActivateGongFaMaxEffectAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActivateGongFaMaxEffectAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ActivateGongFaMaxEffectAck)
}

inline void ActivateGongFaMaxEffectAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ActivateGongFaMaxEffectAck::~ActivateGongFaMaxEffectAck() {
  // @@protoc_insertion_point(destructor:idlepb.ActivateGongFaMaxEffectAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActivateGongFaMaxEffectAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ActivateGongFaMaxEffectAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActivateGongFaMaxEffectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ActivateGongFaMaxEffectAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActivateGongFaMaxEffectAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActivateGongFaMaxEffectAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ActivateGongFaMaxEffectAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ActivateGongFaMaxEffectAck)
  return target;
}

size_t ActivateGongFaMaxEffectAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ActivateGongFaMaxEffectAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActivateGongFaMaxEffectAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActivateGongFaMaxEffectAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActivateGongFaMaxEffectAck::GetClassData() const { return &_class_data_; }


void ActivateGongFaMaxEffectAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActivateGongFaMaxEffectAck*>(&to_msg);
  auto& from = static_cast<const ActivateGongFaMaxEffectAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ActivateGongFaMaxEffectAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActivateGongFaMaxEffectAck::CopyFrom(const ActivateGongFaMaxEffectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ActivateGongFaMaxEffectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateGongFaMaxEffectAck::IsInitialized() const {
  return true;
}

void ActivateGongFaMaxEffectAck::InternalSwap(ActivateGongFaMaxEffectAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActivateGongFaMaxEffectAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[281]);
}

// ===================================================================

class ReceiveFuZengRewardsReq::_Internal {
 public:
};

ReceiveFuZengRewardsReq::ReceiveFuZengRewardsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveFuZengRewardsReq)
}
ReceiveFuZengRewardsReq::ReceiveFuZengRewardsReq(const ReceiveFuZengRewardsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveFuZengRewardsReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.cfg_id_, &from._impl_.cfg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveFuZengRewardsReq)
}

inline void ReceiveFuZengRewardsReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveFuZengRewardsReq::~ReceiveFuZengRewardsReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveFuZengRewardsReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveFuZengRewardsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveFuZengRewardsReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveFuZengRewardsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveFuZengRewardsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.cfg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.cfg_id_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveFuZengRewardsReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FuZengType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::FuZengType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveFuZengRewardsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveFuZengRewardsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  // .idlepb.FuZengType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveFuZengRewardsReq)
  return target;
}

size_t ReceiveFuZengRewardsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveFuZengRewardsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  // .idlepb.FuZengType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveFuZengRewardsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveFuZengRewardsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveFuZengRewardsReq::GetClassData() const { return &_class_data_; }


void ReceiveFuZengRewardsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveFuZengRewardsReq*>(&to_msg);
  auto& from = static_cast<const ReceiveFuZengRewardsReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveFuZengRewardsReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveFuZengRewardsReq::CopyFrom(const ReceiveFuZengRewardsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveFuZengRewardsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveFuZengRewardsReq::IsInitialized() const {
  return true;
}

void ReceiveFuZengRewardsReq::InternalSwap(ReceiveFuZengRewardsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceiveFuZengRewardsReq, _impl_.type_)
      + sizeof(ReceiveFuZengRewardsReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ReceiveFuZengRewardsReq, _impl_.cfg_id_)>(
          reinterpret_cast<char*>(&_impl_.cfg_id_),
          reinterpret_cast<char*>(&other->_impl_.cfg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveFuZengRewardsReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[282]);
}

// ===================================================================

class ReceiveFuZengRewardsAck::_Internal {
 public:
  static const ::idlepb::FuZengData& data(const ReceiveFuZengRewardsAck* msg);
};

const ::idlepb::FuZengData&
ReceiveFuZengRewardsAck::_Internal::data(const ReceiveFuZengRewardsAck* msg) {
  return *msg->_impl_.data_;
}
void ReceiveFuZengRewardsAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ReceiveFuZengRewardsAck::ReceiveFuZengRewardsAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveFuZengRewardsAck)
}
ReceiveFuZengRewardsAck::ReceiveFuZengRewardsAck(const ReceiveFuZengRewardsAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveFuZengRewardsAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::FuZengData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveFuZengRewardsAck)
}

inline void ReceiveFuZengRewardsAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveFuZengRewardsAck::~ReceiveFuZengRewardsAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveFuZengRewardsAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveFuZengRewardsAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ReceiveFuZengRewardsAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveFuZengRewardsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveFuZengRewardsAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveFuZengRewardsAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FuZengData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveFuZengRewardsAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveFuZengRewardsAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.FuZengData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveFuZengRewardsAck)
  return target;
}

size_t ReceiveFuZengRewardsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveFuZengRewardsAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.FuZengData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveFuZengRewardsAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveFuZengRewardsAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveFuZengRewardsAck::GetClassData() const { return &_class_data_; }


void ReceiveFuZengRewardsAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveFuZengRewardsAck*>(&to_msg);
  auto& from = static_cast<const ReceiveFuZengRewardsAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveFuZengRewardsAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::FuZengData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveFuZengRewardsAck::CopyFrom(const ReceiveFuZengRewardsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveFuZengRewardsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveFuZengRewardsAck::IsInitialized() const {
  return true;
}

void ReceiveFuZengRewardsAck::InternalSwap(ReceiveFuZengRewardsAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReceiveFuZengRewardsAck, _impl_.ok_)
      + sizeof(ReceiveFuZengRewardsAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ReceiveFuZengRewardsAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveFuZengRewardsAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[283]);
}

// ===================================================================

class GetRoleFuZengDataReq::_Internal {
 public:
};

GetRoleFuZengDataReq::GetRoleFuZengDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleFuZengDataReq)
}
GetRoleFuZengDataReq::GetRoleFuZengDataReq(const GetRoleFuZengDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleFuZengDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleFuZengDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleFuZengDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleFuZengDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleFuZengDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[284]);
}

// ===================================================================

class GetRoleFuZengDataAck::_Internal {
 public:
  static const ::idlepb::RoleFuZengData& data(const GetRoleFuZengDataAck* msg);
};

const ::idlepb::RoleFuZengData&
GetRoleFuZengDataAck::_Internal::data(const GetRoleFuZengDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleFuZengDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleFuZengDataAck::GetRoleFuZengDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleFuZengDataAck)
}
GetRoleFuZengDataAck::GetRoleFuZengDataAck(const GetRoleFuZengDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleFuZengDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleFuZengData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleFuZengDataAck)
}

inline void GetRoleFuZengDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleFuZengDataAck::~GetRoleFuZengDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleFuZengDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleFuZengDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleFuZengDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleFuZengDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleFuZengDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleFuZengDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleFuZengData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleFuZengDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleFuZengDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleFuZengData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleFuZengDataAck)
  return target;
}

size_t GetRoleFuZengDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleFuZengDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleFuZengData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleFuZengDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleFuZengDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleFuZengDataAck::GetClassData() const { return &_class_data_; }


void GetRoleFuZengDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleFuZengDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleFuZengDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleFuZengDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleFuZengData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleFuZengDataAck::CopyFrom(const GetRoleFuZengDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleFuZengDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleFuZengDataAck::IsInitialized() const {
  return true;
}

void GetRoleFuZengDataAck::InternalSwap(GetRoleFuZengDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleFuZengDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[285]);
}

// ===================================================================

class NotifyFuZeng::_Internal {
 public:
};

NotifyFuZeng::NotifyFuZeng(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyFuZeng)
}
NotifyFuZeng::NotifyFuZeng(const NotifyFuZeng& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyFuZeng* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.num_, &from._impl_.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.cfg_id_) -
    reinterpret_cast<char*>(&_impl_.num_)) + sizeof(_impl_.cfg_id_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyFuZeng)
}

inline void NotifyFuZeng::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyFuZeng::~NotifyFuZeng() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyFuZeng)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyFuZeng::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyFuZeng::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyFuZeng::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyFuZeng)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.cfg_id_) -
      reinterpret_cast<char*>(&_impl_.num_)) + sizeof(_impl_.cfg_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyFuZeng::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.FuZengType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::idlepb::FuZengType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cfg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyFuZeng::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyFuZeng)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.FuZengType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int64 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_num(), target);
  }

  // int32 cfg_id = 3;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyFuZeng)
  return target;
}

size_t NotifyFuZeng::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyFuZeng)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_num());
  }

  // .idlepb.FuZengType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 cfg_id = 3;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyFuZeng::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyFuZeng::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyFuZeng::GetClassData() const { return &_class_data_; }


void NotifyFuZeng::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyFuZeng*>(&to_msg);
  auto& from = static_cast<const NotifyFuZeng&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyFuZeng)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyFuZeng::CopyFrom(const NotifyFuZeng& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyFuZeng)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyFuZeng::IsInitialized() const {
  return true;
}

void NotifyFuZeng::InternalSwap(NotifyFuZeng* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyFuZeng, _impl_.cfg_id_)
      + sizeof(NotifyFuZeng::_impl_.cfg_id_)
      - PROTOBUF_FIELD_OFFSET(NotifyFuZeng, _impl_.num_)>(
          reinterpret_cast<char*>(&_impl_.num_),
          reinterpret_cast<char*>(&other->_impl_.num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyFuZeng::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[286]);
}

// ===================================================================

class GetRoleTreasuryDataReq::_Internal {
 public:
};

GetRoleTreasuryDataReq::GetRoleTreasuryDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleTreasuryDataReq)
}
GetRoleTreasuryDataReq::GetRoleTreasuryDataReq(const GetRoleTreasuryDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleTreasuryDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dirty_flag_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dirty_flag_ = from._impl_.dirty_flag_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleTreasuryDataReq)
}

inline void GetRoleTreasuryDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dirty_flag_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleTreasuryDataReq::~GetRoleTreasuryDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleTreasuryDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleTreasuryDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoleTreasuryDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleTreasuryDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleTreasuryDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dirty_flag_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleTreasuryDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool dirty_flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.dirty_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleTreasuryDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleTreasuryDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool dirty_flag = 1;
  if (this->_internal_dirty_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_dirty_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleTreasuryDataReq)
  return target;
}

size_t GetRoleTreasuryDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleTreasuryDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool dirty_flag = 1;
  if (this->_internal_dirty_flag() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleTreasuryDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleTreasuryDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleTreasuryDataReq::GetClassData() const { return &_class_data_; }


void GetRoleTreasuryDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleTreasuryDataReq*>(&to_msg);
  auto& from = static_cast<const GetRoleTreasuryDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleTreasuryDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dirty_flag() != 0) {
    _this->_internal_set_dirty_flag(from._internal_dirty_flag());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleTreasuryDataReq::CopyFrom(const GetRoleTreasuryDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleTreasuryDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleTreasuryDataReq::IsInitialized() const {
  return true;
}

void GetRoleTreasuryDataReq::InternalSwap(GetRoleTreasuryDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dirty_flag_, other->_impl_.dirty_flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleTreasuryDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[287]);
}

// ===================================================================

class GetRoleTreasuryDataAck::_Internal {
 public:
  static const ::idlepb::RoleTreasurySaveData& data(const GetRoleTreasuryDataAck* msg);
};

const ::idlepb::RoleTreasurySaveData&
GetRoleTreasuryDataAck::_Internal::data(const GetRoleTreasuryDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleTreasuryDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleTreasuryDataAck::GetRoleTreasuryDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleTreasuryDataAck)
}
GetRoleTreasuryDataAck::GetRoleTreasuryDataAck(const GetRoleTreasuryDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleTreasuryDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleTreasurySaveData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleTreasuryDataAck)
}

inline void GetRoleTreasuryDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleTreasuryDataAck::~GetRoleTreasuryDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleTreasuryDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleTreasuryDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleTreasuryDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleTreasuryDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleTreasuryDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleTreasuryDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleTreasurySaveData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleTreasuryDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleTreasuryDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleTreasurySaveData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleTreasuryDataAck)
  return target;
}

size_t GetRoleTreasuryDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleTreasuryDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleTreasurySaveData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleTreasuryDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleTreasuryDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleTreasuryDataAck::GetClassData() const { return &_class_data_; }


void GetRoleTreasuryDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleTreasuryDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleTreasuryDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleTreasuryDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleTreasurySaveData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleTreasuryDataAck::CopyFrom(const GetRoleTreasuryDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleTreasuryDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleTreasuryDataAck::IsInitialized() const {
  return true;
}

void GetRoleTreasuryDataAck::InternalSwap(GetRoleTreasuryDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleTreasuryDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[288]);
}

// ===================================================================

class OpenTreasuryChestReq::_Internal {
 public:
};

OpenTreasuryChestReq::OpenTreasuryChestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OpenTreasuryChestReq)
}
OpenTreasuryChestReq::OpenTreasuryChestReq(const OpenTreasuryChestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenTreasuryChestReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chest_type_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.chest_type_, &from._impl_.chest_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.chest_type_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.OpenTreasuryChestReq)
}

inline void OpenTreasuryChestReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.chest_type_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OpenTreasuryChestReq::~OpenTreasuryChestReq() {
  // @@protoc_insertion_point(destructor:idlepb.OpenTreasuryChestReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenTreasuryChestReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenTreasuryChestReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenTreasuryChestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OpenTreasuryChestReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.chest_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.chest_type_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenTreasuryChestReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 chest_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.chest_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenTreasuryChestReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OpenTreasuryChestReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chest_type = 1;
  if (this->_internal_chest_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_chest_type(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OpenTreasuryChestReq)
  return target;
}

size_t OpenTreasuryChestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OpenTreasuryChestReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chest_type = 1;
  if (this->_internal_chest_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_chest_type());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenTreasuryChestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenTreasuryChestReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenTreasuryChestReq::GetClassData() const { return &_class_data_; }


void OpenTreasuryChestReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenTreasuryChestReq*>(&to_msg);
  auto& from = static_cast<const OpenTreasuryChestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OpenTreasuryChestReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chest_type() != 0) {
    _this->_internal_set_chest_type(from._internal_chest_type());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenTreasuryChestReq::CopyFrom(const OpenTreasuryChestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OpenTreasuryChestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenTreasuryChestReq::IsInitialized() const {
  return true;
}

void OpenTreasuryChestReq::InternalSwap(OpenTreasuryChestReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpenTreasuryChestReq, _impl_.num_)
      + sizeof(OpenTreasuryChestReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(OpenTreasuryChestReq, _impl_.chest_type_)>(
          reinterpret_cast<char*>(&_impl_.chest_type_),
          reinterpret_cast<char*>(&other->_impl_.chest_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenTreasuryChestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[289]);
}

// ===================================================================

class OpenTreasuryChestAck::_Internal {
 public:
};

OpenTreasuryChestAck::OpenTreasuryChestAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OpenTreasuryChestAck)
}
OpenTreasuryChestAck::OpenTreasuryChestAck(const OpenTreasuryChestAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenTreasuryChestAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.OpenTreasuryChestAck)
}

inline void OpenTreasuryChestAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OpenTreasuryChestAck::~OpenTreasuryChestAck() {
  // @@protoc_insertion_point(destructor:idlepb.OpenTreasuryChestAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenTreasuryChestAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenTreasuryChestAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenTreasuryChestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OpenTreasuryChestAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenTreasuryChestAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenTreasuryChestAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OpenTreasuryChestAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OpenTreasuryChestAck)
  return target;
}

size_t OpenTreasuryChestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OpenTreasuryChestAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenTreasuryChestAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenTreasuryChestAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenTreasuryChestAck::GetClassData() const { return &_class_data_; }


void OpenTreasuryChestAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenTreasuryChestAck*>(&to_msg);
  auto& from = static_cast<const OpenTreasuryChestAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OpenTreasuryChestAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenTreasuryChestAck::CopyFrom(const OpenTreasuryChestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OpenTreasuryChestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenTreasuryChestAck::IsInitialized() const {
  return true;
}

void OpenTreasuryChestAck::InternalSwap(OpenTreasuryChestAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenTreasuryChestAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[290]);
}

// ===================================================================

class OneClickOpenTreasuryChestReq::_Internal {
 public:
};

OneClickOpenTreasuryChestReq::OneClickOpenTreasuryChestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickOpenTreasuryChestReq)
}
OneClickOpenTreasuryChestReq::OneClickOpenTreasuryChestReq(const OneClickOpenTreasuryChestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  OneClickOpenTreasuryChestReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickOpenTreasuryChestReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickOpenTreasuryChestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickOpenTreasuryChestReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OneClickOpenTreasuryChestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[291]);
}

// ===================================================================

class OneClickOpenTreasuryChestAck::_Internal {
 public:
};

OneClickOpenTreasuryChestAck::OneClickOpenTreasuryChestAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OneClickOpenTreasuryChestAck)
}
OneClickOpenTreasuryChestAck::OneClickOpenTreasuryChestAck(const OneClickOpenTreasuryChestAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneClickOpenTreasuryChestAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.today_open_times_){from._impl_.today_open_times_}
    , /*decltype(_impl_._today_open_times_cached_byte_size_)*/{0}
    , decltype(_impl_.guarantee_count_){from._impl_.guarantee_count_}
    , /*decltype(_impl_._guarantee_count_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.OneClickOpenTreasuryChestAck)
}

inline void OneClickOpenTreasuryChestAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.today_open_times_){arena}
    , /*decltype(_impl_._today_open_times_cached_byte_size_)*/{0}
    , decltype(_impl_.guarantee_count_){arena}
    , /*decltype(_impl_._guarantee_count_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneClickOpenTreasuryChestAck::~OneClickOpenTreasuryChestAck() {
  // @@protoc_insertion_point(destructor:idlepb.OneClickOpenTreasuryChestAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneClickOpenTreasuryChestAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.today_open_times_.~RepeatedField();
  _impl_.guarantee_count_.~RepeatedField();
}

void OneClickOpenTreasuryChestAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneClickOpenTreasuryChestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OneClickOpenTreasuryChestAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.today_open_times_.Clear();
  _impl_.guarantee_count_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneClickOpenTreasuryChestAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 today_open_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_today_open_times(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_today_open_times(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 guarantee_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_guarantee_count(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_guarantee_count(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneClickOpenTreasuryChestAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OneClickOpenTreasuryChestAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated int32 today_open_times = 2;
  {
    int byte_size = _impl_._today_open_times_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_today_open_times(), byte_size, target);
    }
  }

  // repeated int32 guarantee_count = 3;
  {
    int byte_size = _impl_._guarantee_count_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_guarantee_count(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OneClickOpenTreasuryChestAck)
  return target;
}

size_t OneClickOpenTreasuryChestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OneClickOpenTreasuryChestAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 today_open_times = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.today_open_times_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._today_open_times_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 guarantee_count = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.guarantee_count_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._guarantee_count_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneClickOpenTreasuryChestAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneClickOpenTreasuryChestAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneClickOpenTreasuryChestAck::GetClassData() const { return &_class_data_; }


void OneClickOpenTreasuryChestAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneClickOpenTreasuryChestAck*>(&to_msg);
  auto& from = static_cast<const OneClickOpenTreasuryChestAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OneClickOpenTreasuryChestAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.today_open_times_.MergeFrom(from._impl_.today_open_times_);
  _this->_impl_.guarantee_count_.MergeFrom(from._impl_.guarantee_count_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneClickOpenTreasuryChestAck::CopyFrom(const OneClickOpenTreasuryChestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OneClickOpenTreasuryChestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneClickOpenTreasuryChestAck::IsInitialized() const {
  return true;
}

void OneClickOpenTreasuryChestAck::InternalSwap(OneClickOpenTreasuryChestAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.today_open_times_.InternalSwap(&other->_impl_.today_open_times_);
  _impl_.guarantee_count_.InternalSwap(&other->_impl_.guarantee_count_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneClickOpenTreasuryChestAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[292]);
}

// ===================================================================

class OpenTreasuryGachaReq::_Internal {
 public:
};

OpenTreasuryGachaReq::OpenTreasuryGachaReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OpenTreasuryGachaReq)
}
OpenTreasuryGachaReq::OpenTreasuryGachaReq(const OpenTreasuryGachaReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenTreasuryGachaReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.gacha_type_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.gacha_type_, &from._impl_.gacha_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.gacha_type_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.OpenTreasuryGachaReq)
}

inline void OpenTreasuryGachaReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.gacha_type_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OpenTreasuryGachaReq::~OpenTreasuryGachaReq() {
  // @@protoc_insertion_point(destructor:idlepb.OpenTreasuryGachaReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenTreasuryGachaReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenTreasuryGachaReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenTreasuryGachaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OpenTreasuryGachaReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gacha_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.gacha_type_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenTreasuryGachaReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 gacha_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.gacha_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenTreasuryGachaReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OpenTreasuryGachaReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 gacha_type = 1;
  if (this->_internal_gacha_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_gacha_type(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OpenTreasuryGachaReq)
  return target;
}

size_t OpenTreasuryGachaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OpenTreasuryGachaReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 gacha_type = 1;
  if (this->_internal_gacha_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_gacha_type());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenTreasuryGachaReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenTreasuryGachaReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenTreasuryGachaReq::GetClassData() const { return &_class_data_; }


void OpenTreasuryGachaReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenTreasuryGachaReq*>(&to_msg);
  auto& from = static_cast<const OpenTreasuryGachaReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OpenTreasuryGachaReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gacha_type() != 0) {
    _this->_internal_set_gacha_type(from._internal_gacha_type());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenTreasuryGachaReq::CopyFrom(const OpenTreasuryGachaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OpenTreasuryGachaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenTreasuryGachaReq::IsInitialized() const {
  return true;
}

void OpenTreasuryGachaReq::InternalSwap(OpenTreasuryGachaReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpenTreasuryGachaReq, _impl_.num_)
      + sizeof(OpenTreasuryGachaReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(OpenTreasuryGachaReq, _impl_.gacha_type_)>(
          reinterpret_cast<char*>(&_impl_.gacha_type_),
          reinterpret_cast<char*>(&other->_impl_.gacha_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenTreasuryGachaReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[293]);
}

// ===================================================================

class OpenTreasuryGachaAck::_Internal {
 public:
};

OpenTreasuryGachaAck::OpenTreasuryGachaAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.OpenTreasuryGachaAck)
}
OpenTreasuryGachaAck::OpenTreasuryGachaAck(const OpenTreasuryGachaAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OpenTreasuryGachaAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , decltype(_impl_.free_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.ok_, &from._impl_.ok_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.free_) -
    reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.free_));
  // @@protoc_insertion_point(copy_constructor:idlepb.OpenTreasuryGachaAck)
}

inline void OpenTreasuryGachaAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , decltype(_impl_.free_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OpenTreasuryGachaAck::~OpenTreasuryGachaAck() {
  // @@protoc_insertion_point(destructor:idlepb.OpenTreasuryGachaAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OpenTreasuryGachaAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OpenTreasuryGachaAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OpenTreasuryGachaAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.OpenTreasuryGachaAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ok_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.free_) -
      reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.free_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenTreasuryGachaAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool free = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.free_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OpenTreasuryGachaAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.OpenTreasuryGachaAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // bool free = 2;
  if (this->_internal_free() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_free(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.OpenTreasuryGachaAck)
  return target;
}

size_t OpenTreasuryGachaAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.OpenTreasuryGachaAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  // bool free = 2;
  if (this->_internal_free() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OpenTreasuryGachaAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OpenTreasuryGachaAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OpenTreasuryGachaAck::GetClassData() const { return &_class_data_; }


void OpenTreasuryGachaAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OpenTreasuryGachaAck*>(&to_msg);
  auto& from = static_cast<const OpenTreasuryGachaAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.OpenTreasuryGachaAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  if (from._internal_free() != 0) {
    _this->_internal_set_free(from._internal_free());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OpenTreasuryGachaAck::CopyFrom(const OpenTreasuryGachaAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.OpenTreasuryGachaAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenTreasuryGachaAck::IsInitialized() const {
  return true;
}

void OpenTreasuryGachaAck::InternalSwap(OpenTreasuryGachaAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpenTreasuryGachaAck, _impl_.free_)
      + sizeof(OpenTreasuryGachaAck::_impl_.free_)
      - PROTOBUF_FIELD_OFFSET(OpenTreasuryGachaAck, _impl_.ok_)>(
          reinterpret_cast<char*>(&_impl_.ok_),
          reinterpret_cast<char*>(&other->_impl_.ok_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenTreasuryGachaAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[294]);
}

// ===================================================================

class RefreshTreasuryShopReq::_Internal {
 public:
};

RefreshTreasuryShopReq::RefreshTreasuryShopReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshTreasuryShopReq)
}
RefreshTreasuryShopReq::RefreshTreasuryShopReq(const RefreshTreasuryShopReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RefreshTreasuryShopReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshTreasuryShopReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshTreasuryShopReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshTreasuryShopReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RefreshTreasuryShopReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[295]);
}

// ===================================================================

class RefreshTreasuryShopAck::_Internal {
 public:
};

void RefreshTreasuryShopAck::clear_items() {
  _impl_.items_.Clear();
}
RefreshTreasuryShopAck::RefreshTreasuryShopAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RefreshTreasuryShopAck)
}
RefreshTreasuryShopAck::RefreshTreasuryShopAck(const RefreshTreasuryShopAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RefreshTreasuryShopAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RefreshTreasuryShopAck)
}

inline void RefreshTreasuryShopAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RefreshTreasuryShopAck::~RefreshTreasuryShopAck() {
  // @@protoc_insertion_point(destructor:idlepb.RefreshTreasuryShopAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RefreshTreasuryShopAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void RefreshTreasuryShopAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RefreshTreasuryShopAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RefreshTreasuryShopAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefreshTreasuryShopAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.TreasuryShopItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RefreshTreasuryShopAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RefreshTreasuryShopAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.TreasuryShopItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RefreshTreasuryShopAck)
  return target;
}

size_t RefreshTreasuryShopAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RefreshTreasuryShopAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.TreasuryShopItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RefreshTreasuryShopAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RefreshTreasuryShopAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RefreshTreasuryShopAck::GetClassData() const { return &_class_data_; }


void RefreshTreasuryShopAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RefreshTreasuryShopAck*>(&to_msg);
  auto& from = static_cast<const RefreshTreasuryShopAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RefreshTreasuryShopAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshTreasuryShopAck::CopyFrom(const RefreshTreasuryShopAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RefreshTreasuryShopAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshTreasuryShopAck::IsInitialized() const {
  return true;
}

void RefreshTreasuryShopAck::InternalSwap(RefreshTreasuryShopAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RefreshTreasuryShopAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[296]);
}

// ===================================================================

class TreasuryShopBuyReq::_Internal {
 public:
};

TreasuryShopBuyReq::TreasuryShopBuyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.TreasuryShopBuyReq)
}
TreasuryShopBuyReq::TreasuryShopBuyReq(const TreasuryShopBuyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TreasuryShopBuyReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.TreasuryShopBuyReq)
}

inline void TreasuryShopBuyReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TreasuryShopBuyReq::~TreasuryShopBuyReq() {
  // @@protoc_insertion_point(destructor:idlepb.TreasuryShopBuyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TreasuryShopBuyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TreasuryShopBuyReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TreasuryShopBuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.TreasuryShopBuyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TreasuryShopBuyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TreasuryShopBuyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.TreasuryShopBuyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.TreasuryShopBuyReq)
  return target;
}

size_t TreasuryShopBuyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.TreasuryShopBuyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TreasuryShopBuyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TreasuryShopBuyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TreasuryShopBuyReq::GetClassData() const { return &_class_data_; }


void TreasuryShopBuyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TreasuryShopBuyReq*>(&to_msg);
  auto& from = static_cast<const TreasuryShopBuyReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.TreasuryShopBuyReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TreasuryShopBuyReq::CopyFrom(const TreasuryShopBuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.TreasuryShopBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasuryShopBuyReq::IsInitialized() const {
  return true;
}

void TreasuryShopBuyReq::InternalSwap(TreasuryShopBuyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.index_, other->_impl_.index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TreasuryShopBuyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[297]);
}

// ===================================================================

class TreasuryShopBuyAck::_Internal {
 public:
};

TreasuryShopBuyAck::TreasuryShopBuyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.TreasuryShopBuyAck)
}
TreasuryShopBuyAck::TreasuryShopBuyAck(const TreasuryShopBuyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TreasuryShopBuyAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.TreasuryShopBuyAck)
}

inline void TreasuryShopBuyAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TreasuryShopBuyAck::~TreasuryShopBuyAck() {
  // @@protoc_insertion_point(destructor:idlepb.TreasuryShopBuyAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TreasuryShopBuyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TreasuryShopBuyAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TreasuryShopBuyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.TreasuryShopBuyAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TreasuryShopBuyAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TreasuryShopBuyAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.TreasuryShopBuyAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.TreasuryShopBuyAck)
  return target;
}

size_t TreasuryShopBuyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.TreasuryShopBuyAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TreasuryShopBuyAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TreasuryShopBuyAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TreasuryShopBuyAck::GetClassData() const { return &_class_data_; }


void TreasuryShopBuyAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TreasuryShopBuyAck*>(&to_msg);
  auto& from = static_cast<const TreasuryShopBuyAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.TreasuryShopBuyAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TreasuryShopBuyAck::CopyFrom(const TreasuryShopBuyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.TreasuryShopBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TreasuryShopBuyAck::IsInitialized() const {
  return true;
}

void TreasuryShopBuyAck::InternalSwap(TreasuryShopBuyAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TreasuryShopBuyAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[298]);
}

// ===================================================================

class GetLifeCounterDataReq::_Internal {
 public:
};

GetLifeCounterDataReq::GetLifeCounterDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLifeCounterDataReq)
}
GetLifeCounterDataReq::GetLifeCounterDataReq(const GetLifeCounterDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLifeCounterDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLifeCounterDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLifeCounterDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLifeCounterDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLifeCounterDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[299]);
}

// ===================================================================

class GetLifeCounterDataAck::_Internal {
 public:
  static const ::idlepb::RoleLifeCounterData& data(const GetLifeCounterDataAck* msg);
};

const ::idlepb::RoleLifeCounterData&
GetLifeCounterDataAck::_Internal::data(const GetLifeCounterDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetLifeCounterDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetLifeCounterDataAck::GetLifeCounterDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetLifeCounterDataAck)
}
GetLifeCounterDataAck::GetLifeCounterDataAck(const GetLifeCounterDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLifeCounterDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleLifeCounterData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetLifeCounterDataAck)
}

inline void GetLifeCounterDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLifeCounterDataAck::~GetLifeCounterDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetLifeCounterDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLifeCounterDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetLifeCounterDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLifeCounterDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetLifeCounterDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLifeCounterDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleLifeCounterData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLifeCounterDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetLifeCounterDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleLifeCounterData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetLifeCounterDataAck)
  return target;
}

size_t GetLifeCounterDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetLifeCounterDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleLifeCounterData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLifeCounterDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLifeCounterDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLifeCounterDataAck::GetClassData() const { return &_class_data_; }


void GetLifeCounterDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLifeCounterDataAck*>(&to_msg);
  auto& from = static_cast<const GetLifeCounterDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetLifeCounterDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleLifeCounterData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLifeCounterDataAck::CopyFrom(const GetLifeCounterDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetLifeCounterDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLifeCounterDataAck::IsInitialized() const {
  return true;
}

void GetLifeCounterDataAck::InternalSwap(GetLifeCounterDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLifeCounterDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[300]);
}

// ===================================================================

class UpdateLifeCounter::_Internal {
 public:
};

UpdateLifeCounter::UpdateLifeCounter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateLifeCounter)
}
UpdateLifeCounter::UpdateLifeCounter(const UpdateLifeCounter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateLifeCounter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.function_type_){}
    , decltype(_impl_.target_id_){}
    , decltype(_impl_.new_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.function_type_, &from._impl_.function_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.new_num_) -
    reinterpret_cast<char*>(&_impl_.function_type_)) + sizeof(_impl_.new_num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateLifeCounter)
}

inline void UpdateLifeCounter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.function_type_){0}
    , decltype(_impl_.target_id_){0}
    , decltype(_impl_.new_num_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateLifeCounter::~UpdateLifeCounter() {
  // @@protoc_insertion_point(destructor:idlepb.UpdateLifeCounter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLifeCounter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateLifeCounter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateLifeCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpdateLifeCounter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.function_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.new_num_) -
      reinterpret_cast<char*>(&_impl_.function_type_)) + sizeof(_impl_.new_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLifeCounter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 function_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.function_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 new_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.new_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLifeCounter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpdateLifeCounter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 function_type = 1;
  if (this->_internal_function_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_function_type(), target);
  }

  // int32 target_id = 2;
  if (this->_internal_target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_target_id(), target);
  }

  // int64 new_num = 3;
  if (this->_internal_new_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_new_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpdateLifeCounter)
  return target;
}

size_t UpdateLifeCounter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpdateLifeCounter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 function_type = 1;
  if (this->_internal_function_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_function_type());
  }

  // int32 target_id = 2;
  if (this->_internal_target_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_id());
  }

  // int64 new_num = 3;
  if (this->_internal_new_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_new_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLifeCounter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateLifeCounter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLifeCounter::GetClassData() const { return &_class_data_; }


void UpdateLifeCounter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateLifeCounter*>(&to_msg);
  auto& from = static_cast<const UpdateLifeCounter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpdateLifeCounter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_function_type() != 0) {
    _this->_internal_set_function_type(from._internal_function_type());
  }
  if (from._internal_target_id() != 0) {
    _this->_internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_new_num() != 0) {
    _this->_internal_set_new_num(from._internal_new_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLifeCounter::CopyFrom(const UpdateLifeCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpdateLifeCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLifeCounter::IsInitialized() const {
  return true;
}

void UpdateLifeCounter::InternalSwap(UpdateLifeCounter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateLifeCounter, _impl_.new_num_)
      + sizeof(UpdateLifeCounter::_impl_.new_num_)
      - PROTOBUF_FIELD_OFFSET(UpdateLifeCounter, _impl_.function_type_)>(
          reinterpret_cast<char*>(&_impl_.function_type_),
          reinterpret_cast<char*>(&other->_impl_.function_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLifeCounter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[301]);
}

// ===================================================================

class DoQuestFightReq::_Internal {
 public:
};

DoQuestFightReq::DoQuestFightReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoQuestFightReq)
}
DoQuestFightReq::DoQuestFightReq(const DoQuestFightReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoQuestFightReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.quest_id_ = from._impl_.quest_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DoQuestFightReq)
}

inline void DoQuestFightReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoQuestFightReq::~DoQuestFightReq() {
  // @@protoc_insertion_point(destructor:idlepb.DoQuestFightReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoQuestFightReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DoQuestFightReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoQuestFightReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoQuestFightReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quest_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoQuestFightReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoQuestFightReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoQuestFightReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_quest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoQuestFightReq)
  return target;
}

size_t DoQuestFightReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoQuestFightReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quest_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoQuestFightReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoQuestFightReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoQuestFightReq::GetClassData() const { return &_class_data_; }


void DoQuestFightReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoQuestFightReq*>(&to_msg);
  auto& from = static_cast<const DoQuestFightReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoQuestFightReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quest_id() != 0) {
    _this->_internal_set_quest_id(from._internal_quest_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoQuestFightReq::CopyFrom(const DoQuestFightReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoQuestFightReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoQuestFightReq::IsInitialized() const {
  return true;
}

void DoQuestFightReq::InternalSwap(DoQuestFightReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.quest_id_, other->_impl_.quest_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoQuestFightReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[302]);
}

// ===================================================================

class DoQuestFightAck::_Internal {
 public:
};

DoQuestFightAck::DoQuestFightAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoQuestFightAck)
}
DoQuestFightAck::DoQuestFightAck(const DoQuestFightAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoQuestFightAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DoQuestFightAck)
}

inline void DoQuestFightAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DoQuestFightAck::~DoQuestFightAck() {
  // @@protoc_insertion_point(destructor:idlepb.DoQuestFightAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoQuestFightAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DoQuestFightAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoQuestFightAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoQuestFightAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoQuestFightAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoQuestFightAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoQuestFightAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoQuestFightAck)
  return target;
}

size_t DoQuestFightAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoQuestFightAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoQuestFightAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoQuestFightAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoQuestFightAck::GetClassData() const { return &_class_data_; }


void DoQuestFightAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoQuestFightAck*>(&to_msg);
  auto& from = static_cast<const DoQuestFightAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoQuestFightAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoQuestFightAck::CopyFrom(const DoQuestFightAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoQuestFightAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoQuestFightAck::IsInitialized() const {
  return true;
}

void DoQuestFightAck::InternalSwap(DoQuestFightAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DoQuestFightAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[303]);
}

// ===================================================================

class QuestFightQuickEndReq::_Internal {
 public:
};

QuestFightQuickEndReq::QuestFightQuickEndReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.QuestFightQuickEndReq)
}
QuestFightQuickEndReq::QuestFightQuickEndReq(const QuestFightQuickEndReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuestFightQuickEndReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_exit_ = from._impl_.is_exit_;
  // @@protoc_insertion_point(copy_constructor:idlepb.QuestFightQuickEndReq)
}

inline void QuestFightQuickEndReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuestFightQuickEndReq::~QuestFightQuickEndReq() {
  // @@protoc_insertion_point(destructor:idlepb.QuestFightQuickEndReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuestFightQuickEndReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QuestFightQuickEndReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuestFightQuickEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.QuestFightQuickEndReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_exit_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuestFightQuickEndReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_exit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuestFightQuickEndReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.QuestFightQuickEndReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_exit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.QuestFightQuickEndReq)
  return target;
}

size_t QuestFightQuickEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.QuestFightQuickEndReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuestFightQuickEndReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuestFightQuickEndReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuestFightQuickEndReq::GetClassData() const { return &_class_data_; }


void QuestFightQuickEndReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuestFightQuickEndReq*>(&to_msg);
  auto& from = static_cast<const QuestFightQuickEndReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.QuestFightQuickEndReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_exit() != 0) {
    _this->_internal_set_is_exit(from._internal_is_exit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuestFightQuickEndReq::CopyFrom(const QuestFightQuickEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.QuestFightQuickEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestFightQuickEndReq::IsInitialized() const {
  return true;
}

void QuestFightQuickEndReq::InternalSwap(QuestFightQuickEndReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_exit_, other->_impl_.is_exit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuestFightQuickEndReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[304]);
}

// ===================================================================

class QuestFightQuickEndAck::_Internal {
 public:
};

QuestFightQuickEndAck::QuestFightQuickEndAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.QuestFightQuickEndAck)
}
QuestFightQuickEndAck::QuestFightQuickEndAck(const QuestFightQuickEndAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QuestFightQuickEndAck* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.QuestFightQuickEndAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuestFightQuickEndAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuestFightQuickEndAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QuestFightQuickEndAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[305]);
}

// ===================================================================

class NotifyQuestFightChallengeOver::_Internal {
 public:
};

NotifyQuestFightChallengeOver::NotifyQuestFightChallengeOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyQuestFightChallengeOver)
}
NotifyQuestFightChallengeOver::NotifyQuestFightChallengeOver(const NotifyQuestFightChallengeOver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyQuestFightChallengeOver* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){}
    , decltype(_impl_.win_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.quest_id_, &from._impl_.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.win_) -
    reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.win_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyQuestFightChallengeOver)
}

inline void NotifyQuestFightChallengeOver::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.quest_id_){0}
    , decltype(_impl_.win_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyQuestFightChallengeOver::~NotifyQuestFightChallengeOver() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyQuestFightChallengeOver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyQuestFightChallengeOver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyQuestFightChallengeOver::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyQuestFightChallengeOver::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyQuestFightChallengeOver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.win_) -
      reinterpret_cast<char*>(&_impl_.quest_id_)) + sizeof(_impl_.win_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyQuestFightChallengeOver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 quest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.quest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool win = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyQuestFightChallengeOver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyQuestFightChallengeOver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_quest_id(), target);
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_win(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyQuestFightChallengeOver)
  return target;
}

size_t NotifyQuestFightChallengeOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyQuestFightChallengeOver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 quest_id = 1;
  if (this->_internal_quest_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_quest_id());
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyQuestFightChallengeOver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyQuestFightChallengeOver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyQuestFightChallengeOver::GetClassData() const { return &_class_data_; }


void NotifyQuestFightChallengeOver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyQuestFightChallengeOver*>(&to_msg);
  auto& from = static_cast<const NotifyQuestFightChallengeOver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyQuestFightChallengeOver)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quest_id() != 0) {
    _this->_internal_set_quest_id(from._internal_quest_id());
  }
  if (from._internal_win() != 0) {
    _this->_internal_set_win(from._internal_win());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyQuestFightChallengeOver::CopyFrom(const NotifyQuestFightChallengeOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyQuestFightChallengeOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyQuestFightChallengeOver::IsInitialized() const {
  return true;
}

void NotifyQuestFightChallengeOver::InternalSwap(NotifyQuestFightChallengeOver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyQuestFightChallengeOver, _impl_.win_)
      + sizeof(NotifyQuestFightChallengeOver::_impl_.win_)
      - PROTOBUF_FIELD_OFFSET(NotifyQuestFightChallengeOver, _impl_.quest_id_)>(
          reinterpret_cast<char*>(&_impl_.quest_id_),
          reinterpret_cast<char*>(&other->_impl_.quest_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyQuestFightChallengeOver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[306]);
}

// ===================================================================

class GetAppearanceDataReq::_Internal {
 public:
};

GetAppearanceDataReq::GetAppearanceDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetAppearanceDataReq)
}
GetAppearanceDataReq::GetAppearanceDataReq(const GetAppearanceDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetAppearanceDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetAppearanceDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAppearanceDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAppearanceDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetAppearanceDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[307]);
}

// ===================================================================

class GetAppearanceDataAck::_Internal {
 public:
  static const ::idlepb::RoleAppearanceData& data(const GetAppearanceDataAck* msg);
};

const ::idlepb::RoleAppearanceData&
GetAppearanceDataAck::_Internal::data(const GetAppearanceDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetAppearanceDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetAppearanceDataAck::GetAppearanceDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetAppearanceDataAck)
}
GetAppearanceDataAck::GetAppearanceDataAck(const GetAppearanceDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAppearanceDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAppearanceData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetAppearanceDataAck)
}

inline void GetAppearanceDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAppearanceDataAck::~GetAppearanceDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetAppearanceDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAppearanceDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetAppearanceDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAppearanceDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetAppearanceDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAppearanceDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAppearanceData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAppearanceDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetAppearanceDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAppearanceData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetAppearanceDataAck)
  return target;
}

size_t GetAppearanceDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetAppearanceDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAppearanceData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAppearanceDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAppearanceDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAppearanceDataAck::GetClassData() const { return &_class_data_; }


void GetAppearanceDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAppearanceDataAck*>(&to_msg);
  auto& from = static_cast<const GetAppearanceDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetAppearanceDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAppearanceData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAppearanceDataAck::CopyFrom(const GetAppearanceDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetAppearanceDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppearanceDataAck::IsInitialized() const {
  return true;
}

void GetAppearanceDataAck::InternalSwap(GetAppearanceDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAppearanceDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[308]);
}

// ===================================================================

class AppearanceAddReq::_Internal {
 public:
};

AppearanceAddReq::AppearanceAddReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceAddReq)
}
AppearanceAddReq::AppearanceAddReq(const AppearanceAddReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceAddReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_id_ = from._impl_.item_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceAddReq)
}

inline void AppearanceAddReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceAddReq::~AppearanceAddReq() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceAddReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceAddReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceAddReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceAddReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceAddReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceAddReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceAddReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceAddReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceAddReq)
  return target;
}

size_t AppearanceAddReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceAddReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceAddReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceAddReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceAddReq::GetClassData() const { return &_class_data_; }


void AppearanceAddReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceAddReq*>(&to_msg);
  auto& from = static_cast<const AppearanceAddReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceAddReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceAddReq::CopyFrom(const AppearanceAddReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceAddReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceAddReq::IsInitialized() const {
  return true;
}

void AppearanceAddReq::InternalSwap(AppearanceAddReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_id_, other->_impl_.item_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceAddReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[309]);
}

// ===================================================================

class AppearanceAddAck::_Internal {
 public:
};

AppearanceAddAck::AppearanceAddAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceAddAck)
}
AppearanceAddAck::AppearanceAddAck(const AppearanceAddAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceAddAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceAddAck)
}

inline void AppearanceAddAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceAddAck::~AppearanceAddAck() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceAddAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceAddAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceAddAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceAddAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceAddAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceAddAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceAddAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceAddAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceAddAck)
  return target;
}

size_t AppearanceAddAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceAddAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceAddAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceAddAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceAddAck::GetClassData() const { return &_class_data_; }


void AppearanceAddAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceAddAck*>(&to_msg);
  auto& from = static_cast<const AppearanceAddAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceAddAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceAddAck::CopyFrom(const AppearanceAddAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceAddAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceAddAck::IsInitialized() const {
  return true;
}

void AppearanceAddAck::InternalSwap(AppearanceAddAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceAddAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[310]);
}

// ===================================================================

class AppearanceActiveReq::_Internal {
 public:
};

AppearanceActiveReq::AppearanceActiveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceActiveReq)
}
AppearanceActiveReq::AppearanceActiveReq(const AppearanceActiveReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceActiveReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceActiveReq)
}

inline void AppearanceActiveReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceActiveReq::~AppearanceActiveReq() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceActiveReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceActiveReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceActiveReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceActiveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceActiveReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceActiveReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceActiveReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceActiveReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceActiveReq)
  return target;
}

size_t AppearanceActiveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceActiveReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceActiveReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceActiveReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceActiveReq::GetClassData() const { return &_class_data_; }


void AppearanceActiveReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceActiveReq*>(&to_msg);
  auto& from = static_cast<const AppearanceActiveReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceActiveReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceActiveReq::CopyFrom(const AppearanceActiveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceActiveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceActiveReq::IsInitialized() const {
  return true;
}

void AppearanceActiveReq::InternalSwap(AppearanceActiveReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceActiveReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[311]);
}

// ===================================================================

class AppearanceActiveAck::_Internal {
 public:
};

AppearanceActiveAck::AppearanceActiveAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceActiveAck)
}
AppearanceActiveAck::AppearanceActiveAck(const AppearanceActiveAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceActiveAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceActiveAck)
}

inline void AppearanceActiveAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceActiveAck::~AppearanceActiveAck() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceActiveAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceActiveAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceActiveAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceActiveAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceActiveAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceActiveAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceActiveAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceActiveAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceActiveAck)
  return target;
}

size_t AppearanceActiveAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceActiveAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceActiveAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceActiveAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceActiveAck::GetClassData() const { return &_class_data_; }


void AppearanceActiveAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceActiveAck*>(&to_msg);
  auto& from = static_cast<const AppearanceActiveAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceActiveAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceActiveAck::CopyFrom(const AppearanceActiveAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceActiveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceActiveAck::IsInitialized() const {
  return true;
}

void AppearanceActiveAck::InternalSwap(AppearanceActiveAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceActiveAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[312]);
}

// ===================================================================

class AppearanceWearReq::_Internal {
 public:
};

AppearanceWearReq::AppearanceWearReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceWearReq)
}
AppearanceWearReq::AppearanceWearReq(const AppearanceWearReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceWearReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.group_id_ = from._impl_.group_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceWearReq)
}

inline void AppearanceWearReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.group_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceWearReq::~AppearanceWearReq() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceWearReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceWearReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceWearReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceWearReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceWearReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceWearReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 group_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceWearReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceWearReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_group_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceWearReq)
  return target;
}

size_t AppearanceWearReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceWearReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 group_id = 1;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceWearReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceWearReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceWearReq::GetClassData() const { return &_class_data_; }


void AppearanceWearReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceWearReq*>(&to_msg);
  auto& from = static_cast<const AppearanceWearReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceWearReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceWearReq::CopyFrom(const AppearanceWearReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceWearReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceWearReq::IsInitialized() const {
  return true;
}

void AppearanceWearReq::InternalSwap(AppearanceWearReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.group_id_, other->_impl_.group_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceWearReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[313]);
}

// ===================================================================

class AppearanceWearAck::_Internal {
 public:
};

AppearanceWearAck::AppearanceWearAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceWearAck)
}
AppearanceWearAck::AppearanceWearAck(const AppearanceWearAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceWearAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceWearAck)
}

inline void AppearanceWearAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceWearAck::~AppearanceWearAck() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceWearAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceWearAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceWearAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceWearAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceWearAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceWearAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceWearAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceWearAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceWearAck)
  return target;
}

size_t AppearanceWearAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceWearAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceWearAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceWearAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceWearAck::GetClassData() const { return &_class_data_; }


void AppearanceWearAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceWearAck*>(&to_msg);
  auto& from = static_cast<const AppearanceWearAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceWearAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceWearAck::CopyFrom(const AppearanceWearAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceWearAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceWearAck::IsInitialized() const {
  return true;
}

void AppearanceWearAck::InternalSwap(AppearanceWearAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceWearAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[314]);
}

// ===================================================================

class AppearanceChangeSkTypeReq::_Internal {
 public:
};

AppearanceChangeSkTypeReq::AppearanceChangeSkTypeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceChangeSkTypeReq)
}
AppearanceChangeSkTypeReq::AppearanceChangeSkTypeReq(const AppearanceChangeSkTypeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceChangeSkTypeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sk_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.sk_type_ = from._impl_.sk_type_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceChangeSkTypeReq)
}

inline void AppearanceChangeSkTypeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sk_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceChangeSkTypeReq::~AppearanceChangeSkTypeReq() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceChangeSkTypeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceChangeSkTypeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceChangeSkTypeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceChangeSkTypeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceChangeSkTypeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sk_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceChangeSkTypeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 sk_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sk_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceChangeSkTypeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceChangeSkTypeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sk_type = 1;
  if (this->_internal_sk_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_sk_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceChangeSkTypeReq)
  return target;
}

size_t AppearanceChangeSkTypeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceChangeSkTypeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sk_type = 1;
  if (this->_internal_sk_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sk_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceChangeSkTypeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceChangeSkTypeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceChangeSkTypeReq::GetClassData() const { return &_class_data_; }


void AppearanceChangeSkTypeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceChangeSkTypeReq*>(&to_msg);
  auto& from = static_cast<const AppearanceChangeSkTypeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceChangeSkTypeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sk_type() != 0) {
    _this->_internal_set_sk_type(from._internal_sk_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceChangeSkTypeReq::CopyFrom(const AppearanceChangeSkTypeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceChangeSkTypeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceChangeSkTypeReq::IsInitialized() const {
  return true;
}

void AppearanceChangeSkTypeReq::InternalSwap(AppearanceChangeSkTypeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.sk_type_, other->_impl_.sk_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceChangeSkTypeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[315]);
}

// ===================================================================

class AppearanceChangeSkTypeAck::_Internal {
 public:
};

AppearanceChangeSkTypeAck::AppearanceChangeSkTypeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceChangeSkTypeAck)
}
AppearanceChangeSkTypeAck::AppearanceChangeSkTypeAck(const AppearanceChangeSkTypeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceChangeSkTypeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceChangeSkTypeAck)
}

inline void AppearanceChangeSkTypeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceChangeSkTypeAck::~AppearanceChangeSkTypeAck() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceChangeSkTypeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceChangeSkTypeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceChangeSkTypeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceChangeSkTypeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceChangeSkTypeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceChangeSkTypeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceChangeSkTypeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceChangeSkTypeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceChangeSkTypeAck)
  return target;
}

size_t AppearanceChangeSkTypeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceChangeSkTypeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceChangeSkTypeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceChangeSkTypeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceChangeSkTypeAck::GetClassData() const { return &_class_data_; }


void AppearanceChangeSkTypeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceChangeSkTypeAck*>(&to_msg);
  auto& from = static_cast<const AppearanceChangeSkTypeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceChangeSkTypeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceChangeSkTypeAck::CopyFrom(const AppearanceChangeSkTypeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceChangeSkTypeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceChangeSkTypeAck::IsInitialized() const {
  return true;
}

void AppearanceChangeSkTypeAck::InternalSwap(AppearanceChangeSkTypeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceChangeSkTypeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[316]);
}

// ===================================================================

class AppearanceBuyReq::_Internal {
 public:
};

AppearanceBuyReq::AppearanceBuyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceBuyReq)
}
AppearanceBuyReq::AppearanceBuyReq(const AppearanceBuyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceBuyReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shop_index_){}
    , decltype(_impl_.item_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.shop_index_, &from._impl_.shop_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_index_) -
    reinterpret_cast<char*>(&_impl_.shop_index_)) + sizeof(_impl_.item_index_));
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceBuyReq)
}

inline void AppearanceBuyReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.shop_index_){0}
    , decltype(_impl_.item_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceBuyReq::~AppearanceBuyReq() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceBuyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceBuyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceBuyReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceBuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceBuyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.shop_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_index_) -
      reinterpret_cast<char*>(&_impl_.shop_index_)) + sizeof(_impl_.item_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceBuyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 shop_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.shop_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceBuyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceBuyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 shop_index = 1;
  if (this->_internal_shop_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_shop_index(), target);
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceBuyReq)
  return target;
}

size_t AppearanceBuyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceBuyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 shop_index = 1;
  if (this->_internal_shop_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_shop_index());
  }

  // int32 item_index = 2;
  if (this->_internal_item_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceBuyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceBuyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceBuyReq::GetClassData() const { return &_class_data_; }


void AppearanceBuyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceBuyReq*>(&to_msg);
  auto& from = static_cast<const AppearanceBuyReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceBuyReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_shop_index() != 0) {
    _this->_internal_set_shop_index(from._internal_shop_index());
  }
  if (from._internal_item_index() != 0) {
    _this->_internal_set_item_index(from._internal_item_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceBuyReq::CopyFrom(const AppearanceBuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceBuyReq::IsInitialized() const {
  return true;
}

void AppearanceBuyReq::InternalSwap(AppearanceBuyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceBuyReq, _impl_.item_index_)
      + sizeof(AppearanceBuyReq::_impl_.item_index_)
      - PROTOBUF_FIELD_OFFSET(AppearanceBuyReq, _impl_.shop_index_)>(
          reinterpret_cast<char*>(&_impl_.shop_index_),
          reinterpret_cast<char*>(&other->_impl_.shop_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceBuyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[317]);
}

// ===================================================================

class AppearanceBuyAck::_Internal {
 public:
};

AppearanceBuyAck::AppearanceBuyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AppearanceBuyAck)
}
AppearanceBuyAck::AppearanceBuyAck(const AppearanceBuyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AppearanceBuyAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.AppearanceBuyAck)
}

inline void AppearanceBuyAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AppearanceBuyAck::~AppearanceBuyAck() {
  // @@protoc_insertion_point(destructor:idlepb.AppearanceBuyAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AppearanceBuyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AppearanceBuyAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AppearanceBuyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AppearanceBuyAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppearanceBuyAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppearanceBuyAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AppearanceBuyAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AppearanceBuyAck)
  return target;
}

size_t AppearanceBuyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AppearanceBuyAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppearanceBuyAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AppearanceBuyAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppearanceBuyAck::GetClassData() const { return &_class_data_; }


void AppearanceBuyAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AppearanceBuyAck*>(&to_msg);
  auto& from = static_cast<const AppearanceBuyAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AppearanceBuyAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceBuyAck::CopyFrom(const AppearanceBuyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AppearanceBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppearanceBuyAck::IsInitialized() const {
  return true;
}

void AppearanceBuyAck::InternalSwap(AppearanceBuyAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AppearanceBuyAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[318]);
}

// ===================================================================

class GetArenaCheckListDataReq::_Internal {
 public:
};

GetArenaCheckListDataReq::GetArenaCheckListDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetArenaCheckListDataReq)
}
GetArenaCheckListDataReq::GetArenaCheckListDataReq(const GetArenaCheckListDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetArenaCheckListDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetArenaCheckListDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArenaCheckListDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArenaCheckListDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetArenaCheckListDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[319]);
}

// ===================================================================

class GetArenaCheckListDataAck::_Internal {
 public:
  static const ::idlepb::RoleArenaCheckListData& data(const GetArenaCheckListDataAck* msg);
};

const ::idlepb::RoleArenaCheckListData&
GetArenaCheckListDataAck::_Internal::data(const GetArenaCheckListDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetArenaCheckListDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetArenaCheckListDataAck::GetArenaCheckListDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetArenaCheckListDataAck)
}
GetArenaCheckListDataAck::GetArenaCheckListDataAck(const GetArenaCheckListDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArenaCheckListDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleArenaCheckListData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetArenaCheckListDataAck)
}

inline void GetArenaCheckListDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArenaCheckListDataAck::~GetArenaCheckListDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetArenaCheckListDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArenaCheckListDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetArenaCheckListDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArenaCheckListDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetArenaCheckListDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArenaCheckListDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleArenaCheckListData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArenaCheckListDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetArenaCheckListDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleArenaCheckListData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetArenaCheckListDataAck)
  return target;
}

size_t GetArenaCheckListDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetArenaCheckListDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleArenaCheckListData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArenaCheckListDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArenaCheckListDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArenaCheckListDataAck::GetClassData() const { return &_class_data_; }


void GetArenaCheckListDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArenaCheckListDataAck*>(&to_msg);
  auto& from = static_cast<const GetArenaCheckListDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetArenaCheckListDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleArenaCheckListData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArenaCheckListDataAck::CopyFrom(const GetArenaCheckListDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetArenaCheckListDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArenaCheckListDataAck::IsInitialized() const {
  return true;
}

void GetArenaCheckListDataAck::InternalSwap(GetArenaCheckListDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArenaCheckListDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[320]);
}

// ===================================================================

class ArenaCheckListSubmitReq::_Internal {
 public:
};

ArenaCheckListSubmitReq::ArenaCheckListSubmitReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ArenaCheckListSubmitReq)
}
ArenaCheckListSubmitReq::ArenaCheckListSubmitReq(const ArenaCheckListSubmitReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArenaCheckListSubmitReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.check_list_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.check_list_id_ = from._impl_.check_list_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ArenaCheckListSubmitReq)
}

inline void ArenaCheckListSubmitReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.check_list_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArenaCheckListSubmitReq::~ArenaCheckListSubmitReq() {
  // @@protoc_insertion_point(destructor:idlepb.ArenaCheckListSubmitReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArenaCheckListSubmitReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ArenaCheckListSubmitReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArenaCheckListSubmitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ArenaCheckListSubmitReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.check_list_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArenaCheckListSubmitReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 check_list_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.check_list_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArenaCheckListSubmitReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ArenaCheckListSubmitReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 check_list_id = 1;
  if (this->_internal_check_list_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_check_list_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ArenaCheckListSubmitReq)
  return target;
}

size_t ArenaCheckListSubmitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ArenaCheckListSubmitReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 check_list_id = 1;
  if (this->_internal_check_list_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_check_list_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArenaCheckListSubmitReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArenaCheckListSubmitReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArenaCheckListSubmitReq::GetClassData() const { return &_class_data_; }


void ArenaCheckListSubmitReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArenaCheckListSubmitReq*>(&to_msg);
  auto& from = static_cast<const ArenaCheckListSubmitReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ArenaCheckListSubmitReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_check_list_id() != 0) {
    _this->_internal_set_check_list_id(from._internal_check_list_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArenaCheckListSubmitReq::CopyFrom(const ArenaCheckListSubmitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ArenaCheckListSubmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaCheckListSubmitReq::IsInitialized() const {
  return true;
}

void ArenaCheckListSubmitReq::InternalSwap(ArenaCheckListSubmitReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.check_list_id_, other->_impl_.check_list_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArenaCheckListSubmitReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[321]);
}

// ===================================================================

class ArenaCheckListSubmitAck::_Internal {
 public:
  static const ::idlepb::ArenaCheckListData& data(const ArenaCheckListSubmitAck* msg);
};

const ::idlepb::ArenaCheckListData&
ArenaCheckListSubmitAck::_Internal::data(const ArenaCheckListSubmitAck* msg) {
  return *msg->_impl_.data_;
}
void ArenaCheckListSubmitAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ArenaCheckListSubmitAck::ArenaCheckListSubmitAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ArenaCheckListSubmitAck)
}
ArenaCheckListSubmitAck::ArenaCheckListSubmitAck(const ArenaCheckListSubmitAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArenaCheckListSubmitAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::ArenaCheckListData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ArenaCheckListSubmitAck)
}

inline void ArenaCheckListSubmitAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArenaCheckListSubmitAck::~ArenaCheckListSubmitAck() {
  // @@protoc_insertion_point(destructor:idlepb.ArenaCheckListSubmitAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArenaCheckListSubmitAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ArenaCheckListSubmitAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArenaCheckListSubmitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ArenaCheckListSubmitAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArenaCheckListSubmitAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ArenaCheckListData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArenaCheckListSubmitAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ArenaCheckListSubmitAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.ArenaCheckListData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ArenaCheckListSubmitAck)
  return target;
}

size_t ArenaCheckListSubmitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ArenaCheckListSubmitAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ArenaCheckListData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArenaCheckListSubmitAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArenaCheckListSubmitAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArenaCheckListSubmitAck::GetClassData() const { return &_class_data_; }


void ArenaCheckListSubmitAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArenaCheckListSubmitAck*>(&to_msg);
  auto& from = static_cast<const ArenaCheckListSubmitAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ArenaCheckListSubmitAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::ArenaCheckListData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArenaCheckListSubmitAck::CopyFrom(const ArenaCheckListSubmitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ArenaCheckListSubmitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaCheckListSubmitAck::IsInitialized() const {
  return true;
}

void ArenaCheckListSubmitAck::InternalSwap(ArenaCheckListSubmitAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArenaCheckListSubmitAck, _impl_.ok_)
      + sizeof(ArenaCheckListSubmitAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ArenaCheckListSubmitAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArenaCheckListSubmitAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[322]);
}

// ===================================================================

class ArenaCheckListRewardSubmitReq::_Internal {
 public:
};

ArenaCheckListRewardSubmitReq::ArenaCheckListRewardSubmitReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ArenaCheckListRewardSubmitReq)
}
ArenaCheckListRewardSubmitReq::ArenaCheckListRewardSubmitReq(const ArenaCheckListRewardSubmitReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArenaCheckListRewardSubmitReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reward_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.reward_id_ = from._impl_.reward_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ArenaCheckListRewardSubmitReq)
}

inline void ArenaCheckListRewardSubmitReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reward_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArenaCheckListRewardSubmitReq::~ArenaCheckListRewardSubmitReq() {
  // @@protoc_insertion_point(destructor:idlepb.ArenaCheckListRewardSubmitReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArenaCheckListRewardSubmitReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ArenaCheckListRewardSubmitReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArenaCheckListRewardSubmitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ArenaCheckListRewardSubmitReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reward_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArenaCheckListRewardSubmitReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 reward_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.reward_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArenaCheckListRewardSubmitReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ArenaCheckListRewardSubmitReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reward_id = 1;
  if (this->_internal_reward_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_reward_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ArenaCheckListRewardSubmitReq)
  return target;
}

size_t ArenaCheckListRewardSubmitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ArenaCheckListRewardSubmitReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reward_id = 1;
  if (this->_internal_reward_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_reward_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArenaCheckListRewardSubmitReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArenaCheckListRewardSubmitReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArenaCheckListRewardSubmitReq::GetClassData() const { return &_class_data_; }


void ArenaCheckListRewardSubmitReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArenaCheckListRewardSubmitReq*>(&to_msg);
  auto& from = static_cast<const ArenaCheckListRewardSubmitReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ArenaCheckListRewardSubmitReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reward_id() != 0) {
    _this->_internal_set_reward_id(from._internal_reward_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArenaCheckListRewardSubmitReq::CopyFrom(const ArenaCheckListRewardSubmitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ArenaCheckListRewardSubmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaCheckListRewardSubmitReq::IsInitialized() const {
  return true;
}

void ArenaCheckListRewardSubmitReq::InternalSwap(ArenaCheckListRewardSubmitReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reward_id_, other->_impl_.reward_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArenaCheckListRewardSubmitReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[323]);
}

// ===================================================================

class ArenaCheckListRewardSubmitAck::_Internal {
 public:
  static const ::idlepb::ArenaCheckListRewardData& data(const ArenaCheckListRewardSubmitAck* msg);
};

const ::idlepb::ArenaCheckListRewardData&
ArenaCheckListRewardSubmitAck::_Internal::data(const ArenaCheckListRewardSubmitAck* msg) {
  return *msg->_impl_.data_;
}
void ArenaCheckListRewardSubmitAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ArenaCheckListRewardSubmitAck::ArenaCheckListRewardSubmitAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ArenaCheckListRewardSubmitAck)
}
ArenaCheckListRewardSubmitAck::ArenaCheckListRewardSubmitAck(const ArenaCheckListRewardSubmitAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArenaCheckListRewardSubmitAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::ArenaCheckListRewardData(*from._impl_.data_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ArenaCheckListRewardSubmitAck)
}

inline void ArenaCheckListRewardSubmitAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArenaCheckListRewardSubmitAck::~ArenaCheckListRewardSubmitAck() {
  // @@protoc_insertion_point(destructor:idlepb.ArenaCheckListRewardSubmitAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArenaCheckListRewardSubmitAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ArenaCheckListRewardSubmitAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArenaCheckListRewardSubmitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ArenaCheckListRewardSubmitAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArenaCheckListRewardSubmitAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ArenaCheckListRewardData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArenaCheckListRewardSubmitAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ArenaCheckListRewardSubmitAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.ArenaCheckListRewardData data = 2;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ArenaCheckListRewardSubmitAck)
  return target;
}

size_t ArenaCheckListRewardSubmitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ArenaCheckListRewardSubmitAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.ArenaCheckListRewardData data = 2;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArenaCheckListRewardSubmitAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArenaCheckListRewardSubmitAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArenaCheckListRewardSubmitAck::GetClassData() const { return &_class_data_; }


void ArenaCheckListRewardSubmitAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArenaCheckListRewardSubmitAck*>(&to_msg);
  auto& from = static_cast<const ArenaCheckListRewardSubmitAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ArenaCheckListRewardSubmitAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::ArenaCheckListRewardData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArenaCheckListRewardSubmitAck::CopyFrom(const ArenaCheckListRewardSubmitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ArenaCheckListRewardSubmitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArenaCheckListRewardSubmitAck::IsInitialized() const {
  return true;
}

void ArenaCheckListRewardSubmitAck::InternalSwap(ArenaCheckListRewardSubmitAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArenaCheckListRewardSubmitAck, _impl_.ok_)
      + sizeof(ArenaCheckListRewardSubmitAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(ArenaCheckListRewardSubmitAck, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArenaCheckListRewardSubmitAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[324]);
}

// ===================================================================

class DungeonKillAllChallengeReq::_Internal {
 public:
};

DungeonKillAllChallengeReq::DungeonKillAllChallengeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllChallengeReq)
}
DungeonKillAllChallengeReq::DungeonKillAllChallengeReq(const DungeonKillAllChallengeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllChallengeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dungeon_uid_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dungeon_uid_id_ = from._impl_.dungeon_uid_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllChallengeReq)
}

inline void DungeonKillAllChallengeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dungeon_uid_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllChallengeReq::~DungeonKillAllChallengeReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllChallengeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllChallengeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllChallengeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllChallengeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllChallengeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dungeon_uid_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllChallengeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 dungeon_uid_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.dungeon_uid_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllChallengeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllChallengeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dungeon_uid_id = 1;
  if (this->_internal_dungeon_uid_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_dungeon_uid_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllChallengeReq)
  return target;
}

size_t DungeonKillAllChallengeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllChallengeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dungeon_uid_id = 1;
  if (this->_internal_dungeon_uid_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dungeon_uid_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllChallengeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllChallengeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllChallengeReq::GetClassData() const { return &_class_data_; }


void DungeonKillAllChallengeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllChallengeReq*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllChallengeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllChallengeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dungeon_uid_id() != 0) {
    _this->_internal_set_dungeon_uid_id(from._internal_dungeon_uid_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllChallengeReq::CopyFrom(const DungeonKillAllChallengeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllChallengeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllChallengeReq::IsInitialized() const {
  return true;
}

void DungeonKillAllChallengeReq::InternalSwap(DungeonKillAllChallengeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dungeon_uid_id_, other->_impl_.dungeon_uid_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllChallengeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[325]);
}

// ===================================================================

class DungeonKillAllChallengeAck::_Internal {
 public:
};

DungeonKillAllChallengeAck::DungeonKillAllChallengeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllChallengeAck)
}
DungeonKillAllChallengeAck::DungeonKillAllChallengeAck(const DungeonKillAllChallengeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllChallengeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllChallengeAck)
}

inline void DungeonKillAllChallengeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllChallengeAck::~DungeonKillAllChallengeAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllChallengeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllChallengeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllChallengeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllChallengeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllChallengeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllChallengeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllChallengeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllChallengeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllChallengeAck)
  return target;
}

size_t DungeonKillAllChallengeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllChallengeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllChallengeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllChallengeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllChallengeAck::GetClassData() const { return &_class_data_; }


void DungeonKillAllChallengeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllChallengeAck*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllChallengeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllChallengeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllChallengeAck::CopyFrom(const DungeonKillAllChallengeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllChallengeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllChallengeAck::IsInitialized() const {
  return true;
}

void DungeonKillAllChallengeAck::InternalSwap(DungeonKillAllChallengeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllChallengeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[326]);
}

// ===================================================================

class DungeonKillAllQuickEndReq::_Internal {
 public:
};

DungeonKillAllQuickEndReq::DungeonKillAllQuickEndReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllQuickEndReq)
}
DungeonKillAllQuickEndReq::DungeonKillAllQuickEndReq(const DungeonKillAllQuickEndReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllQuickEndReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_exit_ = from._impl_.is_exit_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllQuickEndReq)
}

inline void DungeonKillAllQuickEndReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllQuickEndReq::~DungeonKillAllQuickEndReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllQuickEndReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllQuickEndReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllQuickEndReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllQuickEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllQuickEndReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_exit_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllQuickEndReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_exit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllQuickEndReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllQuickEndReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_exit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllQuickEndReq)
  return target;
}

size_t DungeonKillAllQuickEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllQuickEndReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllQuickEndReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllQuickEndReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllQuickEndReq::GetClassData() const { return &_class_data_; }


void DungeonKillAllQuickEndReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllQuickEndReq*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllQuickEndReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllQuickEndReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_exit() != 0) {
    _this->_internal_set_is_exit(from._internal_is_exit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllQuickEndReq::CopyFrom(const DungeonKillAllQuickEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllQuickEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllQuickEndReq::IsInitialized() const {
  return true;
}

void DungeonKillAllQuickEndReq::InternalSwap(DungeonKillAllQuickEndReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_exit_, other->_impl_.is_exit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllQuickEndReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[327]);
}

// ===================================================================

class DungeonKillAllQuickEndAck::_Internal {
 public:
};

DungeonKillAllQuickEndAck::DungeonKillAllQuickEndAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllQuickEndAck)
}
DungeonKillAllQuickEndAck::DungeonKillAllQuickEndAck(const DungeonKillAllQuickEndAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllQuickEndAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllQuickEndAck)
}

inline void DungeonKillAllQuickEndAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllQuickEndAck::~DungeonKillAllQuickEndAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllQuickEndAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllQuickEndAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllQuickEndAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllQuickEndAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllQuickEndAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllQuickEndAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllQuickEndAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllQuickEndAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllQuickEndAck)
  return target;
}

size_t DungeonKillAllQuickEndAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllQuickEndAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllQuickEndAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllQuickEndAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllQuickEndAck::GetClassData() const { return &_class_data_; }


void DungeonKillAllQuickEndAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllQuickEndAck*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllQuickEndAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllQuickEndAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllQuickEndAck::CopyFrom(const DungeonKillAllQuickEndAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllQuickEndAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllQuickEndAck::IsInitialized() const {
  return true;
}

void DungeonKillAllQuickEndAck::InternalSwap(DungeonKillAllQuickEndAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllQuickEndAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[328]);
}

// ===================================================================

class NotifyDungeonKillAllChallengeOver::_Internal {
 public:
};

NotifyDungeonKillAllChallengeOver::NotifyDungeonKillAllChallengeOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyDungeonKillAllChallengeOver)
}
NotifyDungeonKillAllChallengeOver::NotifyDungeonKillAllChallengeOver(const NotifyDungeonKillAllChallengeOver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyDungeonKillAllChallengeOver* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , decltype(_impl_.win_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.win_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.win_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyDungeonKillAllChallengeOver)
}

inline void NotifyDungeonKillAllChallengeOver::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , decltype(_impl_.win_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyDungeonKillAllChallengeOver::~NotifyDungeonKillAllChallengeOver() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyDungeonKillAllChallengeOver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDungeonKillAllChallengeOver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDungeonKillAllChallengeOver::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyDungeonKillAllChallengeOver::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyDungeonKillAllChallengeOver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.win_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.win_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDungeonKillAllChallengeOver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool win = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDungeonKillAllChallengeOver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyDungeonKillAllChallengeOver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_win(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyDungeonKillAllChallengeOver)
  return target;
}

size_t NotifyDungeonKillAllChallengeOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyDungeonKillAllChallengeOver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDungeonKillAllChallengeOver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyDungeonKillAllChallengeOver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDungeonKillAllChallengeOver::GetClassData() const { return &_class_data_; }


void NotifyDungeonKillAllChallengeOver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyDungeonKillAllChallengeOver*>(&to_msg);
  auto& from = static_cast<const NotifyDungeonKillAllChallengeOver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyDungeonKillAllChallengeOver)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_win() != 0) {
    _this->_internal_set_win(from._internal_win());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDungeonKillAllChallengeOver::CopyFrom(const NotifyDungeonKillAllChallengeOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyDungeonKillAllChallengeOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDungeonKillAllChallengeOver::IsInitialized() const {
  return true;
}

void NotifyDungeonKillAllChallengeOver::InternalSwap(NotifyDungeonKillAllChallengeOver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyDungeonKillAllChallengeOver, _impl_.win_)
      + sizeof(NotifyDungeonKillAllChallengeOver::_impl_.win_)
      - PROTOBUF_FIELD_OFFSET(NotifyDungeonKillAllChallengeOver, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDungeonKillAllChallengeOver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[329]);
}

// ===================================================================

class NotifyDungeonKillAllChallengeCurWaveNum::_Internal {
 public:
};

NotifyDungeonKillAllChallengeCurWaveNum::NotifyDungeonKillAllChallengeCurWaveNum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
}
NotifyDungeonKillAllChallengeCurWaveNum::NotifyDungeonKillAllChallengeCurWaveNum(const NotifyDungeonKillAllChallengeCurWaveNum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyDungeonKillAllChallengeCurWaveNum* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , decltype(_impl_.curnum_){}
    , decltype(_impl_.maxnum_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.maxnum_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.maxnum_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
}

inline void NotifyDungeonKillAllChallengeCurWaveNum::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , decltype(_impl_.curnum_){0}
    , decltype(_impl_.maxnum_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyDungeonKillAllChallengeCurWaveNum::~NotifyDungeonKillAllChallengeCurWaveNum() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDungeonKillAllChallengeCurWaveNum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDungeonKillAllChallengeCurWaveNum::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyDungeonKillAllChallengeCurWaveNum::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.maxnum_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.maxnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDungeonKillAllChallengeCurWaveNum::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 curnum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.curnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxnum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.maxnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDungeonKillAllChallengeCurWaveNum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 curnum = 2;
  if (this->_internal_curnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_curnum(), target);
  }

  // int32 maxnum = 3;
  if (this->_internal_maxnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_maxnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  return target;
}

size_t NotifyDungeonKillAllChallengeCurWaveNum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  // int32 curnum = 2;
  if (this->_internal_curnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_curnum());
  }

  // int32 maxnum = 3;
  if (this->_internal_maxnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDungeonKillAllChallengeCurWaveNum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyDungeonKillAllChallengeCurWaveNum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDungeonKillAllChallengeCurWaveNum::GetClassData() const { return &_class_data_; }


void NotifyDungeonKillAllChallengeCurWaveNum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyDungeonKillAllChallengeCurWaveNum*>(&to_msg);
  auto& from = static_cast<const NotifyDungeonKillAllChallengeCurWaveNum&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_curnum() != 0) {
    _this->_internal_set_curnum(from._internal_curnum());
  }
  if (from._internal_maxnum() != 0) {
    _this->_internal_set_maxnum(from._internal_maxnum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDungeonKillAllChallengeCurWaveNum::CopyFrom(const NotifyDungeonKillAllChallengeCurWaveNum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyDungeonKillAllChallengeCurWaveNum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDungeonKillAllChallengeCurWaveNum::IsInitialized() const {
  return true;
}

void NotifyDungeonKillAllChallengeCurWaveNum::InternalSwap(NotifyDungeonKillAllChallengeCurWaveNum* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyDungeonKillAllChallengeCurWaveNum, _impl_.maxnum_)
      + sizeof(NotifyDungeonKillAllChallengeCurWaveNum::_impl_.maxnum_)
      - PROTOBUF_FIELD_OFFSET(NotifyDungeonKillAllChallengeCurWaveNum, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDungeonKillAllChallengeCurWaveNum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[330]);
}

// ===================================================================

class DungeonKillAllDataReq::_Internal {
 public:
};

DungeonKillAllDataReq::DungeonKillAllDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllDataReq)
}
DungeonKillAllDataReq::DungeonKillAllDataReq(const DungeonKillAllDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ask_uid_ = from._impl_.ask_uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllDataReq)
}

inline void DungeonKillAllDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_uid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllDataReq::~DungeonKillAllDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ask_uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ask_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ask_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ask_uid = 1;
  if (this->_internal_ask_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_ask_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllDataReq)
  return target;
}

size_t DungeonKillAllDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ask_uid = 1;
  if (this->_internal_ask_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ask_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllDataReq::GetClassData() const { return &_class_data_; }


void DungeonKillAllDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllDataReq*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ask_uid() != 0) {
    _this->_internal_set_ask_uid(from._internal_ask_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllDataReq::CopyFrom(const DungeonKillAllDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllDataReq::IsInitialized() const {
  return true;
}

void DungeonKillAllDataReq::InternalSwap(DungeonKillAllDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ask_uid_, other->_impl_.ask_uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[331]);
}

// ===================================================================

class DungeonKillAllDataAck::_Internal {
 public:
};

DungeonKillAllDataAck::DungeonKillAllDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonKillAllDataAck)
}
DungeonKillAllDataAck::DungeonKillAllDataAck(const DungeonKillAllDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonKillAllDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonKillAllDataAck)
}

inline void DungeonKillAllDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonKillAllDataAck::~DungeonKillAllDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonKillAllDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonKillAllDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonKillAllDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonKillAllDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonKillAllDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonKillAllDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonKillAllDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonKillAllDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonKillAllDataAck)
  return target;
}

size_t DungeonKillAllDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonKillAllDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonKillAllDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonKillAllDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonKillAllDataAck::GetClassData() const { return &_class_data_; }


void DungeonKillAllDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonKillAllDataAck*>(&to_msg);
  auto& from = static_cast<const DungeonKillAllDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonKillAllDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonKillAllDataAck::CopyFrom(const DungeonKillAllDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonKillAllDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonKillAllDataAck::IsInitialized() const {
  return true;
}

void DungeonKillAllDataAck::InternalSwap(DungeonKillAllDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonKillAllDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[332]);
}

// ===================================================================

class DungeonSurviveChallengeReq::_Internal {
 public:
};

DungeonSurviveChallengeReq::DungeonSurviveChallengeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveChallengeReq)
}
DungeonSurviveChallengeReq::DungeonSurviveChallengeReq(const DungeonSurviveChallengeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveChallengeReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dungeon_uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dungeon_uid_ = from._impl_.dungeon_uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveChallengeReq)
}

inline void DungeonSurviveChallengeReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dungeon_uid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveChallengeReq::~DungeonSurviveChallengeReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveChallengeReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveChallengeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveChallengeReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveChallengeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveChallengeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dungeon_uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveChallengeReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 dungeon_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.dungeon_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveChallengeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveChallengeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dungeon_uid = 1;
  if (this->_internal_dungeon_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_dungeon_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveChallengeReq)
  return target;
}

size_t DungeonSurviveChallengeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveChallengeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 dungeon_uid = 1;
  if (this->_internal_dungeon_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_dungeon_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveChallengeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveChallengeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveChallengeReq::GetClassData() const { return &_class_data_; }


void DungeonSurviveChallengeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveChallengeReq*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveChallengeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveChallengeReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dungeon_uid() != 0) {
    _this->_internal_set_dungeon_uid(from._internal_dungeon_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveChallengeReq::CopyFrom(const DungeonSurviveChallengeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveChallengeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveChallengeReq::IsInitialized() const {
  return true;
}

void DungeonSurviveChallengeReq::InternalSwap(DungeonSurviveChallengeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.dungeon_uid_, other->_impl_.dungeon_uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveChallengeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[333]);
}

// ===================================================================

class DungeonSurviveChallengeAck::_Internal {
 public:
};

DungeonSurviveChallengeAck::DungeonSurviveChallengeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveChallengeAck)
}
DungeonSurviveChallengeAck::DungeonSurviveChallengeAck(const DungeonSurviveChallengeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveChallengeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveChallengeAck)
}

inline void DungeonSurviveChallengeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveChallengeAck::~DungeonSurviveChallengeAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveChallengeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveChallengeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveChallengeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveChallengeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveChallengeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveChallengeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveChallengeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveChallengeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveChallengeAck)
  return target;
}

size_t DungeonSurviveChallengeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveChallengeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveChallengeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveChallengeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveChallengeAck::GetClassData() const { return &_class_data_; }


void DungeonSurviveChallengeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveChallengeAck*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveChallengeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveChallengeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveChallengeAck::CopyFrom(const DungeonSurviveChallengeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveChallengeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveChallengeAck::IsInitialized() const {
  return true;
}

void DungeonSurviveChallengeAck::InternalSwap(DungeonSurviveChallengeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveChallengeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[334]);
}

// ===================================================================

class DungeonSurviveQuickEndReq::_Internal {
 public:
};

DungeonSurviveQuickEndReq::DungeonSurviveQuickEndReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveQuickEndReq)
}
DungeonSurviveQuickEndReq::DungeonSurviveQuickEndReq(const DungeonSurviveQuickEndReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveQuickEndReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_exit_ = from._impl_.is_exit_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveQuickEndReq)
}

inline void DungeonSurviveQuickEndReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_exit_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveQuickEndReq::~DungeonSurviveQuickEndReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveQuickEndReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveQuickEndReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveQuickEndReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveQuickEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveQuickEndReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_exit_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveQuickEndReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_exit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_exit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveQuickEndReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveQuickEndReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_exit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveQuickEndReq)
  return target;
}

size_t DungeonSurviveQuickEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveQuickEndReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_exit = 1;
  if (this->_internal_is_exit() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveQuickEndReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveQuickEndReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveQuickEndReq::GetClassData() const { return &_class_data_; }


void DungeonSurviveQuickEndReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveQuickEndReq*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveQuickEndReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveQuickEndReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_exit() != 0) {
    _this->_internal_set_is_exit(from._internal_is_exit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveQuickEndReq::CopyFrom(const DungeonSurviveQuickEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveQuickEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveQuickEndReq::IsInitialized() const {
  return true;
}

void DungeonSurviveQuickEndReq::InternalSwap(DungeonSurviveQuickEndReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_exit_, other->_impl_.is_exit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveQuickEndReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[335]);
}

// ===================================================================

class DungeonSurviveQuickEndAck::_Internal {
 public:
};

DungeonSurviveQuickEndAck::DungeonSurviveQuickEndAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveQuickEndAck)
}
DungeonSurviveQuickEndAck::DungeonSurviveQuickEndAck(const DungeonSurviveQuickEndAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveQuickEndAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveQuickEndAck)
}

inline void DungeonSurviveQuickEndAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveQuickEndAck::~DungeonSurviveQuickEndAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveQuickEndAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveQuickEndAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveQuickEndAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveQuickEndAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveQuickEndAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveQuickEndAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveQuickEndAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveQuickEndAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveQuickEndAck)
  return target;
}

size_t DungeonSurviveQuickEndAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveQuickEndAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveQuickEndAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveQuickEndAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveQuickEndAck::GetClassData() const { return &_class_data_; }


void DungeonSurviveQuickEndAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveQuickEndAck*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveQuickEndAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveQuickEndAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveQuickEndAck::CopyFrom(const DungeonSurviveQuickEndAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveQuickEndAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveQuickEndAck::IsInitialized() const {
  return true;
}

void DungeonSurviveQuickEndAck::InternalSwap(DungeonSurviveQuickEndAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveQuickEndAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[336]);
}

// ===================================================================

class NotifyDungeonSurviveChallengeOver::_Internal {
 public:
};

NotifyDungeonSurviveChallengeOver::NotifyDungeonSurviveChallengeOver(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyDungeonSurviveChallengeOver)
}
NotifyDungeonSurviveChallengeOver::NotifyDungeonSurviveChallengeOver(const NotifyDungeonSurviveChallengeOver& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyDungeonSurviveChallengeOver* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , decltype(_impl_.win_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.win_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.win_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyDungeonSurviveChallengeOver)
}

inline void NotifyDungeonSurviveChallengeOver::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , decltype(_impl_.win_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyDungeonSurviveChallengeOver::~NotifyDungeonSurviveChallengeOver() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyDungeonSurviveChallengeOver)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDungeonSurviveChallengeOver::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDungeonSurviveChallengeOver::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyDungeonSurviveChallengeOver::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyDungeonSurviveChallengeOver)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.win_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.win_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDungeonSurviveChallengeOver::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool win = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDungeonSurviveChallengeOver::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyDungeonSurviveChallengeOver)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_win(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyDungeonSurviveChallengeOver)
  return target;
}

size_t NotifyDungeonSurviveChallengeOver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyDungeonSurviveChallengeOver)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  // bool win = 2;
  if (this->_internal_win() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDungeonSurviveChallengeOver::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyDungeonSurviveChallengeOver::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDungeonSurviveChallengeOver::GetClassData() const { return &_class_data_; }


void NotifyDungeonSurviveChallengeOver::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyDungeonSurviveChallengeOver*>(&to_msg);
  auto& from = static_cast<const NotifyDungeonSurviveChallengeOver&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyDungeonSurviveChallengeOver)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_win() != 0) {
    _this->_internal_set_win(from._internal_win());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDungeonSurviveChallengeOver::CopyFrom(const NotifyDungeonSurviveChallengeOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyDungeonSurviveChallengeOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDungeonSurviveChallengeOver::IsInitialized() const {
  return true;
}

void NotifyDungeonSurviveChallengeOver::InternalSwap(NotifyDungeonSurviveChallengeOver* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyDungeonSurviveChallengeOver, _impl_.win_)
      + sizeof(NotifyDungeonSurviveChallengeOver::_impl_.win_)
      - PROTOBUF_FIELD_OFFSET(NotifyDungeonSurviveChallengeOver, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDungeonSurviveChallengeOver::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[337]);
}

// ===================================================================

class NotifyDungeonSurviveChallengeCurWaveNum::_Internal {
 public:
};

NotifyDungeonSurviveChallengeCurWaveNum::NotifyDungeonSurviveChallengeCurWaveNum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
}
NotifyDungeonSurviveChallengeCurWaveNum::NotifyDungeonSurviveChallengeCurWaveNum(const NotifyDungeonSurviveChallengeCurWaveNum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyDungeonSurviveChallengeCurWaveNum* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){}
    , decltype(_impl_.curnum_){}
    , decltype(_impl_.maxnum_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.uid_, &from._impl_.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.maxnum_) -
    reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.maxnum_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
}

inline void NotifyDungeonSurviveChallengeCurWaveNum::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uid_){0}
    , decltype(_impl_.curnum_){0}
    , decltype(_impl_.maxnum_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyDungeonSurviveChallengeCurWaveNum::~NotifyDungeonSurviveChallengeCurWaveNum() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyDungeonSurviveChallengeCurWaveNum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NotifyDungeonSurviveChallengeCurWaveNum::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyDungeonSurviveChallengeCurWaveNum::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.maxnum_) -
      reinterpret_cast<char*>(&_impl_.uid_)) + sizeof(_impl_.maxnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyDungeonSurviveChallengeCurWaveNum::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 curnum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.curnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 maxnum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.maxnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyDungeonSurviveChallengeCurWaveNum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_uid(), target);
  }

  // int32 curnum = 2;
  if (this->_internal_curnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_curnum(), target);
  }

  // int32 maxnum = 3;
  if (this->_internal_maxnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_maxnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  return target;
}

size_t NotifyDungeonSurviveChallengeCurWaveNum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_uid());
  }

  // int32 curnum = 2;
  if (this->_internal_curnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_curnum());
  }

  // int32 maxnum = 3;
  if (this->_internal_maxnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_maxnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyDungeonSurviveChallengeCurWaveNum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyDungeonSurviveChallengeCurWaveNum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyDungeonSurviveChallengeCurWaveNum::GetClassData() const { return &_class_data_; }


void NotifyDungeonSurviveChallengeCurWaveNum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyDungeonSurviveChallengeCurWaveNum*>(&to_msg);
  auto& from = static_cast<const NotifyDungeonSurviveChallengeCurWaveNum&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uid() != 0) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (from._internal_curnum() != 0) {
    _this->_internal_set_curnum(from._internal_curnum());
  }
  if (from._internal_maxnum() != 0) {
    _this->_internal_set_maxnum(from._internal_maxnum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyDungeonSurviveChallengeCurWaveNum::CopyFrom(const NotifyDungeonSurviveChallengeCurWaveNum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyDungeonSurviveChallengeCurWaveNum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyDungeonSurviveChallengeCurWaveNum::IsInitialized() const {
  return true;
}

void NotifyDungeonSurviveChallengeCurWaveNum::InternalSwap(NotifyDungeonSurviveChallengeCurWaveNum* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyDungeonSurviveChallengeCurWaveNum, _impl_.maxnum_)
      + sizeof(NotifyDungeonSurviveChallengeCurWaveNum::_impl_.maxnum_)
      - PROTOBUF_FIELD_OFFSET(NotifyDungeonSurviveChallengeCurWaveNum, _impl_.uid_)>(
          reinterpret_cast<char*>(&_impl_.uid_),
          reinterpret_cast<char*>(&other->_impl_.uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyDungeonSurviveChallengeCurWaveNum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[338]);
}

// ===================================================================

class DungeonSurviveDataReq::_Internal {
 public:
};

DungeonSurviveDataReq::DungeonSurviveDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveDataReq)
}
DungeonSurviveDataReq::DungeonSurviveDataReq(const DungeonSurviveDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_uid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ask_uid_ = from._impl_.ask_uid_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveDataReq)
}

inline void DungeonSurviveDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_uid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveDataReq::~DungeonSurviveDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ask_uid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ask_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ask_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ask_uid = 1;
  if (this->_internal_ask_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_ask_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveDataReq)
  return target;
}

size_t DungeonSurviveDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ask_uid = 1;
  if (this->_internal_ask_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ask_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveDataReq::GetClassData() const { return &_class_data_; }


void DungeonSurviveDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveDataReq*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ask_uid() != 0) {
    _this->_internal_set_ask_uid(from._internal_ask_uid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveDataReq::CopyFrom(const DungeonSurviveDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveDataReq::IsInitialized() const {
  return true;
}

void DungeonSurviveDataReq::InternalSwap(DungeonSurviveDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ask_uid_, other->_impl_.ask_uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[339]);
}

// ===================================================================

class DungeonSurviveDataAck::_Internal {
 public:
};

DungeonSurviveDataAck::DungeonSurviveDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DungeonSurviveDataAck)
}
DungeonSurviveDataAck::DungeonSurviveDataAck(const DungeonSurviveDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DungeonSurviveDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DungeonSurviveDataAck)
}

inline void DungeonSurviveDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DungeonSurviveDataAck::~DungeonSurviveDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.DungeonSurviveDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DungeonSurviveDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DungeonSurviveDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DungeonSurviveDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DungeonSurviveDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DungeonSurviveDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DungeonSurviveDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DungeonSurviveDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DungeonSurviveDataAck)
  return target;
}

size_t DungeonSurviveDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DungeonSurviveDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DungeonSurviveDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DungeonSurviveDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DungeonSurviveDataAck::GetClassData() const { return &_class_data_; }


void DungeonSurviveDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DungeonSurviveDataAck*>(&to_msg);
  auto& from = static_cast<const DungeonSurviveDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DungeonSurviveDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonSurviveDataAck::CopyFrom(const DungeonSurviveDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DungeonSurviveDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonSurviveDataAck::IsInitialized() const {
  return true;
}

void DungeonSurviveDataAck::InternalSwap(DungeonSurviveDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DungeonSurviveDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[340]);
}

// ===================================================================

class RequestEnterSeptDemonWorldReq::_Internal {
 public:
};

RequestEnterSeptDemonWorldReq::RequestEnterSeptDemonWorldReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestEnterSeptDemonWorldReq)
}
RequestEnterSeptDemonWorldReq::RequestEnterSeptDemonWorldReq(const RequestEnterSeptDemonWorldReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestEnterSeptDemonWorldReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.sept_id_ = from._impl_.sept_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestEnterSeptDemonWorldReq)
}

inline void RequestEnterSeptDemonWorldReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestEnterSeptDemonWorldReq::~RequestEnterSeptDemonWorldReq() {
  // @@protoc_insertion_point(destructor:idlepb.RequestEnterSeptDemonWorldReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestEnterSeptDemonWorldReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestEnterSeptDemonWorldReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestEnterSeptDemonWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestEnterSeptDemonWorldReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sept_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestEnterSeptDemonWorldReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 sept_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sept_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestEnterSeptDemonWorldReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestEnterSeptDemonWorldReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_sept_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestEnterSeptDemonWorldReq)
  return target;
}

size_t RequestEnterSeptDemonWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestEnterSeptDemonWorldReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sept_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestEnterSeptDemonWorldReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestEnterSeptDemonWorldReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestEnterSeptDemonWorldReq::GetClassData() const { return &_class_data_; }


void RequestEnterSeptDemonWorldReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestEnterSeptDemonWorldReq*>(&to_msg);
  auto& from = static_cast<const RequestEnterSeptDemonWorldReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestEnterSeptDemonWorldReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sept_id() != 0) {
    _this->_internal_set_sept_id(from._internal_sept_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestEnterSeptDemonWorldReq::CopyFrom(const RequestEnterSeptDemonWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestEnterSeptDemonWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestEnterSeptDemonWorldReq::IsInitialized() const {
  return true;
}

void RequestEnterSeptDemonWorldReq::InternalSwap(RequestEnterSeptDemonWorldReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.sept_id_, other->_impl_.sept_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestEnterSeptDemonWorldReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[341]);
}

// ===================================================================

class RequestEnterSeptDemonWorldAck::_Internal {
 public:
};

RequestEnterSeptDemonWorldAck::RequestEnterSeptDemonWorldAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestEnterSeptDemonWorldAck)
}
RequestEnterSeptDemonWorldAck::RequestEnterSeptDemonWorldAck(const RequestEnterSeptDemonWorldAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestEnterSeptDemonWorldAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestEnterSeptDemonWorldAck)
}

inline void RequestEnterSeptDemonWorldAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestEnterSeptDemonWorldAck::~RequestEnterSeptDemonWorldAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestEnterSeptDemonWorldAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestEnterSeptDemonWorldAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestEnterSeptDemonWorldAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestEnterSeptDemonWorldAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestEnterSeptDemonWorldAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestEnterSeptDemonWorldAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestEnterSeptDemonWorldAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestEnterSeptDemonWorldAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestEnterSeptDemonWorldAck)
  return target;
}

size_t RequestEnterSeptDemonWorldAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestEnterSeptDemonWorldAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestEnterSeptDemonWorldAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestEnterSeptDemonWorldAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestEnterSeptDemonWorldAck::GetClassData() const { return &_class_data_; }


void RequestEnterSeptDemonWorldAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestEnterSeptDemonWorldAck*>(&to_msg);
  auto& from = static_cast<const RequestEnterSeptDemonWorldAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestEnterSeptDemonWorldAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestEnterSeptDemonWorldAck::CopyFrom(const RequestEnterSeptDemonWorldAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestEnterSeptDemonWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestEnterSeptDemonWorldAck::IsInitialized() const {
  return true;
}

void RequestEnterSeptDemonWorldAck::InternalSwap(RequestEnterSeptDemonWorldAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestEnterSeptDemonWorldAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[342]);
}

// ===================================================================

class RequestLeaveSeptDemonWorldReq::_Internal {
 public:
};

RequestLeaveSeptDemonWorldReq::RequestLeaveSeptDemonWorldReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestLeaveSeptDemonWorldReq)
}
RequestLeaveSeptDemonWorldReq::RequestLeaveSeptDemonWorldReq(const RequestLeaveSeptDemonWorldReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestLeaveSeptDemonWorldReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.sept_id_ = from._impl_.sept_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestLeaveSeptDemonWorldReq)
}

inline void RequestLeaveSeptDemonWorldReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestLeaveSeptDemonWorldReq::~RequestLeaveSeptDemonWorldReq() {
  // @@protoc_insertion_point(destructor:idlepb.RequestLeaveSeptDemonWorldReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestLeaveSeptDemonWorldReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestLeaveSeptDemonWorldReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestLeaveSeptDemonWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestLeaveSeptDemonWorldReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sept_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestLeaveSeptDemonWorldReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 sept_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sept_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestLeaveSeptDemonWorldReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestLeaveSeptDemonWorldReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_sept_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestLeaveSeptDemonWorldReq)
  return target;
}

size_t RequestLeaveSeptDemonWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestLeaveSeptDemonWorldReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sept_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestLeaveSeptDemonWorldReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestLeaveSeptDemonWorldReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestLeaveSeptDemonWorldReq::GetClassData() const { return &_class_data_; }


void RequestLeaveSeptDemonWorldReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestLeaveSeptDemonWorldReq*>(&to_msg);
  auto& from = static_cast<const RequestLeaveSeptDemonWorldReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestLeaveSeptDemonWorldReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sept_id() != 0) {
    _this->_internal_set_sept_id(from._internal_sept_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestLeaveSeptDemonWorldReq::CopyFrom(const RequestLeaveSeptDemonWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestLeaveSeptDemonWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestLeaveSeptDemonWorldReq::IsInitialized() const {
  return true;
}

void RequestLeaveSeptDemonWorldReq::InternalSwap(RequestLeaveSeptDemonWorldReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.sept_id_, other->_impl_.sept_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestLeaveSeptDemonWorldReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[343]);
}

// ===================================================================

class RequestLeaveSeptDemonWorldAck::_Internal {
 public:
};

RequestLeaveSeptDemonWorldAck::RequestLeaveSeptDemonWorldAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestLeaveSeptDemonWorldAck)
}
RequestLeaveSeptDemonWorldAck::RequestLeaveSeptDemonWorldAck(const RequestLeaveSeptDemonWorldAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestLeaveSeptDemonWorldAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestLeaveSeptDemonWorldAck)
}

inline void RequestLeaveSeptDemonWorldAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestLeaveSeptDemonWorldAck::~RequestLeaveSeptDemonWorldAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestLeaveSeptDemonWorldAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestLeaveSeptDemonWorldAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestLeaveSeptDemonWorldAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestLeaveSeptDemonWorldAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestLeaveSeptDemonWorldAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestLeaveSeptDemonWorldAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestLeaveSeptDemonWorldAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestLeaveSeptDemonWorldAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestLeaveSeptDemonWorldAck)
  return target;
}

size_t RequestLeaveSeptDemonWorldAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestLeaveSeptDemonWorldAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestLeaveSeptDemonWorldAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestLeaveSeptDemonWorldAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestLeaveSeptDemonWorldAck::GetClassData() const { return &_class_data_; }


void RequestLeaveSeptDemonWorldAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestLeaveSeptDemonWorldAck*>(&to_msg);
  auto& from = static_cast<const RequestLeaveSeptDemonWorldAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestLeaveSeptDemonWorldAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestLeaveSeptDemonWorldAck::CopyFrom(const RequestLeaveSeptDemonWorldAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestLeaveSeptDemonWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestLeaveSeptDemonWorldAck::IsInitialized() const {
  return true;
}

void RequestLeaveSeptDemonWorldAck::InternalSwap(RequestLeaveSeptDemonWorldAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestLeaveSeptDemonWorldAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[344]);
}

// ===================================================================

class RequestSeptDemonWorldDataReq::_Internal {
 public:
};

RequestSeptDemonWorldDataReq::RequestSeptDemonWorldDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestSeptDemonWorldDataReq)
}
RequestSeptDemonWorldDataReq::RequestSeptDemonWorldDataReq(const RequestSeptDemonWorldDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestSeptDemonWorldDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.sept_id_ = from._impl_.sept_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestSeptDemonWorldDataReq)
}

inline void RequestSeptDemonWorldDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sept_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestSeptDemonWorldDataReq::~RequestSeptDemonWorldDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.RequestSeptDemonWorldDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestSeptDemonWorldDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestSeptDemonWorldDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestSeptDemonWorldDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestSeptDemonWorldDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sept_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestSeptDemonWorldDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 sept_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.sept_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestSeptDemonWorldDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestSeptDemonWorldDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_sept_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestSeptDemonWorldDataReq)
  return target;
}

size_t RequestSeptDemonWorldDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestSeptDemonWorldDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 sept_id = 1;
  if (this->_internal_sept_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_sept_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestSeptDemonWorldDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestSeptDemonWorldDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestSeptDemonWorldDataReq::GetClassData() const { return &_class_data_; }


void RequestSeptDemonWorldDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestSeptDemonWorldDataReq*>(&to_msg);
  auto& from = static_cast<const RequestSeptDemonWorldDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestSeptDemonWorldDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sept_id() != 0) {
    _this->_internal_set_sept_id(from._internal_sept_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestSeptDemonWorldDataReq::CopyFrom(const RequestSeptDemonWorldDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestSeptDemonWorldDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSeptDemonWorldDataReq::IsInitialized() const {
  return true;
}

void RequestSeptDemonWorldDataReq::InternalSwap(RequestSeptDemonWorldDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.sept_id_, other->_impl_.sept_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestSeptDemonWorldDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[345]);
}

// ===================================================================

class RequestSeptDemonWorldDataAck::_Internal {
 public:
  static const ::idlepb::SeptDemonWorldData& data(const RequestSeptDemonWorldDataAck* msg);
};

const ::idlepb::SeptDemonWorldData&
RequestSeptDemonWorldDataAck::_Internal::data(const RequestSeptDemonWorldDataAck* msg) {
  return *msg->_impl_.data_;
}
void RequestSeptDemonWorldDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
RequestSeptDemonWorldDataAck::RequestSeptDemonWorldDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestSeptDemonWorldDataAck)
}
RequestSeptDemonWorldDataAck::RequestSeptDemonWorldDataAck(const RequestSeptDemonWorldDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestSeptDemonWorldDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::SeptDemonWorldData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestSeptDemonWorldDataAck)
}

inline void RequestSeptDemonWorldDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestSeptDemonWorldDataAck::~RequestSeptDemonWorldDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestSeptDemonWorldDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestSeptDemonWorldDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void RequestSeptDemonWorldDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestSeptDemonWorldDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestSeptDemonWorldDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestSeptDemonWorldDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.SeptDemonWorldData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestSeptDemonWorldDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestSeptDemonWorldDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.SeptDemonWorldData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestSeptDemonWorldDataAck)
  return target;
}

size_t RequestSeptDemonWorldDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestSeptDemonWorldDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.SeptDemonWorldData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestSeptDemonWorldDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestSeptDemonWorldDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestSeptDemonWorldDataAck::GetClassData() const { return &_class_data_; }


void RequestSeptDemonWorldDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestSeptDemonWorldDataAck*>(&to_msg);
  auto& from = static_cast<const RequestSeptDemonWorldDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestSeptDemonWorldDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::SeptDemonWorldData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestSeptDemonWorldDataAck::CopyFrom(const RequestSeptDemonWorldDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestSeptDemonWorldDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestSeptDemonWorldDataAck::IsInitialized() const {
  return true;
}

void RequestSeptDemonWorldDataAck::InternalSwap(RequestSeptDemonWorldDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestSeptDemonWorldDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[346]);
}

// ===================================================================

class RequestInSeptDemonWorldEndTimeReq::_Internal {
 public:
};

RequestInSeptDemonWorldEndTimeReq::RequestInSeptDemonWorldEndTimeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestInSeptDemonWorldEndTimeReq)
}
RequestInSeptDemonWorldEndTimeReq::RequestInSeptDemonWorldEndTimeReq(const RequestInSeptDemonWorldEndTimeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RequestInSeptDemonWorldEndTimeReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestInSeptDemonWorldEndTimeReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestInSeptDemonWorldEndTimeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestInSeptDemonWorldEndTimeReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestInSeptDemonWorldEndTimeReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[347]);
}

// ===================================================================

class RequestInSeptDemonWorldEndTimeAck::_Internal {
 public:
};

RequestInSeptDemonWorldEndTimeAck::RequestInSeptDemonWorldEndTimeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.RequestInSeptDemonWorldEndTimeAck)
}
RequestInSeptDemonWorldEndTimeAck::RequestInSeptDemonWorldEndTimeAck(const RequestInSeptDemonWorldEndTimeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestInSeptDemonWorldEndTimeAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.end_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.end_time_ = from._impl_.end_time_;
  // @@protoc_insertion_point(copy_constructor:idlepb.RequestInSeptDemonWorldEndTimeAck)
}

inline void RequestInSeptDemonWorldEndTimeAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.end_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RequestInSeptDemonWorldEndTimeAck::~RequestInSeptDemonWorldEndTimeAck() {
  // @@protoc_insertion_point(destructor:idlepb.RequestInSeptDemonWorldEndTimeAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestInSeptDemonWorldEndTimeAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RequestInSeptDemonWorldEndTimeAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestInSeptDemonWorldEndTimeAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.RequestInSeptDemonWorldEndTimeAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.end_time_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestInSeptDemonWorldEndTimeAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 end_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestInSeptDemonWorldEndTimeAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.RequestInSeptDemonWorldEndTimeAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 end_time = 1;
  if (this->_internal_end_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.RequestInSeptDemonWorldEndTimeAck)
  return target;
}

size_t RequestInSeptDemonWorldEndTimeAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.RequestInSeptDemonWorldEndTimeAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 end_time = 1;
  if (this->_internal_end_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_end_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestInSeptDemonWorldEndTimeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestInSeptDemonWorldEndTimeAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestInSeptDemonWorldEndTimeAck::GetClassData() const { return &_class_data_; }


void RequestInSeptDemonWorldEndTimeAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestInSeptDemonWorldEndTimeAck*>(&to_msg);
  auto& from = static_cast<const RequestInSeptDemonWorldEndTimeAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.RequestInSeptDemonWorldEndTimeAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_end_time() != 0) {
    _this->_internal_set_end_time(from._internal_end_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestInSeptDemonWorldEndTimeAck::CopyFrom(const RequestInSeptDemonWorldEndTimeAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.RequestInSeptDemonWorldEndTimeAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInSeptDemonWorldEndTimeAck::IsInitialized() const {
  return true;
}

void RequestInSeptDemonWorldEndTimeAck::InternalSwap(RequestInSeptDemonWorldEndTimeAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.end_time_, other->_impl_.end_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestInSeptDemonWorldEndTimeAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[348]);
}

// ===================================================================

class GetFarmlandDataReq::_Internal {
 public:
};

GetFarmlandDataReq::GetFarmlandDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetFarmlandDataReq)
}
GetFarmlandDataReq::GetFarmlandDataReq(const GetFarmlandDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetFarmlandDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetFarmlandDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFarmlandDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFarmlandDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetFarmlandDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[349]);
}

// ===================================================================

class GetFarmlandDataAck::_Internal {
 public:
  static const ::idlepb::RoleFarmlandData& data(const GetFarmlandDataAck* msg);
};

const ::idlepb::RoleFarmlandData&
GetFarmlandDataAck::_Internal::data(const GetFarmlandDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetFarmlandDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetFarmlandDataAck::GetFarmlandDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetFarmlandDataAck)
}
GetFarmlandDataAck::GetFarmlandDataAck(const GetFarmlandDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFarmlandDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleFarmlandData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetFarmlandDataAck)
}

inline void GetFarmlandDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFarmlandDataAck::~GetFarmlandDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetFarmlandDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFarmlandDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetFarmlandDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFarmlandDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetFarmlandDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFarmlandDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleFarmlandData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFarmlandDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetFarmlandDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleFarmlandData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetFarmlandDataAck)
  return target;
}

size_t GetFarmlandDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetFarmlandDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleFarmlandData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFarmlandDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFarmlandDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFarmlandDataAck::GetClassData() const { return &_class_data_; }


void GetFarmlandDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFarmlandDataAck*>(&to_msg);
  auto& from = static_cast<const GetFarmlandDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetFarmlandDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleFarmlandData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFarmlandDataAck::CopyFrom(const GetFarmlandDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetFarmlandDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFarmlandDataAck::IsInitialized() const {
  return true;
}

void GetFarmlandDataAck::InternalSwap(GetFarmlandDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFarmlandDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[350]);
}

// ===================================================================

class FarmlandUnlockBlockReq::_Internal {
 public:
};

FarmlandUnlockBlockReq::FarmlandUnlockBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandUnlockBlockReq)
}
FarmlandUnlockBlockReq::FarmlandUnlockBlockReq(const FarmlandUnlockBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandUnlockBlockReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.y_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandUnlockBlockReq)
}

inline void FarmlandUnlockBlockReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandUnlockBlockReq::~FarmlandUnlockBlockReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandUnlockBlockReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandUnlockBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandUnlockBlockReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandUnlockBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandUnlockBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandUnlockBlockReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandUnlockBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandUnlockBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandUnlockBlockReq)
  return target;
}

size_t FarmlandUnlockBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandUnlockBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandUnlockBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandUnlockBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandUnlockBlockReq::GetClassData() const { return &_class_data_; }


void FarmlandUnlockBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandUnlockBlockReq*>(&to_msg);
  auto& from = static_cast<const FarmlandUnlockBlockReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandUnlockBlockReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandUnlockBlockReq::CopyFrom(const FarmlandUnlockBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandUnlockBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandUnlockBlockReq::IsInitialized() const {
  return true;
}

void FarmlandUnlockBlockReq::InternalSwap(FarmlandUnlockBlockReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FarmlandUnlockBlockReq, _impl_.y_)
      + sizeof(FarmlandUnlockBlockReq::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(FarmlandUnlockBlockReq, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandUnlockBlockReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[351]);
}

// ===================================================================

class FarmlandUnlockBlockAck::_Internal {
 public:
};

FarmlandUnlockBlockAck::FarmlandUnlockBlockAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandUnlockBlockAck)
}
FarmlandUnlockBlockAck::FarmlandUnlockBlockAck(const FarmlandUnlockBlockAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandUnlockBlockAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandUnlockBlockAck)
}

inline void FarmlandUnlockBlockAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandUnlockBlockAck::~FarmlandUnlockBlockAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandUnlockBlockAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandUnlockBlockAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandUnlockBlockAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandUnlockBlockAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandUnlockBlockAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandUnlockBlockAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandUnlockBlockAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandUnlockBlockAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandUnlockBlockAck)
  return target;
}

size_t FarmlandUnlockBlockAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandUnlockBlockAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandUnlockBlockAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandUnlockBlockAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandUnlockBlockAck::GetClassData() const { return &_class_data_; }


void FarmlandUnlockBlockAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandUnlockBlockAck*>(&to_msg);
  auto& from = static_cast<const FarmlandUnlockBlockAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandUnlockBlockAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandUnlockBlockAck::CopyFrom(const FarmlandUnlockBlockAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandUnlockBlockAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandUnlockBlockAck::IsInitialized() const {
  return true;
}

void FarmlandUnlockBlockAck::InternalSwap(FarmlandUnlockBlockAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandUnlockBlockAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[352]);
}

// ===================================================================

class FarmlandPlantSeedReq::_Internal {
 public:
};

FarmlandPlantSeedReq::FarmlandPlantSeedReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandPlantSeedReq)
}
FarmlandPlantSeedReq::FarmlandPlantSeedReq(const FarmlandPlantSeedReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandPlantSeedReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.rotation_){}
    , decltype(_impl_.is_delete_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_delete_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.is_delete_));
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandPlantSeedReq)
}

inline void FarmlandPlantSeedReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){0}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.rotation_){0}
    , decltype(_impl_.is_delete_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandPlantSeedReq::~FarmlandPlantSeedReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandPlantSeedReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandPlantSeedReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandPlantSeedReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandPlantSeedReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandPlantSeedReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_delete_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.is_delete_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandPlantSeedReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 rotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.rotation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_delete = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.is_delete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandPlantSeedReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandPlantSeedReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_id(), target);
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_x(), target);
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_y(), target);
  }

  // int32 rotation = 4;
  if (this->_internal_rotation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_rotation(), target);
  }

  // bool is_delete = 5;
  if (this->_internal_is_delete() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_is_delete(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandPlantSeedReq)
  return target;
}

size_t FarmlandPlantSeedReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandPlantSeedReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  // int32 x = 2;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
  }

  // int32 y = 3;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
  }

  // int32 rotation = 4;
  if (this->_internal_rotation() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_rotation());
  }

  // bool is_delete = 5;
  if (this->_internal_is_delete() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandPlantSeedReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandPlantSeedReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandPlantSeedReq::GetClassData() const { return &_class_data_; }


void FarmlandPlantSeedReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandPlantSeedReq*>(&to_msg);
  auto& from = static_cast<const FarmlandPlantSeedReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandPlantSeedReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_rotation() != 0) {
    _this->_internal_set_rotation(from._internal_rotation());
  }
  if (from._internal_is_delete() != 0) {
    _this->_internal_set_is_delete(from._internal_is_delete());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandPlantSeedReq::CopyFrom(const FarmlandPlantSeedReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandPlantSeedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandPlantSeedReq::IsInitialized() const {
  return true;
}

void FarmlandPlantSeedReq::InternalSwap(FarmlandPlantSeedReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FarmlandPlantSeedReq, _impl_.is_delete_)
      + sizeof(FarmlandPlantSeedReq::_impl_.is_delete_)
      - PROTOBUF_FIELD_OFFSET(FarmlandPlantSeedReq, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandPlantSeedReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[353]);
}

// ===================================================================

class FarmlandPlantSeedAck::_Internal {
 public:
  static const ::idlepb::FarmlandPlantData& plant_data(const FarmlandPlantSeedAck* msg);
};

const ::idlepb::FarmlandPlantData&
FarmlandPlantSeedAck::_Internal::plant_data(const FarmlandPlantSeedAck* msg) {
  return *msg->_impl_.plant_data_;
}
void FarmlandPlantSeedAck::clear_plant_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.plant_data_ != nullptr) {
    delete _impl_.plant_data_;
  }
  _impl_.plant_data_ = nullptr;
}
FarmlandPlantSeedAck::FarmlandPlantSeedAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandPlantSeedAck)
}
FarmlandPlantSeedAck::FarmlandPlantSeedAck(const FarmlandPlantSeedAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandPlantSeedAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.plant_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_plant_data()) {
    _this->_impl_.plant_data_ = new ::idlepb::FarmlandPlantData(*from._impl_.plant_data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandPlantSeedAck)
}

inline void FarmlandPlantSeedAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.plant_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandPlantSeedAck::~FarmlandPlantSeedAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandPlantSeedAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandPlantSeedAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.plant_data_;
}

void FarmlandPlantSeedAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandPlantSeedAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandPlantSeedAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.plant_data_ != nullptr) {
    delete _impl_.plant_data_;
  }
  _impl_.plant_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandPlantSeedAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.FarmlandPlantData plant_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_plant_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandPlantSeedAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandPlantSeedAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.FarmlandPlantData plant_data = 2;
  if (this->_internal_has_plant_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::plant_data(this),
        _Internal::plant_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandPlantSeedAck)
  return target;
}

size_t FarmlandPlantSeedAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandPlantSeedAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.FarmlandPlantData plant_data = 2;
  if (this->_internal_has_plant_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.plant_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandPlantSeedAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandPlantSeedAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandPlantSeedAck::GetClassData() const { return &_class_data_; }


void FarmlandPlantSeedAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandPlantSeedAck*>(&to_msg);
  auto& from = static_cast<const FarmlandPlantSeedAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandPlantSeedAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_plant_data()) {
    _this->_internal_mutable_plant_data()->::idlepb::FarmlandPlantData::MergeFrom(
        from._internal_plant_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandPlantSeedAck::CopyFrom(const FarmlandPlantSeedAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandPlantSeedAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandPlantSeedAck::IsInitialized() const {
  return true;
}

void FarmlandPlantSeedAck::InternalSwap(FarmlandPlantSeedAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.plant_data_, other->_impl_.plant_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandPlantSeedAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[354]);
}

// ===================================================================

class FarmlandWateringReq::_Internal {
 public:
};

FarmlandWateringReq::FarmlandWateringReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandWateringReq)
}
FarmlandWateringReq::FarmlandWateringReq(const FarmlandWateringReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandWateringReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.num_ = from._impl_.num_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandWateringReq)
}

inline void FarmlandWateringReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandWateringReq::~FarmlandWateringReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandWateringReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandWateringReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandWateringReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandWateringReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandWateringReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandWateringReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandWateringReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandWateringReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandWateringReq)
  return target;
}

size_t FarmlandWateringReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandWateringReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandWateringReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandWateringReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandWateringReq::GetClassData() const { return &_class_data_; }


void FarmlandWateringReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandWateringReq*>(&to_msg);
  auto& from = static_cast<const FarmlandWateringReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandWateringReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandWateringReq::CopyFrom(const FarmlandWateringReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandWateringReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandWateringReq::IsInitialized() const {
  return true;
}

void FarmlandWateringReq::InternalSwap(FarmlandWateringReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.num_, other->_impl_.num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandWateringReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[355]);
}

// ===================================================================

class FarmlandWateringAck::_Internal {
 public:
};

FarmlandWateringAck::FarmlandWateringAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandWateringAck)
}
FarmlandWateringAck::FarmlandWateringAck(const FarmlandWateringAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandWateringAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.totaol_speed_up_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.totaol_speed_up_ = from._impl_.totaol_speed_up_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandWateringAck)
}

inline void FarmlandWateringAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.totaol_speed_up_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandWateringAck::~FarmlandWateringAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandWateringAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandWateringAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandWateringAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandWateringAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandWateringAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.totaol_speed_up_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandWateringAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 totaol_speed_up = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.totaol_speed_up_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandWateringAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandWateringAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 totaol_speed_up = 1;
  if (this->_internal_totaol_speed_up() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_totaol_speed_up(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandWateringAck)
  return target;
}

size_t FarmlandWateringAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandWateringAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 totaol_speed_up = 1;
  if (this->_internal_totaol_speed_up() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_totaol_speed_up());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandWateringAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandWateringAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandWateringAck::GetClassData() const { return &_class_data_; }


void FarmlandWateringAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandWateringAck*>(&to_msg);
  auto& from = static_cast<const FarmlandWateringAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandWateringAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_totaol_speed_up() != 0) {
    _this->_internal_set_totaol_speed_up(from._internal_totaol_speed_up());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandWateringAck::CopyFrom(const FarmlandWateringAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandWateringAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandWateringAck::IsInitialized() const {
  return true;
}

void FarmlandWateringAck::InternalSwap(FarmlandWateringAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.totaol_speed_up_, other->_impl_.totaol_speed_up_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandWateringAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[356]);
}

// ===================================================================

class FarmlandRipeningReq::_Internal {
 public:
};

void FarmlandRipeningReq::clear_one_click_plants() {
  _impl_.one_click_plants_.Clear();
}
FarmlandRipeningReq::FarmlandRipeningReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandRipeningReq)
}
FarmlandRipeningReq::FarmlandRipeningReq(const FarmlandRipeningReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandRipeningReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.one_click_plants_){from._impl_.one_click_plants_}
    , decltype(_impl_.plant_uid_){}
    , decltype(_impl_.item_id_){}
    , decltype(_impl_.num_){}
    , decltype(_impl_.one_click_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.plant_uid_, &from._impl_.plant_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.one_click_) -
    reinterpret_cast<char*>(&_impl_.plant_uid_)) + sizeof(_impl_.one_click_));
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandRipeningReq)
}

inline void FarmlandRipeningReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.one_click_plants_){arena}
    , decltype(_impl_.plant_uid_){0}
    , decltype(_impl_.item_id_){0}
    , decltype(_impl_.num_){0}
    , decltype(_impl_.one_click_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandRipeningReq::~FarmlandRipeningReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandRipeningReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandRipeningReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.one_click_plants_.~RepeatedPtrField();
}

void FarmlandRipeningReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandRipeningReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandRipeningReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.one_click_plants_.Clear();
  ::memset(&_impl_.plant_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.one_click_) -
      reinterpret_cast<char*>(&_impl_.plant_uid_)) + sizeof(_impl_.one_click_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandRipeningReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 plant_uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.plant_uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 one_click = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.one_click_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.FarmlandManagementInfo one_click_plants = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_one_click_plants(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandRipeningReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandRipeningReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 plant_uid = 1;
  if (this->_internal_plant_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_plant_uid(), target);
  }

  // int32 item_id = 2;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_item_id(), target);
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  // int32 one_click = 4;
  if (this->_internal_one_click() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_one_click(), target);
  }

  // repeated .idlepb.FarmlandManagementInfo one_click_plants = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_one_click_plants_size()); i < n; i++) {
    const auto& repfield = this->_internal_one_click_plants(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandRipeningReq)
  return target;
}

size_t FarmlandRipeningReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandRipeningReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.FarmlandManagementInfo one_click_plants = 5;
  total_size += 1UL * this->_internal_one_click_plants_size();
  for (const auto& msg : this->_impl_.one_click_plants_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 plant_uid = 1;
  if (this->_internal_plant_uid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_plant_uid());
  }

  // int32 item_id = 2;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_id());
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  // int32 one_click = 4;
  if (this->_internal_one_click() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_one_click());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandRipeningReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandRipeningReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandRipeningReq::GetClassData() const { return &_class_data_; }


void FarmlandRipeningReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandRipeningReq*>(&to_msg);
  auto& from = static_cast<const FarmlandRipeningReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandRipeningReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.one_click_plants_.MergeFrom(from._impl_.one_click_plants_);
  if (from._internal_plant_uid() != 0) {
    _this->_internal_set_plant_uid(from._internal_plant_uid());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  if (from._internal_one_click() != 0) {
    _this->_internal_set_one_click(from._internal_one_click());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandRipeningReq::CopyFrom(const FarmlandRipeningReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandRipeningReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandRipeningReq::IsInitialized() const {
  return true;
}

void FarmlandRipeningReq::InternalSwap(FarmlandRipeningReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.one_click_plants_.InternalSwap(&other->_impl_.one_click_plants_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FarmlandRipeningReq, _impl_.one_click_)
      + sizeof(FarmlandRipeningReq::_impl_.one_click_)
      - PROTOBUF_FIELD_OFFSET(FarmlandRipeningReq, _impl_.plant_uid_)>(
          reinterpret_cast<char*>(&_impl_.plant_uid_),
          reinterpret_cast<char*>(&other->_impl_.plant_uid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandRipeningReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[357]);
}

// ===================================================================

class FarmlandRipeningAck::_Internal {
 public:
};

void FarmlandRipeningAck::clear_result() {
  _impl_.result_.Clear();
}
void FarmlandRipeningAck::clear_used_ripe_items() {
  _impl_.used_ripe_items_.Clear();
}
FarmlandRipeningAck::FarmlandRipeningAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandRipeningAck)
}
FarmlandRipeningAck::FarmlandRipeningAck(const FarmlandRipeningAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandRipeningAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){from._impl_.result_}
    , decltype(_impl_.used_ripe_items_){from._impl_.used_ripe_items_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandRipeningAck)
}

inline void FarmlandRipeningAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){arena}
    , decltype(_impl_.used_ripe_items_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandRipeningAck::~FarmlandRipeningAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandRipeningAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandRipeningAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.~RepeatedPtrField();
  _impl_.used_ripe_items_.~RepeatedPtrField();
}

void FarmlandRipeningAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandRipeningAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandRipeningAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.Clear();
  _impl_.used_ripe_items_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandRipeningAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.FarmlandPlantData result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_result(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData used_ripe_items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_used_ripe_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandRipeningAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandRipeningAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.FarmlandPlantData result = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_result_size()); i < n; i++) {
    const auto& repfield = this->_internal_result(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.SimpleItemData used_ripe_items = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_used_ripe_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_used_ripe_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandRipeningAck)
  return target;
}

size_t FarmlandRipeningAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandRipeningAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.FarmlandPlantData result = 2;
  total_size += 1UL * this->_internal_result_size();
  for (const auto& msg : this->_impl_.result_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.SimpleItemData used_ripe_items = 3;
  total_size += 1UL * this->_internal_used_ripe_items_size();
  for (const auto& msg : this->_impl_.used_ripe_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandRipeningAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandRipeningAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandRipeningAck::GetClassData() const { return &_class_data_; }


void FarmlandRipeningAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandRipeningAck*>(&to_msg);
  auto& from = static_cast<const FarmlandRipeningAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandRipeningAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.result_.MergeFrom(from._impl_.result_);
  _this->_impl_.used_ripe_items_.MergeFrom(from._impl_.used_ripe_items_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandRipeningAck::CopyFrom(const FarmlandRipeningAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandRipeningAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandRipeningAck::IsInitialized() const {
  return true;
}

void FarmlandRipeningAck::InternalSwap(FarmlandRipeningAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.result_.InternalSwap(&other->_impl_.result_);
  _impl_.used_ripe_items_.InternalSwap(&other->_impl_.used_ripe_items_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandRipeningAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[358]);
}

// ===================================================================

class FarmlandHarvestReq::_Internal {
 public:
};

FarmlandHarvestReq::FarmlandHarvestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandHarvestReq)
}
FarmlandHarvestReq::FarmlandHarvestReq(const FarmlandHarvestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandHarvestReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.plant_ids_){from._impl_.plant_ids_}
    , /*decltype(_impl_._plant_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.auto_harvest_same_class_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.auto_harvest_same_class_ = from._impl_.auto_harvest_same_class_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandHarvestReq)
}

inline void FarmlandHarvestReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.plant_ids_){arena}
    , /*decltype(_impl_._plant_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.auto_harvest_same_class_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandHarvestReq::~FarmlandHarvestReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandHarvestReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandHarvestReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.plant_ids_.~RepeatedField();
}

void FarmlandHarvestReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandHarvestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandHarvestReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.plant_ids_.Clear();
  _impl_.auto_harvest_same_class_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandHarvestReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 plant_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_plant_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_plant_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool auto_harvest_same_class = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.auto_harvest_same_class_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandHarvestReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandHarvestReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 plant_ids = 1;
  {
    int byte_size = _impl_._plant_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_plant_ids(), byte_size, target);
    }
  }

  // bool auto_harvest_same_class = 2;
  if (this->_internal_auto_harvest_same_class() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_auto_harvest_same_class(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandHarvestReq)
  return target;
}

size_t FarmlandHarvestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandHarvestReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 plant_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.plant_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._plant_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bool auto_harvest_same_class = 2;
  if (this->_internal_auto_harvest_same_class() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandHarvestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandHarvestReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandHarvestReq::GetClassData() const { return &_class_data_; }


void FarmlandHarvestReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandHarvestReq*>(&to_msg);
  auto& from = static_cast<const FarmlandHarvestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandHarvestReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.plant_ids_.MergeFrom(from._impl_.plant_ids_);
  if (from._internal_auto_harvest_same_class() != 0) {
    _this->_internal_set_auto_harvest_same_class(from._internal_auto_harvest_same_class());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandHarvestReq::CopyFrom(const FarmlandHarvestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandHarvestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandHarvestReq::IsInitialized() const {
  return true;
}

void FarmlandHarvestReq::InternalSwap(FarmlandHarvestReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.plant_ids_.InternalSwap(&other->_impl_.plant_ids_);
  swap(_impl_.auto_harvest_same_class_, other->_impl_.auto_harvest_same_class_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandHarvestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[359]);
}

// ===================================================================

class FarmlandHarvestAck::_Internal {
 public:
};

void FarmlandHarvestAck::clear_items() {
  _impl_.items_.Clear();
}
void FarmlandHarvestAck::clear_continue_seeds() {
  _impl_.continue_seeds_.Clear();
}
FarmlandHarvestAck::FarmlandHarvestAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandHarvestAck)
}
FarmlandHarvestAck::FarmlandHarvestAck(const FarmlandHarvestAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandHarvestAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.op_success_plant_id_){from._impl_.op_success_plant_id_}
    , /*decltype(_impl_._op_success_plant_id_cached_byte_size_)*/{0}
    , decltype(_impl_.continue_seeds_){from._impl_.continue_seeds_}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandHarvestAck)
}

inline void FarmlandHarvestAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.op_success_plant_id_){arena}
    , /*decltype(_impl_._op_success_plant_id_cached_byte_size_)*/{0}
    , decltype(_impl_.continue_seeds_){arena}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandHarvestAck::~FarmlandHarvestAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandHarvestAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandHarvestAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.op_success_plant_id_.~RepeatedField();
  _impl_.continue_seeds_.~RepeatedPtrField();
}

void FarmlandHarvestAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandHarvestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandHarvestAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.op_success_plant_id_.Clear();
  _impl_.continue_seeds_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandHarvestAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 op_success_plant_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_op_success_plant_id(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_op_success_plant_id(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.FarmlandPlantData continue_seeds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_continue_seeds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandHarvestAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandHarvestAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated .idlepb.SimpleItemData items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 op_success_plant_id = 3;
  {
    int byte_size = _impl_._op_success_plant_id_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_op_success_plant_id(), byte_size, target);
    }
  }

  // repeated .idlepb.FarmlandPlantData continue_seeds = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_continue_seeds_size()); i < n; i++) {
    const auto& repfield = this->_internal_continue_seeds(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandHarvestAck)
  return target;
}

size_t FarmlandHarvestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandHarvestAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 op_success_plant_id = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.op_success_plant_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._op_success_plant_id_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .idlepb.FarmlandPlantData continue_seeds = 4;
  total_size += 1UL * this->_internal_continue_seeds_size();
  for (const auto& msg : this->_impl_.continue_seeds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandHarvestAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandHarvestAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandHarvestAck::GetClassData() const { return &_class_data_; }


void FarmlandHarvestAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandHarvestAck*>(&to_msg);
  auto& from = static_cast<const FarmlandHarvestAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandHarvestAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_impl_.op_success_plant_id_.MergeFrom(from._impl_.op_success_plant_id_);
  _this->_impl_.continue_seeds_.MergeFrom(from._impl_.continue_seeds_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandHarvestAck::CopyFrom(const FarmlandHarvestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandHarvestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandHarvestAck::IsInitialized() const {
  return true;
}

void FarmlandHarvestAck::InternalSwap(FarmlandHarvestAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.op_success_plant_id_.InternalSwap(&other->_impl_.op_success_plant_id_);
  _impl_.continue_seeds_.InternalSwap(&other->_impl_.continue_seeds_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandHarvestAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[360]);
}

// ===================================================================

class FarmerRankUpReq::_Internal {
 public:
};

FarmerRankUpReq::FarmerRankUpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmerRankUpReq)
}
FarmerRankUpReq::FarmerRankUpReq(const FarmerRankUpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  FarmerRankUpReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmerRankUpReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmerRankUpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmerRankUpReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata FarmerRankUpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[361]);
}

// ===================================================================

class FarmerRankUpAck::_Internal {
 public:
};

FarmerRankUpAck::FarmerRankUpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmerRankUpAck)
}
FarmerRankUpAck::FarmerRankUpAck(const FarmerRankUpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmerRankUpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmerRankUpAck)
}

inline void FarmerRankUpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmerRankUpAck::~FarmerRankUpAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmerRankUpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmerRankUpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmerRankUpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmerRankUpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmerRankUpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmerRankUpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmerRankUpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmerRankUpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmerRankUpAck)
  return target;
}

size_t FarmerRankUpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmerRankUpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmerRankUpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmerRankUpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmerRankUpAck::GetClassData() const { return &_class_data_; }


void FarmerRankUpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmerRankUpAck*>(&to_msg);
  auto& from = static_cast<const FarmerRankUpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmerRankUpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmerRankUpAck::CopyFrom(const FarmerRankUpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmerRankUpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmerRankUpAck::IsInitialized() const {
  return true;
}

void FarmerRankUpAck::InternalSwap(FarmerRankUpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmerRankUpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[362]);
}

// ===================================================================

class FarmlandSetManagementReq::_Internal {
 public:
};

void FarmlandSetManagementReq::clear_plans() {
  _impl_.plans_.Clear();
}
FarmlandSetManagementReq::FarmlandSetManagementReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandSetManagementReq)
}
FarmlandSetManagementReq::FarmlandSetManagementReq(const FarmlandSetManagementReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandSetManagementReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.plans_){from._impl_.plans_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandSetManagementReq)
}

inline void FarmlandSetManagementReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.plans_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandSetManagementReq::~FarmlandSetManagementReq() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandSetManagementReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandSetManagementReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.plans_.~RepeatedPtrField();
}

void FarmlandSetManagementReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandSetManagementReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandSetManagementReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.plans_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandSetManagementReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.FarmlandManagementInfo plans = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_plans(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandSetManagementReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandSetManagementReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.FarmlandManagementInfo plans = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_plans_size()); i < n; i++) {
    const auto& repfield = this->_internal_plans(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandSetManagementReq)
  return target;
}

size_t FarmlandSetManagementReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandSetManagementReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.FarmlandManagementInfo plans = 1;
  total_size += 1UL * this->_internal_plans_size();
  for (const auto& msg : this->_impl_.plans_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandSetManagementReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandSetManagementReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandSetManagementReq::GetClassData() const { return &_class_data_; }


void FarmlandSetManagementReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandSetManagementReq*>(&to_msg);
  auto& from = static_cast<const FarmlandSetManagementReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandSetManagementReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.plans_.MergeFrom(from._impl_.plans_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandSetManagementReq::CopyFrom(const FarmlandSetManagementReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandSetManagementReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandSetManagementReq::IsInitialized() const {
  return true;
}

void FarmlandSetManagementReq::InternalSwap(FarmlandSetManagementReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.plans_.InternalSwap(&other->_impl_.plans_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandSetManagementReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[363]);
}

// ===================================================================

class FarmlandSetManagementAck::_Internal {
 public:
};

FarmlandSetManagementAck::FarmlandSetManagementAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FarmlandSetManagementAck)
}
FarmlandSetManagementAck::FarmlandSetManagementAck(const FarmlandSetManagementAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FarmlandSetManagementAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.FarmlandSetManagementAck)
}

inline void FarmlandSetManagementAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FarmlandSetManagementAck::~FarmlandSetManagementAck() {
  // @@protoc_insertion_point(destructor:idlepb.FarmlandSetManagementAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FarmlandSetManagementAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FarmlandSetManagementAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FarmlandSetManagementAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FarmlandSetManagementAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FarmlandSetManagementAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FarmlandSetManagementAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FarmlandSetManagementAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FarmlandSetManagementAck)
  return target;
}

size_t FarmlandSetManagementAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FarmlandSetManagementAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FarmlandSetManagementAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FarmlandSetManagementAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FarmlandSetManagementAck::GetClassData() const { return &_class_data_; }


void FarmlandSetManagementAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FarmlandSetManagementAck*>(&to_msg);
  auto& from = static_cast<const FarmlandSetManagementAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FarmlandSetManagementAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FarmlandSetManagementAck::CopyFrom(const FarmlandSetManagementAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FarmlandSetManagementAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FarmlandSetManagementAck::IsInitialized() const {
  return true;
}

void FarmlandSetManagementAck::InternalSwap(FarmlandSetManagementAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FarmlandSetManagementAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[364]);
}

// ===================================================================

class UpdateFarmlandStateReq::_Internal {
 public:
};

UpdateFarmlandStateReq::UpdateFarmlandStateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateFarmlandStateReq)
}
UpdateFarmlandStateReq::UpdateFarmlandStateReq(const UpdateFarmlandStateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UpdateFarmlandStateReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateFarmlandStateReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFarmlandStateReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFarmlandStateReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateFarmlandStateReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[365]);
}

// ===================================================================

class UpdateFarmlandStateAck::_Internal {
 public:
};

void UpdateFarmlandStateAck::clear_continue_seeds() {
  _impl_.continue_seeds_.Clear();
}
void UpdateFarmlandStateAck::clear_harvest_items() {
  _impl_.harvest_items_.Clear();
}
UpdateFarmlandStateAck::UpdateFarmlandStateAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.UpdateFarmlandStateAck)
}
UpdateFarmlandStateAck::UpdateFarmlandStateAck(const UpdateFarmlandStateAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateFarmlandStateAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.auto_harvest_plants_){from._impl_.auto_harvest_plants_}
    , /*decltype(_impl_._auto_harvest_plants_cached_byte_size_)*/{0}
    , decltype(_impl_.continue_seeds_){from._impl_.continue_seeds_}
    , decltype(_impl_.harvest_items_){from._impl_.harvest_items_}
    , decltype(_impl_.farmer_friendship_exp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.farmer_friendship_exp_ = from._impl_.farmer_friendship_exp_;
  // @@protoc_insertion_point(copy_constructor:idlepb.UpdateFarmlandStateAck)
}

inline void UpdateFarmlandStateAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.auto_harvest_plants_){arena}
    , /*decltype(_impl_._auto_harvest_plants_cached_byte_size_)*/{0}
    , decltype(_impl_.continue_seeds_){arena}
    , decltype(_impl_.harvest_items_){arena}
    , decltype(_impl_.farmer_friendship_exp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateFarmlandStateAck::~UpdateFarmlandStateAck() {
  // @@protoc_insertion_point(destructor:idlepb.UpdateFarmlandStateAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFarmlandStateAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.auto_harvest_plants_.~RepeatedField();
  _impl_.continue_seeds_.~RepeatedPtrField();
  _impl_.harvest_items_.~RepeatedPtrField();
}

void UpdateFarmlandStateAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateFarmlandStateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.UpdateFarmlandStateAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.auto_harvest_plants_.Clear();
  _impl_.continue_seeds_.Clear();
  _impl_.harvest_items_.Clear();
  _impl_.farmer_friendship_exp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFarmlandStateAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 farmer_friendship_exp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.farmer_friendship_exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 auto_harvest_plants = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_auto_harvest_plants(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_auto_harvest_plants(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.FarmlandPlantData continue_seeds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_continue_seeds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleItemData harvest_items = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_harvest_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFarmlandStateAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.UpdateFarmlandStateAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 farmer_friendship_exp = 1;
  if (this->_internal_farmer_friendship_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_farmer_friendship_exp(), target);
  }

  // repeated int32 auto_harvest_plants = 2;
  {
    int byte_size = _impl_._auto_harvest_plants_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_auto_harvest_plants(), byte_size, target);
    }
  }

  // repeated .idlepb.FarmlandPlantData continue_seeds = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_continue_seeds_size()); i < n; i++) {
    const auto& repfield = this->_internal_continue_seeds(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .idlepb.SimpleItemData harvest_items = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_harvest_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_harvest_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.UpdateFarmlandStateAck)
  return target;
}

size_t UpdateFarmlandStateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.UpdateFarmlandStateAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 auto_harvest_plants = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.auto_harvest_plants_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._auto_harvest_plants_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .idlepb.FarmlandPlantData continue_seeds = 3;
  total_size += 1UL * this->_internal_continue_seeds_size();
  for (const auto& msg : this->_impl_.continue_seeds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .idlepb.SimpleItemData harvest_items = 4;
  total_size += 1UL * this->_internal_harvest_items_size();
  for (const auto& msg : this->_impl_.harvest_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 farmer_friendship_exp = 1;
  if (this->_internal_farmer_friendship_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_farmer_friendship_exp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFarmlandStateAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateFarmlandStateAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFarmlandStateAck::GetClassData() const { return &_class_data_; }


void UpdateFarmlandStateAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateFarmlandStateAck*>(&to_msg);
  auto& from = static_cast<const UpdateFarmlandStateAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.UpdateFarmlandStateAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.auto_harvest_plants_.MergeFrom(from._impl_.auto_harvest_plants_);
  _this->_impl_.continue_seeds_.MergeFrom(from._impl_.continue_seeds_);
  _this->_impl_.harvest_items_.MergeFrom(from._impl_.harvest_items_);
  if (from._internal_farmer_friendship_exp() != 0) {
    _this->_internal_set_farmer_friendship_exp(from._internal_farmer_friendship_exp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFarmlandStateAck::CopyFrom(const UpdateFarmlandStateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.UpdateFarmlandStateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFarmlandStateAck::IsInitialized() const {
  return true;
}

void UpdateFarmlandStateAck::InternalSwap(UpdateFarmlandStateAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.auto_harvest_plants_.InternalSwap(&other->_impl_.auto_harvest_plants_);
  _impl_.continue_seeds_.InternalSwap(&other->_impl_.continue_seeds_);
  _impl_.harvest_items_.InternalSwap(&other->_impl_.harvest_items_);
  swap(_impl_.farmer_friendship_exp_, other->_impl_.farmer_friendship_exp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFarmlandStateAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[366]);
}

// ===================================================================

class GetRoleInfoReq::_Internal {
 public:
};

GetRoleInfoReq::GetRoleInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleInfoReq)
}
GetRoleInfoReq::GetRoleInfoReq(const GetRoleInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.role_id_ = from._impl_.role_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleInfoReq)
}

inline void GetRoleInfoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleInfoReq::~GetRoleInfoReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoleInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleInfoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleInfoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleInfoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleInfoReq)
  return target;
}

size_t GetRoleInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleInfoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_role_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleInfoReq::GetClassData() const { return &_class_data_; }


void GetRoleInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleInfoReq*>(&to_msg);
  auto& from = static_cast<const GetRoleInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleInfoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleInfoReq::CopyFrom(const GetRoleInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleInfoReq::IsInitialized() const {
  return true;
}

void GetRoleInfoReq::InternalSwap(GetRoleInfoReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.role_id_, other->_impl_.role_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[367]);
}

// ===================================================================

class GetRoleInfoAck::_Internal {
 public:
  static const ::idlepb::RoleInfo& role_info(const GetRoleInfoAck* msg);
};

const ::idlepb::RoleInfo&
GetRoleInfoAck::_Internal::role_info(const GetRoleInfoAck* msg) {
  return *msg->_impl_.role_info_;
}
void GetRoleInfoAck::clear_role_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.role_info_ != nullptr) {
    delete _impl_.role_info_;
  }
  _impl_.role_info_ = nullptr;
}
GetRoleInfoAck::GetRoleInfoAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleInfoAck)
}
GetRoleInfoAck::GetRoleInfoAck(const GetRoleInfoAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleInfoAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_info_){nullptr}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role_info()) {
    _this->_impl_.role_info_ = new ::idlepb::RoleInfo(*from._impl_.role_info_);
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleInfoAck)
}

inline void GetRoleInfoAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_info_){nullptr}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleInfoAck::~GetRoleInfoAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleInfoAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleInfoAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.role_info_;
}

void GetRoleInfoAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleInfoAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.role_info_ != nullptr) {
    delete _impl_.role_info_;
  }
  _impl_.role_info_ = nullptr;
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleInfoAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleInfo role_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ok = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleInfoAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleInfoAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleInfo role_info = 1;
  if (this->_internal_has_role_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::role_info(this),
        _Internal::role_info(this).GetCachedSize(), target, stream);
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleInfoAck)
  return target;
}

size_t GetRoleInfoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleInfoAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleInfo role_info = 1;
  if (this->_internal_has_role_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.role_info_);
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleInfoAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleInfoAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleInfoAck::GetClassData() const { return &_class_data_; }


void GetRoleInfoAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleInfoAck*>(&to_msg);
  auto& from = static_cast<const GetRoleInfoAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleInfoAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_role_info()) {
    _this->_internal_mutable_role_info()->::idlepb::RoleInfo::MergeFrom(
        from._internal_role_info());
  }
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleInfoAck::CopyFrom(const GetRoleInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleInfoAck::IsInitialized() const {
  return true;
}

void GetRoleInfoAck::InternalSwap(GetRoleInfoAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRoleInfoAck, _impl_.ok_)
      + sizeof(GetRoleInfoAck::_impl_.ok_)
      - PROTOBUF_FIELD_OFFSET(GetRoleInfoAck, _impl_.role_info_)>(
          reinterpret_cast<char*>(&_impl_.role_info_),
          reinterpret_cast<char*>(&other->_impl_.role_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleInfoAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[368]);
}

// ===================================================================

class GetRoleFriendDataReq::_Internal {
 public:
};

GetRoleFriendDataReq::GetRoleFriendDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleFriendDataReq)
}
GetRoleFriendDataReq::GetRoleFriendDataReq(const GetRoleFriendDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleFriendDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleFriendDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleFriendDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleFriendDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleFriendDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[369]);
}

// ===================================================================

class GetRoleFriendDataAck::_Internal {
 public:
  static const ::idlepb::RoleFriendData& data(const GetRoleFriendDataAck* msg);
};

const ::idlepb::RoleFriendData&
GetRoleFriendDataAck::_Internal::data(const GetRoleFriendDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleFriendDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
void GetRoleFriendDataAck::clear_role_infos() {
  _impl_.role_infos_.Clear();
}
GetRoleFriendDataAck::GetRoleFriendDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleFriendDataAck)
}
GetRoleFriendDataAck::GetRoleFriendDataAck(const GetRoleFriendDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleFriendDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){from._impl_.role_infos_}
    , decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleFriendData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleFriendDataAck)
}

inline void GetRoleFriendDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){arena}
    , decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleFriendDataAck::~GetRoleFriendDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleFriendDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleFriendDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_infos_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleFriendDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleFriendDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleFriendDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_infos_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleFriendDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleFriendData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .idlepb.SimpleRoleInfo role_infos = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleFriendDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleFriendDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleFriendData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // repeated .idlepb.SimpleRoleInfo role_infos = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_role_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_role_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleFriendDataAck)
  return target;
}

size_t GetRoleFriendDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleFriendDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleRoleInfo role_infos = 11;
  total_size += 1UL * this->_internal_role_infos_size();
  for (const auto& msg : this->_impl_.role_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.RoleFriendData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleFriendDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleFriendDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleFriendDataAck::GetClassData() const { return &_class_data_; }


void GetRoleFriendDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleFriendDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleFriendDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleFriendDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.role_infos_.MergeFrom(from._impl_.role_infos_);
  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleFriendData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleFriendDataAck::CopyFrom(const GetRoleFriendDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleFriendDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleFriendDataAck::IsInitialized() const {
  return true;
}

void GetRoleFriendDataAck::InternalSwap(GetRoleFriendDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.role_infos_.InternalSwap(&other->_impl_.role_infos_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleFriendDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[370]);
}

// ===================================================================

class FriendOpReq::_Internal {
 public:
};

FriendOpReq::FriendOpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FriendOpReq)
}
FriendOpReq::FriendOpReq(const FriendOpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FriendOpReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , decltype(_impl_.op_type_){}
    , decltype(_impl_.reverse_op_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reverse_op_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.reverse_op_));
  // @@protoc_insertion_point(copy_constructor:idlepb.FriendOpReq)
}

inline void FriendOpReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){int64_t{0}}
    , decltype(_impl_.op_type_){0}
    , decltype(_impl_.reverse_op_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FriendOpReq::~FriendOpReq() {
  // @@protoc_insertion_point(destructor:idlepb.FriendOpReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendOpReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FriendOpReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FriendOpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FriendOpReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.reverse_op_) -
      reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.reverse_op_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendOpReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FriendRelationshipType op_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_op_type(static_cast<::idlepb::FriendRelationshipType>(val));
        } else
          goto handle_unusual;
        continue;
      // bool reverse_op = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.reverse_op_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendOpReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FriendOpReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_role_id(), target);
  }

  // .idlepb.FriendRelationshipType op_type = 2;
  if (this->_internal_op_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_op_type(), target);
  }

  // bool reverse_op = 3;
  if (this->_internal_reverse_op() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_reverse_op(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FriendOpReq)
  return target;
}

size_t FriendOpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FriendOpReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_role_id());
  }

  // .idlepb.FriendRelationshipType op_type = 2;
  if (this->_internal_op_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_op_type());
  }

  // bool reverse_op = 3;
  if (this->_internal_reverse_op() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendOpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FriendOpReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendOpReq::GetClassData() const { return &_class_data_; }


void FriendOpReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FriendOpReq*>(&to_msg);
  auto& from = static_cast<const FriendOpReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FriendOpReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_op_type() != 0) {
    _this->_internal_set_op_type(from._internal_op_type());
  }
  if (from._internal_reverse_op() != 0) {
    _this->_internal_set_reverse_op(from._internal_reverse_op());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendOpReq::CopyFrom(const FriendOpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FriendOpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendOpReq::IsInitialized() const {
  return true;
}

void FriendOpReq::InternalSwap(FriendOpReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendOpReq, _impl_.reverse_op_)
      + sizeof(FriendOpReq::_impl_.reverse_op_)
      - PROTOBUF_FIELD_OFFSET(FriendOpReq, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendOpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[371]);
}

// ===================================================================

class FriendOpAck::_Internal {
 public:
};

FriendOpAck::FriendOpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FriendOpAck)
}
FriendOpAck::FriendOpAck(const FriendOpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FriendOpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , decltype(_impl_.relationship_ab_){}
    , decltype(_impl_.relationship_ba_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.ok_, &from._impl_.ok_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.relationship_ba_) -
    reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.relationship_ba_));
  // @@protoc_insertion_point(copy_constructor:idlepb.FriendOpAck)
}

inline void FriendOpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , decltype(_impl_.relationship_ab_){0}
    , decltype(_impl_.relationship_ba_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FriendOpAck::~FriendOpAck() {
  // @@protoc_insertion_point(destructor:idlepb.FriendOpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendOpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FriendOpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FriendOpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FriendOpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ok_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.relationship_ba_) -
      reinterpret_cast<char*>(&_impl_.ok_)) + sizeof(_impl_.relationship_ba_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendOpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FriendRelationshipType relationship_ab = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_relationship_ab(static_cast<::idlepb::FriendRelationshipType>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FriendRelationshipType relationship_ba = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_relationship_ba(static_cast<::idlepb::FriendRelationshipType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendOpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FriendOpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // .idlepb.FriendRelationshipType relationship_ab = 2;
  if (this->_internal_relationship_ab() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_relationship_ab(), target);
  }

  // .idlepb.FriendRelationshipType relationship_ba = 3;
  if (this->_internal_relationship_ba() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_relationship_ba(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FriendOpAck)
  return target;
}

size_t FriendOpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FriendOpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  // .idlepb.FriendRelationshipType relationship_ab = 2;
  if (this->_internal_relationship_ab() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_relationship_ab());
  }

  // .idlepb.FriendRelationshipType relationship_ba = 3;
  if (this->_internal_relationship_ba() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_relationship_ba());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendOpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FriendOpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendOpAck::GetClassData() const { return &_class_data_; }


void FriendOpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FriendOpAck*>(&to_msg);
  auto& from = static_cast<const FriendOpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FriendOpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  if (from._internal_relationship_ab() != 0) {
    _this->_internal_set_relationship_ab(from._internal_relationship_ab());
  }
  if (from._internal_relationship_ba() != 0) {
    _this->_internal_set_relationship_ba(from._internal_relationship_ba());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendOpAck::CopyFrom(const FriendOpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FriendOpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendOpAck::IsInitialized() const {
  return true;
}

void FriendOpAck::InternalSwap(FriendOpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendOpAck, _impl_.relationship_ba_)
      + sizeof(FriendOpAck::_impl_.relationship_ba_)
      - PROTOBUF_FIELD_OFFSET(FriendOpAck, _impl_.ok_)>(
          reinterpret_cast<char*>(&_impl_.ok_),
          reinterpret_cast<char*>(&other->_impl_.ok_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendOpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[372]);
}

// ===================================================================

class ReplyFriendRequestReq::_Internal {
 public:
};

ReplyFriendRequestReq::ReplyFriendRequestReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReplyFriendRequestReq)
}
ReplyFriendRequestReq::ReplyFriendRequestReq(const ReplyFriendRequestReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplyFriendRequestReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){}
    , decltype(_impl_.agree_){}
    , decltype(_impl_.one_click_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.role_id_, &from._impl_.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.one_click_) -
    reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.one_click_));
  // @@protoc_insertion_point(copy_constructor:idlepb.ReplyFriendRequestReq)
}

inline void ReplyFriendRequestReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_id_){int64_t{0}}
    , decltype(_impl_.agree_){false}
    , decltype(_impl_.one_click_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReplyFriendRequestReq::~ReplyFriendRequestReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReplyFriendRequestReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplyFriendRequestReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReplyFriendRequestReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplyFriendRequestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReplyFriendRequestReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.one_click_) -
      reinterpret_cast<char*>(&_impl_.role_id_)) + sizeof(_impl_.one_click_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplyFriendRequestReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool agree = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool one_click = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.one_click_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplyFriendRequestReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReplyFriendRequestReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_role_id(), target);
  }

  // bool agree = 2;
  if (this->_internal_agree() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_agree(), target);
  }

  // bool one_click = 3;
  if (this->_internal_one_click() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_one_click(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReplyFriendRequestReq)
  return target;
}

size_t ReplyFriendRequestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReplyFriendRequestReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_role_id());
  }

  // bool agree = 2;
  if (this->_internal_agree() != 0) {
    total_size += 1 + 1;
  }

  // bool one_click = 3;
  if (this->_internal_one_click() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplyFriendRequestReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplyFriendRequestReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplyFriendRequestReq::GetClassData() const { return &_class_data_; }


void ReplyFriendRequestReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplyFriendRequestReq*>(&to_msg);
  auto& from = static_cast<const ReplyFriendRequestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReplyFriendRequestReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _this->_internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_agree() != 0) {
    _this->_internal_set_agree(from._internal_agree());
  }
  if (from._internal_one_click() != 0) {
    _this->_internal_set_one_click(from._internal_one_click());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplyFriendRequestReq::CopyFrom(const ReplyFriendRequestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReplyFriendRequestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyFriendRequestReq::IsInitialized() const {
  return true;
}

void ReplyFriendRequestReq::InternalSwap(ReplyFriendRequestReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplyFriendRequestReq, _impl_.one_click_)
      + sizeof(ReplyFriendRequestReq::_impl_.one_click_)
      - PROTOBUF_FIELD_OFFSET(ReplyFriendRequestReq, _impl_.role_id_)>(
          reinterpret_cast<char*>(&_impl_.role_id_),
          reinterpret_cast<char*>(&other->_impl_.role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplyFriendRequestReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[373]);
}

// ===================================================================

class ReplyFriendRequestAck::_Internal {
 public:
};

ReplyFriendRequestAck::ReplyFriendRequestAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReplyFriendRequestAck)
}
ReplyFriendRequestAck::ReplyFriendRequestAck(const ReplyFriendRequestAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplyFriendRequestAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relationship_ba_){from._impl_.relationship_ba_}
    , /*decltype(_impl_._relationship_ba_cached_byte_size_)*/{0}
    , decltype(_impl_.failed_ids_){from._impl_.failed_ids_}
    , /*decltype(_impl_._failed_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReplyFriendRequestAck)
}

inline void ReplyFriendRequestAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relationship_ba_){arena}
    , /*decltype(_impl_._relationship_ba_cached_byte_size_)*/{0}
    , decltype(_impl_.failed_ids_){arena}
    , /*decltype(_impl_._failed_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReplyFriendRequestAck::~ReplyFriendRequestAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReplyFriendRequestAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplyFriendRequestAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.relationship_ba_.~RepeatedField();
  _impl_.failed_ids_.~RepeatedField();
}

void ReplyFriendRequestAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplyFriendRequestAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReplyFriendRequestAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relationship_ba_.Clear();
  _impl_.failed_ids_.Clear();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplyFriendRequestAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 relationship_ba = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_relationship_ba(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_relationship_ba(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 failed_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_failed_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_failed_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplyFriendRequestAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReplyFriendRequestAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  // repeated int32 relationship_ba = 2;
  {
    int byte_size = _impl_._relationship_ba_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_relationship_ba(), byte_size, target);
    }
  }

  // repeated int64 failed_ids = 3;
  {
    int byte_size = _impl_._failed_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_failed_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReplyFriendRequestAck)
  return target;
}

size_t ReplyFriendRequestAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReplyFriendRequestAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 relationship_ba = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.relationship_ba_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._relationship_ba_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 failed_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.failed_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._failed_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplyFriendRequestAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplyFriendRequestAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplyFriendRequestAck::GetClassData() const { return &_class_data_; }


void ReplyFriendRequestAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplyFriendRequestAck*>(&to_msg);
  auto& from = static_cast<const ReplyFriendRequestAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReplyFriendRequestAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.relationship_ba_.MergeFrom(from._impl_.relationship_ba_);
  _this->_impl_.failed_ids_.MergeFrom(from._impl_.failed_ids_);
  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplyFriendRequestAck::CopyFrom(const ReplyFriendRequestAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReplyFriendRequestAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyFriendRequestAck::IsInitialized() const {
  return true;
}

void ReplyFriendRequestAck::InternalSwap(ReplyFriendRequestAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.relationship_ba_.InternalSwap(&other->_impl_.relationship_ba_);
  _impl_.failed_ids_.InternalSwap(&other->_impl_.failed_ids_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplyFriendRequestAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[374]);
}

// ===================================================================

class FriendSearchRoleInfoReq::_Internal {
 public:
};

FriendSearchRoleInfoReq::FriendSearchRoleInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FriendSearchRoleInfoReq)
}
FriendSearchRoleInfoReq::FriendSearchRoleInfoReq(const FriendSearchRoleInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FriendSearchRoleInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_role_name().empty()) {
    _this->_impl_.role_name_.Set(from._internal_role_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.FriendSearchRoleInfoReq)
}

inline void FriendSearchRoleInfoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.role_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.role_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FriendSearchRoleInfoReq::~FriendSearchRoleInfoReq() {
  // @@protoc_insertion_point(destructor:idlepb.FriendSearchRoleInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendSearchRoleInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_name_.Destroy();
}

void FriendSearchRoleInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FriendSearchRoleInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FriendSearchRoleInfoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendSearchRoleInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string role_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_role_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.FriendSearchRoleInfoReq.role_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendSearchRoleInfoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FriendSearchRoleInfoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string role_name = 1;
  if (!this->_internal_role_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.FriendSearchRoleInfoReq.role_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_role_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FriendSearchRoleInfoReq)
  return target;
}

size_t FriendSearchRoleInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FriendSearchRoleInfoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string role_name = 1;
  if (!this->_internal_role_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendSearchRoleInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FriendSearchRoleInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendSearchRoleInfoReq::GetClassData() const { return &_class_data_; }


void FriendSearchRoleInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FriendSearchRoleInfoReq*>(&to_msg);
  auto& from = static_cast<const FriendSearchRoleInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FriendSearchRoleInfoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_role_name().empty()) {
    _this->_internal_set_role_name(from._internal_role_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendSearchRoleInfoReq::CopyFrom(const FriendSearchRoleInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FriendSearchRoleInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendSearchRoleInfoReq::IsInitialized() const {
  return true;
}

void FriendSearchRoleInfoReq::InternalSwap(FriendSearchRoleInfoReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.role_name_, lhs_arena,
      &other->_impl_.role_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendSearchRoleInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[375]);
}

// ===================================================================

class FriendSearchRoleInfoAck::_Internal {
 public:
};

void FriendSearchRoleInfoAck::clear_role_infos() {
  _impl_.role_infos_.Clear();
}
FriendSearchRoleInfoAck::FriendSearchRoleInfoAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.FriendSearchRoleInfoAck)
}
FriendSearchRoleInfoAck::FriendSearchRoleInfoAck(const FriendSearchRoleInfoAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FriendSearchRoleInfoAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){from._impl_.role_infos_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.FriendSearchRoleInfoAck)
}

inline void FriendSearchRoleInfoAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_infos_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FriendSearchRoleInfoAck::~FriendSearchRoleInfoAck() {
  // @@protoc_insertion_point(destructor:idlepb.FriendSearchRoleInfoAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FriendSearchRoleInfoAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.role_infos_.~RepeatedPtrField();
}

void FriendSearchRoleInfoAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FriendSearchRoleInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.FriendSearchRoleInfoAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.role_infos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendSearchRoleInfoAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.SimpleRoleInfo role_infos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendSearchRoleInfoAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.FriendSearchRoleInfoAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.SimpleRoleInfo role_infos = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_role_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_role_infos(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.FriendSearchRoleInfoAck)
  return target;
}

size_t FriendSearchRoleInfoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.FriendSearchRoleInfoAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleRoleInfo role_infos = 2;
  total_size += 1UL * this->_internal_role_infos_size();
  for (const auto& msg : this->_impl_.role_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendSearchRoleInfoAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FriendSearchRoleInfoAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendSearchRoleInfoAck::GetClassData() const { return &_class_data_; }


void FriendSearchRoleInfoAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FriendSearchRoleInfoAck*>(&to_msg);
  auto& from = static_cast<const FriendSearchRoleInfoAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.FriendSearchRoleInfoAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.role_infos_.MergeFrom(from._impl_.role_infos_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendSearchRoleInfoAck::CopyFrom(const FriendSearchRoleInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.FriendSearchRoleInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendSearchRoleInfoAck::IsInitialized() const {
  return true;
}

void FriendSearchRoleInfoAck::InternalSwap(FriendSearchRoleInfoAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.role_infos_.InternalSwap(&other->_impl_.role_infos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendSearchRoleInfoAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[376]);
}

// ===================================================================

class NotifyFriendMessage::_Internal {
 public:
  static const ::idlepb::SimpleRoleInfo& role_info(const NotifyFriendMessage* msg);
  static const ::idlepb::FriendListItem& friend_event(const NotifyFriendMessage* msg);
};

const ::idlepb::SimpleRoleInfo&
NotifyFriendMessage::_Internal::role_info(const NotifyFriendMessage* msg) {
  return *msg->_impl_.role_info_;
}
const ::idlepb::FriendListItem&
NotifyFriendMessage::_Internal::friend_event(const NotifyFriendMessage* msg) {
  return *msg->_impl_.friend_event_;
}
void NotifyFriendMessage::clear_role_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.role_info_ != nullptr) {
    delete _impl_.role_info_;
  }
  _impl_.role_info_ = nullptr;
}
void NotifyFriendMessage::clear_friend_event() {
  if (GetArenaForAllocation() == nullptr && _impl_.friend_event_ != nullptr) {
    delete _impl_.friend_event_;
  }
  _impl_.friend_event_ = nullptr;
}
NotifyFriendMessage::NotifyFriendMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyFriendMessage)
}
NotifyFriendMessage::NotifyFriendMessage(const NotifyFriendMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotifyFriendMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.role_info_){nullptr}
    , decltype(_impl_.friend_event_){nullptr}
    , decltype(_impl_.is_update_state_){}
    , decltype(_impl_.b_refused_){}
    , decltype(_impl_.online_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_role_info()) {
    _this->_impl_.role_info_ = new ::idlepb::SimpleRoleInfo(*from._impl_.role_info_);
  }
  if (from._internal_has_friend_event()) {
    _this->_impl_.friend_event_ = new ::idlepb::FriendListItem(*from._impl_.friend_event_);
  }
  ::memcpy(&_impl_.is_update_state_, &from._impl_.is_update_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.online_) -
    reinterpret_cast<char*>(&_impl_.is_update_state_)) + sizeof(_impl_.online_));
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyFriendMessage)
}

inline void NotifyFriendMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.role_info_){nullptr}
    , decltype(_impl_.friend_event_){nullptr}
    , decltype(_impl_.is_update_state_){false}
    , decltype(_impl_.b_refused_){false}
    , decltype(_impl_.online_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NotifyFriendMessage::~NotifyFriendMessage() {
  // @@protoc_insertion_point(destructor:idlepb.NotifyFriendMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotifyFriendMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.role_info_;
  if (this != internal_default_instance()) delete _impl_.friend_event_;
}

void NotifyFriendMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotifyFriendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.NotifyFriendMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.role_info_ != nullptr) {
    delete _impl_.role_info_;
  }
  _impl_.role_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.friend_event_ != nullptr) {
    delete _impl_.friend_event_;
  }
  _impl_.friend_event_ = nullptr;
  ::memset(&_impl_.is_update_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.online_) -
      reinterpret_cast<char*>(&_impl_.is_update_state_)) + sizeof(_impl_.online_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyFriendMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.SimpleRoleInfo role_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_role_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_update_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_update_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool b_refused = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.b_refused_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .idlepb.FriendListItem friend_event = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_friend_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool online = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotifyFriendMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.NotifyFriendMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.SimpleRoleInfo role_info = 1;
  if (this->_internal_has_role_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::role_info(this),
        _Internal::role_info(this).GetCachedSize(), target, stream);
  }

  // bool is_update_state = 2;
  if (this->_internal_is_update_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_update_state(), target);
  }

  // bool b_refused = 3;
  if (this->_internal_b_refused() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_b_refused(), target);
  }

  // .idlepb.FriendListItem friend_event = 4;
  if (this->_internal_has_friend_event()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::friend_event(this),
        _Internal::friend_event(this).GetCachedSize(), target, stream);
  }

  // bool online = 5;
  if (this->_internal_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.NotifyFriendMessage)
  return target;
}

size_t NotifyFriendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.NotifyFriendMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.SimpleRoleInfo role_info = 1;
  if (this->_internal_has_role_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.role_info_);
  }

  // .idlepb.FriendListItem friend_event = 4;
  if (this->_internal_has_friend_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.friend_event_);
  }

  // bool is_update_state = 2;
  if (this->_internal_is_update_state() != 0) {
    total_size += 1 + 1;
  }

  // bool b_refused = 3;
  if (this->_internal_b_refused() != 0) {
    total_size += 1 + 1;
  }

  // bool online = 5;
  if (this->_internal_online() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyFriendMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotifyFriendMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyFriendMessage::GetClassData() const { return &_class_data_; }


void NotifyFriendMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotifyFriendMessage*>(&to_msg);
  auto& from = static_cast<const NotifyFriendMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.NotifyFriendMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_role_info()) {
    _this->_internal_mutable_role_info()->::idlepb::SimpleRoleInfo::MergeFrom(
        from._internal_role_info());
  }
  if (from._internal_has_friend_event()) {
    _this->_internal_mutable_friend_event()->::idlepb::FriendListItem::MergeFrom(
        from._internal_friend_event());
  }
  if (from._internal_is_update_state() != 0) {
    _this->_internal_set_is_update_state(from._internal_is_update_state());
  }
  if (from._internal_b_refused() != 0) {
    _this->_internal_set_b_refused(from._internal_b_refused());
  }
  if (from._internal_online() != 0) {
    _this->_internal_set_online(from._internal_online());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotifyFriendMessage::CopyFrom(const NotifyFriendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.NotifyFriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyFriendMessage::IsInitialized() const {
  return true;
}

void NotifyFriendMessage::InternalSwap(NotifyFriendMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotifyFriendMessage, _impl_.online_)
      + sizeof(NotifyFriendMessage::_impl_.online_)
      - PROTOBUF_FIELD_OFFSET(NotifyFriendMessage, _impl_.role_info_)>(
          reinterpret_cast<char*>(&_impl_.role_info_),
          reinterpret_cast<char*>(&other->_impl_.role_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyFriendMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[377]);
}

// ===================================================================

class GetRoleAvatarDataReq::_Internal {
 public:
};

GetRoleAvatarDataReq::GetRoleAvatarDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleAvatarDataReq)
}
GetRoleAvatarDataReq::GetRoleAvatarDataReq(const GetRoleAvatarDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleAvatarDataReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.draw_this_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.draw_this_time_ = from._impl_.draw_this_time_;
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleAvatarDataReq)
}

inline void GetRoleAvatarDataReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.draw_this_time_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleAvatarDataReq::~GetRoleAvatarDataReq() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleAvatarDataReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleAvatarDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoleAvatarDataReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleAvatarDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleAvatarDataReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.draw_this_time_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleAvatarDataReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool draw_this_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.draw_this_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleAvatarDataReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleAvatarDataReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool draw_this_time = 1;
  if (this->_internal_draw_this_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_draw_this_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleAvatarDataReq)
  return target;
}

size_t GetRoleAvatarDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleAvatarDataReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool draw_this_time = 1;
  if (this->_internal_draw_this_time() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleAvatarDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleAvatarDataReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleAvatarDataReq::GetClassData() const { return &_class_data_; }


void GetRoleAvatarDataReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleAvatarDataReq*>(&to_msg);
  auto& from = static_cast<const GetRoleAvatarDataReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleAvatarDataReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_draw_this_time() != 0) {
    _this->_internal_set_draw_this_time(from._internal_draw_this_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleAvatarDataReq::CopyFrom(const GetRoleAvatarDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleAvatarDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleAvatarDataReq::IsInitialized() const {
  return true;
}

void GetRoleAvatarDataReq::InternalSwap(GetRoleAvatarDataReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.draw_this_time_, other->_impl_.draw_this_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleAvatarDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[378]);
}

// ===================================================================

class GetRoleAvatarDataAck::_Internal {
 public:
  static const ::idlepb::RoleAvatarData& data(const GetRoleAvatarDataAck* msg);
};

const ::idlepb::RoleAvatarData&
GetRoleAvatarDataAck::_Internal::data(const GetRoleAvatarDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleAvatarDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleAvatarDataAck::GetRoleAvatarDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleAvatarDataAck)
}
GetRoleAvatarDataAck::GetRoleAvatarDataAck(const GetRoleAvatarDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleAvatarDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAvatarData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleAvatarDataAck)
}

inline void GetRoleAvatarDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleAvatarDataAck::~GetRoleAvatarDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleAvatarDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleAvatarDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleAvatarDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleAvatarDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleAvatarDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleAvatarDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAvatarData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleAvatarDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleAvatarDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleAvatarDataAck)
  return target;
}

size_t GetRoleAvatarDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleAvatarDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleAvatarDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleAvatarDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleAvatarDataAck::GetClassData() const { return &_class_data_; }


void GetRoleAvatarDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleAvatarDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleAvatarDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleAvatarDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAvatarData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleAvatarDataAck::CopyFrom(const GetRoleAvatarDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleAvatarDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleAvatarDataAck::IsInitialized() const {
  return true;
}

void GetRoleAvatarDataAck::InternalSwap(GetRoleAvatarDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleAvatarDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[379]);
}

// ===================================================================

class DispatchAvatarReq::_Internal {
 public:
};

DispatchAvatarReq::DispatchAvatarReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DispatchAvatarReq)
}
DispatchAvatarReq::DispatchAvatarReq(const DispatchAvatarReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DispatchAvatarReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.world_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.world_index_ = from._impl_.world_index_;
  // @@protoc_insertion_point(copy_constructor:idlepb.DispatchAvatarReq)
}

inline void DispatchAvatarReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.world_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DispatchAvatarReq::~DispatchAvatarReq() {
  // @@protoc_insertion_point(destructor:idlepb.DispatchAvatarReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DispatchAvatarReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DispatchAvatarReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DispatchAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DispatchAvatarReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.world_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DispatchAvatarReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 world_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.world_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DispatchAvatarReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DispatchAvatarReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 world_index = 1;
  if (this->_internal_world_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_world_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DispatchAvatarReq)
  return target;
}

size_t DispatchAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DispatchAvatarReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 world_index = 1;
  if (this->_internal_world_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_world_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DispatchAvatarReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DispatchAvatarReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DispatchAvatarReq::GetClassData() const { return &_class_data_; }


void DispatchAvatarReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DispatchAvatarReq*>(&to_msg);
  auto& from = static_cast<const DispatchAvatarReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DispatchAvatarReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_world_index() != 0) {
    _this->_internal_set_world_index(from._internal_world_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DispatchAvatarReq::CopyFrom(const DispatchAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DispatchAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DispatchAvatarReq::IsInitialized() const {
  return true;
}

void DispatchAvatarReq::InternalSwap(DispatchAvatarReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.world_index_, other->_impl_.world_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DispatchAvatarReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[380]);
}

// ===================================================================

class DispatchAvatarAck::_Internal {
 public:
  static const ::idlepb::RoleAvatarData& data(const DispatchAvatarAck* msg);
};

const ::idlepb::RoleAvatarData&
DispatchAvatarAck::_Internal::data(const DispatchAvatarAck* msg) {
  return *msg->_impl_.data_;
}
void DispatchAvatarAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
DispatchAvatarAck::DispatchAvatarAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DispatchAvatarAck)
}
DispatchAvatarAck::DispatchAvatarAck(const DispatchAvatarAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DispatchAvatarAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAvatarData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.DispatchAvatarAck)
}

inline void DispatchAvatarAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DispatchAvatarAck::~DispatchAvatarAck() {
  // @@protoc_insertion_point(destructor:idlepb.DispatchAvatarAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DispatchAvatarAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void DispatchAvatarAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DispatchAvatarAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DispatchAvatarAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DispatchAvatarAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAvatarData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DispatchAvatarAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DispatchAvatarAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DispatchAvatarAck)
  return target;
}

size_t DispatchAvatarAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DispatchAvatarAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DispatchAvatarAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DispatchAvatarAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DispatchAvatarAck::GetClassData() const { return &_class_data_; }


void DispatchAvatarAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DispatchAvatarAck*>(&to_msg);
  auto& from = static_cast<const DispatchAvatarAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DispatchAvatarAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAvatarData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DispatchAvatarAck::CopyFrom(const DispatchAvatarAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DispatchAvatarAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DispatchAvatarAck::IsInitialized() const {
  return true;
}

void DispatchAvatarAck::InternalSwap(DispatchAvatarAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DispatchAvatarAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[381]);
}

// ===================================================================

class AvatarRankUpReq::_Internal {
 public:
};

AvatarRankUpReq::AvatarRankUpReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.AvatarRankUpReq)
}
AvatarRankUpReq::AvatarRankUpReq(const AvatarRankUpReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AvatarRankUpReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.AvatarRankUpReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AvatarRankUpReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AvatarRankUpReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AvatarRankUpReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[382]);
}

// ===================================================================

class AvatarRankUpAck::_Internal {
 public:
  static const ::idlepb::RoleAvatarData& data(const AvatarRankUpAck* msg);
};

const ::idlepb::RoleAvatarData&
AvatarRankUpAck::_Internal::data(const AvatarRankUpAck* msg) {
  return *msg->_impl_.data_;
}
void AvatarRankUpAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
AvatarRankUpAck::AvatarRankUpAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AvatarRankUpAck)
}
AvatarRankUpAck::AvatarRankUpAck(const AvatarRankUpAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AvatarRankUpAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAvatarData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.AvatarRankUpAck)
}

inline void AvatarRankUpAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AvatarRankUpAck::~AvatarRankUpAck() {
  // @@protoc_insertion_point(destructor:idlepb.AvatarRankUpAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AvatarRankUpAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void AvatarRankUpAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AvatarRankUpAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AvatarRankUpAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AvatarRankUpAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAvatarData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AvatarRankUpAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AvatarRankUpAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AvatarRankUpAck)
  return target;
}

size_t AvatarRankUpAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AvatarRankUpAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AvatarRankUpAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AvatarRankUpAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AvatarRankUpAck::GetClassData() const { return &_class_data_; }


void AvatarRankUpAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AvatarRankUpAck*>(&to_msg);
  auto& from = static_cast<const AvatarRankUpAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AvatarRankUpAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAvatarData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AvatarRankUpAck::CopyFrom(const AvatarRankUpAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AvatarRankUpAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarRankUpAck::IsInitialized() const {
  return true;
}

void AvatarRankUpAck::InternalSwap(AvatarRankUpAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AvatarRankUpAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[383]);
}

// ===================================================================

class ReceiveAvatarTempPackageReq::_Internal {
 public:
};

ReceiveAvatarTempPackageReq::ReceiveAvatarTempPackageReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveAvatarTempPackageReq)
}
ReceiveAvatarTempPackageReq::ReceiveAvatarTempPackageReq(const ReceiveAvatarTempPackageReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReceiveAvatarTempPackageReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveAvatarTempPackageReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveAvatarTempPackageReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveAvatarTempPackageReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReceiveAvatarTempPackageReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[384]);
}

// ===================================================================

class ReceiveAvatarTempPackageAck::_Internal {
 public:
  static const ::idlepb::RoleAvatarData& data(const ReceiveAvatarTempPackageAck* msg);
};

const ::idlepb::RoleAvatarData&
ReceiveAvatarTempPackageAck::_Internal::data(const ReceiveAvatarTempPackageAck* msg) {
  return *msg->_impl_.data_;
}
void ReceiveAvatarTempPackageAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
ReceiveAvatarTempPackageAck::ReceiveAvatarTempPackageAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveAvatarTempPackageAck)
}
ReceiveAvatarTempPackageAck::ReceiveAvatarTempPackageAck(const ReceiveAvatarTempPackageAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveAvatarTempPackageAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleAvatarData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveAvatarTempPackageAck)
}

inline void ReceiveAvatarTempPackageAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveAvatarTempPackageAck::~ReceiveAvatarTempPackageAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveAvatarTempPackageAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveAvatarTempPackageAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void ReceiveAvatarTempPackageAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveAvatarTempPackageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveAvatarTempPackageAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveAvatarTempPackageAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleAvatarData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveAvatarTempPackageAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveAvatarTempPackageAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveAvatarTempPackageAck)
  return target;
}

size_t ReceiveAvatarTempPackageAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveAvatarTempPackageAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleAvatarData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveAvatarTempPackageAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveAvatarTempPackageAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveAvatarTempPackageAck::GetClassData() const { return &_class_data_; }


void ReceiveAvatarTempPackageAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveAvatarTempPackageAck*>(&to_msg);
  auto& from = static_cast<const ReceiveAvatarTempPackageAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveAvatarTempPackageAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleAvatarData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveAvatarTempPackageAck::CopyFrom(const ReceiveAvatarTempPackageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveAvatarTempPackageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveAvatarTempPackageAck::IsInitialized() const {
  return true;
}

void ReceiveAvatarTempPackageAck::InternalSwap(ReceiveAvatarTempPackageAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveAvatarTempPackageAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[385]);
}

// ===================================================================

class GetRoleBiographyDataReq::_Internal {
 public:
};

GetRoleBiographyDataReq::GetRoleBiographyDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleBiographyDataReq)
}
GetRoleBiographyDataReq::GetRoleBiographyDataReq(const GetRoleBiographyDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleBiographyDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleBiographyDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleBiographyDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleBiographyDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleBiographyDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[386]);
}

// ===================================================================

class GetRoleBiographyDataAck::_Internal {
 public:
  static const ::idlepb::RoleBiographyData& data(const GetRoleBiographyDataAck* msg);
};

const ::idlepb::RoleBiographyData&
GetRoleBiographyDataAck::_Internal::data(const GetRoleBiographyDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleBiographyDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleBiographyDataAck::GetRoleBiographyDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleBiographyDataAck)
}
GetRoleBiographyDataAck::GetRoleBiographyDataAck(const GetRoleBiographyDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleBiographyDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleBiographyData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleBiographyDataAck)
}

inline void GetRoleBiographyDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleBiographyDataAck::~GetRoleBiographyDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleBiographyDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleBiographyDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleBiographyDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleBiographyDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleBiographyDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleBiographyDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleBiographyData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleBiographyDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleBiographyDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleBiographyData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleBiographyDataAck)
  return target;
}

size_t GetRoleBiographyDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleBiographyDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleBiographyData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleBiographyDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleBiographyDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleBiographyDataAck::GetClassData() const { return &_class_data_; }


void GetRoleBiographyDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleBiographyDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleBiographyDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleBiographyDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleBiographyData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleBiographyDataAck::CopyFrom(const GetRoleBiographyDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleBiographyDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleBiographyDataAck::IsInitialized() const {
  return true;
}

void GetRoleBiographyDataAck::InternalSwap(GetRoleBiographyDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleBiographyDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[387]);
}

// ===================================================================

class ReceiveBiographyItemReq::_Internal {
 public:
};

ReceiveBiographyItemReq::ReceiveBiographyItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBiographyItemReq)
}
ReceiveBiographyItemReq::ReceiveBiographyItemReq(const ReceiveBiographyItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBiographyItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_ids_){from._impl_.cfg_ids_}
    , /*decltype(_impl_._cfg_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBiographyItemReq)
}

inline void ReceiveBiographyItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_ids_){arena}
    , /*decltype(_impl_._cfg_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBiographyItemReq::~ReceiveBiographyItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBiographyItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBiographyItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cfg_ids_.~RepeatedField();
}

void ReceiveBiographyItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBiographyItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBiographyItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cfg_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBiographyItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 cfg_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cfg_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_cfg_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBiographyItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBiographyItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 cfg_ids = 1;
  {
    int byte_size = _impl_._cfg_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_cfg_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBiographyItemReq)
  return target;
}

size_t ReceiveBiographyItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBiographyItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cfg_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.cfg_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._cfg_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBiographyItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBiographyItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBiographyItemReq::GetClassData() const { return &_class_data_; }


void ReceiveBiographyItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBiographyItemReq*>(&to_msg);
  auto& from = static_cast<const ReceiveBiographyItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBiographyItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.cfg_ids_.MergeFrom(from._impl_.cfg_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBiographyItemReq::CopyFrom(const ReceiveBiographyItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBiographyItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBiographyItemReq::IsInitialized() const {
  return true;
}

void ReceiveBiographyItemReq::InternalSwap(ReceiveBiographyItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cfg_ids_.InternalSwap(&other->_impl_.cfg_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBiographyItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[388]);
}

// ===================================================================

class ReceiveBiographyItemAck::_Internal {
 public:
};

ReceiveBiographyItemAck::ReceiveBiographyItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBiographyItemAck)
}
ReceiveBiographyItemAck::ReceiveBiographyItemAck(const ReceiveBiographyItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBiographyItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBiographyItemAck)
}

inline void ReceiveBiographyItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBiographyItemAck::~ReceiveBiographyItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBiographyItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBiographyItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveBiographyItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBiographyItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBiographyItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBiographyItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBiographyItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBiographyItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBiographyItemAck)
  return target;
}

size_t ReceiveBiographyItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBiographyItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBiographyItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBiographyItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBiographyItemAck::GetClassData() const { return &_class_data_; }


void ReceiveBiographyItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBiographyItemAck*>(&to_msg);
  auto& from = static_cast<const ReceiveBiographyItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBiographyItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBiographyItemAck::CopyFrom(const ReceiveBiographyItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBiographyItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBiographyItemAck::IsInitialized() const {
  return true;
}

void ReceiveBiographyItemAck::InternalSwap(ReceiveBiographyItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBiographyItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[389]);
}

// ===================================================================

class NotifyBiographyMessage::_Internal {
 public:
};

NotifyBiographyMessage::NotifyBiographyMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.NotifyBiographyMessage)
}
NotifyBiographyMessage::NotifyBiographyMessage(const NotifyBiographyMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  NotifyBiographyMessage* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.NotifyBiographyMessage)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotifyBiographyMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotifyBiographyMessage::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NotifyBiographyMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[390]);
}

// ===================================================================

class GetBiographyEventDataReq::_Internal {
 public:
};

GetBiographyEventDataReq::GetBiographyEventDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetBiographyEventDataReq)
}
GetBiographyEventDataReq::GetBiographyEventDataReq(const GetBiographyEventDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetBiographyEventDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetBiographyEventDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBiographyEventDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBiographyEventDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetBiographyEventDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[391]);
}

// ===================================================================

class GetBiographyEventDataAck::_Internal {
 public:
  static const ::idlepb::ServerCounterData& server_counter_data(const GetBiographyEventDataAck* msg);
};

const ::idlepb::ServerCounterData&
GetBiographyEventDataAck::_Internal::server_counter_data(const GetBiographyEventDataAck* msg) {
  return *msg->_impl_.server_counter_data_;
}
void GetBiographyEventDataAck::clear_biography_lists() {
  _impl_.biography_lists_.Clear();
}
void GetBiographyEventDataAck::clear_server_counter_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.server_counter_data_ != nullptr) {
    delete _impl_.server_counter_data_;
  }
  _impl_.server_counter_data_ = nullptr;
}
GetBiographyEventDataAck::GetBiographyEventDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetBiographyEventDataAck)
}
GetBiographyEventDataAck::GetBiographyEventDataAck(const GetBiographyEventDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBiographyEventDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.biography_lists_){from._impl_.biography_lists_}
    , decltype(_impl_.server_counter_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_server_counter_data()) {
    _this->_impl_.server_counter_data_ = new ::idlepb::ServerCounterData(*from._impl_.server_counter_data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetBiographyEventDataAck)
}

inline void GetBiographyEventDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.biography_lists_){arena}
    , decltype(_impl_.server_counter_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBiographyEventDataAck::~GetBiographyEventDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetBiographyEventDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBiographyEventDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.biography_lists_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.server_counter_data_;
}

void GetBiographyEventDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBiographyEventDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetBiographyEventDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.biography_lists_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.server_counter_data_ != nullptr) {
    delete _impl_.server_counter_data_;
  }
  _impl_.server_counter_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBiographyEventDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.BiographyEventLeaderboardList biography_lists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_biography_lists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.ServerCounterData server_counter_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_counter_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBiographyEventDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetBiographyEventDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.BiographyEventLeaderboardList biography_lists = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_biography_lists_size()); i < n; i++) {
    const auto& repfield = this->_internal_biography_lists(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .idlepb.ServerCounterData server_counter_data = 2;
  if (this->_internal_has_server_counter_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::server_counter_data(this),
        _Internal::server_counter_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetBiographyEventDataAck)
  return target;
}

size_t GetBiographyEventDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetBiographyEventDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.BiographyEventLeaderboardList biography_lists = 1;
  total_size += 1UL * this->_internal_biography_lists_size();
  for (const auto& msg : this->_impl_.biography_lists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .idlepb.ServerCounterData server_counter_data = 2;
  if (this->_internal_has_server_counter_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.server_counter_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBiographyEventDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBiographyEventDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBiographyEventDataAck::GetClassData() const { return &_class_data_; }


void GetBiographyEventDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBiographyEventDataAck*>(&to_msg);
  auto& from = static_cast<const GetBiographyEventDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetBiographyEventDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.biography_lists_.MergeFrom(from._impl_.biography_lists_);
  if (from._internal_has_server_counter_data()) {
    _this->_internal_mutable_server_counter_data()->::idlepb::ServerCounterData::MergeFrom(
        from._internal_server_counter_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBiographyEventDataAck::CopyFrom(const GetBiographyEventDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetBiographyEventDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBiographyEventDataAck::IsInitialized() const {
  return true;
}

void GetBiographyEventDataAck::InternalSwap(GetBiographyEventDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.biography_lists_.InternalSwap(&other->_impl_.biography_lists_);
  swap(_impl_.server_counter_data_, other->_impl_.server_counter_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBiographyEventDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[392]);
}

// ===================================================================

class ReceiveBiographyEventItemReq::_Internal {
 public:
};

ReceiveBiographyEventItemReq::ReceiveBiographyEventItemReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBiographyEventItemReq)
}
ReceiveBiographyEventItemReq::ReceiveBiographyEventItemReq(const ReceiveBiographyEventItemReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBiographyEventItemReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.cfg_id_ = from._impl_.cfg_id_;
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBiographyEventItemReq)
}

inline void ReceiveBiographyEventItemReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cfg_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBiographyEventItemReq::~ReceiveBiographyEventItemReq() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBiographyEventItemReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBiographyEventItemReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReceiveBiographyEventItemReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBiographyEventItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBiographyEventItemReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cfg_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBiographyEventItemReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 cfg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.cfg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBiographyEventItemReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBiographyEventItemReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_cfg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBiographyEventItemReq)
  return target;
}

size_t ReceiveBiographyEventItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBiographyEventItemReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cfg_id = 1;
  if (this->_internal_cfg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cfg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBiographyEventItemReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBiographyEventItemReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBiographyEventItemReq::GetClassData() const { return &_class_data_; }


void ReceiveBiographyEventItemReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBiographyEventItemReq*>(&to_msg);
  auto& from = static_cast<const ReceiveBiographyEventItemReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBiographyEventItemReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_cfg_id() != 0) {
    _this->_internal_set_cfg_id(from._internal_cfg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBiographyEventItemReq::CopyFrom(const ReceiveBiographyEventItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBiographyEventItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBiographyEventItemReq::IsInitialized() const {
  return true;
}

void ReceiveBiographyEventItemReq::InternalSwap(ReceiveBiographyEventItemReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cfg_id_, other->_impl_.cfg_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBiographyEventItemReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[393]);
}

// ===================================================================

class ReceiveBiographyEventItemAck::_Internal {
 public:
};

void ReceiveBiographyEventItemAck::clear_items() {
  _impl_.items_.Clear();
}
ReceiveBiographyEventItemAck::ReceiveBiographyEventItemAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReceiveBiographyEventItemAck)
}
ReceiveBiographyEventItemAck::ReceiveBiographyEventItemAck(const ReceiveBiographyEventItemAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReceiveBiographyEventItemAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.ReceiveBiographyEventItemAck)
}

inline void ReceiveBiographyEventItemAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReceiveBiographyEventItemAck::~ReceiveBiographyEventItemAck() {
  // @@protoc_insertion_point(destructor:idlepb.ReceiveBiographyEventItemAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReceiveBiographyEventItemAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void ReceiveBiographyEventItemAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReceiveBiographyEventItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReceiveBiographyEventItemAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReceiveBiographyEventItemAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .idlepb.SimpleItemData items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReceiveBiographyEventItemAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReceiveBiographyEventItemAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReceiveBiographyEventItemAck)
  return target;
}

size_t ReceiveBiographyEventItemAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReceiveBiographyEventItemAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .idlepb.SimpleItemData items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReceiveBiographyEventItemAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReceiveBiographyEventItemAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReceiveBiographyEventItemAck::GetClassData() const { return &_class_data_; }


void ReceiveBiographyEventItemAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReceiveBiographyEventItemAck*>(&to_msg);
  auto& from = static_cast<const ReceiveBiographyEventItemAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReceiveBiographyEventItemAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReceiveBiographyEventItemAck::CopyFrom(const ReceiveBiographyEventItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReceiveBiographyEventItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveBiographyEventItemAck::IsInitialized() const {
  return true;
}

void ReceiveBiographyEventItemAck::InternalSwap(ReceiveBiographyEventItemAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReceiveBiographyEventItemAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[394]);
}

// ===================================================================

class AddBiographyRoleLogReq::_Internal {
 public:
  static const ::idlepb::BiographyRoleLog& log(const AddBiographyRoleLogReq* msg);
};

const ::idlepb::BiographyRoleLog&
AddBiographyRoleLogReq::_Internal::log(const AddBiographyRoleLogReq* msg) {
  return *msg->_impl_.log_;
}
void AddBiographyRoleLogReq::clear_log() {
  if (GetArenaForAllocation() == nullptr && _impl_.log_ != nullptr) {
    delete _impl_.log_;
  }
  _impl_.log_ = nullptr;
}
AddBiographyRoleLogReq::AddBiographyRoleLogReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AddBiographyRoleLogReq)
}
AddBiographyRoleLogReq::AddBiographyRoleLogReq(const AddBiographyRoleLogReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddBiographyRoleLogReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.log_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log()) {
    _this->_impl_.log_ = new ::idlepb::BiographyRoleLog(*from._impl_.log_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.AddBiographyRoleLogReq)
}

inline void AddBiographyRoleLogReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.log_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddBiographyRoleLogReq::~AddBiographyRoleLogReq() {
  // @@protoc_insertion_point(destructor:idlepb.AddBiographyRoleLogReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddBiographyRoleLogReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.log_;
}

void AddBiographyRoleLogReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddBiographyRoleLogReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AddBiographyRoleLogReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.log_ != nullptr) {
    delete _impl_.log_;
  }
  _impl_.log_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBiographyRoleLogReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.BiographyRoleLog log = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddBiographyRoleLogReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AddBiographyRoleLogReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.BiographyRoleLog log = 1;
  if (this->_internal_has_log()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::log(this),
        _Internal::log(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AddBiographyRoleLogReq)
  return target;
}

size_t AddBiographyRoleLogReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AddBiographyRoleLogReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.BiographyRoleLog log = 1;
  if (this->_internal_has_log()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.log_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBiographyRoleLogReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddBiographyRoleLogReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBiographyRoleLogReq::GetClassData() const { return &_class_data_; }


void AddBiographyRoleLogReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddBiographyRoleLogReq*>(&to_msg);
  auto& from = static_cast<const AddBiographyRoleLogReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AddBiographyRoleLogReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_log()) {
    _this->_internal_mutable_log()->::idlepb::BiographyRoleLog::MergeFrom(
        from._internal_log());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddBiographyRoleLogReq::CopyFrom(const AddBiographyRoleLogReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AddBiographyRoleLogReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBiographyRoleLogReq::IsInitialized() const {
  return true;
}

void AddBiographyRoleLogReq::InternalSwap(AddBiographyRoleLogReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.log_, other->_impl_.log_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBiographyRoleLogReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[395]);
}

// ===================================================================

class AddBiographyRoleLogAck::_Internal {
 public:
  static const ::idlepb::BiographyRoleLog& log(const AddBiographyRoleLogAck* msg);
};

const ::idlepb::BiographyRoleLog&
AddBiographyRoleLogAck::_Internal::log(const AddBiographyRoleLogAck* msg) {
  return *msg->_impl_.log_;
}
void AddBiographyRoleLogAck::clear_log() {
  if (GetArenaForAllocation() == nullptr && _impl_.log_ != nullptr) {
    delete _impl_.log_;
  }
  _impl_.log_ = nullptr;
}
AddBiographyRoleLogAck::AddBiographyRoleLogAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.AddBiographyRoleLogAck)
}
AddBiographyRoleLogAck::AddBiographyRoleLogAck(const AddBiographyRoleLogAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddBiographyRoleLogAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.log_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_log()) {
    _this->_impl_.log_ = new ::idlepb::BiographyRoleLog(*from._impl_.log_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.AddBiographyRoleLogAck)
}

inline void AddBiographyRoleLogAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.log_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddBiographyRoleLogAck::~AddBiographyRoleLogAck() {
  // @@protoc_insertion_point(destructor:idlepb.AddBiographyRoleLogAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddBiographyRoleLogAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.log_;
}

void AddBiographyRoleLogAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddBiographyRoleLogAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.AddBiographyRoleLogAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.log_ != nullptr) {
    delete _impl_.log_;
  }
  _impl_.log_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddBiographyRoleLogAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.BiographyRoleLog log = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_log(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddBiographyRoleLogAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.AddBiographyRoleLogAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.BiographyRoleLog log = 1;
  if (this->_internal_has_log()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::log(this),
        _Internal::log(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.AddBiographyRoleLogAck)
  return target;
}

size_t AddBiographyRoleLogAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.AddBiographyRoleLogAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.BiographyRoleLog log = 1;
  if (this->_internal_has_log()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.log_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddBiographyRoleLogAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddBiographyRoleLogAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddBiographyRoleLogAck::GetClassData() const { return &_class_data_; }


void AddBiographyRoleLogAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddBiographyRoleLogAck*>(&to_msg);
  auto& from = static_cast<const AddBiographyRoleLogAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.AddBiographyRoleLogAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_log()) {
    _this->_internal_mutable_log()->::idlepb::BiographyRoleLog::MergeFrom(
        from._internal_log());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddBiographyRoleLogAck::CopyFrom(const AddBiographyRoleLogAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.AddBiographyRoleLogAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddBiographyRoleLogAck::IsInitialized() const {
  return true;
}

void AddBiographyRoleLogAck::InternalSwap(AddBiographyRoleLogAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.log_, other->_impl_.log_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddBiographyRoleLogAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[396]);
}

// ===================================================================

class GetRoleVipShopDataReq::_Internal {
 public:
};

GetRoleVipShopDataReq::GetRoleVipShopDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleVipShopDataReq)
}
GetRoleVipShopDataReq::GetRoleVipShopDataReq(const GetRoleVipShopDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRoleVipShopDataReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleVipShopDataReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleVipShopDataReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleVipShopDataReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRoleVipShopDataReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[397]);
}

// ===================================================================

class GetRoleVipShopDataAck::_Internal {
 public:
  static const ::idlepb::RoleVipShopData& data(const GetRoleVipShopDataAck* msg);
};

const ::idlepb::RoleVipShopData&
GetRoleVipShopDataAck::_Internal::data(const GetRoleVipShopDataAck* msg) {
  return *msg->_impl_.data_;
}
void GetRoleVipShopDataAck::clear_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
}
GetRoleVipShopDataAck::GetRoleVipShopDataAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.GetRoleVipShopDataAck)
}
GetRoleVipShopDataAck::GetRoleVipShopDataAck(const GetRoleVipShopDataAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRoleVipShopDataAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::idlepb::RoleVipShopData(*from._impl_.data_);
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.GetRoleVipShopDataAck)
}

inline void GetRoleVipShopDataAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetRoleVipShopDataAck::~GetRoleVipShopDataAck() {
  // @@protoc_insertion_point(destructor:idlepb.GetRoleVipShopDataAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoleVipShopDataAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
}

void GetRoleVipShopDataAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRoleVipShopDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.GetRoleVipShopDataAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoleVipShopDataAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.RoleVipShopData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoleVipShopDataAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.GetRoleVipShopDataAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.RoleVipShopData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.GetRoleVipShopDataAck)
  return target;
}

size_t GetRoleVipShopDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.GetRoleVipShopDataAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.RoleVipShopData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoleVipShopDataAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRoleVipShopDataAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoleVipShopDataAck::GetClassData() const { return &_class_data_; }


void GetRoleVipShopDataAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRoleVipShopDataAck*>(&to_msg);
  auto& from = static_cast<const GetRoleVipShopDataAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.GetRoleVipShopDataAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::idlepb::RoleVipShopData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoleVipShopDataAck::CopyFrom(const GetRoleVipShopDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.GetRoleVipShopDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoleVipShopDataAck::IsInitialized() const {
  return true;
}

void GetRoleVipShopDataAck::InternalSwap(GetRoleVipShopDataAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.data_, other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoleVipShopDataAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[398]);
}

// ===================================================================

class VipShopBuyReq::_Internal {
 public:
};

VipShopBuyReq::VipShopBuyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.VipShopBuyReq)
}
VipShopBuyReq::VipShopBuyReq(const VipShopBuyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VipShopBuyReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){}
    , decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.index_, &from._impl_.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_) -
    reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.num_));
  // @@protoc_insertion_point(copy_constructor:idlepb.VipShopBuyReq)
}

inline void VipShopBuyReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.index_){0}
    , decltype(_impl_.num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VipShopBuyReq::~VipShopBuyReq() {
  // @@protoc_insertion_point(destructor:idlepb.VipShopBuyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VipShopBuyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VipShopBuyReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VipShopBuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.VipShopBuyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.num_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VipShopBuyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VipShopBuyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.VipShopBuyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.VipShopBuyReq)
  return target;
}

size_t VipShopBuyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.VipShopBuyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  // int32 num = 2;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VipShopBuyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VipShopBuyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VipShopBuyReq::GetClassData() const { return &_class_data_; }


void VipShopBuyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VipShopBuyReq*>(&to_msg);
  auto& from = static_cast<const VipShopBuyReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.VipShopBuyReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_num() != 0) {
    _this->_internal_set_num(from._internal_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VipShopBuyReq::CopyFrom(const VipShopBuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.VipShopBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VipShopBuyReq::IsInitialized() const {
  return true;
}

void VipShopBuyReq::InternalSwap(VipShopBuyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VipShopBuyReq, _impl_.num_)
      + sizeof(VipShopBuyReq::_impl_.num_)
      - PROTOBUF_FIELD_OFFSET(VipShopBuyReq, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VipShopBuyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[399]);
}

// ===================================================================

class VipShopBuyAck::_Internal {
 public:
};

VipShopBuyAck::VipShopBuyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.VipShopBuyAck)
}
VipShopBuyAck::VipShopBuyAck(const VipShopBuyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VipShopBuyAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.VipShopBuyAck)
}

inline void VipShopBuyAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VipShopBuyAck::~VipShopBuyAck() {
  // @@protoc_insertion_point(destructor:idlepb.VipShopBuyAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VipShopBuyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VipShopBuyAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VipShopBuyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.VipShopBuyAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VipShopBuyAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VipShopBuyAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.VipShopBuyAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.VipShopBuyAck)
  return target;
}

size_t VipShopBuyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.VipShopBuyAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VipShopBuyAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VipShopBuyAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VipShopBuyAck::GetClassData() const { return &_class_data_; }


void VipShopBuyAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VipShopBuyAck*>(&to_msg);
  auto& from = static_cast<const VipShopBuyAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.VipShopBuyAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VipShopBuyAck::CopyFrom(const VipShopBuyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.VipShopBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VipShopBuyAck::IsInitialized() const {
  return true;
}

void VipShopBuyAck::InternalSwap(VipShopBuyAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VipShopBuyAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[400]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace idlepb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::idlepb::Ping*
Arena::CreateMaybeMessage< ::idlepb::Ping >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::Ping >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::Pong*
Arena::CreateMaybeMessage< ::idlepb::Pong >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::Pong >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoGmCommand*
Arena::CreateMaybeMessage< ::idlepb::DoGmCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoGmCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReportError*
Arena::CreateMaybeMessage< ::idlepb::ReportError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReportError >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LoginGameReq*
Arena::CreateMaybeMessage< ::idlepb::LoginGameReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LoginGameReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LoginGameAck*
Arena::CreateMaybeMessage< ::idlepb::LoginGameAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LoginGameAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshInventoryData*
Arena::CreateMaybeMessage< ::idlepb::RefreshInventoryData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshInventoryData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetCurrentCultivationDirectionReq*
Arena::CreateMaybeMessage< ::idlepb::SetCurrentCultivationDirectionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetCurrentCultivationDirectionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetCurrentCultivationDirectionAck*
Arena::CreateMaybeMessage< ::idlepb::SetCurrentCultivationDirectionAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetCurrentCultivationDirectionAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshCurrentCultivationDirection*
Arena::CreateMaybeMessage< ::idlepb::RefreshCurrentCultivationDirection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshCurrentCultivationDirection >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshCultivationRankData*
Arena::CreateMaybeMessage< ::idlepb::RefreshCultivationRankData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshCultivationRankData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshCultivationData*
Arena::CreateMaybeMessage< ::idlepb::RefreshCultivationData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshCultivationData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshCurrencyData*
Arena::CreateMaybeMessage< ::idlepb::RefreshCurrencyData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshCurrencyData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshDailyCounterData*
Arena::CreateMaybeMessage< ::idlepb::RefreshDailyCounterData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshDailyCounterData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshLastUnlockArenaId*
Arena::CreateMaybeMessage< ::idlepb::RefreshLastUnlockArenaId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshLastUnlockArenaId >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshUnlockedEquipmentSlots*
Arena::CreateMaybeMessage< ::idlepb::RefreshUnlockedEquipmentSlots >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshUnlockedEquipmentSlots >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockEquipmentSlotReq*
Arena::CreateMaybeMessage< ::idlepb::UnlockEquipmentSlotReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockEquipmentSlotReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockEquipmentSlotAck*
Arena::CreateMaybeMessage< ::idlepb::UnlockEquipmentSlotAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockEquipmentSlotAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ThunderTestRoundData*
Arena::CreateMaybeMessage< ::idlepb::ThunderTestRoundData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ThunderTestRoundData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ThunderTestData*
Arena::CreateMaybeMessage< ::idlepb::ThunderTestData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ThunderTestData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoBreakthroughReq*
Arena::CreateMaybeMessage< ::idlepb::DoBreakthroughReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoBreakthroughReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoBreakthroughAck*
Arena::CreateMaybeMessage< ::idlepb::DoBreakthroughAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoBreakthroughAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshItems*
Arena::CreateMaybeMessage< ::idlepb::RefreshItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshItems >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshTemporaryPackageItems*
Arena::CreateMaybeMessage< ::idlepb::RefreshTemporaryPackageItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshTemporaryPackageItems >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ExtractTemporaryPackageItemsReq*
Arena::CreateMaybeMessage< ::idlepb::ExtractTemporaryPackageItemsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ExtractTemporaryPackageItemsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ExtractTemporaryPackageItemsAck*
Arena::CreateMaybeMessage< ::idlepb::ExtractTemporaryPackageItemsAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ExtractTemporaryPackageItemsAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetTemporaryPackageDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetTemporaryPackageDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetTemporaryPackageDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetTemporaryPackageDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetTemporaryPackageDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetTemporaryPackageDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetArenaExplorationStatisticalDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetArenaExplorationStatisticalDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetArenaExplorationStatisticalDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetArenaExplorationStatisticalDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetArenaExplorationStatisticalDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetArenaExplorationStatisticalDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoBreathingExerciseReq*
Arena::CreateMaybeMessage< ::idlepb::DoBreathingExerciseReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoBreathingExerciseReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoBreathingExerciseAck*
Arena::CreateMaybeMessage< ::idlepb::DoBreathingExerciseAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoBreathingExerciseAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickMergeBreathingReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickMergeBreathingReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickMergeBreathingReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickMergeBreathingAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickMergeBreathingAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickMergeBreathingAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestCommonCultivationDataReq*
Arena::CreateMaybeMessage< ::idlepb::RequestCommonCultivationDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestCommonCultivationDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestCommonCultivationDataAck*
Arena::CreateMaybeMessage< ::idlepb::RequestCommonCultivationDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestCommonCultivationDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBreathingExerciseRewardReq*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBreathingExerciseRewardReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBreathingExerciseRewardReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBreathingExerciseRewardAck*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBreathingExerciseRewardAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBreathingExerciseRewardAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseItemReq*
Arena::CreateMaybeMessage< ::idlepb::UseItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseItemAck*
Arena::CreateMaybeMessage< ::idlepb::UseItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseSelectGiftReq*
Arena::CreateMaybeMessage< ::idlepb::UseSelectGiftReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseSelectGiftReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseSelectGiftAck*
Arena::CreateMaybeMessage< ::idlepb::UseSelectGiftAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseSelectGiftAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SellItemInfo*
Arena::CreateMaybeMessage< ::idlepb::SellItemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SellItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SellItemReq*
Arena::CreateMaybeMessage< ::idlepb::SellItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SellItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SellItemAck*
Arena::CreateMaybeMessage< ::idlepb::SellItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SellItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshAlchemyData*
Arena::CreateMaybeMessage< ::idlepb::RefreshAlchemyData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshAlchemyData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyAlchemyRefineResult*
Arena::CreateMaybeMessage< ::idlepb::NotifyAlchemyRefineResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyAlchemyRefineResult >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshForgeData*
Arena::CreateMaybeMessage< ::idlepb::RefreshForgeData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshForgeData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyForgeRefineResult*
Arena::CreateMaybeMessage< ::idlepb::NotifyForgeRefineResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyForgeRefineResult >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EquipmentPutOnReq*
Arena::CreateMaybeMessage< ::idlepb::EquipmentPutOnReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EquipmentPutOnReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EquipmentPutOnAck*
Arena::CreateMaybeMessage< ::idlepb::EquipmentPutOnAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EquipmentPutOnAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EquipmentTakeOffReq*
Arena::CreateMaybeMessage< ::idlepb::EquipmentTakeOffReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EquipmentTakeOffReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EquipmentTakeOffAck*
Arena::CreateMaybeMessage< ::idlepb::EquipmentTakeOffAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EquipmentTakeOffAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetInventoryDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetInventoryDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetInventoryDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetInventoryDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetInventoryDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetInventoryDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineStartReq*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineStartReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineStartReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineStartAck*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineStartAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineStartAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineCancelReq*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineCancelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineCancelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineCancelAck*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineCancelAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineCancelAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineExtractReq*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineExtractReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineExtractReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AlchemyRefineExtractAck*
Arena::CreateMaybeMessage< ::idlepb::AlchemyRefineExtractAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AlchemyRefineExtractAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::CreateCharacterReq*
Arena::CreateMaybeMessage< ::idlepb::CreateCharacterReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::CreateCharacterReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::CreateCharacterAck*
Arena::CreateMaybeMessage< ::idlepb::CreateCharacterAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::CreateCharacterAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SystemNotice*
Arena::CreateMaybeMessage< ::idlepb::SystemNotice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SystemNotice >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleShopDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleShopDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleShopDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleShopDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleShopDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleShopDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshShopReq*
Arena::CreateMaybeMessage< ::idlepb::RefreshShopReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshShopReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshShopAck*
Arena::CreateMaybeMessage< ::idlepb::RefreshShopAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshShopAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuyShopItemReq*
Arena::CreateMaybeMessage< ::idlepb::BuyShopItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuyShopItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuyShopItemAck*
Arena::CreateMaybeMessage< ::idlepb::BuyShopItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuyShopItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleDeluxeShopDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleDeluxeShopDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleDeluxeShopDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleDeluxeShopDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleDeluxeShopDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleDeluxeShopDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshDeluxeShopReq*
Arena::CreateMaybeMessage< ::idlepb::RefreshDeluxeShopReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshDeluxeShopReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshDeluxeShopAck*
Arena::CreateMaybeMessage< ::idlepb::RefreshDeluxeShopAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshDeluxeShopAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuyDeluxeShopItemReq*
Arena::CreateMaybeMessage< ::idlepb::BuyDeluxeShopItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuyDeluxeShopItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuyDeluxeShopItemAck*
Arena::CreateMaybeMessage< ::idlepb::BuyDeluxeShopItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuyDeluxeShopItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockDeluxeShopReq*
Arena::CreateMaybeMessage< ::idlepb::UnlockDeluxeShopReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockDeluxeShopReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockDeluxeShopAck*
Arena::CreateMaybeMessage< ::idlepb::UnlockDeluxeShopAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockDeluxeShopAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshDeluxeShopUnlocked*
Arena::CreateMaybeMessage< ::idlepb::RefreshDeluxeShopUnlocked >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshDeluxeShopUnlocked >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockArenaReq*
Arena::CreateMaybeMessage< ::idlepb::UnlockArenaReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockArenaReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockArenaAck*
Arena::CreateMaybeMessage< ::idlepb::UnlockArenaAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockArenaAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyUnlockArenaChallengeResult*
Arena::CreateMaybeMessage< ::idlepb::NotifyUnlockArenaChallengeResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyUnlockArenaChallengeResult >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestRefreshRoleCombatPower*
Arena::CreateMaybeMessage< ::idlepb::RequestRefreshRoleCombatPower >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestRefreshRoleCombatPower >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyRoleCombatPower*
Arena::CreateMaybeMessage< ::idlepb::NotifyRoleCombatPower >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyRoleCombatPower >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GameSystemChatMessage*
Arena::CreateMaybeMessage< ::idlepb::GameSystemChatMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GameSystemChatMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReplicateQuestProgressChange*
Arena::CreateMaybeMessage< ::idlepb::ReplicateQuestProgressChange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReplicateQuestProgressChange >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QuestOpReq*
Arena::CreateMaybeMessage< ::idlepb::QuestOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QuestOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QuestOpAck*
Arena::CreateMaybeMessage< ::idlepb::QuestOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QuestOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetQuestDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetQuestDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetQuestDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetQuestDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetQuestDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetQuestDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleLeaderboardDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleLeaderboardDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleLeaderboardDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleLeaderboardDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleLeaderboardDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleLeaderboardDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLeaderboardPreviewReq*
Arena::CreateMaybeMessage< ::idlepb::GetLeaderboardPreviewReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLeaderboardPreviewReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLeaderboardPreviewAck*
Arena::CreateMaybeMessage< ::idlepb::GetLeaderboardPreviewAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLeaderboardPreviewAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLeaderboardDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetLeaderboardDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLeaderboardDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLeaderboardDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetLeaderboardDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLeaderboardDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LeaderboardClickLikeReq*
Arena::CreateMaybeMessage< ::idlepb::LeaderboardClickLikeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LeaderboardClickLikeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LeaderboardClickLikeAck*
Arena::CreateMaybeMessage< ::idlepb::LeaderboardClickLikeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LeaderboardClickLikeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LeaderboardUpdateMessageReq*
Arena::CreateMaybeMessage< ::idlepb::LeaderboardUpdateMessageReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LeaderboardUpdateMessageReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LeaderboardUpdateMessageAck*
Arena::CreateMaybeMessage< ::idlepb::LeaderboardUpdateMessageAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LeaderboardUpdateMessageAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMonsterTowerChallengeListReq*
Arena::CreateMaybeMessage< ::idlepb::GetMonsterTowerChallengeListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMonsterTowerChallengeListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMonsterTowerChallengeListAck*
Arena::CreateMaybeMessage< ::idlepb::GetMonsterTowerChallengeListAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMonsterTowerChallengeListAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMonsterTowerChallengeRewardReq*
Arena::CreateMaybeMessage< ::idlepb::GetMonsterTowerChallengeRewardReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMonsterTowerChallengeRewardReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMonsterTowerChallengeRewardAck*
Arena::CreateMaybeMessage< ::idlepb::GetMonsterTowerChallengeRewardAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMonsterTowerChallengeRewardAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetFuZeRewardReq*
Arena::CreateMaybeMessage< ::idlepb::GetFuZeRewardReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetFuZeRewardReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetFuZeRewardAck*
Arena::CreateMaybeMessage< ::idlepb::GetFuZeRewardAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetFuZeRewardAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleMailDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleMailDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleMailDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleMailDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleMailDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleMailDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateRoleMail*
Arena::CreateMaybeMessage< ::idlepb::UpdateRoleMail >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateRoleMail >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReadMailReq*
Arena::CreateMaybeMessage< ::idlepb::ReadMailReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReadMailReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReadMailAck*
Arena::CreateMaybeMessage< ::idlepb::ReadMailAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReadMailAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMailAttachmentReq*
Arena::CreateMaybeMessage< ::idlepb::GetMailAttachmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMailAttachmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetMailAttachmentAck*
Arena::CreateMaybeMessage< ::idlepb::GetMailAttachmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetMailAttachmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DeleteMailReq*
Arena::CreateMaybeMessage< ::idlepb::DeleteMailReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DeleteMailReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DeleteMailAck*
Arena::CreateMaybeMessage< ::idlepb::DeleteMailAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DeleteMailAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickGetMailAttachmentReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickGetMailAttachmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickGetMailAttachmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickGetMailAttachmentAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickGetMailAttachmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickGetMailAttachmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickReadMailReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickReadMailReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickReadMailReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickReadMailAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickReadMailAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickReadMailAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickDeleteMailReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickDeleteMailReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickDeleteMailReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickDeleteMailAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickDeleteMailAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickDeleteMailAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockFunctionModuleReq*
Arena::CreateMaybeMessage< ::idlepb::UnlockFunctionModuleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockFunctionModuleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UnlockFunctionModuleAck*
Arena::CreateMaybeMessage< ::idlepb::UnlockFunctionModuleAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UnlockFunctionModuleAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyUnlockedModuels*
Arena::CreateMaybeMessage< ::idlepb::NotifyUnlockedModuels >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyUnlockedModuels >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateChat*
Arena::CreateMaybeMessage< ::idlepb::UpdateChat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateChat >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SendChatMessageReq*
Arena::CreateMaybeMessage< ::idlepb::SendChatMessageReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SendChatMessageReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SendChatMessageAck*
Arena::CreateMaybeMessage< ::idlepb::SendChatMessageAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SendChatMessageAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetChatRecordReq*
Arena::CreateMaybeMessage< ::idlepb::GetChatRecordReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetChatRecordReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetChatRecordAck*
Arena::CreateMaybeMessage< ::idlepb::GetChatRecordAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetChatRecordAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DeletePrivateChatRecordReq*
Arena::CreateMaybeMessage< ::idlepb::DeletePrivateChatRecordReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DeletePrivateChatRecordReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DeletePrivateChatRecordAck*
Arena::CreateMaybeMessage< ::idlepb::DeletePrivateChatRecordAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DeletePrivateChatRecordAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ClearChatUnreadNumReq*
Arena::CreateMaybeMessage< ::idlepb::ClearChatUnreadNumReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ClearChatUnreadNumReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ClearChatUnreadNumAck*
Arena::CreateMaybeMessage< ::idlepb::ClearChatUnreadNumAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ClearChatUnreadNumAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleInfoCacheReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleInfoCacheReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleInfoCacheReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleInfoCacheAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleInfoCacheAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleInfoCacheAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineStartReq*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineStartReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineStartReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineStartAck*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineStartAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineStartAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineCancelReq*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineCancelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineCancelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineCancelAck*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineCancelAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineCancelAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineExtractReq*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineExtractReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineExtractReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeRefineExtractAck*
Arena::CreateMaybeMessage< ::idlepb::ForgeRefineExtractAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeRefineExtractAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetForgeLostEquipmentDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetForgeLostEquipmentDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetForgeLostEquipmentDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetForgeLostEquipmentDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetForgeLostEquipmentDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetForgeLostEquipmentDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeDestroyReq*
Arena::CreateMaybeMessage< ::idlepb::ForgeDestroyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeDestroyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeDestroyAck*
Arena::CreateMaybeMessage< ::idlepb::ForgeDestroyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeDestroyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeFindBackReq*
Arena::CreateMaybeMessage< ::idlepb::ForgeFindBackReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeFindBackReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ForgeFindBackAck*
Arena::CreateMaybeMessage< ::idlepb::ForgeFindBackAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ForgeFindBackAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestPillElixirDataReq*
Arena::CreateMaybeMessage< ::idlepb::RequestPillElixirDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestPillElixirDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestPillElixirDataAck*
Arena::CreateMaybeMessage< ::idlepb::RequestPillElixirDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestPillElixirDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetOnePillElixirDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetOnePillElixirDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetOnePillElixirDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetOnePillElixirDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetOnePillElixirDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetOnePillElixirDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestModifyPillElixirFilterReq*
Arena::CreateMaybeMessage< ::idlepb::RequestModifyPillElixirFilterReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestModifyPillElixirFilterReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestModifyPillElixirFilterAck*
Arena::CreateMaybeMessage< ::idlepb::RequestModifyPillElixirFilterAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestModifyPillElixirFilterAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UsePillElixirReport*
Arena::CreateMaybeMessage< ::idlepb::UsePillElixirReport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UsePillElixirReport >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UsePillElixirReq*
Arena::CreateMaybeMessage< ::idlepb::UsePillElixirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UsePillElixirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UsePillElixirAck*
Arena::CreateMaybeMessage< ::idlepb::UsePillElixirAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UsePillElixirAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickUsePillElixirReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickUsePillElixirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickUsePillElixirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickUsePillElixirAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickUsePillElixirAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickUsePillElixirAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::TradePillElixirReq*
Arena::CreateMaybeMessage< ::idlepb::TradePillElixirReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::TradePillElixirReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::TradePillElixirAck*
Arena::CreateMaybeMessage< ::idlepb::TradePillElixirAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::TradePillElixirAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyAutoModeStatus*
Arena::CreateMaybeMessage< ::idlepb::NotifyAutoModeStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyAutoModeStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetAutoMode*
Arena::CreateMaybeMessage< ::idlepb::SetAutoMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetAutoMode >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReinforceEquipmentReq*
Arena::CreateMaybeMessage< ::idlepb::ReinforceEquipmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReinforceEquipmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReinforceEquipmentAck*
Arena::CreateMaybeMessage< ::idlepb::ReinforceEquipmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReinforceEquipmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QiWenEquipmentReq*
Arena::CreateMaybeMessage< ::idlepb::QiWenEquipmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QiWenEquipmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QiWenEquipmentAck*
Arena::CreateMaybeMessage< ::idlepb::QiWenEquipmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QiWenEquipmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefineEquipmentReq*
Arena::CreateMaybeMessage< ::idlepb::RefineEquipmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefineEquipmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefineEquipmentAck*
Arena::CreateMaybeMessage< ::idlepb::RefineEquipmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefineEquipmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ResetEquipmentReq*
Arena::CreateMaybeMessage< ::idlepb::ResetEquipmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ResetEquipmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ResetEquipmentAck*
Arena::CreateMaybeMessage< ::idlepb::ResetEquipmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ResetEquipmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::InheritEquipmentReq*
Arena::CreateMaybeMessage< ::idlepb::InheritEquipmentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::InheritEquipmentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::InheritEquipmentAck*
Arena::CreateMaybeMessage< ::idlepb::InheritEquipmentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::InheritEquipmentAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LockItemReq*
Arena::CreateMaybeMessage< ::idlepb::LockItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LockItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LockItemAck*
Arena::CreateMaybeMessage< ::idlepb::LockItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LockItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::CollectionActivatedSuit*
Arena::CreateMaybeMessage< ::idlepb::CollectionActivatedSuit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::CollectionActivatedSuit >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleCollectionDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleCollectionDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleCollectionDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleCollectionDataRsp*
Arena::CreateMaybeMessage< ::idlepb::GetRoleCollectionDataRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleCollectionDataRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RoleCollectionOpReq*
Arena::CreateMaybeMessage< ::idlepb::RoleCollectionOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RoleCollectionOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RoleCollectionOpAck*
Arena::CreateMaybeMessage< ::idlepb::RoleCollectionOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RoleCollectionOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyRoleCollectionData*
Arena::CreateMaybeMessage< ::idlepb::NotifyRoleCollectionData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyRoleCollectionData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyCommonCollectionPieceData*
Arena::CreateMaybeMessage< ::idlepb::NotifyCommonCollectionPieceData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyCommonCollectionPieceData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyCollectionActivatedSuit*
Arena::CreateMaybeMessage< ::idlepb::NotifyCollectionActivatedSuit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyCollectionActivatedSuit >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfRoleCollectionReq*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfRoleCollectionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfRoleCollectionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfRoleCollectionRsp*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfRoleCollectionRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfRoleCollectionRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShareRoleCollectionDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetShareRoleCollectionDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShareRoleCollectionDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShareRoleCollectionDataRsp*
Arena::CreateMaybeMessage< ::idlepb::GetShareRoleCollectionDataRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShareRoleCollectionDataRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyRoleCollectionHistories*
Arena::CreateMaybeMessage< ::idlepb::NotifyRoleCollectionHistories >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyRoleCollectionHistories >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyCollectionZoneActiveAwards*
Arena::CreateMaybeMessage< ::idlepb::NotifyCollectionZoneActiveAwards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyCollectionZoneActiveAwards >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyRoleCollectionNextResetEnhanceTicks*
Arena::CreateMaybeMessage< ::idlepb::NotifyRoleCollectionNextResetEnhanceTicks >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyRoleCollectionNextResetEnhanceTicks >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RoleBattleHistoryList*
Arena::CreateMaybeMessage< ::idlepb::RoleBattleHistoryList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RoleBattleHistoryList >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifySoloArenaChallengeOver*
Arena::CreateMaybeMessage< ::idlepb::NotifySoloArenaChallengeOver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifySoloArenaChallengeOver >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SoloArenaChallengeReq*
Arena::CreateMaybeMessage< ::idlepb::SoloArenaChallengeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SoloArenaChallengeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SoloArenaChallengeAck*
Arena::CreateMaybeMessage< ::idlepb::SoloArenaChallengeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SoloArenaChallengeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SoloArenaQuickEndReq*
Arena::CreateMaybeMessage< ::idlepb::SoloArenaQuickEndReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SoloArenaQuickEndReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SoloArenaQuickEndAck*
Arena::CreateMaybeMessage< ::idlepb::SoloArenaQuickEndAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SoloArenaQuickEndAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetSoloArenaHistoryListReq*
Arena::CreateMaybeMessage< ::idlepb::GetSoloArenaHistoryListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetSoloArenaHistoryListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetSoloArenaHistoryListAck*
Arena::CreateMaybeMessage< ::idlepb::GetSoloArenaHistoryListAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetSoloArenaHistoryListAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReplaySoloArenaHistoryReq*
Arena::CreateMaybeMessage< ::idlepb::ReplaySoloArenaHistoryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReplaySoloArenaHistoryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReplaySoloArenaHistoryAck*
Arena::CreateMaybeMessage< ::idlepb::ReplaySoloArenaHistoryAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReplaySoloArenaHistoryAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetBattleHistoryInfoReq*
Arena::CreateMaybeMessage< ::idlepb::GetBattleHistoryInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetBattleHistoryInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetBattleHistoryInfoAck*
Arena::CreateMaybeMessage< ::idlepb::GetBattleHistoryInfoAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetBattleHistoryInfoAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyEnterOpenClientWorld*
Arena::CreateMaybeMessage< ::idlepb::NotifyEnterOpenClientWorld >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyEnterOpenClientWorld >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyMonsterTowerData*
Arena::CreateMaybeMessage< ::idlepb::NotifyMonsterTowerData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyMonsterTowerData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyMonsterTowerChallengeOver*
Arena::CreateMaybeMessage< ::idlepb::NotifyMonsterTowerChallengeOver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyMonsterTowerChallengeOver >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerChallengeReq*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerChallengeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerChallengeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerChallengeAck*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerChallengeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerChallengeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerDrawIdleAwardReq*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerDrawIdleAwardReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerDrawIdleAwardReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerDrawIdleAwardAck*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerDrawIdleAwardAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerDrawIdleAwardAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerClosedDoorTrainingReq*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerClosedDoorTrainingReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerClosedDoorTrainingReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerClosedDoorTrainingAck*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerClosedDoorTrainingAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerClosedDoorTrainingAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerQuickEndReq*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerQuickEndReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerQuickEndReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::MonsterTowerQuickEndAck*
Arena::CreateMaybeMessage< ::idlepb::MonsterTowerQuickEndAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::MonsterTowerQuickEndAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyFightModeData*
Arena::CreateMaybeMessage< ::idlepb::NotifyFightModeData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyFightModeData >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetFightModeReq*
Arena::CreateMaybeMessage< ::idlepb::SetFightModeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetFightModeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetFightModeAck*
Arena::CreateMaybeMessage< ::idlepb::SetFightModeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetFightModeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyInventorySpaceNum*
Arena::CreateMaybeMessage< ::idlepb::NotifyInventorySpaceNum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyInventorySpaceNum >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyInventoryFullMailItem*
Arena::CreateMaybeMessage< ::idlepb::NotifyInventoryFullMailItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyInventoryFullMailItem >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyQiCollectorRank*
Arena::CreateMaybeMessage< ::idlepb::NotifyQiCollectorRank >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyQiCollectorRank >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpgradeQiCollectorReq*
Arena::CreateMaybeMessage< ::idlepb::UpgradeQiCollectorReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpgradeQiCollectorReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpgradeQiCollectorAck*
Arena::CreateMaybeMessage< ::idlepb::UpgradeQiCollectorAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpgradeQiCollectorAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleAllStatsReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleAllStatsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleAllStatsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleAllStatsAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleAllStatsAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleAllStatsAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShanhetuDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetShanhetuDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShanhetuDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShanhetuDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetShanhetuDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShanhetuDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetShanhetuUseConfigReq*
Arena::CreateMaybeMessage< ::idlepb::SetShanhetuUseConfigReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetShanhetuUseConfigReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetShanhetuUseConfigAck*
Arena::CreateMaybeMessage< ::idlepb::SetShanhetuUseConfigAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetShanhetuUseConfigAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseShanhetuReq*
Arena::CreateMaybeMessage< ::idlepb::UseShanhetuReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseShanhetuReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UseShanhetuAck*
Arena::CreateMaybeMessage< ::idlepb::UseShanhetuAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UseShanhetuAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::StepShanhetuReq*
Arena::CreateMaybeMessage< ::idlepb::StepShanhetuReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::StepShanhetuReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::StepShanhetuAck*
Arena::CreateMaybeMessage< ::idlepb::StepShanhetuAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::StepShanhetuAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShanhetuUseRecordReq*
Arena::CreateMaybeMessage< ::idlepb::GetShanhetuUseRecordReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShanhetuUseRecordReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShanhetuUseRecordAck*
Arena::CreateMaybeMessage< ::idlepb::GetShanhetuUseRecordAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShanhetuUseRecordAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetAttackLockTypeReq*
Arena::CreateMaybeMessage< ::idlepb::SetAttackLockTypeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetAttackLockTypeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetAttackLockTypeAck*
Arena::CreateMaybeMessage< ::idlepb::SetAttackLockTypeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetAttackLockTypeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetAttackUnlockTypeReq*
Arena::CreateMaybeMessage< ::idlepb::SetAttackUnlockTypeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetAttackUnlockTypeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetAttackUnlockTypeAck*
Arena::CreateMaybeMessage< ::idlepb::SetAttackUnlockTypeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetAttackUnlockTypeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetShowUnlockButtonReq*
Arena::CreateMaybeMessage< ::idlepb::SetShowUnlockButtonReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetShowUnlockButtonReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetShowUnlockButtonAck*
Arena::CreateMaybeMessage< ::idlepb::SetShowUnlockButtonAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetShowUnlockButtonAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshRoleNormalSetting*
Arena::CreateMaybeMessage< ::idlepb::RefreshRoleNormalSetting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshRoleNormalSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetUserVarReq*
Arena::CreateMaybeMessage< ::idlepb::GetUserVarReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetUserVarReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetUserVarRsp*
Arena::CreateMaybeMessage< ::idlepb::GetUserVarRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetUserVarRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetUserVarsReq*
Arena::CreateMaybeMessage< ::idlepb::GetUserVarsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetUserVarsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetUserVarsRsp*
Arena::CreateMaybeMessage< ::idlepb::GetUserVarsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetUserVarsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SetUserVar*
Arena::CreateMaybeMessage< ::idlepb::SetUserVar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SetUserVar >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DelUserVar*
Arena::CreateMaybeMessage< ::idlepb::DelUserVar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DelUserVar >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfItemReq*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfItemRsp*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfItemRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfItemRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfItemsReq*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfItemsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfItemsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ShareSelfItemsRsp*
Arena::CreateMaybeMessage< ::idlepb::ShareSelfItemsRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ShareSelfItemsRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShareItemDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetShareItemDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShareItemDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetShareItemDataRsp*
Arena::CreateMaybeMessage< ::idlepb::GetShareItemDataRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetShareItemDataRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetChecklistDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetChecklistDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetChecklistDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetChecklistDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetChecklistDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetChecklistDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyChecklist*
Arena::CreateMaybeMessage< ::idlepb::NotifyChecklist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyChecklist >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ChecklistOpReq*
Arena::CreateMaybeMessage< ::idlepb::ChecklistOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ChecklistOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ChecklistOpAck*
Arena::CreateMaybeMessage< ::idlepb::ChecklistOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ChecklistOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateChecklistReq*
Arena::CreateMaybeMessage< ::idlepb::UpdateChecklistReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateChecklistReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateChecklistAck*
Arena::CreateMaybeMessage< ::idlepb::UpdateChecklistAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateChecklistAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetCommonItemExchangeDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetCommonItemExchangeDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetCommonItemExchangeDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetCommonItemExchangeDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetCommonItemExchangeDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetCommonItemExchangeDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ExchangeCommonItemReq*
Arena::CreateMaybeMessage< ::idlepb::ExchangeCommonItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ExchangeCommonItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ExchangeCommonItemAck*
Arena::CreateMaybeMessage< ::idlepb::ExchangeCommonItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ExchangeCommonItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SynthesisCommonItemReq*
Arena::CreateMaybeMessage< ::idlepb::SynthesisCommonItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SynthesisCommonItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::SynthesisCommonItemAck*
Arena::CreateMaybeMessage< ::idlepb::SynthesisCommonItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::SynthesisCommonItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleSeptShopDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleSeptShopDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleSeptShopDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleSeptShopDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleSeptShopDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleSeptShopDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleSeptQuestDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleSeptQuestDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleSeptQuestDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleSeptQuestDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleSeptQuestDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleSeptQuestDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuySeptShopItemReq*
Arena::CreateMaybeMessage< ::idlepb::BuySeptShopItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuySeptShopItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::BuySeptShopItemAck*
Arena::CreateMaybeMessage< ::idlepb::BuySeptShopItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::BuySeptShopItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReqRoleSeptQuestOpReq*
Arena::CreateMaybeMessage< ::idlepb::ReqRoleSeptQuestOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReqRoleSeptQuestOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReqRoleSeptQuestOpAck*
Arena::CreateMaybeMessage< ::idlepb::ReqRoleSeptQuestOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReqRoleSeptQuestOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshSeptQuestReq*
Arena::CreateMaybeMessage< ::idlepb::RefreshSeptQuestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshSeptQuestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshSeptQuestAck*
Arena::CreateMaybeMessage< ::idlepb::RefreshSeptQuestAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshSeptQuestAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReqSeptQuestRankUpReq*
Arena::CreateMaybeMessage< ::idlepb::ReqSeptQuestRankUpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReqSeptQuestRankUpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReqSeptQuestRankUpAck*
Arena::CreateMaybeMessage< ::idlepb::ReqSeptQuestRankUpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReqSeptQuestRankUpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetGongFaDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetGongFaDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetGongFaDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetGongFaDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetGongFaDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetGongFaDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GongFaOpReq*
Arena::CreateMaybeMessage< ::idlepb::GongFaOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GongFaOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GongFaOpAck*
Arena::CreateMaybeMessage< ::idlepb::GongFaOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GongFaOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ActivateGongFaMaxEffectReq*
Arena::CreateMaybeMessage< ::idlepb::ActivateGongFaMaxEffectReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ActivateGongFaMaxEffectReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ActivateGongFaMaxEffectAck*
Arena::CreateMaybeMessage< ::idlepb::ActivateGongFaMaxEffectAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ActivateGongFaMaxEffectAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveFuZengRewardsReq*
Arena::CreateMaybeMessage< ::idlepb::ReceiveFuZengRewardsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveFuZengRewardsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveFuZengRewardsAck*
Arena::CreateMaybeMessage< ::idlepb::ReceiveFuZengRewardsAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveFuZengRewardsAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleFuZengDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleFuZengDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleFuZengDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleFuZengDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleFuZengDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleFuZengDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyFuZeng*
Arena::CreateMaybeMessage< ::idlepb::NotifyFuZeng >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyFuZeng >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleTreasuryDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleTreasuryDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleTreasuryDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleTreasuryDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleTreasuryDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleTreasuryDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OpenTreasuryChestReq*
Arena::CreateMaybeMessage< ::idlepb::OpenTreasuryChestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OpenTreasuryChestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OpenTreasuryChestAck*
Arena::CreateMaybeMessage< ::idlepb::OpenTreasuryChestAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OpenTreasuryChestAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickOpenTreasuryChestReq*
Arena::CreateMaybeMessage< ::idlepb::OneClickOpenTreasuryChestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickOpenTreasuryChestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OneClickOpenTreasuryChestAck*
Arena::CreateMaybeMessage< ::idlepb::OneClickOpenTreasuryChestAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OneClickOpenTreasuryChestAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OpenTreasuryGachaReq*
Arena::CreateMaybeMessage< ::idlepb::OpenTreasuryGachaReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OpenTreasuryGachaReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::OpenTreasuryGachaAck*
Arena::CreateMaybeMessage< ::idlepb::OpenTreasuryGachaAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::OpenTreasuryGachaAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshTreasuryShopReq*
Arena::CreateMaybeMessage< ::idlepb::RefreshTreasuryShopReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshTreasuryShopReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RefreshTreasuryShopAck*
Arena::CreateMaybeMessage< ::idlepb::RefreshTreasuryShopAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RefreshTreasuryShopAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::TreasuryShopBuyReq*
Arena::CreateMaybeMessage< ::idlepb::TreasuryShopBuyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::TreasuryShopBuyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::TreasuryShopBuyAck*
Arena::CreateMaybeMessage< ::idlepb::TreasuryShopBuyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::TreasuryShopBuyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLifeCounterDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetLifeCounterDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLifeCounterDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetLifeCounterDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetLifeCounterDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetLifeCounterDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateLifeCounter*
Arena::CreateMaybeMessage< ::idlepb::UpdateLifeCounter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateLifeCounter >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoQuestFightReq*
Arena::CreateMaybeMessage< ::idlepb::DoQuestFightReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoQuestFightReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoQuestFightAck*
Arena::CreateMaybeMessage< ::idlepb::DoQuestFightAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoQuestFightAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QuestFightQuickEndReq*
Arena::CreateMaybeMessage< ::idlepb::QuestFightQuickEndReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QuestFightQuickEndReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::QuestFightQuickEndAck*
Arena::CreateMaybeMessage< ::idlepb::QuestFightQuickEndAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::QuestFightQuickEndAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyQuestFightChallengeOver*
Arena::CreateMaybeMessage< ::idlepb::NotifyQuestFightChallengeOver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyQuestFightChallengeOver >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetAppearanceDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetAppearanceDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetAppearanceDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetAppearanceDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetAppearanceDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetAppearanceDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceAddReq*
Arena::CreateMaybeMessage< ::idlepb::AppearanceAddReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceAddReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceAddAck*
Arena::CreateMaybeMessage< ::idlepb::AppearanceAddAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceAddAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceActiveReq*
Arena::CreateMaybeMessage< ::idlepb::AppearanceActiveReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceActiveReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceActiveAck*
Arena::CreateMaybeMessage< ::idlepb::AppearanceActiveAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceActiveAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceWearReq*
Arena::CreateMaybeMessage< ::idlepb::AppearanceWearReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceWearReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceWearAck*
Arena::CreateMaybeMessage< ::idlepb::AppearanceWearAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceWearAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceChangeSkTypeReq*
Arena::CreateMaybeMessage< ::idlepb::AppearanceChangeSkTypeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceChangeSkTypeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceChangeSkTypeAck*
Arena::CreateMaybeMessage< ::idlepb::AppearanceChangeSkTypeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceChangeSkTypeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceBuyReq*
Arena::CreateMaybeMessage< ::idlepb::AppearanceBuyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceBuyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AppearanceBuyAck*
Arena::CreateMaybeMessage< ::idlepb::AppearanceBuyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AppearanceBuyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetArenaCheckListDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetArenaCheckListDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetArenaCheckListDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetArenaCheckListDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetArenaCheckListDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetArenaCheckListDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ArenaCheckListSubmitReq*
Arena::CreateMaybeMessage< ::idlepb::ArenaCheckListSubmitReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ArenaCheckListSubmitReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ArenaCheckListSubmitAck*
Arena::CreateMaybeMessage< ::idlepb::ArenaCheckListSubmitAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ArenaCheckListSubmitAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ArenaCheckListRewardSubmitReq*
Arena::CreateMaybeMessage< ::idlepb::ArenaCheckListRewardSubmitReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ArenaCheckListRewardSubmitReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ArenaCheckListRewardSubmitAck*
Arena::CreateMaybeMessage< ::idlepb::ArenaCheckListRewardSubmitAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ArenaCheckListRewardSubmitAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllChallengeReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllChallengeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllChallengeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllChallengeAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllChallengeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllChallengeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllQuickEndReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllQuickEndReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllQuickEndReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllQuickEndAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllQuickEndAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllQuickEndAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyDungeonKillAllChallengeOver*
Arena::CreateMaybeMessage< ::idlepb::NotifyDungeonKillAllChallengeOver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyDungeonKillAllChallengeOver >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyDungeonKillAllChallengeCurWaveNum*
Arena::CreateMaybeMessage< ::idlepb::NotifyDungeonKillAllChallengeCurWaveNum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyDungeonKillAllChallengeCurWaveNum >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllDataReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonKillAllDataAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonKillAllDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonKillAllDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveChallengeReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveChallengeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveChallengeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveChallengeAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveChallengeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveChallengeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveQuickEndReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveQuickEndReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveQuickEndReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveQuickEndAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveQuickEndAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveQuickEndAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyDungeonSurviveChallengeOver*
Arena::CreateMaybeMessage< ::idlepb::NotifyDungeonSurviveChallengeOver >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyDungeonSurviveChallengeOver >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyDungeonSurviveChallengeCurWaveNum*
Arena::CreateMaybeMessage< ::idlepb::NotifyDungeonSurviveChallengeCurWaveNum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyDungeonSurviveChallengeCurWaveNum >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveDataReq*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DungeonSurviveDataAck*
Arena::CreateMaybeMessage< ::idlepb::DungeonSurviveDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DungeonSurviveDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestEnterSeptDemonWorldReq*
Arena::CreateMaybeMessage< ::idlepb::RequestEnterSeptDemonWorldReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestEnterSeptDemonWorldReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestEnterSeptDemonWorldAck*
Arena::CreateMaybeMessage< ::idlepb::RequestEnterSeptDemonWorldAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestEnterSeptDemonWorldAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestLeaveSeptDemonWorldReq*
Arena::CreateMaybeMessage< ::idlepb::RequestLeaveSeptDemonWorldReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestLeaveSeptDemonWorldReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestLeaveSeptDemonWorldAck*
Arena::CreateMaybeMessage< ::idlepb::RequestLeaveSeptDemonWorldAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestLeaveSeptDemonWorldAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestSeptDemonWorldDataReq*
Arena::CreateMaybeMessage< ::idlepb::RequestSeptDemonWorldDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestSeptDemonWorldDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestSeptDemonWorldDataAck*
Arena::CreateMaybeMessage< ::idlepb::RequestSeptDemonWorldDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestSeptDemonWorldDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestInSeptDemonWorldEndTimeReq*
Arena::CreateMaybeMessage< ::idlepb::RequestInSeptDemonWorldEndTimeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestInSeptDemonWorldEndTimeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::RequestInSeptDemonWorldEndTimeAck*
Arena::CreateMaybeMessage< ::idlepb::RequestInSeptDemonWorldEndTimeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::RequestInSeptDemonWorldEndTimeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetFarmlandDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetFarmlandDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetFarmlandDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetFarmlandDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetFarmlandDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetFarmlandDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandUnlockBlockReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandUnlockBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandUnlockBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandUnlockBlockAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandUnlockBlockAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandUnlockBlockAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandPlantSeedReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandPlantSeedReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandPlantSeedReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandPlantSeedAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandPlantSeedAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandPlantSeedAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandWateringReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandWateringReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandWateringReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandWateringAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandWateringAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandWateringAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandRipeningReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandRipeningReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandRipeningReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandRipeningAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandRipeningAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandRipeningAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandHarvestReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandHarvestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandHarvestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandHarvestAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandHarvestAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandHarvestAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmerRankUpReq*
Arena::CreateMaybeMessage< ::idlepb::FarmerRankUpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmerRankUpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmerRankUpAck*
Arena::CreateMaybeMessage< ::idlepb::FarmerRankUpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmerRankUpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandSetManagementReq*
Arena::CreateMaybeMessage< ::idlepb::FarmlandSetManagementReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandSetManagementReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FarmlandSetManagementAck*
Arena::CreateMaybeMessage< ::idlepb::FarmlandSetManagementAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FarmlandSetManagementAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateFarmlandStateReq*
Arena::CreateMaybeMessage< ::idlepb::UpdateFarmlandStateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateFarmlandStateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::UpdateFarmlandStateAck*
Arena::CreateMaybeMessage< ::idlepb::UpdateFarmlandStateAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::UpdateFarmlandStateAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleInfoReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleInfoAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleInfoAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleInfoAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleFriendDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleFriendDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleFriendDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleFriendDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleFriendDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleFriendDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FriendOpReq*
Arena::CreateMaybeMessage< ::idlepb::FriendOpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FriendOpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FriendOpAck*
Arena::CreateMaybeMessage< ::idlepb::FriendOpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FriendOpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReplyFriendRequestReq*
Arena::CreateMaybeMessage< ::idlepb::ReplyFriendRequestReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReplyFriendRequestReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReplyFriendRequestAck*
Arena::CreateMaybeMessage< ::idlepb::ReplyFriendRequestAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReplyFriendRequestAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FriendSearchRoleInfoReq*
Arena::CreateMaybeMessage< ::idlepb::FriendSearchRoleInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FriendSearchRoleInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::FriendSearchRoleInfoAck*
Arena::CreateMaybeMessage< ::idlepb::FriendSearchRoleInfoAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::FriendSearchRoleInfoAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyFriendMessage*
Arena::CreateMaybeMessage< ::idlepb::NotifyFriendMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyFriendMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleAvatarDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleAvatarDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleAvatarDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleAvatarDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleAvatarDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleAvatarDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DispatchAvatarReq*
Arena::CreateMaybeMessage< ::idlepb::DispatchAvatarReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DispatchAvatarReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DispatchAvatarAck*
Arena::CreateMaybeMessage< ::idlepb::DispatchAvatarAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DispatchAvatarAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AvatarRankUpReq*
Arena::CreateMaybeMessage< ::idlepb::AvatarRankUpReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AvatarRankUpReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AvatarRankUpAck*
Arena::CreateMaybeMessage< ::idlepb::AvatarRankUpAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AvatarRankUpAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveAvatarTempPackageReq*
Arena::CreateMaybeMessage< ::idlepb::ReceiveAvatarTempPackageReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveAvatarTempPackageReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveAvatarTempPackageAck*
Arena::CreateMaybeMessage< ::idlepb::ReceiveAvatarTempPackageAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveAvatarTempPackageAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleBiographyDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleBiographyDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleBiographyDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleBiographyDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleBiographyDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleBiographyDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBiographyItemReq*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBiographyItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBiographyItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBiographyItemAck*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBiographyItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBiographyItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::NotifyBiographyMessage*
Arena::CreateMaybeMessage< ::idlepb::NotifyBiographyMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::NotifyBiographyMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetBiographyEventDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetBiographyEventDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetBiographyEventDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetBiographyEventDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetBiographyEventDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetBiographyEventDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBiographyEventItemReq*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBiographyEventItemReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBiographyEventItemReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReceiveBiographyEventItemAck*
Arena::CreateMaybeMessage< ::idlepb::ReceiveBiographyEventItemAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReceiveBiographyEventItemAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AddBiographyRoleLogReq*
Arena::CreateMaybeMessage< ::idlepb::AddBiographyRoleLogReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AddBiographyRoleLogReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::AddBiographyRoleLogAck*
Arena::CreateMaybeMessage< ::idlepb::AddBiographyRoleLogAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::AddBiographyRoleLogAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleVipShopDataReq*
Arena::CreateMaybeMessage< ::idlepb::GetRoleVipShopDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleVipShopDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::GetRoleVipShopDataAck*
Arena::CreateMaybeMessage< ::idlepb::GetRoleVipShopDataAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::GetRoleVipShopDataAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::VipShopBuyReq*
Arena::CreateMaybeMessage< ::idlepb::VipShopBuyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::VipShopBuyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::VipShopBuyAck*
Arena::CreateMaybeMessage< ::idlepb::VipShopBuyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::VipShopBuyAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
