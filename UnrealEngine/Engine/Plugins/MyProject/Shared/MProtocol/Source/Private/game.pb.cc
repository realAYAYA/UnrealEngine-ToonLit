// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace idlepb {
PROTOBUF_CONSTEXPR Ping::Ping(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingDefaultTypeInternal() {}
  union {
    Ping _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingDefaultTypeInternal _Ping_default_instance_;
PROTOBUF_CONSTEXPR Pong::Pong(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.req_ticks_)*/int64_t{0}
  , /*decltype(_impl_.rsp_ticks_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PongDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PongDefaultTypeInternal() {}
  union {
    Pong _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PongDefaultTypeInternal _Pong_default_instance_;
PROTOBUF_CONSTEXPR DoGmCommand::DoGmCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DoGmCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoGmCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoGmCommandDefaultTypeInternal() {}
  union {
    DoGmCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoGmCommandDefaultTypeInternal _DoGmCommand_default_instance_;
PROTOBUF_CONSTEXPR ReportError::ReportError(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReportErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportErrorDefaultTypeInternal() {}
  union {
    ReportError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportErrorDefaultTypeInternal _ReportError_default_instance_;
PROTOBUF_CONSTEXPR LoginGameReq::LoginGameReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.account_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.client_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginGameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginGameReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginGameReqDefaultTypeInternal() {}
  union {
    LoginGameReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginGameReqDefaultTypeInternal _LoginGameReq_default_instance_;
PROTOBUF_CONSTEXPR LoginGameAck::LoginGameAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_data_)*/nullptr
  , /*decltype(_impl_.ret_)*/0
  , /*decltype(_impl_.is_relogin_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginGameAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginGameAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginGameAckDefaultTypeInternal() {}
  union {
    LoginGameAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginGameAckDefaultTypeInternal _LoginGameAck_default_instance_;
PROTOBUF_CONSTEXPR EnterLevelReq::EnterLevelReq(
    ::_pbi::ConstantInitialized) {}
struct EnterLevelReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterLevelReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterLevelReqDefaultTypeInternal() {}
  union {
    EnterLevelReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterLevelReqDefaultTypeInternal _EnterLevelReq_default_instance_;
PROTOBUF_CONSTEXPR EnterLevelAck::EnterLevelAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EnterLevelAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterLevelAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterLevelAckDefaultTypeInternal() {}
  union {
    EnterLevelAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterLevelAckDefaultTypeInternal _EnterLevelAck_default_instance_;
}  // namespace idlepb
static ::_pb::Metadata file_level_metadata_game_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_game_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_game_2eproto = nullptr;

const uint32_t TableStruct_game_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::Ping, _impl_.req_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _impl_.req_ticks_),
  PROTOBUF_FIELD_OFFSET(::idlepb::Pong, _impl_.rsp_ticks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoGmCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::DoGmCommand, _impl_.command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReportError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::ReportError, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _impl_.account_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameReq, _impl_.client_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.ret_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.player_data_),
  PROTOBUF_FIELD_OFFSET(::idlepb::LoginGameAck, _impl_.is_relogin_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EnterLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::idlepb::EnterLevelAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::idlepb::EnterLevelAck, _impl_.ok_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::idlepb::Ping)},
  { 7, -1, -1, sizeof(::idlepb::Pong)},
  { 15, -1, -1, sizeof(::idlepb::DoGmCommand)},
  { 22, -1, -1, sizeof(::idlepb::ReportError)},
  { 29, -1, -1, sizeof(::idlepb::LoginGameReq)},
  { 37, -1, -1, sizeof(::idlepb::LoginGameAck)},
  { 46, -1, -1, sizeof(::idlepb::EnterLevelReq)},
  { 52, -1, -1, sizeof(::idlepb::EnterLevelAck)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::idlepb::_Ping_default_instance_._instance,
  &::idlepb::_Pong_default_instance_._instance,
  &::idlepb::_DoGmCommand_default_instance_._instance,
  &::idlepb::_ReportError_default_instance_._instance,
  &::idlepb::_LoginGameReq_default_instance_._instance,
  &::idlepb::_LoginGameAck_default_instance_._instance,
  &::idlepb::_EnterLevelReq_default_instance_._instance,
  &::idlepb::_EnterLevelAck_default_instance_._instance,
};

const char descriptor_table_protodef_game_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ngame.proto\022\006idlepb\032\rdefines.proto\032\014com"
  "mon.proto\"\031\n\004Ping\022\021\n\treq_ticks\030\001 \001(\003\",\n\004"
  "Pong\022\021\n\treq_ticks\030\001 \001(\003\022\021\n\trsp_ticks\030\002 \001"
  "(\003\"\036\n\013DoGmCommand\022\017\n\007command\030\001 \001(\t\"\033\n\013Re"
  "portError\022\014\n\004text\030\001 \001(\t\"7\n\014LoginGameReq\022"
  "\017\n\007account\030\001 \001(\t\022\026\n\016client_version\030\002 \001(\t"
  "\"r\n\014LoginGameAck\022%\n\003ret\030\001 \001(\0162\030.idlepb.L"
  "oginGameRetCode\022\'\n\013player_data\030\002 \001(\0132\022.i"
  "dlepb.PlayerData\022\022\n\nis_relogin\030\003 \001(\010\"\017\n\r"
  "EnterLevelReq\"\033\n\rEnterLevelAck\022\n\n\002ok\030\001 \001"
  "(\010*\323\001\n\020LoginGameRetCode\022\027\n\023LoginGameRetC"
  "ode_Ok\020\000\022\034\n\030LoginGameRetCode_Unknown\020\001\022\033"
  "\n\027LoginGameRetCode_NoRole\020\002\022#\n\037LoginGame"
  "RetCode_DuplicateLogin\020\003\022#\n\037LoginGameRet"
  "Code_AccountInvalid\020\004\022!\n\035LoginGameRetCod"
  "e_VersionError\020\005b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_game_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_defines_2eproto,
};
static ::_pbi::once_flag descriptor_table_game_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_game_2eproto = {
    false, false, 624, descriptor_table_protodef_game_2eproto,
    "game.proto",
    &descriptor_table_game_2eproto_once, descriptor_table_game_2eproto_deps, 2, 8,
    schemas, file_default_instances, TableStruct_game_2eproto::offsets,
    file_level_metadata_game_2eproto, file_level_enum_descriptors_game_2eproto,
    file_level_service_descriptors_game_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_game_2eproto_getter() {
  return &descriptor_table_game_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_game_2eproto(&descriptor_table_game_2eproto);
namespace idlepb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LoginGameRetCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[0];
}
bool LoginGameRetCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Ping::_Internal {
 public:
};

Ping::Ping(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.Ping)
}
Ping::Ping(const Ping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Ping* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.req_ticks_ = from._impl_.req_ticks_;
  // @@protoc_insertion_point(copy_constructor:idlepb.Ping)
}

inline void Ping::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:idlepb.Ping)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ping::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Ping::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.Ping)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.req_ticks_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ping::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 req_ticks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ping::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.Ping)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_req_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.Ping)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_req_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ping::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Ping::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ping::GetClassData() const { return &_class_data_; }


void Ping::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Ping*>(&to_msg);
  auto& from = static_cast<const Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.Ping)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_ticks() != 0) {
    _this->_internal_set_req_ticks(from._internal_req_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  return true;
}

void Ping::InternalSwap(Ping* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.req_ticks_, other->_impl_.req_ticks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ping::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[0]);
}

// ===================================================================

class Pong::_Internal {
 public:
};

Pong::Pong(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.Pong)
}
Pong::Pong(const Pong& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Pong* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){}
    , decltype(_impl_.rsp_ticks_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.req_ticks_, &from._impl_.req_ticks_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.rsp_ticks_) -
    reinterpret_cast<char*>(&_impl_.req_ticks_)) + sizeof(_impl_.rsp_ticks_));
  // @@protoc_insertion_point(copy_constructor:idlepb.Pong)
}

inline void Pong::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.req_ticks_){int64_t{0}}
    , decltype(_impl_.rsp_ticks_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:idlepb.Pong)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Pong::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Pong::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.Pong)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.req_ticks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.rsp_ticks_) -
      reinterpret_cast<char*>(&_impl_.req_ticks_)) + sizeof(_impl_.rsp_ticks_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pong::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 req_ticks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.req_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 rsp_ticks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.rsp_ticks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Pong::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.Pong)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_req_ticks(), target);
  }

  // int64 rsp_ticks = 2;
  if (this->_internal_rsp_ticks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_rsp_ticks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.Pong)
  return target;
}

size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.Pong)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 req_ticks = 1;
  if (this->_internal_req_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_req_ticks());
  }

  // int64 rsp_ticks = 2;
  if (this->_internal_rsp_ticks() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_rsp_ticks());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Pong::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Pong::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Pong::GetClassData() const { return &_class_data_; }


void Pong::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Pong*>(&to_msg);
  auto& from = static_cast<const Pong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.Pong)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_req_ticks() != 0) {
    _this->_internal_set_req_ticks(from._internal_req_ticks());
  }
  if (from._internal_rsp_ticks() != 0) {
    _this->_internal_set_rsp_ticks(from._internal_rsp_ticks());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Pong::CopyFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pong::IsInitialized() const {
  return true;
}

void Pong::InternalSwap(Pong* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pong, _impl_.rsp_ticks_)
      + sizeof(Pong::_impl_.rsp_ticks_)
      - PROTOBUF_FIELD_OFFSET(Pong, _impl_.req_ticks_)>(
          reinterpret_cast<char*>(&_impl_.req_ticks_),
          reinterpret_cast<char*>(&other->_impl_.req_ticks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pong::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[1]);
}

// ===================================================================

class DoGmCommand::_Internal {
 public:
};

DoGmCommand::DoGmCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.DoGmCommand)
}
DoGmCommand::DoGmCommand(const DoGmCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DoGmCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.DoGmCommand)
}

inline void DoGmCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DoGmCommand::~DoGmCommand() {
  // @@protoc_insertion_point(destructor:idlepb.DoGmCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DoGmCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.Destroy();
}

void DoGmCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DoGmCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.DoGmCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DoGmCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.DoGmCommand.command"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DoGmCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.DoGmCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.DoGmCommand.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.DoGmCommand)
  return target;
}

size_t DoGmCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.DoGmCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DoGmCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DoGmCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DoGmCommand::GetClassData() const { return &_class_data_; }


void DoGmCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DoGmCommand*>(&to_msg);
  auto& from = static_cast<const DoGmCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.DoGmCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DoGmCommand::CopyFrom(const DoGmCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.DoGmCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoGmCommand::IsInitialized() const {
  return true;
}

void DoGmCommand::InternalSwap(DoGmCommand* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DoGmCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[2]);
}

// ===================================================================

class ReportError::_Internal {
 public:
};

ReportError::ReportError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.ReportError)
}
ReportError::ReportError(const ReportError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReportError* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.ReportError)
}

inline void ReportError::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReportError::~ReportError() {
  // @@protoc_insertion_point(destructor:idlepb.ReportError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReportError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void ReportError::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReportError::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.ReportError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReportError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.ReportError.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReportError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.ReportError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.ReportError.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.ReportError)
  return target;
}

size_t ReportError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.ReportError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReportError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReportError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReportError::GetClassData() const { return &_class_data_; }


void ReportError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReportError*>(&to_msg);
  auto& from = static_cast<const ReportError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.ReportError)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReportError::CopyFrom(const ReportError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportError::IsInitialized() const {
  return true;
}

void ReportError::InternalSwap(ReportError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReportError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[3]);
}

// ===================================================================

class LoginGameReq::_Internal {
 public:
};

LoginGameReq::LoginGameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LoginGameReq)
}
LoginGameReq::LoginGameReq(const LoginGameReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginGameReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.account_){}
    , decltype(_impl_.client_version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_account().empty()) {
    _this->_impl_.account_.Set(from._internal_account(), 
      _this->GetArenaForAllocation());
  }
  _impl_.client_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_version().empty()) {
    _this->_impl_.client_version_.Set(from._internal_client_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:idlepb.LoginGameReq)
}

inline void LoginGameReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.account_){}
    , decltype(_impl_.client_version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.account_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.account_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.client_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.client_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginGameReq::~LoginGameReq() {
  // @@protoc_insertion_point(destructor:idlepb.LoginGameReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginGameReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.account_.Destroy();
  _impl_.client_version_.Destroy();
}

void LoginGameReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LoginGameReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.ClearToEmpty();
  _impl_.client_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginGameReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.LoginGameReq.account"));
        } else
          goto handle_unusual;
        continue;
      // string client_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "idlepb.LoginGameReq.client_version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginGameReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LoginGameReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.LoginGameReq.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string client_version = 2;
  if (!this->_internal_client_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_version().data(), static_cast<int>(this->_internal_client_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "idlepb.LoginGameReq.client_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LoginGameReq)
  return target;
}

size_t LoginGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LoginGameReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (!this->_internal_account().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string client_version = 2;
  if (!this->_internal_client_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginGameReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginGameReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginGameReq::GetClassData() const { return &_class_data_; }


void LoginGameReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginGameReq*>(&to_msg);
  auto& from = static_cast<const LoginGameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LoginGameReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  if (!from._internal_client_version().empty()) {
    _this->_internal_set_client_version(from._internal_client_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginGameReq::CopyFrom(const LoginGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LoginGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameReq::IsInitialized() const {
  return true;
}

void LoginGameReq::InternalSwap(LoginGameReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.account_, lhs_arena,
      &other->_impl_.account_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.client_version_, lhs_arena,
      &other->_impl_.client_version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginGameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[4]);
}

// ===================================================================

class LoginGameAck::_Internal {
 public:
  static const ::idlepb::PlayerData& player_data(const LoginGameAck* msg);
};

const ::idlepb::PlayerData&
LoginGameAck::_Internal::player_data(const LoginGameAck* msg) {
  return *msg->_impl_.player_data_;
}
void LoginGameAck::clear_player_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_data_ != nullptr) {
    delete _impl_.player_data_;
  }
  _impl_.player_data_ = nullptr;
}
LoginGameAck::LoginGameAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.LoginGameAck)
}
LoginGameAck::LoginGameAck(const LoginGameAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginGameAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_data_){nullptr}
    , decltype(_impl_.ret_){}
    , decltype(_impl_.is_relogin_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player_data()) {
    _this->_impl_.player_data_ = new ::idlepb::PlayerData(*from._impl_.player_data_);
  }
  ::memcpy(&_impl_.ret_, &from._impl_.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_relogin_) -
    reinterpret_cast<char*>(&_impl_.ret_)) + sizeof(_impl_.is_relogin_));
  // @@protoc_insertion_point(copy_constructor:idlepb.LoginGameAck)
}

inline void LoginGameAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_data_){nullptr}
    , decltype(_impl_.ret_){0}
    , decltype(_impl_.is_relogin_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LoginGameAck::~LoginGameAck() {
  // @@protoc_insertion_point(destructor:idlepb.LoginGameAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginGameAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_data_;
}

void LoginGameAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.LoginGameAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_data_ != nullptr) {
    delete _impl_.player_data_;
  }
  _impl_.player_data_ = nullptr;
  ::memset(&_impl_.ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_relogin_) -
      reinterpret_cast<char*>(&_impl_.ret_)) + sizeof(_impl_.is_relogin_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginGameAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .idlepb.LoginGameRetCode ret = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ret(static_cast<::idlepb::LoginGameRetCode>(val));
        } else
          goto handle_unusual;
        continue;
      // .idlepb.PlayerData player_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_player_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_relogin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_relogin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginGameAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.LoginGameAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .idlepb.LoginGameRetCode ret = 1;
  if (this->_internal_ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ret(), target);
  }

  // .idlepb.PlayerData player_data = 2;
  if (this->_internal_has_player_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::player_data(this),
        _Internal::player_data(this).GetCachedSize(), target, stream);
  }

  // bool is_relogin = 3;
  if (this->_internal_is_relogin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_relogin(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.LoginGameAck)
  return target;
}

size_t LoginGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.LoginGameAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .idlepb.PlayerData player_data = 2;
  if (this->_internal_has_player_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_data_);
  }

  // .idlepb.LoginGameRetCode ret = 1;
  if (this->_internal_ret() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_ret());
  }

  // bool is_relogin = 3;
  if (this->_internal_is_relogin() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginGameAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginGameAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginGameAck::GetClassData() const { return &_class_data_; }


void LoginGameAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginGameAck*>(&to_msg);
  auto& from = static_cast<const LoginGameAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.LoginGameAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_data()) {
    _this->_internal_mutable_player_data()->::idlepb::PlayerData::MergeFrom(
        from._internal_player_data());
  }
  if (from._internal_ret() != 0) {
    _this->_internal_set_ret(from._internal_ret());
  }
  if (from._internal_is_relogin() != 0) {
    _this->_internal_set_is_relogin(from._internal_is_relogin());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginGameAck::CopyFrom(const LoginGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.LoginGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginGameAck::IsInitialized() const {
  return true;
}

void LoginGameAck::InternalSwap(LoginGameAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginGameAck, _impl_.is_relogin_)
      + sizeof(LoginGameAck::_impl_.is_relogin_)
      - PROTOBUF_FIELD_OFFSET(LoginGameAck, _impl_.player_data_)>(
          reinterpret_cast<char*>(&_impl_.player_data_),
          reinterpret_cast<char*>(&other->_impl_.player_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginGameAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[5]);
}

// ===================================================================

class EnterLevelReq::_Internal {
 public:
};

EnterLevelReq::EnterLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:idlepb.EnterLevelReq)
}
EnterLevelReq::EnterLevelReq(const EnterLevelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  EnterLevelReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:idlepb.EnterLevelReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterLevelReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterLevelReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EnterLevelReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[6]);
}

// ===================================================================

class EnterLevelAck::_Internal {
 public:
};

EnterLevelAck::EnterLevelAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:idlepb.EnterLevelAck)
}
EnterLevelAck::EnterLevelAck(const EnterLevelAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterLevelAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:idlepb.EnterLevelAck)
}

inline void EnterLevelAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EnterLevelAck::~EnterLevelAck() {
  // @@protoc_insertion_point(destructor:idlepb.EnterLevelAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterLevelAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterLevelAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterLevelAck::Clear() {
// @@protoc_insertion_point(message_clear_start:idlepb.EnterLevelAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterLevelAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterLevelAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:idlepb.EnterLevelAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:idlepb.EnterLevelAck)
  return target;
}

size_t EnterLevelAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:idlepb.EnterLevelAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterLevelAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterLevelAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterLevelAck::GetClassData() const { return &_class_data_; }


void EnterLevelAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterLevelAck*>(&to_msg);
  auto& from = static_cast<const EnterLevelAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:idlepb.EnterLevelAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterLevelAck::CopyFrom(const EnterLevelAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:idlepb.EnterLevelAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterLevelAck::IsInitialized() const {
  return true;
}

void EnterLevelAck::InternalSwap(EnterLevelAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterLevelAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_game_2eproto_getter, &descriptor_table_game_2eproto_once,
      file_level_metadata_game_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace idlepb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::idlepb::Ping*
Arena::CreateMaybeMessage< ::idlepb::Ping >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::Ping >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::Pong*
Arena::CreateMaybeMessage< ::idlepb::Pong >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::Pong >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::DoGmCommand*
Arena::CreateMaybeMessage< ::idlepb::DoGmCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::DoGmCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::ReportError*
Arena::CreateMaybeMessage< ::idlepb::ReportError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::ReportError >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LoginGameReq*
Arena::CreateMaybeMessage< ::idlepb::LoginGameReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LoginGameReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::LoginGameAck*
Arena::CreateMaybeMessage< ::idlepb::LoginGameAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::LoginGameAck >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EnterLevelReq*
Arena::CreateMaybeMessage< ::idlepb::EnterLevelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EnterLevelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::idlepb::EnterLevelAck*
Arena::CreateMaybeMessage< ::idlepb::EnterLevelAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::idlepb::EnterLevelAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
