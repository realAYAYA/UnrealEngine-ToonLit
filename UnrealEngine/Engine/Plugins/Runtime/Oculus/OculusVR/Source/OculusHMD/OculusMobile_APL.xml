<?xml version="1.0" encoding="utf-8"?>
<!--Oculus mobile plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="Oculus mobile init"/>
		<setBool result="bSupported" value="false"/>
		<isArch arch="armeabi-v7a">
			<setBool result="bSupported" value="true"/>
		</isArch>
        <isArch arch="arm64-v8a">
			<setBool result="bSupported" value="true"/>
		</isArch>

		<!-- remove Oculus Signature Files by default -->
		<setBool result="bRemoveOSIG" value="true"/>

		<!-- determine the XrApi libraries that need to be loaded -->
		<setStringFromProperty result="XrApi" ini="Engine" section="/Script/OculusHMD.OculusHMDRuntimeSettings" property="XrApi" default="LegacyOVRPlugin"/>
		<setBoolIsEqual result="bLegacyOVRPlugin" arg1="$S(XrApi)" arg2="LegacyOVRPlugin"/>
		<setBoolIsEqual result="bOVRPluginOpenXR" arg1="$S(XrApi)" arg2="OVRPluginOpenXR"/>
		<setBoolIsEqual result="bNativeOpenXR" arg1="$S(XrApi)" arg2="NativeOpenXR"/>

		<!-- get packaging for Oculus Mobile from ini and reset it if architecture not supported -->
		<setBoolFromProperty 
			result="bFocusAware" 
			ini="Engine" 
			section="/Script/OculusHMD.OculusHMDRuntimeSettings" property="bFocusAware" 
			default="true"/>
		<setBoolFromPropertyContains result="bPackageForOculusQuest" ini="Engine" section="/Script/AndroidRuntimeSettings.AndroidRuntimeSettings" property="PackageForOculusMobile" contains="Quest"/>
		<setBoolFromPropertyContains result="bPackageForOculusQuest2" ini="Engine" section="/Script/AndroidRuntimeSettings.AndroidRuntimeSettings" property="PackageForOculusMobile" contains="Quest2"/>
		<setBoolFromProperty result="bRequiresSystemKeyboard" ini="Engine" section="/Script/OculusHMD.OculusHMDRuntimeSettings" property="bRequiresSystemKeyboard" default="false"/>
		<setStringFromProperty result="HandTrackingSupport" ini="Engine" section="/Script/OculusHMD.OculusHMDRuntimeSettings" property="HandTrackingSupport" default="ControllersOnly"/>
		<setStringFromProperty result="HandTrackingFrequency" ini="Engine" section="/Script/OculusHMD.OculusHMDRuntimeSettings" property="HandTrackingFrequency" default="LOW"/>
		<setBool result="bEnableHandTracking" value="false"/>
		<setBoolOr result="bPackageForOculusMobile" 
			arg1="$B(bPackageForOculusQuest)" arg2="$B(bPackageForOculusQuest2)"/>
		<if condition="bPackageForOculusMobile">
			<true>
				<if condition="bSupported">
					<true>
						<if condition="Distribution">
							<true>
								<setBoolFromProperty result="bRemoveOSIG" ini="Engine" section="/Script/AndroidRuntimeSettings.AndroidRuntimeSettings" property="bRemoveOSIG" default="false"/>
								<if condition="bRemoveOSIG">
									<true>
										<log text="Oculus mobile entitlement checks are enabled"/>
									</true>
								</if>
							</true>
							<false>
								<!-- if not using entitlement checks need to keep the osig files -->
								<setBool result="bRemoveOSIG" value="false"/>
							</false>
						</if>
					</true>
					<false>
						<setBool result="bPackageForOculusMobile" value="false"/> 
						<log text="Oculus mobile not supported for this architecture, disabled."/>
					</false>
				</if>
			</true>
		</if>

		<if condition="bRemoveOSIG">
			<true>
				<log text="Oculus Signature Files (osig) will be removed from APK"/>
			</true>
		</if>

		<!-- package for Oculus and for distribution -->
		<setBool result="bOculusDistribution" value="false"/>
		<if condition="bPackageForOculusMobile">
			<true>
				<isDistribution>
					<setBool result="bOculusDistribution" value="true"/>
					<log text="Building with Oculus mobile for distribution"/>
				</isDistribution>
			</true>
		</if>

		<!-- entitlements check if package Oculus for distribution and removing OSIGs -->
		<setBoolAnd result="bEntitlementCheck" arg1="$B(bRemoveOSIG)" arg2="$B(bOculusDistribution)"/>
	</init>

	<!-- optional updates applied to AndroidManifest.xml -->
	<androidManifestUpdates>
		<if condition="bOculusDistribution">
			<true>
				<!-- distribution builds can install internal or SD card -->
				<addAttribute tag="manifest" name="android:installLocation" value="auto"/>

				<!-- update the GameActivity activity -->
				<loopElements tag="activity">
					<setStringFromAttribute result="activityName" tag="$" name="android:name"/>
					<setBoolIsEqual result="bGameActivity" arg1="$S(activityName)" arg2="com.epicgames.unreal.GameActivity"/>
					<if condition="bGameActivity">
						<true>
							<!-- do not want application to show in recents -->
							<addAttribute tag="$" name="android:excludeFromRecents" value="true"/>

							<!-- distribution builds should not be launched from home screen so remove LAUNCHER -->
							<loopElements tag="category">
								<setStringFromAttribute result="categoryName" tag="$" name="android:name"/>
								<setBoolIsEqual result="bLauncher" arg1="$S(categoryName)" arg2="android.intent.category.LAUNCHER"/>
								<if condition="bLauncher">
									<true>
										<removeElement tag="$"/>
									</true>
								</if>
							</loopElements>

							<!-- add INFO intent category instead -->
							<setElement result="intentInfo" value="category"/>
							<addAttribute tag="$intentInfo" name="android:name" value="android.intent.category.INFO"/>
							<addElement tag="intent-filter" name="intentInfo"/>
						</true>
					</if>
				</loopElements>
			</true>
		</if>
		<setBool result="bOculus6Dof" value="$B(bPackageForOculusMobile)" />

		<!-- Add Quest Specific Flags -->
		<if condition="bOculus6Dof">
			<true>
				<!-- Add Hand Tracking Flag -->
				<setBoolIsEqual result="bHandsOnly" arg1="$S(HandTrackingSupport)" arg2="HandsOnly"/>
				<setBoolIsEqual result="bControllersAndHands" arg1="$S(HandTrackingSupport)" arg2="ControllersAndHands"/>
				<setBoolOr result="bEnableHandTracking" arg1="$B(bHandsOnly)" arg2="$B(bControllersAndHands)"/>
				<if condition="bEnableHandTracking">
					<true>
						<addPermission android:name="com.oculus.permission.HAND_TRACKING" />
						<addFeature android:name="oculus.software.handtracking" android:required="$B(bHandsOnly)"/>
					</true>
				</if>
			</true>
		</if>

		<!-- Add Activity Specific Flags -->
		<loopElements tag="activity">
			<setStringFromAttribute result="activityName" tag="$" name="android:name"/>
			<setBoolIsEqual result="bGameActivity" arg1="$S(activityName)" arg2="com.epicgames.unreal.GameActivity"/>
			<if condition="bGameActivity">
				<true>
					<!-- Quest Specific Activity Tags -->
					<if condition="bOculus6Dof">
						<true>
							<!-- Add System Keyboard Flag -->
							<if condition="bFocusAware">
								<true>
									<if condition="bRequiresSystemKeyboard">
										<true>
											<addFeature android:name="oculus.software.overlay_keyboard" android:required="false"/>
										</true>
									</if>
								</true>
							</if>
						</true>
					</if>
				</true>
			</if>
		</loopElements>

		<!-- Add Application Specific Flags -->
		<loopElements tag="application">
			<!-- Add Hand Tracking Frequency -->
			<if condition="bEnableHandTracking">
				<true>
					<setElement result="handTrackingFrequency" value="meta-data" />
					<addAttribute tag="$handTrackingFrequency" name="android:name" value="com.oculus.handtracking.frequency" />
					<addAttribute tag="$handTrackingFrequency" name="android:value" value="$S(HandTrackingFrequency)" />
					<addElement tag="application" name="handTrackingFrequency"/>
				</true>
			</if>
		</loopElements>

	</androidManifestUpdates>

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
-keep class com.oculus.** {
*;
}
-keep class android.app.** {
*;
}
		</insert>
	</proguardAdditions>

	<!-- optional files or directories to copy to Intermediate/Android/APK -->
	<resourceCopies>
		<isArch arch="arm64-v8a">
			<if condition="bLegacyOVRPlugin">
				<true>
					<log text="Copying libvrapi.so"/>
					<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/ExtLibs/arm64-v8a/libvrapi.so"
								dst="$S(BuildDir)/libs/arm64-v8a/libvrapi.so" />
					<log text="Copying libOVRPlugin.so"/>
					<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/Lib/arm64-v8a/libOVRPlugin.so"
								dst="$S(BuildDir)/libs/arm64-v8a/libOVRPlugin.so" />
				</true>
			</if>
			<if condition="bOVRPluginOpenXR">
				<true>
					<log text="Copying OpenXR libOVRPlugin.so"/>
					<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/Lib/arm64-v8a/OpenXR/libOVRPlugin.so"
								dst="$S(BuildDir)/libs/arm64-v8a/libOVRPlugin.so" />
				</true>
			</if>
		</isArch>

		<if condition="bLegacyOVRPlugin">
			<true>
				<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/ExtLibs/VrApi.jar"
					dst="$S(BuildDir)/libs/VrApi.jar" />
			</true>
		</if>

		<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/ExtLibs/SystemUtils.jar"
					dst="$S(BuildDir)/libs/SystemUtils.jar" />

		<if condition="bEntitlementCheck">
			<true>
				<copyFile src="$S(EngineDir)/Source/ThirdParty/Oculus/OVRPlugin/OVRPlugin/ExtLibs/vrplatlib.jar"
							dst="$S(BuildDir)/libs/vrplatlib.jar" />
			</true>
		</if>

		<if condition="bRemoveOSIG">
			<true>
				<deleteFiles filespec="assets/oculussig_*" />
			</true>
		</if>
	</resourceCopies>

	<!-- optional additions to the GameActivity imports in GameActivity.java
	<gameActivityImportAdditions>
	</gameActivityImportAdditions>
	-->

	<!-- optional additions to GameActivity onCreate in GameActivity.java
	<gameActivityOnCreateAdditions>
	</gameActivityOnCreateAdditions>
	-->

	<!-- optional additions to GameActivity onDestroy in GameActivity.java
	<gameActivityOnDestroyAdditions>
	</gameActivityOnDestroyAdditions>
	-->

	<!-- optional additions to GameActivity onStart in GameActivity.java
	<gameActivityOnStartAdditions>
	</gameActivityOnStartAdditions>
	-->

	<!-- optional additions to GameActivity onStop in GameActivity.java
	<gameActivityOnStopAdditions>
	</gameActivityOnStopAdditions>
	-->

	<!-- optional additions to GameActivity onPause in GameActivity.java
	<gameActivityOnPauseAdditions>
	</gameActivityOnPauseAdditions>
	-->

	<!-- optional additions to GameActivity onResume in GameActivity.java
	<gameActivityOnResumeAdditions>
	</gameActivityOnResumeAdditions>
	-->

	<!-- optional additions to GameActivity onActivityResult in GameActivity.java
	<gameActivityOnActivityResultAdditions>
	</gameActivityOnActivityResultAdditions>
	-->

	<!-- optional libraries to load in GameActivity.java before libUnreal.so -->
	<soLoadLibrary>
		<!-- need this if plugin enabled and supported architecture, even if not packaged for Oculus mobile -->
		<if condition="bSupported">
			<true>
				<if condition="bLegacyOVRPlugin">
					<true>
						<loadLibrary name="vrapi" failmsg="vrapi library not loaded and may be required for Oculus VR." />
						<loadLibrary name="OVRPlugin" failmsg="OVRPlugin library not loaded and may be required for Oculus VR." />
					</true>
				</if>
				<if condition="bOVRPluginOpenXR">
					<true>
						<loadLibrary name="openxr_loader" failmsg="openxr_loader library not loaded and may be required for Oculus VR." />
						<loadLibrary name="OVRPlugin" failmsg="OVRPlugin library not loaded and may be required for Oculus VR." />
					</true>
				</if>
				<if condition="bNativeOpenXR">
					<true>
						<loadLibrary name="openxr_loader" failmsg="openxr_loader library not loaded and may be required for Oculus VR." />
					</true>
				</if>
			</true>
		</if>
	</soLoadLibrary>
</root>
