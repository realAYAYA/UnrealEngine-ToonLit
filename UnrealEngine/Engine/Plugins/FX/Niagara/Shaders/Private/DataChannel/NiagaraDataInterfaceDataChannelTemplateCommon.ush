// Copyright Epic Games, Inc. All Rights Reserved.

/**

Template hlsl for Data Channel DI functions to apply to their own that is shared accross all functions for the DI.

*/

//Offset of each parameter accessed by this script.
//Indices for accessing this table are embeded directly into the HLSL and we generate the table on the CPU accordingly.
//TODO: Can probably pack this into a single global buffer rather than one per DI.
Buffer<uint> {ParameterName}_ParamOffsetTable;

Buffer<float> {ParameterName}_DataFloat;
Buffer<int> {ParameterName}_DataInt32;
Buffer<float> {ParameterName}_DataHalf;

int {ParameterName}_ParameterOffsetTableIndex;
int {ParameterName}_Num;
int {ParameterName}_FloatStride;
int {ParameterName}_Int32Stride;
int {ParameterName}_HalfStride;

// Outputs the starting offset of each component in the channel data for a partiuclar parameter.
bool GetParameterLayoutInfo_{ParameterName}(uint ParameterIndex, out uint OutFloatRegister, out uint OutInt32Register, out uint OutHalfRegister)
{
	int ParameterTableStart = {ParameterName}_ParameterOffsetTableIndex;
	if(ParameterTableStart != -1)
	{
		const int NumComponents = 3;
		uint ParamLayoutStart = ParameterTableStart + NumComponents * ParameterIndex;
		OutFloatRegister = {ParameterName}_ParamOffsetTable[ParamLayoutStart];
		OutInt32Register = {ParameterName}_ParamOffsetTable[ParamLayoutStart + 1];
		OutHalfRegister = {ParameterName}_ParamOffsetTable[ParamLayoutStart + 2];
		return true;
	}
	else
	{
		OutFloatRegister = -1;
		OutInt32Register = -1;
		OutHalfRegister = -1;
		return false;
	}
}

