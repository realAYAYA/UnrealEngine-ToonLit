// Copyright Epic Games, Inc. All Rights Reserved.

#pragma once

#include "Replication/ClientReplicationWidgetDelegates.h"
#include "Replication/ReplicationWidgetFactories.h"
#include "Templates/SharedPointer.h"

struct FConcertStreamObjectAutoBindingRules;
struct FConcertObjectReplicationMap;

namespace UE::ConcertSharedSlate
{
	class IPropertySelectionSourceModel;
	class IPropertyTreeView;
	class IEditableReplicationStreamModel;
	class IObjectNameModel;
	class IReplicationStreamEditor;
	class IStreamExtender;
	class IObjectHierarchyModel;
	
	struct FCreateEditorParams;
	struct FCreatePropertyTreeViewParams;
}

namespace UE::ConcertClientSharedSlate
{
	/** Builds a similar tree hierarchy as SSubobjectEditor. Reports only components as subobjects. */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IObjectHierarchyModel> CreateObjectHierarchyForComponentHierarchy();

	/** Name model that uses editor data for determining display names: actors use their labels, components ask USubobjectDataSubsystem. */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IObjectNameModel> CreateEditorObjectNameModel();
	
	/**
	 * Wraps the passed in BaseModel and makes it transactional.
	 * All calls that modify the underlying model was wrapped with scoped transactions.
	 * 
	 * @param OwnerObject The object containing the FConcertObjectReplicationMap - used for transactions.
	 */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IEditableReplicationStreamModel> CreateTransactionalStreamModel(
		TSharedRef<ConcertSharedSlate::IEditableReplicationStreamModel> BaseModel,
		UObject& OwnerObject
		);

	/** Simpler CreateTransactionalStreamModel overload that internally creates an UObject and sets it up automatically. */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IEditableReplicationStreamModel> CreateTransactionalStreamModel();

	/** Params for creating a filterable property tree view. */
	struct FFilterablePropertyTreeViewParams
	{
		/** The columns the property view should have. The label column is always included. */
		TArray<ConcertSharedSlate::FPropertyColumnEntry> AdditionalPropertyColumns
		{
			ConcertSharedSlate::ReplicationColumns::Property::LabelColumn(),
			ConcertSharedSlate::ReplicationColumns::Property::TypeColumn()
		};
		
		/** Optional initial primary sort mode for object rows */
		ConcertSharedSlate::FColumnSortInfo PrimaryPropertySort { ConcertSharedSlate::ReplicationColumns::Property::LabelColumnId, EColumnSortMode::Ascending };
		/** Optional initial secondary sort mode for object rows */
		ConcertSharedSlate::FColumnSortInfo SecondaryPropertySort { ConcertSharedSlate::ReplicationColumns::Property::LabelColumnId, EColumnSortMode::Ascending };
	};
	
	/**
	 * Creates a tree view that allows filtering of properties based on their type.
	 * 
	 * There is a combo box to the left of the search bar for managing the used filters.
	 * The user can toggle used filters on and off under the search bar.
	 */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IPropertyTreeView> CreateFilterablePropertyTreeView(FFilterablePropertyTreeViewParams Params);

	/** Params for creating the default single stream editor */
	struct FDefaultStreamEditorParams
	{
		ConcertSharedSlate::FCreateEditorParams BaseEditorParams;

		/**
		 * Additional property columns to add to the default ones.
		 * By default the default editor has the label, type, and replicates (checkbox) columns.
		 */
		TArray<ConcertSharedSlate::FPropertyColumnEntry> PropertyColumns
		{
			ConcertSharedSlate::ReplicationColumns::Property::LabelColumn(),
			ConcertSharedSlate::ReplicationColumns::Property::TypeColumn()
		};
		
		/**
		 * Optional. Determines the objects displayed as children to the top-level objects in the top section.
		 * If left unspecified, the object outliner will only display actors.
		 * @note The created view will keep a strong reference to this.
		 */
		TSharedPtr<ConcertSharedSlate::IObjectHierarchyModel> ObjectHierarchy;

		/**
		 * Optional. Determines the display name of objects.
		 * If left unspecified, defaults to the names in the object paths.
		 */
		TSharedPtr<ConcertSharedSlate::IObjectNameModel> NameModel;

		/** Optional. Called to generate the context menu for objects. This extends the options already generated by this widget and is called at the end. */
		ConcertSharedSlate::FExtendObjectMenu OnExtendObjectsContextMenu;

		/**
		 * Optional. When a property is assigned to the client, this is called to add any additional properties.
		 * By default, if the user adds a struct property, its child properties are also added.
		 */
		FExtendProperties OnExtendAddedProperties;
		
		/** Optional. Additional columns to add to the object view */
		TArray<ConcertSharedSlate::FObjectColumnEntry> ObjectColumns;
	};
	
	/**
	 * Creates a default IReplicationStreamEditor which is used to edit a single stream, e.g. a single client's stream.
	 *
	 * This editor adds a checkbox to the start of every property row.
	 * - Checking adds the property to the selected objects' property mappings.
	 * - Unchecking removes the property to the selected objects' property mappings
	 * 
	 * @see CreateViewer for a description of the UI layout.
	 */
	CONCERTCLIENTSHAREDSLATE_API TSharedRef<ConcertSharedSlate::IReplicationStreamEditor> CreateDefaultStreamEditor(FDefaultStreamEditorParams Params);
}
