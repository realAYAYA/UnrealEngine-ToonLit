Title:B
Crumbs:Shared/Glossary
Description:
Availability:NoPublish
[EXCERPT:Glossary_B]



[OBJECT:GlossaryItem]
	[PARAM:Term]
Blueprints
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_Blueprints]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
Blueprint Editor
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE#Glossary_BlueprintEditor]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
Blueprint Interface
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_BlueprintInterface]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
Blueprint Macro Library
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_BlueprintMacroLibrary]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
Brush
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_Brush]
	[/PARAM]
[/OBJECT]


[/EXCERPT:Glossary_B]

[COMMENT:none]
[EXCERPT:Glossary_Blueprints]
The **Blueprints Visual Scripting** system (or **Blueprints** for short) is a visual scripting system based on the concept of adding and connecting nodes together to create gameplay elements all from within the Unreal Editor. Flexible and powerful enough to create an entire game without ever having to touch a single line of code, Blueprints provide the ability to use virtually the full range of concepts and tools generally only available to programmers. 
[/EXCERPT:Glossary_Blueprints]
[EXCERPT:Glossary_BlueprintEditor]
The **Blueprint Editor** is a node-based graph editor. It also has several additional windows that serve targeted information and allow for additional modifications to be made to Blueprints and their graphs.
[/EXCERPT:Glossary_BlueprintEditor]
[EXCERPT:Glossary_BlueprintInterface]
A **Blueprint Interface** is a type of asset in which undefined functions are created. Any Blueprint can implement this Interface and then create its own definition of those functions. This serves as one way for Blueprints to communicate to one another, particularly when one Blueprint interacts with many other Blueprints.
[/EXCERPT:Glossary_BlueprintInterface]
[EXCERPT:Glossary_BlueprintMacroLibrary]
A **Blueprint Macro Library** is a Blueprint container that holds a collection of macros or self-contained graphs that can be placed as nodes in other Blueprints. These can be time-savers, because they can store commonly used sequences of nodes, complete with inputs and outputs for both execution and data transfer. Macros are shared among all graphs that reference them, but they are auto-expanded into the graph as if they were a collapsed node during compiling. This means that Blueprint Macro Libraries do not need to be compiled, but changes to a macro are only reflected in graphs that reference that macro when the Blueprint containing those graphs is recompiled.
[/EXCERPT:Glossary_BlueprintMacroLibrary]
[EXCERPT:Glossary_Brush]
A **Brush** is an Actor that describes a 3D volume that is placed in a level in order to define level geometry (referred to as BSPs) and gameplay volumes. Typically you will use BSP Brushes to prototype or block-out your levels for gameplay testing. 

Volumes on the other hand have several uses depending upon the effects attached to them such as: Blocking Volumes (which are invisible and used to prevent Actors from passing through them), Pain Causing Volumes (which causes damage over time to any Actor that overlaps it) or Trigger Volumes (which are used as a way to cause events when an Actor enters or exits them).  
[/EXCERPT:Glossary_Brush]
[/COMMENT]