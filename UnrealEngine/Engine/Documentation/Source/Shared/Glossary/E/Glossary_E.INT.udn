Title:E
Crumbs:Shared/Glossary
Description:
Availability:NoPublish

[EXCERPT:Glossary_E]

[OBJECT:GlossaryItem]
	[PARAM:Term]
event
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_event]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
EventGraph
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_EventGraph]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]

execution pin
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_execution_pin]
	[/PARAM]
[/OBJECT]


[/EXCERPT:Glossary_E]

[COMMENT:none]
[EXCERPT:Glossary_event]
In Blueprints, an **event** is an entry point, or first executed node of visual scripting. This entry point is often triggered by an in-game occurrence. For instance, a player entering a volume can trigger an Overlap event, which can then be used to cause any functionality to happen within a Blueprint, such as opening a door, turning on a light, and so on.
[/EXCERPT:Glossary_event]
[EXCERPT:Glossary_EventGraph]
The **EventGraph** of a Blueprint contains a node graph that uses events and function calls to perform actions in response to gameplay events associated with the Blueprint. This is used to add functionality that is common to all instances of a Blueprint. This is where interactivity and dynamic responses are setup. For example, a light Blueprint could respond to a damage event by turning off its `LightComponent` and changing the material used by its mesh. This would automatically provide this behavior to all instances of the light Blueprint.
[/EXCERPT:Glossary_EventGraph]
[EXCERPT:Glossary_execution_pin]
![Blueprint Exec Pins](k2_pins_exec.png)

**Execution pins** are used to connect nodes together to create a flow of execution. When an input execution pin is activated, the node is executed. Once execution of the node completes, it activates an output execution pin to continue the flow of execution. Execution pins are displayed as an outline when not wired, and solid when wired to another execution pin. Function Call nodes always have only a single input execution pin and a single output execution pin as functions only have one entry point and one exit point. Other types of nodes can have multiple input and output execution pins, allowing for different behavior dependent on which pin is activated.
[/EXCERPT:Glossary_execution_pin]
[/COMMENT]
