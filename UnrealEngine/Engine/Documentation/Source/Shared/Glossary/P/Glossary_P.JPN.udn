INTSourceChangelist:3810557
Title:P
Crumbs:Shared/Glossary
Description:
Availability:NoPublish

[EXCERPT:Glossary_P]

[OBJECT:GlossaryItem]
	[PARAM:Term]
パネル
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_panel]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
ポーン 
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_pawn]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
ペルソナ
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_Persona]

		スケルタルメッシュ、ブレンドスペース、 Animation ブループリントなどアニメーション関連アセットを **ダブルクリック** するとペルソナ (Persona) が開きます。
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
PhAT
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_PhAT]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
物理マテリアル
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_Physical_Material]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
ピン
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_pin]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
回転軸
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_pivot_point]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
Play In Editor (プレイ・イン・エディタ、PIE)
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_Play_In_Editor]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
PlayerController (プレイヤー コントローラー)
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_PlayerController]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
PlayerState
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_PlayerState]
	[/PARAM]
[/OBJECT]

[OBJECT:GlossaryItem]
	[PARAM:Term]
プロジェクト
	[/PARAM]
	[PARAM:Definition]
		[INCLUDE:#Glossary_project]
	[/PARAM]
[/OBJECT]

[/EXCERPT:Glossary_P]

[COMMENT:none]
[EXCERPT:Glossary_panel]
**パネル** は、ユーザーのレベルに関する情報を格納する UI の一部です。別のウィンドウへ移動、ドッキング、またはドラッグすることができます。**[Details (詳細)]** パネルと **コンテンツブラウザ** が例として挙げられます。
[/EXCERPT:Glossary_panel]
[EXCERPT:Glossary_pawn]
**ポーン** は、ゲーム内のアバターやペルソナとして機能するアクタのサブクラスです。例えばゲーム内のキャラクターなどです。ポーンは、プレイヤーまたはゲームの AI によって NPC (ノンプレイヤー キャラクター) の形で制御できます。 

ポーンが人間または AI プレイヤーによって制御されると、_所有された_ とみなされます。逆に、ポーンが人間または AI プレイヤーによって制御されていないと、_所有されていない_ とみなされます。 
[/EXCERPT:Glossary_pawn]
[EXCERPT:Glossary_Persona]
**ペルソナ** は、アンリアル内のアニメーション編集ツールセットです。Skeleton、Skeletal Mesh、Animation Blueprint、またはさまざまなアニメーション アセットを編集する堅牢なシステムです。アンリアル内のアニメーション作業の大部分 (一部かもしれませんが) は、このエディタで行います。スケルタルな [ソケット](Engine/Content\Types\SkeletalMeshes\Sockets) の編集、 [Animation Sequence](Engine/Animation/Sequences) の編集、アニメーションの [Blend Space](Engine/Animation/Blendspaces) や [Montage](Engine/Animation/AnimMontage) の設定、 [Animation Blueprint](Engine/Animation/AnimBlueprints) の編集などを行うパネルを含んだ多目的ツールです。
[/EXCERPT:Glossary_Persona]
[EXCERPT:Glossary_PhAT]
アンリアル エディタの物理アセット編集ツールである **PhAT** は、Skeletal Mesh アクタの物理およびコリジョン プロパティの編集に使用します。
[/EXCERPT:Glossary_PhAT]
[EXCERPT:Glossary_Physical_Material]
**物理マテリアル** は、ワールドとの動的なインタラクション中に物理オブジェクトの反応を定義するために使用されます。物理マテリアルの使用は極めて簡単です。物理マテリアルを作成すると、全ての物理オブジェクトに適用されたデフォルトの物理マテリアルと同一の、一連のデフォルト値が与えられます。キャラクターの死体 (ラグドール物理演算) 、可動の木箱などが例として挙げられます。
[/EXCERPT:Glossary_Physical_Material]
[EXCERPT:Glossary_pin]
**ピン** は、ビジュアル スクリプティング ノードの一部です。ピンは、ワイヤー経由で他のノードと接続します。ノードを実行するには、実行ピンが接続されていなければいけません。データピンはタイプによって色分けされて、他のノードからデータを入力、もしくは他のノードへデータを出力します。
[/EXCERPT:Glossary_pin]
[EXCERPT:Glossary_pivot_point]
**回転軸** (または原点) は、 3D モデリング プログラムで定義されたスタティックメッシュ アクタまたはスケルタルメッシュ アクタの位置を示します。これはオブジェクトの基礎としてアライメントを目的に作成されました。回転軸はオブジェクト中央、オブジェクトのベース、またはオブジェクトの外側にも位置させることができます。
[/EXCERPT:Glossary_pivot_point]
[EXCERPT:Glossary_Play_In_Editor]
**Play In Editor (PIE)** は、アンリアル エディタ ウィンドウでレベルを直接プレイできるモードです。テスト目的で指定した位置からプレイを開始することができます。このモードは、現在のレベルをゲーム内でのプレイと全く同じ動作でプレイできるため、プレイヤーのコントロールやプレイヤーのアクションにトリガーされるレベルイベントを含めたゲームプレイの機能をテストすることができます。
[/EXCERPT:Glossary_Play_In_Editor]
[EXCERPT:Glossary_PlayerController]
**PlayerController** クラスはプレイヤーの入力を取り込み、それをゲーム内のインタラクションに変換するために使用されます。すべてのゲームは最低 1 つのプレイヤー コントローラーを持ちます。ゲーム内でプレイヤーを表すものとしてプレイヤー コントローラは多くの場合、ポーンまたはキャラクターを所有します。 

プレイヤー コントローラはマルチプレイヤー ゲームの主要なネットワーク インタラクション ポイントでもあります。マルチプレイヤーのプレイ中に、サーバーにはゲーム内のプレイヤー毎にプレイヤー コントローラのインスタンスが 1 つあります。各プレイヤーに対してネットワークの関数呼び出しが可能でなければならないからです。各クライアントはそのプレイヤーに対応するプレイヤー コントローラのみを持ち、サーバーと通信するためにそのプレイヤー コントローラのみを使用することができます。
[/EXCERPT:Glossary_PlayerController]
[EXCERPT:Glossary_PlayerState]
**PlayerState** は、人プレーヤーやプレイヤーをシミュレートしているボットなどの、ゲームの参加者のステートです。ゲームワールドの一部として存在するノンプレイヤーの AI は PlayerState は持ちません。 

PlayerState として適切なデータの例には、プレイヤー名、スコア、現在のレベルやヘルス、キャプチャー・ザ・フラグ ゲームで現在フラグを持っているかなどがあります。 

マルチプレイヤー ゲームでは、すべてのマシン上に全プレイヤーの PlayerStates が存在し (PlayerControllers とは異なります) 、サーバーからクライアントにデータをレプリケートして同期を保つことができます。

[/EXCERPT:Glossary_PlayerState]
[EXCERPT:Glossary_project]
**Project** には、個々のゲームを構成し、ディスク上のディレクトリと一致させるすべてのコンテンツとコードを保持されています。例えば、以下の画像では、 **コンテンツ ブラウザ** の階層ツリーは、ディスク上のプロジェクト フォルダ内と同じディレクトリ構造になっています。 

[OBJECT:ToggleButtonContent]
[PARAMLITERAL:category]
OS
[/PARAMLITERAL]
[PARAMLITERAL:id]
windows
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAM:content]
[REGION:lightbox]
[![](ProjectHierarchy_Windows.png)(w:480)](ProjectHierarchy_Windows.png)
[/REGION]
[/PARAM]
[/OBJECT]

[OBJECT:ToggleButtonContent]
[PARAMLITERAL:category]
OS
[/PARAMLITERAL]
[PARAMLITERAL:id]
mac
[/PARAMLITERAL]
[PARAMLITERAL:active]
[/PARAMLITERAL]
[PARAM:content]
[REGION:lightbox]
[![](ProjectHierarchy_Mac.png)](ProjectHierarchy_Mac.png)
[/REGION]
[/PARAM]
[/OBJECT]

_画像をクリックしてフルサイズで表示_

 プロジェクトはそれに関連する `.uproject` ファイルによって頻繁に参照されます。しかし、これらは並んで存在する 2 つの別個のファイルです。`.uproject` ファイルはファイルを作成、開く、保存するために使用する参照ファイルです。これに対してプロジェクトにはそれに関連するすべてのファイルやフォルダが入っています。

プロジェクトをいくつでも作成し、そのすべてを並行して維持し、開発することができます。エンジン (およびエディタ) は両方とも簡単に切り替えできます。これにより、複数ゲームの作業をただちに行ったり、主要ゲームプロジェクトに加えていくつかのテストプロジェクトも持つことができます。
[/EXCERPT:Glossary_project]
[/COMMENT]