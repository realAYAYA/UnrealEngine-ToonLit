Availability:NoPublish
Title:FBodyInstance RTTs
Crumbs:

[EXCERPT:bStartAwake]

Decide whether or not this Physics Body should start awake. An awake Physics Body is actively simulating (not asleep). If an Awake Physics Body comes to a stop for a certain amount of time, it will go back to Sleep.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:bStartAwake]



[EXCERPT:bEnableGravity]

Allows you to turn off Gravity on a specific Physics Body. This can be used on a Physics asset to have some portions of the Skeletal Mesh not be influenced by gravity, perhaps for creating underwater plants or a broken tow cable on a space craft.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:bEnableGravity]




[EXCERPT:PhysMaterialOverride]

Overrides the PhysMaterial for this specific Physics Body for use in Simple Collision (collision involving convex hulls or default Physics shapes such as spheres, boxes, and sphyls). This can give a specific Physics Body different properties, such as giving a Physics Body that defines a shoe more rubbery properties.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:PhysMaterialOverride]




[EXCERPT:COMNudge]

Adjusts the Center of Mass of a Physics Body.

The primary use of this is for vehicles or large Physics Bodies that encompass an irregular shape. You will often use one large Physics Body to define the majority of the Mass of a Vehicle. As a Center of Mass is generated for the body based on the Physics Body being used, it will almost always be dead center of the Physics Body. This can make a vehicle handle oddly, thus you can adjust the Center of Mass to account for where the mass of the vehicle really is located.

![](PhAT_COM.png)

The Mass Properties showflag will visualize the Center of Mass and Inertia Frame for movable and simulated bodies. You will need to turn wireframe rendering on for this since the Center of Mass is typically embedded in the geometry.

![](COM_Geom.png)

[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:COMNudge]




[EXCERPT:SleepFamily]

This setting defines how quickly a Physics Body goes back to sleep, or how stable it has to be for it to be put to sleep. There are two pre-defined Sleep Families:

* SF_Normal - Good for most uses, but may cause a Physics Body go to sleep if it slows at the top of an arc or at the slow points in a pendulum motion.

* SF_Sensitive - Good for pendulum like movements where the pendulum may slow to a "stop" at the top of its arc but gravity should pull it down; SF_Sensitive will not allow the Physics Body go to sleep in these cases.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:SleepFamily]




[EXCERPT:MassScale]

This will scale the Mass of the selected Physics Body.

The use for this is to make it appear as if the Skeletal Mesh is made from different materials or has varying densities. This is necessary because the calculation that defines the Mass of the Physics Body is uniform across all of the Physics Bodies.

This can make things more or less affected by the forces in the level. A lowered mass could be used to give something a more light an airy feel where an increased mass can root a Physics Asset in place.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:MassScale]



[EXCERPT:AngularDamping]

This adds a drag like effect to the rotation of the Physics Body, but more accurately it defines how much the Physics Body resists rotating. This is easiest to think of like a draw bridge: the Angular Damping works like the chains supporting the draw bridge, slowing its decent to the open state.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies
[/VAR]
[/EXCERPT:AngularDamping]



[EXCERPT:LinearDamping]

This adds a drag like effect to the Physics Body, but more accurately it defines how much the Physics Body resists moving. For a falling Physics Body this will slow the decent, potentially making it appear as if it is falling through water or sludge.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies
[/VAR]
[/EXCERPT:LinearDamping]




[EXCERPT:PositionSolverIterationCount]

This will increase the accuracy of the Position Solver at the cost of extra CPU processing. The advantage is that the Physics Body will be better stabilized, removing the jitters and allowing it to reach a resting state faster.

This should really be the last option to tweak when attempting to fix rag doll jitter. Damping values and addressing which Physics Bodies are allowed to collide, should adjusted first.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:PositionSolverIterationCount]




[EXCERPT:VelocitySolverIterationCount]

Much like the Position Solver Iteration Count, this will increase the number of iterations this Physics Body uses when solving for velocity, but will cost in CPU processing.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#physics
[/VAR]
[/EXCERPT:VelocitySolverIterationCount]




[EXCERPT:bNotifyRigidBodyCollision]

It enables the selected Physics Body to report that it has had a collision to Blueprints or Code elements. If this is off, the Physics Body will collide with things, but it will not actually report that it has done so.
Engine/Physics/PhysicsBodies/#collision
[/EXCERPT:bNotifyRigidBodyCollision]




[EXCERPT:bUseCCD]

Continuous Collision Detection (CCD) increases the CPU processing needed by the Physics Body, but makes collision detection much more accurate.

This can be used when objects are moving at high speeds to prevent interpenetration ejection errors or in cases when more accurate collision detection is desired. Also, if a Physics Body is set to report Overlaps and Collisions from a single object type (pawns for example), CCD can be enabled to prevent double events where for a single frame the Physics Bodies overlap before being ejected on the next frame.
[VAR:ToolTipFullLink]
Engine/Physics/PhysicsBodies#collision
[/VAR]
[/EXCERPT:bUseCCD]

