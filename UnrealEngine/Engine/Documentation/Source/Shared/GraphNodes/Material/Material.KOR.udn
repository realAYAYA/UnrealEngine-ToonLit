INTSourceChangelist:4615496
Availability:NoPublish
Title:
Crumbs:
Description:

[EXCERPT:UMaterialExpressionAtmosphericFogColor]
Atmospheric Fog(애트머스페릭 포그) 머티리얼 표현식으로는 월드 스페이스 내 어느 위치든 레벨에 있는 Atmospheric Fog 의 현재 색을 파악할 수 있습니다. World Position 을 물려주지 않은 경우, 문제의 픽셀 World Position 을 사용합니다. 머티리얼이 원경 안개색으로 희미해져 가는 것으로 보이도록 하고플 때 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericFogColor]

[EXCERPT:UMaterialExpressionAtmosphericLightVector]
Atmospheric Light Vector(애트머스페릭 라이트 벡터) 머티리얼 표현식은 씬의 Atmosphere Sun Light(대기 태양광) 옵션이 체크된 디렉셔널 라이트에 대한 라이트 벡터를 반환합니다. 태양의 라이트 벡터를 사용하여 어떤 커스텀 셰이딩 작업을 하고자 하는 이펙트 머티리얼에 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericLightVector]

[EXCERPT:UMaterialExpressionAtmosphericLightColor]
Atmospheric Light Color(애트머스페릭 라이트 컬러) 머티리얼 표현식은 씬의 Atmosphere Sun Light(대기 태양광) 옵션이 체크된 디렉셔널 라이트에 대한 라이트 컬러를 반환합니다. 태양의 라이트 컬러를 사용하여 어떤 커스텀 셰이딩 작업을 하고자 하는 이펙트 머티리얼에 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericLightColor]


[EXCERPT:UMaterialExpressionDesaturation]
Desaturation 는 일정 비율에 따라 입력된 색의 채도를 감소(탈색), 다른 말로 회색조로 변환하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Color#desaturation
[/VAR]
[/EXCERPT:UMaterialExpressionDesaturation]


[EXCERPT:UMaterialExpressionConstant]
Constant(상수) 표현식은 실수 값 하나를 출력합니다. 입력에서 바라는 채널 수와 상관없이 어떤 입력에도 연결할 수 있는 가장 흔한 표현식 중 하나입니다. 예를 들어 3 벡터를 기대하는 입력에 상수를 연결하면, 그 상수값이 3 요소 모두에 사용됩니다. 수치값 하나를 줄 때는, 설명 부분의 작은 삼각형 아이콘을 사용하여 노드를 접는 것이 좋습니다.
[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant
[/VAR]
[/EXCERPT:UMaterialExpressionConstant]

[EXCERPT:UMaterialExpressionConstant2Vector]
Constant2Vector 표현식은 2채널 벡터 값, 다른 말로 상수 둘을 출력하는 표현식입니다. 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant2vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant2Vector]

[EXCERPT:UMaterialExpressionConstant3Vector]
Constant3Vector 표현식은 3채널 벡터 값, 다른 말로 상수 셋을 출력하는 표현식입니다. 각 채널마다(빨강, 초록, 파랑) 한 가지씩 색이 할당되는 RGB 컬러를 예로 들 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant3vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant3Vector]

[EXCERPT:UMaterialExpressionConstant4Vector]
Constant4Vector 표현식은 4채널 벡터 값, 다른 말로 상수 넷을 출력하는 표현식입니다. 각 채널마다(빨강, 초록, 파랑, 알파) 한 가지씩 색이 할당되는 RGBA 컬러를 예로 들 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant4vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant4Vector]

[EXCERPT:UMaterialExpressionDistanceCullFade]
DistanceCullFade 표현식은 검정에서 하양으로 페이드해 들어가는 스칼라 값을 출력하며, Cull Distance 안에 들어온 오브젝트를 페이드 인 시키는 데 사용할 수 있습니다. 참고로 페이드 아웃은 아니됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#distancecullfade
[/VAR]
[/EXCERPT:UMaterialExpressionDistanceCullFade]

[EXCERPT:UMaterialExpressionParticleColor]
ParticleColor(파티클 컬러)는 캐스케이드에서 정의된 파티클별 컬러 데이터에 따라 주어진 파티클의 현재 색으로 묶어 들어가는 표현식입니다. Emissive 등 적합한 채널에 꽂아줘야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlecolor
[/VAR]
[/EXCERPT:UMaterialExpressionParticleColor]

[EXCERPT:UMaterialExpressionParticleDirection]
ParticleDirection(파티클 방향)은 주어진 파티클의 현재 진행 방향을 나타내는 3벡터(RGB) 데이터를 파티클 단위별로 출력해 주는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particledirection
[/VAR]
[/EXCERPT:UMaterialExpressionParticleDirection]


[EXCERPT:UMaterialExpressionParticleMotionBlurFade]
ParticleMotionBlurFade(파티클 모션 블러 페이드)는 모션 블러 결과 파티클이 흐려지는 정도를 나타내는 값을 출력합니다. 값이 1 이면 블러링 없음, 검정은 완전 블러링을 나타냅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlemotionblurfade
[/VAR]
[/EXCERPT:UMaterialExpressionParticleMotionBlurFade]

[EXCERPT:UMaterialExpressionParticleRadius]
ParticleRadius(파티클 반경)은 각 파티클 개별적으로 반경을 언리얼 유닛으로 출력합니다. 이를 통해 반경이 일정 지점에 도달하면 머티리얼에 어떠한 변화를 준다던가 하는 작업이 가능합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particleradius
[/VAR]
[/EXCERPT:UMaterialExpressionParticleRadius]

[EXCERPT:UMaterialExpressionParticleRelativeTime]
ParticleRelativeTime(파티클 상대 시간)은 파티클의 나이를 0 에서 1 사이 상대적 수치로 출력하는 표현식으로, 생성시 0, 사망시 1 이 됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlerelativetime
[/VAR]
[/EXCERPT:UMaterialExpressionParticleRelativeTime]


[EXCERPT:UMaterialExpressionParticleSize]
Particle Size(파티클 사이즈)는 파티클 스프라이트의 X Y 크기를 출력하는 표현식입니다. 나중에 이 값을 사용해서 머티리얼의 일정한 면을 구동시킬 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlesize
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSize]

[EXCERPT:UMaterialExpressionParticleSpeed]
ParticleSpeed(파티클 속력)은 각 파티클의 현재 이동 속력을 초당 언리얼 유닛 단위로 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlespeed
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSpeed]

[EXCERPT:UMaterialExpressionPerInstanceFadeAmount]
PerInstanceFadeAmount 표현식은 Foliage 처럼 인스턴싱된 스태틱 메시에 적용할 페이드 양에 관계된 float 값을 출력합니다. 그 값은 상수이긴 하나 메시의 각 인스턴스 별로 수치가 달라질 수는 있습니다.

Note: This only works when applied to an InstancedStaticMesh Actor or other Actor which utilizes InstancedStaticMeshComponents. 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#perinstancefadeamount
[/VAR]
[/EXCERPT:UMaterialExpressionPerInstanceFadeAmount]

[EXCERPT:UMaterialExpressionPerInstanceRandom]
PerInstanceRandom 은 머티리얼이 적용된 스태틱 메시 인스턴스마다 다른 랜덤 실수값을 출력하는 표현식입니다. InstancedStaticMeshComponent 는 인스턴스에 임의의 실수값을 설정하며, 이는(창문 뒤 밝기가 제각각인 불빛 등) 원하는 대로 사용할 수 있도록 노출됩니다. 메시의 각 인스턴스마다 달라지긴 하지만, 상수입니다.

출력값은 0 에서 대상 플랫폼의 RAND_MAX 사이 정수가 됩니다.

주: 이 표현식은 InstancedStaticMeshComponents 를 활용하는 액터나 InstancedStaticMesh 액터에 적용되었을 때만 작동합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#perinstancerandom
[/VAR]
[/EXCERPT:UMaterialExpressionPerInstanceRandom]

[EXCERPT:UMaterialExpressionTime]
Time 노드는 Panner, Cosine 이나 다른 시간 의존 연산을 하는 머티리얼에 시간의 흐름을 더하는 데 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#time
[/VAR]
[/EXCERPT:UMaterialExpressionTime]

[EXCERPT:UMaterialExpressionTwoSidedSign]
TwoSidedSign 는 양면 커스텀 라이팅 머티리얼 뒷면의 노멀을 뒤집어 Phong 과 같은 기능을 내도록 하기에 좋은 표현식입니다. 양면 머티리얼의 앞면은 +1, 뒷면은 -1 입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#twosidedsign
[/VAR]
[/EXCERPT:UMaterialExpressionTwoSidedSign]

[EXCERPT:UMaterialExpressionVertexColor]
VertexColor 표현식은 스프라이트 파티클 이미터에 영향을 끼치는 컬러 모듈 출력으로의 머티리얼에 접근해 볼 수 있는 곳입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#vertexcolor
[/VAR]
[/EXCERPT:UMaterialExpressionVertexColor]

[EXCERPT:UMaterialExpressionActorPositionWS]
ActorPositionWS 는 월드 스페이스에서 이 머티리얼을 가진 오브젝트의 위치를 나타내는 3벡터(RGB) 데이터를 출력합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#actorpositionws
[/VAR]
[/EXCERPT:UMaterialExpressionActorPositionWS]

[EXCERPT:UMaterialExpressionCameraPositionWS]
CameraWorldPosition 는 월드 스페이스에서의 카메라 위치를 나타내는 3채널 벡터값을 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#camerapositionws
[/VAR]
[/EXCERPT:UMaterialExpressionCameraPositionWS]

[EXCERPT:UMaterialExpressionLightmapUVs]
LightmapUVs 는 2채널 벡터값 형태로 라이트맵 UV 텍스처 좌표를 출력하는 표현식입니다. 라이트맵 UV 를 사용할 수 없는 경우, 2채널 벡터값(0,0) 을 출력합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#lightmapuvs
[/VAR]
[/EXCERPT:UMaterialExpressionLightmapUVs]

[EXCERPT:UMaterialExpressionObjectOrientation]
ObjectOrientation 는 오브젝트의 월드 스페이스 업 벡터를 출력하는 표현식입니다. 다른 말로 머티리얼이 적용된 오브젝트의 로컬 양수 Z 축이 가리키고 있는 방향입니다. 디퍼드 데칼의 경우, 머티리얼 도메인은 데칼 투영 방향을(X 축) 반환합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#objectorientation
[/VAR]
[/EXCERPT:UMaterialExpressionObjectOrientation]

[EXCERPT:UMaterialExpressionObjectPositionWS]
ObjectPositionWS 는 오브젝트 바운드의 월드 스페이스 중심 위치를 출력하는 표현식입니다. 예로 폴리지에 대한 구체형 라이팅을 만든다든가 할 때 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#objectpositionws
[/VAR]
[/EXCERPT:UMaterialExpressionObjectPositionWS]

[EXCERPT:UMaterialExpressionObjectRadius]
주어진 오브젝트의 반경과 동일한 값을 언리얼 유닛 단위로 출력하는 표현식입니다. 스케일을 적용해 계산되기에 결과는 각 오브젝트마다 고유할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#objectradius
[/VAR]
[/EXCERPT:UMaterialExpressionObjectRadius]

[EXCERPT:UMaterialExpressionPanner]
Panner 는 텍스처를 패닝 또는 이동시키는 데 사용할 수 있는 UV 텍스처 좌표를 출력하는 표현식입니다.

Panner 는 Time 입력에 따라 변하는 UV 를 생성합니다. Coordinate 입력은 Panner 노드가 생성한 UV 의 오프셋 등을 조작하는 데 사용할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#panner
[/VAR]
[/EXCERPT:UMaterialExpressionPanner]

[EXCERPT:UMaterialExpressionParticlePositionWS]
ParticlePositionWS(파티클 위치 월드 스페이스)는 각 개별 파티클의 월드 스페이스 위치를 나타내는 3벡터(RGB) 데이터를 출력합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#particlepositionws
[/VAR]
[/EXCERPT:UMaterialExpressionParticlePositionWS]

[EXCERPT:UMaterialExpressionPixelNormalWS]
PixelNormalWS 는 현재 노멀에 따라 픽셀이 향하고 있는 방향을 나타내는 벡터 데이터를 출력합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#pixelnormalws
[/VAR]
[/EXCERPT:UMaterialExpressionPixelNormalWS]

[EXCERPT:UMaterialExpressionRotator]
Rotator 는 회전하는 텍스처를 만드는 데 사용할 수 있는 2채널 벡터값 형태로 UV 텍스처 좌표를 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#rotator
[/VAR]
[/EXCERPT:UMaterialExpressionRotator]

[EXCERPT:UMaterialExpressionSceneTexelSize]
SceneColor 나 SceneDepth 표현식을 사용할 때와 마찬가지로 텍셀 크기만큼 이격(offset)시킬 수 있는 표현식입니다. 해상도가 고정되어 있지 않은 시스템에서 에지(edge)를 검출해내기 좋은 방법인데, 이런 계산이 없으면 작은 고정 값을 사용할 수밖에 없고, 낮은 해상도에서는 고르지 않은 결과가 나게 됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#scenetexelsize
[/VAR]
[/EXCERPT:UMaterialExpressionSceneTexelSize]

[EXCERPT:UMaterialExpressionScreenPosition]
ScreenPosition 은 현재 렌더링되고 있는 픽셀의 화면 공간 위치를 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#screenposition
[/VAR]
[/EXCERPT:UMaterialExpressionScreenPosition]

[EXCERPT:UMaterialExpressionTextureCoordinate]
TextureCoordinate 는 2채널 벡터값 형태로 UV 텍스처 좌표를 출력하여, 머티리얼에 다른 UV 채널을 사용하거나 타일링을 지정하거나 메시 UV 에 다른 작업을 하거나 할 수 있는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#texturecoordinate
[/VAR]
[/EXCERPT:UMaterialExpressionTextureCoordinate]

[EXCERPT:UMaterialExpressionVertexNormalWS]
VertexNormalWS 는 월드 스페이스 버텍스 노멀을 출력하는 표현식입니다. WorldPositionOffset 처럼 버텍스 셰이더에서 실행되는 머티리얼 입력에서만 사용 가능합니다. 메시를 키우거나 줄이거나 할 때 좋습니다. 노멀을 따라 위치를 오프셋시키면 UV 이음새를 따라 지오메트리가 떨어져 나가게 됨에 유의하시기 바랍니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#vertexnormalws
[/VAR]
[/EXCERPT:UMaterialExpressionVertexNormalWS]

[EXCERPT:UMaterialExpressionViewProperty]
ViewProperty(뷰 프로퍼티) 표현식은 뷰 종속 상수 프로퍼티를 출력합니다. 접근할 뷰 프로퍼티는 환경설정 가능하며, 출력 유형은 환경설정된 접근 프로퍼티에 따라 달라집니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#viewproperty
[/VAR]
[/EXCERPT:UMaterialExpressionViewProperty]

[EXCERPT:UMaterialExpressionViewSize]
현재 뷰의 픽셀 단위 크기를 나타내는 2D 벡터를 출력하는 표현식입니다. 화면의 현재 해상도에 따라 머티리얼에 다양한 변화를 유발시키는 데 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#viewsize
[/VAR]
[/EXCERPT:UMaterialExpressionViewSize]

[EXCERPT:UMaterialExpressionWorldPosition]
현재 픽셀의 월드 스페이스 위치를 출력하는 표현식입니다. 시각화시켜 보려면 단순히 출력을 Emissive 에 꽂으면 됩니다:

흔히 사용되는 때는(PixelDepth 에서의 직교(orthogonal) 거리가 아닌) 카메라에서 픽셀까지의 방사(radial) 거리를 구할 때입니다. WorldPosition 은 텍스처 좌표로 사용하기에도, 텍스처 좌표를 사용하는 무관한 메시가 서로 가까이 있을 때 일치시키는 데도 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#worldposition
[/VAR]
[/EXCERPT:UMaterialExpressionWorldPosition]

[EXCERPT:UMaterialExpressionCustom]
Custom 은 임의의 입력에 일정한 연산을 하여 그 결과를 출력하는 커스텀 HLSL 셰이더 코드를 작성할 수 있는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Custom#custom
[/VAR]
[/EXCERPT:UMaterialExpressionCustom]

[EXCERPT:UMaterialExpressionCustomTexture]
CustomTexture 는 Custom 표현식 안에 있는 HLSL 코드 내 텍스처를 가리킬 수 있도록 해 주는 표현식으로, 보통 Tex2D 나 비슷한 함수를 사용하여 HLSL 안의 텍스처를 샘플링하는 데 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Custom#customtexture
[/VAR]
[/EXCERPT:UMaterialExpressionCustomTexture]

[EXCERPT:UMaterialExpressionDecalDerivative]
DecalDerivative 는 커스텀 UV 가 없다는 가정하에 데칼 텍스처 좌표의 파생형을 명시적으로 계산하여 데칼이 투영되는 에지의 2x2 픽셀 밉맵 부작용을 피하는데 쓰이며, 비등방성 필터링도 계속 지원됩니다.

[VAR:ToolTipFullLink]
Engine/Actors/DecalActor
[/VAR]
[/EXCERPT:UMaterialExpressionDecalDerivative]

[EXCERPT:UMaterialExpressionDecalMipmapLevel]
DecalMipmapLevel 는 커스텀 UV 가 없다 가정하고 데칼 텍스처의 밉맵 레벨을 명시적으로 계산하는데 사용됩니다. 이는 데칼이 투사되는 에지의 2x2 픽셀 밉맵 부작용을 피하기 위해 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Actors/DecalActor
[/VAR]
[/EXCERPT:UMaterialExpressionDecalMipmapLevel]

[EXCERPT:UMaterialExpressionDepthFade]
DepthFade 표현식은 반투명 오브젝트와 불투명 오브젝트가 겹칠 때 일어나는 이음새를 감추는 데 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#depthfade
[/VAR]
[/EXCERPT:UMaterialExpressionDepthFade]

[EXCERPT:UMaterialExpressionPixelDepth]
PixelDepth 는 현재 렌더링되고 있는 픽셀의 깊이 또는 카메라에서의 거리를 출력하는 표현식입니다. 자세한 값 사용법에 대해서는 PixelDepth 를 참고하시기 바랍니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#pixeldepth
[/VAR]
[/EXCERPT:UMaterialExpressionPixelDepth]

[EXCERPT:UMaterialExpressionSceneDepth]
SceneDepth 는 기존의 씬 깊이를 출력하는 표현식입니다. PixelDepth 와 비슷하나, PixelDepth 는 현재 그려지고 있는 픽셀의 깊이만 샘플링할 수 있는 반면, SceneDepth 는 어느 위치의 깊이도 샘플링할 수 있습니다.

주: 반투명 머티리얼만 SceneDepth 를 활용할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#scenedepth
[/VAR]
[/EXCERPT:UMaterialExpressionSceneDepth]

[EXCERPT:UMaterialExpressionFontSample]
FontSample 표현식은 폰트 리소스에서 텍스처 페이지를 보통의 2D 텍스처로 샘플을 뽑는 표현식입니다. 폰트의 알파 채널에는 폰트 외곽선 값이 들어갑니다. 사용 가능한 폰트 페이지만 지정할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Font#fontsample
[/VAR]
[/EXCERPT:UMaterialExpressionFontSample]

[EXCERPT:UMaterialExpressionFontSampleParameter]
FontSampleParameter 표현식은 폰트 기반 파라미터를 머티리얼 인스턴스 콘스턴트 형식으로 노출시켜, 여러 인스턴스에서 다양한 폰트를 쉽게 사용할 수 있도록 만들어 줍니다. 폰트의 알파 채널에는 폰트 외곽선 값이 들어갑니다. 유효한 폰트 페이지만 지정할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Font#fontsampleparameter
[/VAR]
[/EXCERPT:UMaterialExpressionFontSampleParameter]

[EXCERPT:UMaterialExpressionMaterialFunctionCall]
MaterialFunctionCall 은 다른 머티리얼이나 함수에서 외부 MaterialFunction 를 사용할 수 있도록 해 주는 표현식입니다. 외부 함수의 입력과 출력 노드는 펑션 콜 노드의 입력과 출력이 됩니다. 이 표현식 중 하나를 놓을 때 콘텐츠 브라우저에 MaterialFunction 이 선택되어 있다면, 자동으로 할당됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#materialfunctioncall
[/VAR]
[/EXCERPT:UMaterialExpressionMaterialFunctionCall]

[EXCERPT:UMaterialExpressionStaticBool]
StaticBool 은 함수 내 정적인 부울 함수 입력에 대한 기본 부울 값을 주는 데 사용되는 표현식입니다. 이 노드는 자체적으로 전환되지 않는 것이라, StaticSwitch 노드와 함께 사용해야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#staticbool
[/VAR]
[/EXCERPT:UMaterialExpressionStaticBool]

[EXCERPT:UMaterialExpressionStaticSwitch]
StaticSwitch 표현식은 StaticSwitchParameter 와 같은 식으로 작동하나, 차이점은 스위치만 구현할 뿐 파라미터를 만들지는 않는다는 점입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#staticswitch
[/VAR]
[/EXCERPT:UMaterialExpressionStaticSwitch]

[EXCERPT:UMaterialExpressionTextureObject]
TextureObject 는 함수 내 텍스처 함수 입력의 기본 텍스처를 제공하는 데 사용되는 표현식입니다. 이 노드가 텍스처를 실제로 샘플링하는 것은 아니기에, TextureSample 노드와 함께 사용해야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#textureobject
[/VAR]
[/EXCERPT:UMaterialExpressionTextureObject]


[EXCERPT:UMaterialExpressionLandscapeLayerBlend]
LandscapeLayerBlend(랜드스케이프 레이어 블렌드) 노드는 텍스처나 머티리얼 망 입력처럼, 다수의 랜드스케이프 레이어를 하나의 노드로 블렌딩시켜 줍니다. 자세한 정보는 LandscapeLayerBlend 노드 사용하기 부분을 참고하세요.

디테일 패널에서 LandscapeLayerBlend 노드의 프로퍼티를 설정할 수 있습니다. 이 노드의 프로퍼티에는 블렌딩 대상 레이어들에 대한 정보를 입력할 수 있는 배열이 포함되어 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerblend
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerBlend]

[EXCERPT:UMaterialExpressionLandscapeLayerCoords]
LandscapeLayerCoords(랜드스케이프 레이어 좌표) 노드는 랜드스케이프 터레인에 머티리얼 망을 매핑시키는 데 사용할 수 있는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayercoords
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerCoords]

[EXCERPT:UMaterialExpressionLandscapeLayerSwitch]
LandscapeLayerSwitch(랜드스케이프 레이어 스위치)는 특정 레이어가 랜드스케이프 리전(region)에 공헌하지 않을 때, 일부 머티리얼 연산을 제외시키는 것입니다. 특정 레이어의 웨이트(가중치)가 0 일 때 불필요한 계산을 제거하여 머티리얼을 최적화시킬 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerswitch
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerSwitch]

[EXCERPT:UMaterialExpressionLandscapeLayerWeight]
LandscapeLayerWeight(랜드스케이프 레이어 웨이트) 노드는 머티리얼이 적용된 랜드스케이프에서 얻은 연관 레이어에 대한 웨이트에 따라 머티리얼 망을 블렌딩할 수 있는 표현식입니다. 자세한 정보는 LandscapeLayerWeight 노드 사용하기 부분을 참고하세요.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerweight
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerWeight]

[EXCERPT:UMaterialExpressionLandscapeVisibilityMask]
LandscapeVisibilityMask(랜드스케이프 표시여부 마스크) 노드는 랜드스케이프의 부분 표시여부를 제거하여, 동굴을 만들 때처럼 구멍을 만듭니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapevisibilitymask
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeVisibilityMask]

[EXCERPT:UMaterialExpressionBreakMaterialAttributes]
Break Material Attributes(머티리얼 특성 분리) 표현식은 머티리얼 함수 시스템 중 특징적인 기능인 레이어드 머티리얼 과의 궁합이 잘 맞는 표현식입니다. 머티리얼 안에서 머티리얼 레이어 함수를 사용할 때, 레이어의 한 부분만 사용하고 싶을 때가 있습니다. 

예를 들어 강철같은 멋진 범용 재질을 정의하는 머티리얼 레이어가 있다 칩시다. 자신의 최종 머티리얼에 그 머티리얼의 전체가 아니라 러프니스와 베이스 컬러 특성만 사용하고 싶을 수가 있습니다. 

그러한 경우 Break Material Attributes 노드를 사용해서 그 머티리얼 레이어에서 받은 특성 전부를 나눈 다음, 원하는 것들만 꽂아주면 됩니다. 이 방법으로 다양한 머티리얼 특성에 대한 복잡한 블렌딩이 가능하기도 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/MaterialAttributes#breakmaterialattributes
[/VAR]
[/EXCERPT:UMaterialExpressionBreakMaterialAttributes]

[EXCERPT:UMaterialExpressionMakeMaterialAttributes]
Make Material Attributes(머티리얼 특성 제조) 노드는 Break Material Attributes 노드와 정반대입니다. 특성을 나누는 대신 합치는 것입니다. 자체적인 머티리얼 레이어 함수를 만들 때 좋은데, 출력에 대한 표준 특성 전부에 접근할 수 있기 때문입니다. 

하나의 머티리얼 안에 두 종류 이상의 머티리얼을 섞어 정의하고자 하는 복잡한 머티리얼을 구성할 때도 사용할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/MaterialAttributes#makematerialattributes
[/VAR]
[/EXCERPT:UMaterialExpressionMakeMaterialAttributes]

[EXCERPT:UMaterialExpressionAbs]
Abs 는 "absolute value", 절대치의 약자입니다. Abs 표현식은 받은 입력값의 절대치, 즉 부호를 뗀 값을 출력합니다. 본질적으로 양수와 0 은 그대로인 반면 음수에서 - 기호를 떼어 양수로 전환하는 것입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#abs
[/VAR]
[/EXCERPT:UMaterialExpressionAbs]

[EXCERPT:UMaterialExpressionAdd]
Add 표현식은 두 입력을 받아 더한 다음 결과를 출력합니다. 합 연산은 채널별로, 즉 입력의 R 채널이 더해지고, G 채널이 더해지고, B 채널이 더해지는 식으로 이루어집니다. 두 입력 중 하나가 단일 상수값이 아닌 다음에야 채널 수가 일치해야 합니다. 상수는 입력이 여러 개인 벡터에도 더할 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#add
[/VAR]
[/EXCERPT:UMaterialExpressionAdd]

[EXCERPT:UMaterialExpressionAppendVector]
AppendVector(벡터 덧붙이기) 표현식은 채널을 합쳐 원래보다 채널 수가 많은 벡터를 만듭니다. 예를 들어 두 개의 Constant 값을 덧붙이면 Constant2Vector 값을 만들 수 있습니다. 하나의 텍스처 안에서 채널의 순서를 재배치한다던가 여러 개의 회색조 텍스처를 RGB 컬러 텍스처로 합친다든가 할 때 유용하게 쓸 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#appendvector
[/VAR]
[/EXCERPT:UMaterialExpressionAppendVector]

[EXCERPT:UMaterialExpressionCeil]
Ceil(천정) 표현식은 값을 받아 소수점을 무조건 올려 더 큰 정수로 만든 결과를 출력합니다. Floor 와 Frac 도 참고하세요.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#ceil
[/VAR]
[/EXCERPT:UMaterialExpressionCeil]

[EXCERPT:UMaterialExpressionClamp]
Clamp(제한) 표현식은 값을 받아 최소치와 최대치로 정의된 특정 범위로 제한시킵니다. 최소값이 0.0 이고 최대값이 0.5 라면, 결과값은 절대 0.0 미만으로 떨어지거나 0.5 초과로 넘어가지 않습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#clamp
[/VAR]
[/EXCERPT:UMaterialExpressionClamp]

[EXCERPT:UMaterialExpressionComponentMask]
ComponentMask(컴포넌트 마스크) 표현식은 입력에서(R, G, B, A 중 하나 이상의) 채널 부분집합을 선택하여 출력으로 통과시킵니다. 입력에 존재하지 않는 채널을 통과시키려 하면, 입력이 단일 상수값이 아닌 이상 오류가 납니다. 입력이 단일 상수값인 경우는 그 값을 각 채널로 통과시킵니다. 현재 통과되도록 선택된 채널은 표현식의 제목줄에 표시됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#componentmask
[/VAR]
[/EXCERPT:UMaterialExpressionComponentMask]

[EXCERPT:UMaterialExpressionCosine]
Cosine(코사인) 표현식은(라디안) 입력값의 코사인 곡선을 출력합니다. 가장 흔하게는, Time 표현식의 입력에 연결하여 지속적으로 진동하는 파형을 출력할 때 쓰입니다. 출력값은 -1 과 1 사이를 순환하게 됩니다. 파형을 시각적으로 나타내 보자면 아래와 같습니다:

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#cosine
[/VAR]
[/EXCERPT:UMaterialExpressionCosine]

[EXCERPT:UMaterialExpressionCrossProduct]
CrossProduct(교차곱) 표현식은 3채널 벡터 입력값을 둘 받아서 교차곱을 계산한 결과를 3채널 벡터값으로 출력합니다. 공간상에 선( 또는 벡터)이 둘 있다 칠 때, 교차곱은 이 두 입력에 수직인 선( 또는 벡터)이 됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#crossproduct
[/VAR]
[/EXCERPT:UMaterialExpressionCrossProduct]

[EXCERPT:UMaterialExpressionDivide]
Divide(나누기) 표현식은 두 입력을 받아 첫째를 둘째로 나눈 결과를 출력합니다. 나누기는 채널별로 일어납니다. 즉 첫째의 R 채널을 둘째의 R 채널로, 첫째의 G 채널을 둘째의 G 채널로, 그런 식입니다. 나눌(분모) 값이 단일 실수가 아니라면 두 입력의 채널수는 같아야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#divide
[/VAR]
[/EXCERPT:UMaterialExpressionDivide]

[EXCERPT:UMaterialExpressionDotProduct]
DotProduct(도트 곱) 표현식은 두 입력의 도트 곱, 다른 말로 한 벡터를 다른 벡터에 투사했을 때의 길이를 계산합니다. 감쇠 계산 기법에 많이 사용됩니다. 두 벡터 입력은 채널 수가 같아야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#dotproduct
[/VAR]
[/EXCERPT:UMaterialExpressionDotProduct]

[EXCERPT:UMaterialExpressionFloor]
Floor(바닥) 표현식은 값을 받아 소수점을 무조건 내려 직전의 정수로 만들고 그 결과를 출력합니다. Ceil, Frac 참고.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#floor
[/VAR]
[/EXCERPT:UMaterialExpressionFloor]

[EXCERPT:UMaterialExpressionFmod]
FMod 표현식은 두 입력을 나눈 부동소수점 나머지 값을 반환합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#fmod
[/VAR]
[/EXCERPT:UMaterialExpressionFmod]

[EXCERPT:UMaterialExpressionFrac]
Frac 표현식은 값을 받아 그 소수점 부분을 출력합니다. Ceil, Floor 참고.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#frac
[/VAR]
[/EXCERPT:UMaterialExpressionFrac]

[EXCERPT:UMaterialExpressionIf]
두 입력을 비교한 다음, 그 결과에 따라 세 가지 입력값 중 하나를 통과시킵니다. 비교할 두 개의 입력값은 single float 값이어야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#if
[/VAR]
[/EXCERPT:UMaterialExpressionIf]

[EXCERPT:UMaterialExpressionLinearInterpolate]
LinearInterpolate 는 세 번째 값을 마스크로 사용하여 두 입력 값을 블렌딩하는 표현식입니다. 포토샵의 레이어 마스크처럼 두 텍스처 사이의 전환을 정의하는 마스크로 간주할 수 있습니다. 마스크의 강도 Alpha 는 두 입력값에서 취할 색 비율을 결정합니다.

Alpha 가 0.0 이면 첫 번째 입력이, 1.0 이면 두 번째 입력이 사용됩니다. Alpha 가 회색(0.0 에서 1.0 사이)이면 출력은 두 입력 사이의 혼합이 됩니다. 유념할 것은 채널별로 블렌딩이 일어난다는 점입니다.  즉 Alpha 가 RGB 색이라면, Alpha 의 빨강 채널 값이 A 와 B 의 빨강 채널 블렌딩을 정의하며, Alpha 의 초록 채널과는 별개 입니다. Alpha 의 초록 채널은 A 와 B 의 초록 채널 블렌딩을 정의합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#linearinterpolate
[/VAR]
[/EXCERPT:UMaterialExpressionLinearInterpolate]

[EXCERPT:UMaterialExpressionMultiply]
Multiply(곱하기) 표현식은 두 입력을 받아 서로 곱한 다음 결과를 출력합니다. 포포토샵의 멀티플라이 레이어 블렌드와 유사합니다. 곱하기는 채널별로 이루어집니다. 즉 첫째의 R은 둘째의 R로, 첫째의 G는 둘째의 G로 곱하는 식입니다. 둘 중 하나가 단일 실수값이 아닌 다음에야 두 입력은 채널 수가 같아야 합니다.

주: UE의 범위는 [0,1]로 제한되어있지 않음에 유의하십시오! Multiply 결과 색/값이 1보다 크면 색이 밝아집니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#multiply
[/VAR]
[/EXCERPT:UMaterialExpressionMultiply]

[EXCERPT:UMaterialExpressionNormalize]
Normalize(정규화) 표현식은 입력값을 정규화시켜 출력합니다. 즉 입력 각 성분을 벡터의 L-2 norm(길이) 로 나누는 것입니다.

주: Normal 머티리얼 출력에 연결되는 표현식은 정규화시킬 필요가 없습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#normalize
[/VAR]
[/EXCERPT:UMaterialExpressionNormalize]

[EXCERPT:UMaterialExpressionOneMinus]
OneMinus(1에서 빼기) 표현식은 입력값을 받아 1에서 그 값을 뺀 결과를 출력하는 표현식입니다. 채널별로 이루어지는 연산입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#oneminus
[/VAR]
[/EXCERPT:UMaterialExpressionOneMinus]

[EXCERPT:UMaterialExpressionPower]
Power(거듭제곱) 표현식은 입력 둘을 받아서, Base(밑)을 Exp(지수)번 거듭제곱, 다른 말로 밑 x 밑 연산을 지수 번 한 결과를 출력합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#power
[/VAR]
[/EXCERPT:UMaterialExpressionPower]

[EXCERPT:UMaterialExpressionLogarithm2]
Logarithm(로그) 표현식은 입력 둘을 받아서, 밑이 2 인 X 의 로그를 계산한 다음, 결과를 출력합니다. 다른 말로 X 가 2 를 몇 번 제곱해야 나오는가 입니다. 로그 계산은 채널별로 일어납니다. 두 값 중 하나가 single float 값이 아닌 다음에야 두 입력 모두 값의 수가 같아야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#logarithm2
[/VAR]
[/EXCERPT:UMaterialExpressionLogarithm2]

[EXCERPT:UMaterialExpressionSine]
Sine(사인) 표현식은 라디안 입력값의 사인 곡선을 출력합니다. 가장 흔하게는 Time 표현식의 입력에 연결하여 지속적으로 진동하는 파형을 출력할 때 쓰입니다. 출력값은 -1 에서 1 까지 순환합니다. Cosine 표현식과의 차이점은, 파형이 절반만큼 오프셋되어 있다는 점입니다. 그 파형을 시각적으로 나타내 보자면 아래와 같습니다:

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#sine
[/VAR]
[/EXCERPT:UMaterialExpressionSine]

[EXCERPT:UMaterialExpressionSquareRoot]
SquareRoot(제곱근) 표현식은 입력값의 제곱근을 출력합니다. SquareRoot 는 단일 실수 입력값에 대한 연산만 가능합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#squareroot
[/VAR]
[/EXCERPT:UMaterialExpressionSquareRoot]

[EXCERPT:UMaterialExpressionSubtract]
Subtract(빼기) 표현식은 두 입력을 받아 첫째에서 둘째를 뺀 차를 출력합니다. 빼기 연산은 채널별로 이루어 집니다. 즉 첫째의 R 채널값에서 둘째의 R 채널값을, 첫째의 G 채널값에서 둘째의 G 채널값을 등등의 식으로 뺍니다. 

둘째 입력이 단일 상수값이 아닌 다음에야 두 입력의 채널 수는 같아야 합니다. 상수는 채널 갯수와 무관하게 벡터에서 뺄 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#subtract
[/VAR]
[/EXCERPT:UMaterialExpressionSubtract]

[EXCERPT:UMaterialExpressionCollectionParameter]
Collection Parameter(컬렉션 파라미터)는 Parameter Collection(파라미터 컬렉션) 에셋을 참조하는 데 사용되는 표현식입니다. 이들은 머티리얼, 블루프린트 등 여러가지 다양한 에셋에서 쉽게 재사용할 수 있는 파라미터 그룹입니다. 파라미터 컬렉션 관련 상세 정보는 파라미터 컬렉션 문서. 를 참고해 주시기 바랍니다.

하나의 머티리얼은 최대 두 개의 머티리얼 파라미터 컬렉션 레퍼런스가 가능합니다. 하나는 보통 게임 측면의 값에, 다른 하나는 레벨 전용 파라미터에 사용할 수 있습니다. 하나의 컬렉션은 최대 각각 1024 개 씩의 스칼라 & 벡터 파라미터를 가질 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#collectionparameters
[/VAR]
[/EXCERPT:UMaterialExpressionCollectionParameter]

[EXCERPT:UMaterialExpressionDynamicParameter]
Dynamic Parameter(다이내믹 파라미터)는 파티클 이미터가 머티리얼에 네 개의 값을 전해 어떤 식으로든 사용할 수 있도록 해 주는 통로입니다. 이 값의 설정은 캐스케이드에서 이미터에 놓인 ParameterDynamic 모듈로 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#dynamicparameter
[/VAR]
[/EXCERPT:UMaterialExpressionDynamicParameter]

[EXCERPT:UMaterialExpressionScalarParameter]
Scalar Parameter(스칼라 파라미터)는 머티리얼의 인스턴스나 코드에서 바로 접근하여 변경할 수 있는 단일 실수값(Constant) 을 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#scalarparameter
[/VAR]
[/EXCERPT:UMaterialExpressionScalarParameter]

[EXCERPT:UMaterialExpressionStaticBoolParameter]
StaticBoolParameter 는 StaticSwitchParameter 처럼 작동하나, 부울 파라미터를 만들기만 하고 스위치를 구현하지는 않는다는 점이 다릅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticboolparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticBoolParameter]

[EXCERPT:UMaterialExpressionStaticSwitchParameter]
StaticSwitchParameter 는 입력을 둘 받아서 파라미터 값이 True 면 첫째를 출력하고, False 면 둘째를 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticswitchparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticSwitchParameter]

[EXCERPT:UMaterialExpressionVectorParameter]
VectorParameter 표현식은 Constant4Vector 와 같지만, 머티리얼의 인스턴스 안에서나 코드를 통해 변경할 수 있는 파라미터라는 점이 다릅니다. VectorParameter 의 장점 중 하나는 색 선택 툴을 사용해서 값을 설정할 수 있다는 점입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#vectorparameter
[/VAR]
[/EXCERPT:UMaterialExpressionVectorParameter]

[EXCERPT:UMaterialExpressionTextureObjectParameter]
TextureObjectParameter 표현식은 텍스처 파라미터를 정의하고 텍스처 오브젝트를 출력하는데, 이 오브젝트는 텍스처 입력과 함께 함수를 호출하는 머티리얼에서 사용됩니다. 이 노드가 실제로 텍스처 샘플을 뽑는 것은 아니라, TextureSample 노드와 함께 사용해야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#textureobjectparameter
[/VAR]
[/EXCERPT:UMaterialExpressionTextureObjectParameter]

[EXCERPT:UMaterialExpressionTextureSampleParameter2D]
TextureSampleParameter2D 표현식은 TextureSample 과 같지만 머티리얼의 인스턴스에서나 코드를 통해 변경할 수 있는 파라미터라는 점이 다릅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparameter2d
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameter2D]

[EXCERPT:UMaterialExpressionTextureSampleParameterCube]
TextureSampleParameterCube 표현식은 TextureSample 과 같지만, 큐브맵만 받는다는 점과 머티리얼의 인스턴스 안이나 코드를 통해 변경할 수 있는 파라미터라는 점이 다릅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparametercube
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameterCube]

[EXCERPT:UMaterialExpressionTextureSampleParameterSubUV]
TextureSampleParameterSubUV(파티클 샘플 파라미터 Sub UV) 표현식은 ParticleSubUV 와 동일하지만, 머티리얼의 인스턴스나 코드를 통해 변경할 수 있는 파라미터라는 점이 다릅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparametersubuv
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameterSubUV]

[EXCERPT:UMaterialExpressionParticleMacroUV]
ParticleMacroUV(파티클 매크로 UV)는 전체 파티클 시스템에 2D 텍스처를 연속적인 방식으로 매핑하는 데, 즉 전체 파티클에 걸쳐 이음새 없는 텍스처를 만드는 데 사용할 수 있는 UV 텍스처 좌표를 출력하는 표현식입니다. 

UV는 캐스케이드에서 MacroUV 범주 아래 ParticleSystem에 지정된 MacroUVPosition을 중심으로 하며, MacroUVRadius는 UV 가 타일링되는 월드 스페이스 반경을 결정합니다. 

ParticleMacroUV 노드는 파티클에 연속 노이즈를 매핑시켜, 보통의 텍스처 좌표를 가지고 텍스처를 각 파티클에 매핑시킬 때 생기는 패턴을 깨뜨리기에 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#particlemacrouv
[/VAR]
[/EXCERPT:UMaterialExpressionParticleMacroUV]

[EXCERPT:UMaterialExpressionParticleSubUV]
ParticleSubUV(파티클 Sub UV) 표현식은 텍스처의 서브 이미지를 파티클로 렌더링하는 데 사용됩니다. ParticleSubUV 는 플립북과 유사하나, 그 텍스처 애니메이션을 캐스케이드에서 조작할 수 있다는 점이 다릅니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#particlesubuv
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSubUV]

[EXCERPT:UMaterialExpressionSphericalParticleOpacity]
SphericalParticleOpacity(구체형 파티클 불투명도)는 프로시저럴 오파시티 맵을 만들어 스프라이트 파티클이 구체 모양으로 보이도록 하는 표현식입니다. 텍스처 맵을 임포트하지 않고도 훨씬 간단하게 비슷한 효과를 낼 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#sphericalparticleopacity
[/VAR]
[/EXCERPT:UMaterialExpressionSphericalParticleOpacity]

[EXCERPT:UMaterialExpressionSceneColor]
SceneColor 는 기존 씬 컬러를 출력하는 표현식입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#scenecolor
[/VAR]
[/EXCERPT:UMaterialExpressionSceneColor]

[EXCERPT:UMaterialExpressionTextureSample]
TextureSample 표현식은 텍스처에서 색 값을 출력합니다. 이 텍스처는(노멀 맵 포함) 정규 Texture2D, 큐브맵, 무비 텍스처가 될 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#texturesample
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSample]

[EXCERPT:UMaterialExpressionTextureProperty]
TextureProperty 표현식은 텍스처의 크기나 텍셀 크기같은 텍스처 프로퍼티를 노출시킵니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#textureproperty
[/VAR]
[/EXCERPT:UMaterialExpressionTextureProperty]

[EXCERPT:UMaterialExpressionBlackBody]
Black Body(흑체)는 머티리얼 안에서 black body radiation(흑체복사) 효과를 흉내내는 표현식입니다. 사용자가 켈빈 단위로 온도를 입력하면 그 색과 강도 결과를 베이스 컬러와 이미시브 값을 구동하는 데 사용하여 물리적으로 정확한 결과를 얻을 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#blackbody
[/VAR]
[/EXCERPT:UMaterialExpressionBlackBody]

[EXCERPT:UMaterialExpressionBumpOffset]
BumpOffset 은 흔히 'parallax mapping'(시차 매핑)이라 알려진 것에 대한 언리얼 엔진 용어입니다. BumpOffset 표현식으로 별도의 지오메트리 추가 없이 머티리얼에 입체감을 줄 수 있습니다. 

BumpOffset 머티리얼은 회색조 하이트맵(heightmap, 높이맵)을 사용하여 깊이 정보를 나타냅니다. 하이트맵에서 밝은 부분은 더욱 '튀어나와' 보이며, 이러한 부분은 표면을 따라 움직이는 카메라로 보면 시차를 많이 움직인 것으로 보이게 됩니다. 하이트맵의 어두운 부분은 '멀어 보이는' 부분으로, 조금 움직이는 부분입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#bumpoffset
[/VAR]
[/EXCERPT:UMaterialExpressionBumpOffset]

[EXCERPT:UMaterialExpressionConstantBiasScale]
ConstantBiasScale 는 입력값을 받은 다음 편향치(Bias)를 더해 스케일 인수로 곱한 다음 결과를 출력하는 표현식입니다. 즉 예를 들어 [-1,1] 범위의 입력 데이터를 [0,1] 로 변환하려면, 편향치 1.0, 스케일 0.5 를 사용하면 됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#constantbiasscale
[/VAR]
[/EXCERPT:UMaterialExpressionConstantBiasScale]

[EXCERPT:UMaterialExpressionDDX]
DDX 표현식은 픽셀 셰이더 계산에 사용되는 GPU 하드웨어 기능, DDX 파생 계산을 노출시킵니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#ddx
[/VAR]
[/EXCERPT:UMaterialExpressionDDX]

[EXCERPT:UMaterialExpressionDDY]
DDY 표현식은 픽셀 셰이더 계산에 사용되는 GPU 하드웨어 기능, DDY 파생 계산을 노출시킵니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#ddy
[/VAR]
[/EXCERPT:UMaterialExpressionDDY]

[EXCERPT:UMaterialExpressionDepthOfFieldFunction]
Depth of Field Function(뎁스오브필드 함수)는 머티리얼에 뎁스 오브 필드로 인한 블러링이 적용될 때 아티스트가 머티리얼에 적용되는 효과를 조절할 수 있도록 하기 위한 표현식입니다. 0-1 사이의 값을 출력하며, 0 은 "초점잡힌" 상태, 1 은 "완전히 흐려진" 상태를 나타냅니다. 

이는 텍스처의 선명한 버전과 흐린 버전을 보간하기에 좋습니다. 뎁스 입력은 씬의 뎁스 오브 필드 계산의 기존 결과를 다른 계산으로 덮어쓰는 것이 가능합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#depthoffieldfunction
[/VAR]
[/EXCERPT:UMaterialExpressionDepthOfFieldFunction]

[EXCERPT:UMaterialExpressionDistance]
Distance 표현식은 두 점/색/위치/벡터 사이의 유클리드 거리를 계산하여 결과값을 출력합니다. 1, 2, 3, 4 성분 벡터 연산이 가능은 합니다만, 채널 수는 서로 같아야 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#distance
[/VAR]
[/EXCERPT:UMaterialExpressionDistance]

[EXCERPT:UMaterialExpressionFresnel]
Fresnel(프레넬)은 표면 노멀과 카메라로의 방향에 대한 도트 곱에 따라 감쇠를 계산하는 표현식입니다. 표면 모러이 카메라쪽을 직접 가리킬 때, 출력값은 0 입니다. 

표면 노멀이 카메라와 수직일 때, 출력값은 1 입니다. 중간에 음수 색이 없도록 결과는 [0,1] 범위로 제한됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#fresnel
[/VAR]
[/EXCERPT:UMaterialExpressionFresnel]

[EXCERPT:UMaterialExpressionLightmassReplace]
LightmassReplace 는 보통 렌더링 용도로 머티리얼을 컴파일할 때는 Realtime 입력을 틍과시키고, 글로벌 일루미네이션 용도로 머티리얼을 라이트매스로 익스포트할 때는 Lightmass 입력을 통과시키는 단순한 표현식입니다. 

WorldPosition 처럼 익스포트된 버전으로는 제대로 처리되지 않는 머티리얼 표현식에 대한 우회책으로 쓰기 좋습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#lightmassreplace
[/VAR]
[/EXCERPT:UMaterialExpressionLightmassReplace]

[EXCERPT:UMaterialExpressionNoise]
Noise 표현식은 제어할 수 있는 방식으로 프로시저럴 노이즈 필드를 생성합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#noise
[/VAR]
[/EXCERPT:UMaterialExpressionNoise]

[EXCERPT:UMaterialExpressionQualitySwitch]
QualitySwitch(퀄리티 스위치) 표현식은 저사양 디바이스에서 낮은 퀄리티를 사용할 때처럼, 엔진의 퀄리티 레벨 전환에 따라 다양한 표현식 망을 사용할 수 있도록 해 줍니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#qualityswitch
[/VAR]
[/EXCERPT:UMaterialExpressionQualitySwitch]

[EXCERPT:UMaterialExpressionRotateAboutAxis]
RotateAboutAxis(축 중심 회전) 표현식은 주어진 회전 축, 축 상의 점, 회전시킬 각에 따라 3채널 벡터 입력을 회전시키는 표현식입니다. 단순 시어즈보다 품질이 뛰어난 WorldPositionOffset 사용 애니메이션에 좋습니다.

주: RotateAboutAxis 노드를 추가하면 Absolute World Position 노드가 자동 생성됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#rotateaboutaxis
[/VAR]
[/EXCERPT:UMaterialExpressionRotateAboutAxis]

[EXCERPT:UMaterialExpressionAntialiasedTextureMask]
AntialiasedTextureMask 로는 부드러운 안티 에일리어싱이 적용된 트랜지션 마스크를 사용하는 머티리얼을 만들 수 있습니다. 이 마스크는 두 개의 복잡한 머티리얼 프로퍼티를 블렌딩하거나, SoftMasked 와 잘 작동하는 알파 블렌딩된 머티리얼을 페이드 아웃 시키는 데 사용할 수 있습니다. 

그저 마스크가 지정된 텍스처를(R G B A 중) 한 채널에 지정하고, 표현식에 사용된 채널을 설정한 다음 비교값을 지정합니다. 

채널에 0=검정 에서 1=하양 의 회색조 값이 저장되어 있다 가정한다면, 비교 함수를 통해 마스크 결과 0 이 될지 1 이 될지를 결정합니다. 이 표현식은 파라미터로, 자손 Material Instance 에서 Texture 프로퍼티를 덮어쓸 수 있습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#antialiasedtexturemask
[/VAR]
[/EXCERPT:UMaterialExpressionAntialiasedTextureMask]

[EXCERPT:UMaterialExpressionDeriveNormalZ]
DeriveNormalZ 표현식은 주어진 X 와 Y 성분으로 탄젠트 스페이스 노멀의 Z 성분을 구한 다음 3 채널 탄젠트 스페이스 노멀로 출력시킵니다. Z 값의 계산식은 다음과 같습니다: Z = sqrt(1 - (x x + y y));

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#derivenormalz
[/VAR]
[/EXCERPT:UMaterialExpressionDeriveNormalZ]

[EXCERPT:UMaterialExpressionTransform]
Transform(트랜스폼, 변환) 표현식은 한 좌표계의 3채널 벡터값을 다른 좌표계로 변환합니다.

기본적으로 머티리얼의 모든 셰이더 계산은 탄젠트 스페이스에서 이루어집니다. 벡터 상수, 카메라 벡터, 라이트 벡터 등은 모두 머티리얼에서 사용되기 전 탄젠트 스페이스로 변환됩니다. 

Transform 표현식은 이러한 벡터를 탄젠트 스페이스에서 월드, 로컬, 뷰 스페이스 좌표계로 변환해 줍니다. 추가로 월드 스페이스와 로컬 스페이스의 경우, 서로 다른 좌표계로 변환해 주기도 합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#transform
[/VAR]
[/EXCERPT:UMaterialExpressionTransform]

[EXCERPT:UMaterialExpressionTransformPosition]
TransformPosition 표현식은 스크린 스페이스의 어느 위치도 TransformType 변수에 지정된 대상 스페이스로 변환합니다. 현재는 월드 스페이스로의 변환만 지원됩니다. 

이 표현식은 머티리얼의 월드 스페이스 좌표를 구하는 데 사용할 수 있습니다. 월드 위치를 시각화시켜 보려면, 바로 이미시브에 꽂아주면 됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#transformposition
[/VAR]
[/EXCERPT:UMaterialExpressionTransformPosition]

[EXCERPT:UMaterialExpressionCameraVectorWS]
CameraVector 는 표면에 대한 카메라의 방향, 다른 말로 픽셀에서 카메라로의 방향을 나타내는 3채널 벡터값을 출력하는 표현식입니다.

사용 예: CameraVector 는 ComponentMask 에 연결한 뒤 CameraVector 의 X, Y 채널을 텍스처 좌표로 사용하는 식으로 인바이런먼트 맵을 속이는 데 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#cameravectorws
[/VAR]
[/EXCERPT:UMaterialExpressionCameraVectorWS]

[EXCERPT:UMaterialExpressionLightVector]
서 라이팅 계산이 디퍼드 방식으로 바뀌어서 이 표현식은 폐기상태가 되었습니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#lightvector
[/VAR]
[/EXCERPT:UMaterialExpressionLightVector]

[EXCERPT:UMaterialExpressionObjectBounds]
Object Bounds(오브젝트 바운드)는 오브젝트 각 축의 크기를 출력하는 표현식입니다. 컬러로 사용되는 경우 X Y Z 축은 각각 R G B 에 해당합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#objectbounds
[/VAR]
[/EXCERPT:UMaterialExpressionObjectBounds]

[EXCERPT:UMaterialExpressionReflectionVectorWS]
ReflectionVectorWS 는 CameraVectorWS 와 내면은 비슷하나, 표면 노멀에 반사된 카메라 방향을 나타내는 3채널 벡터값을 출력한다는 차이점이 있습니다.

사용 예: ReflectionVector 는 인바이런먼트 맵에 흔히 사용되며, 리플렉션 벡터의 x/y 컴포넌트는 큐브맵 텍스처로 들어가는 UV 로 사용됩니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#reflectionvectorws
[/VAR]
[/EXCERPT:UMaterialExpressionReflectionVectorWS]

[EXCERPT:UMaterialExpressionStaticComponentMaskParameter]
StaticComponentMaskParameter 표현식은 보통의 컴포넌트 마스크와 똑같은 방식으로 작동하나, 차이점은 인스턴스에서 마스크 값을 설정할 수 있다는 것입니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticcomponentmaskparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticComponentMaskParameter]

[EXCERPT:UMaterialExpressionSpeedTree]
SpeedTree(스피드 트리) 노드는 SpeedTree 바람에 접근해 구해와 부드러운 LOD 전환이 가능합니다. 디테일 패널을 통해 Geometry Type, Wind Type, LOD Type, Bilboard Threshold 설정이 가능합니다.

[VAR:ToolTipFullLink]
Engine/Content/SpeedTree/ImportingModelsIntoUE4
[/VAR]
[/EXCERPT:UMaterialExpressionSpeedTree]

[EXCERPT:UMaterialExpressionSceneTexture]
SceneTexture 머티리얼 표현식을 사용하여 표현식의 프로퍼티에서 참조하고자 하는 텍스처를 선택할 수 있습니다. 그런 다음 입력과 출력 노드를 사용하여 현재 픽셀과 인접 픽셀 사이의 깊이 차를 계산할 수 있습니다(예: In = 0,1 으로 아래 픽셀까지의 경과치가 반환됩니다).

[VAR:ToolTipFullLink]
Engine/Rendering/PostProcessEffects/PostProcessMaterials
[/VAR]
[/EXCERPT:UMaterialExpressionSceneTexture]

[EXCERPT:UMaterialExpressionFeatureLevelSwitch]
Feature Level Switch(피처 레벨 스위치) 노드는 저사양 디바이스용 단순화된 머티리얼을 만들어 줍니다.

사용 예: 텍스처가 10 개 겹치면서 복잡한 연산을 하는 머티리얼도, 모바일 용으로는 하나의 스태틱 텍스처로 압축시킬 수 있습니다(피처 레벨 ES2).

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#featurelevelswitch
[/VAR]
[/EXCERPT:UMaterialExpressionFeatureLevelSwitch]

[EXCERPT:UMaterialExpressionGIReplace]
GIReplace(글로벌 일루미네이션 대체)는 머티리얼이 GI 용으로 사용될 때 아티스트가 다른, 보통 더욱 단순한 표현식 체인을 지정할 수 있도록 해 줍니다.

사용 예: 라이트매스 스태틱 GI 및 LPV 다이내믹 GI 가 사용합니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#gireplace
[/VAR]
[/EXCERPT:UMaterialExpressionGIReplace]

[EXCERPT:UMaterialExpressionSpriteTextureSampler]
기존 머티리얼 중 하나를 복제하거나, 콘텐츠 브라우저에서 새 머티리얼을 만드는 것으로 커스텀 스프라이트 머티리얼을 생성할 수 있습니다. 스프라이트가 렌더링될 때, 스프라이트 에셋에 정의된 텍스처가 파이프를 통해 머티리얼 내 "SpriteTexture" 라는 이름의 텍스처 파라미터로 들어갑니다. SpriteTextureSampler 노드를 배치하면 이 작업이 자동으로 이루어집니다.

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#spritetexturesampler
[/VAR]
[/EXCERPT:UMaterialExpressionSpriteTextureSampler]

[EXCERPT:UMaterialExpressionMax]
Max(최대) 표현식은 입력을 둘 받은 다음 그 중 최대값을 취합니다.

이 노드는 Photoshop Lighten 과 비슷합니다.
[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#max
[/VAR]
[/EXCERPT:UMaterialExpressionMax]

[EXCERPT:UMaterialExpressionMin]
Min(최소) 표현식은 입력을 둘 받은 다음 그 중 최소값을 취합니다.

이 노드는 Photoshop 의 Darken 과 비슷합니다. 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#min
[/VAR]
[/EXCERPT:UMaterialExpressionMin]
