<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WindowsDevicePortalWrapper</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal">
            <content>
            .net 4.x implementation of device certificate handling methods.
            </content>
            <content>
            .net 4.x implementation of App Deployment methods.
            </content>
            <content>
            .net 4.x implementation of HTTP DeleteAsync
            </content>
            <content>
            .net 4.x implementation of HTTP GetAsync
            </content>
            <content>
            .net 4.x implementation of HTTP PostAsync
            </content>
            <content>
            .net 4.x implementation of HTTP PutAsync
            </content>
            <content>
            Wrappers for app crash dump collection methods.
            </content>
            <content>
            Wrappers for App Deployment methods.
            </content>
            <content>
            Wrappers for App File explorer methods
            </content>
            <content>
            Wrappers for device management methods.
            </content>
            <content>
            Wrappers for DNS methods
            </content>
            <content>
            Wrappers for crash dump collection methods.
            </content>
            <content>
            Wrappers for ETW methods
            </content>
            <content>
            Wrappers for Networking methods.
            </content>
            <content>
            Wrappers for OS Information.
            </content>
            <content>
            Wrappers for Power methods.
            </content>
            <content>
            Wrappers for Remote Control methods.
            </content>
            <content>
            Wrappers for Performance methods
            </content>
            <content>
            Wrappers for Task Manager methods
            </content>
            <content>
            Wrappers for WiFi management methods.
            </content>
            <content>
            Wrapper for collecting Windows Error Reports from the device. 
            </content>
            <content>
            Wrappers for DNS methods
            </content>
            <summary>
            This is the main DevicePortal object. It contains methods for making HTTP REST calls against
            all of the WDP endpoints covered by the wrapper project. Different endpoints have their
            implementation separated out into individual files.
            </summary>
            <content>
            Wrappers for Holographic OS methods
            </content>
            <content>
            Wrappers for Holographic Perception methods
            </content>
            <content>
            Wrappers for Holographic Thermal methods
            </content>
            <content>
            Wrappers for Mixed reality capture methods
            </content>
            <content>
            Wrappers for Perception Simulation Playback methods
            </content>
            <content>
            Wrappers for Perception Simulation Recording methods
            </content>
            <content>
            Methods for working with Http requests.
            </content>
            <content>
            Methods for working with Http responses.
            </content>
            <content>
            Methods for working with Http headers.
            </content>
            <content>
            HTTP DELETE Wrapper
            </content>
            <content>
            HTTP GET Wrapper
            </content>
            <content>
            HTTP POST Wrapper
            </content>
            <content>
            HTTP PUT Wrapper
            </content>
            <content>
            Wrappers for Bluetooth Connectivity.
            </content>
            <summary>
            TPM Limpet APIs for IoT.
            </summary>
            <content>
            Wrappers for Application Management.
            </content>
            <content>
            Wrappers for Audio Devices.
            </content>
            <content>
            Wrappers for IoT Process Management.
            </content>
            <content>
            Wrappers for Internet Connection Sharing(ICS) Settings.
            </content>
            <summary>
            Wrappers for IoT Onboarding methods.
            </summary>
            <summary>
            Wrappers for remote settings for IoT.
            </summary>
            <content>
            Wrappers for Device Information.
            </content>
            <summary>
            Windows update APIs for IoT.
            </summary>
            <content>
            Xbox Live Sandbox Wrappers
            </content>
            <content>
            SMBShare Wrappers
            </content>
            <content>
            UserManagement Wrappers
            </content>
            <content>
            Register Application Wrappers
            </content>
            <content>
            Fiddler setup Wrappers
            </content>
            <content>
            MediaCapture Wrappers
            </content>
            <content>
            XboxSettings Wrappers
            </content>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.manualCertificate">
            <summary>
            A manually provided certificate for trust validation.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UnvalidatedCert">
            <summary>
            Gets or sets handler for untrusted certificate handling
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetRootDeviceCertificateAsync">
            <summary>
            Gets the root certificate from the device.
            </summary>
            <returns>The device certificate.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetManualCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Sets the manual certificate.
            </summary>
            <param name="cert">Manual certificate</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServerCertificateValidation(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validate the server certificate
            </summary>
            <param name="sender">The sender object</param>
            <param name="certificate">The server's certificate</param>
            <param name="chain">The cert chain</param>
            <param name="sslPolicyErrors">Policy Errors</param>
            <returns>whether the cert passes validation</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetInstallStatusAsync">
            <summary>
            Gets the status of a pending or most recent installation, if any. 
            </summary>
            <returns>The status</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAsync(System.Uri)">
            <summary>
            Submits the http delete request to the specified uri.
            </summary>
            <param name="uri">The uri to which the delete request will be issued.</param>
            <returns>Task tracking HTTP completion</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAsync(System.Uri)">
            <summary>
            Submits the http get request to the specified uri.
            </summary>
            <param name="uri">The uri to which the get request will be issued.</param>
            <returns>Response data as a stream.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync(System.Uri,System.IO.Stream,System.String)">
            <summary>
            Submits the http post request to the specified uri.
            </summary>
            <param name="uri">The uri to which the post request will be issued.</param>
            <param name="requestStream">Optional stream containing data for the request body.</param>
            <param name="requestStreamContentType">The type of that request body data.</param>
            <returns>Task tracking the completion of the POST request</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Submits the http post request to the specified uri.
            </summary>
            <param name="uri">The uri to which the post request will be issued.</param>
            <param name="requestContent">Optional content containing data for the request body.</param>
            <returns>Task tracking the completion of the POST request</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Submits the http put request to the specified uri.
            </summary>
            <param name="uri">The uri to which the put request will be issued.</param>
            <param name="body">The HTTP content comprising the body of the request.</param>
            <returns>Task tracking the PUT completion.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableCrashDumpsApi">
            <summary>
            API to retrieve list of the available crash dumps (for sideloaded applications).
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CrashDumpFileApi">
            <summary>
            API to download or delete a crash dump file (for a sideloaded application).
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CrashDumpSettingsApi">
            <summary>
            API to control the crash dump settings for a sideloaded application.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpListAsync">
            <summary>
            Get a list of app crash dumps on the device. 
            </summary>
            <returns>List of AppCrashDump objects, which represent crashdumps on the device. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump)">
            <summary>
            Download a sideloaded app's crash dump.  
            </summary>
            <param name="crashdump"> The AppCrashDump to download</param>
            <returns>Stream of the crash dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAppCrashDumpAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump)">
            <summary>
            Delete an app crash dump stored on the device. 
            </summary>
            <param name="crashdump">The crashdump to be deleted</param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage)">
            <summary>
            Get the crash settings for a sideloaded app. 
            </summary>
            <param name="app">The app to get settings for</param>
            <returns>The crash settings for the app</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpSettingsAsync(System.String)">
            <summary>
            Get the crash settings for a sideloaded app. 
            </summary>
            <param name="packageFullname">The app to get settings for</param>
            <returns>The crash settings for the app</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetAppCrashDumpSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage,System.Boolean)">
            <summary>
            Set the crash settings for a sideloaded app. 
            </summary>
            <param name="app">The app to set crash settings for.</param>
            <param name="enable">Whether to enable or disable crash collection for the app. </param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetAppCrashDumpSettingsAsync(System.String,System.Boolean)">
            <summary>
            Set the crash settings for a sideloaded app. 
            </summary>
            <param name="packageFullName">The app to set crash settings for.</param>
            <param name="enable">Whether to enable or disable crash collection for the app. </param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpSettings">
            <summary>
            Per-app crash dump settings.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpSettings.CrashDumpEnabled">
            <summary>
            Gets a value indicating whether crash dumps are enabled for the app
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump">
            <summary>
            Represents a crash dump collected from a sideloaded app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileDateAsString">
            <summary>
            Gets the timestamp of the crash as a string.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileDate">
            <summary>
            Gets the timestamp of the crash.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.Filename">
            <summary>
            Gets the filename of the crash file. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileSizeInBytes">
            <summary>
            Gets the size of the crash dump, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.PackageFullName">
            <summary>
            Gets the package full name of the app that crashed. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpList">
            <summary>
            A list of crash dumps.  Internal usage only. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpList.CrashDumps">
            <summary>
            Gets a list of crash dumps on the device. 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstalledPackagesApi">
            <summary>
            API to retrieve list of installed packages.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallStateApi">
            <summary>
            Install state API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageManagerApi">
            <summary>
            API for package management.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppInstallStatus">
            <summary>
            App Install Status handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetInstalledAppPackagesAsync">
            <summary>
            Gets the collection of applications installed on the device.
            </summary>
            <returns>AppPackages object containing the list of installed application packages.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallApplicationAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int16,System.Int16,System.Boolean)">
            <summary>
            Installs an application
            </summary>
            <param name="appName">Friendly name (ex: Hello World) of the application. If this parameter is not provided, the name of the package is assumed to be the app name.</param>
            <param name="packageFileName">Full name of the application package file.</param>
            <param name="dependencyFileNames">List containing the full names of any required dependency files.</param>
            <param name="certificateFileName">Full name of the optional certificate file.</param>
            <param name="stateCheckIntervalMs">How frequently we should check the installation state.</param>
            <param name="timeoutInMinutes">Operation timeout.</param>
            <param name="uninstallPreviousVersion">Indicate whether or not the previous app version should be uninstalled prior to installing.</param>
            <remarks>InstallApplication sends ApplicationInstallStatus events to indicate the current progress in the installation process.
            Some applications may opt to not register for the AppInstallStatus event and await on InstallApplication.</remarks>
            <returns>Task for tracking completion of install initialization.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UninstallApplicationAsync(System.String)">
            <summary>
            Uninstalls the specified application.
            </summary>
            <param name="packageName">The name of the application package to uninstall.</param>
            <returns>Task tracking the uninstall operation.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CreateAppInstallEndpointAndBoundaryString(System.String,System.Uri@,System.String@)">
            <summary>
            Builds the application installation Uri and generates a unique boundary string for the multipart form data.
            </summary>
            <param name="packageName">The name of the application package.</param>
            <param name="uri">The endpoint for the install request.</param>
            <param name="boundaryString">Unique string used to separate the parts of the multipart form data.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SendAppInstallStatus(Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus,Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase,System.String)">
            <summary>
            Sends application install status.
            </summary>
            <param name="status">Status of the installation.</param>
            <param name="phase">Current installation phase (ex: Uninstalling previous version)</param>
            <param name="message">Optional error message describing the install status.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages">
            <summary>
            Object representing a list of Application Packages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages.Packages">
            <summary>
            Gets a list of the packages
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages.ToString">
            <summary>
            Presents a user readable representation of a list of AppPackages
            </summary>
            <returns>User readable list of AppPackages.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState">
            <summary>
            Object representing the install state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.Code">
            <summary>
            Gets install state code
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.CodeText">
            <summary>
            Gets message text
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.Reason">
            <summary>
            Gets reason for state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.WasSuccessful">
            <summary>
            Gets a value indicating whether this was successful
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo">
            <summary>
            object representing the package information
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Name">
            <summary>
            Gets package name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.FamilyName">
            <summary>
            Gets package family name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.FullName">
            <summary>
            Gets package full name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.AppId">
            <summary>
            Gets package relative Id
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Publisher">
            <summary>
            Gets package publisher
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Version">
            <summary>
            Gets package version
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.PackageOrigin">
            <summary>
            Gets package origin, a measure of how the app was installed. 
            PackageOrigin_Unknown            = 0,
            PackageOrigin_Unsigned           = 1,
            PackageOrigin_Inbox              = 2,
            PackageOrigin_Store              = 3,
            PackageOrigin_DeveloperUnsigned  = 4,
            PackageOrigin_DeveloperSigned    = 5,
            PackageOrigin_LineOfBusiness     = 6
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.IsSideloaded">
            <summary>
            Helper method to determine if the app was sideloaded and therefore can be used with e.g. GetFolderContentsAsync
            </summary>
            <returns> True if the package is sideloaded. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.ToString">
            <summary>
            Get a string representation of the package
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion">
            <summary>
            Object representing a package version
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Build">
            <summary>
             Gets version build
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Major">
            <summary>
            Gets package Major number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Minor">
            <summary>
            Gets package minor number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Revision">
            <summary>
            Gets package revision
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Version">
            <summary>
            Gets package version
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.ToString">
            <summary>
            Get a string representation of a version
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFileApi">
            <summary>
            API to upload, download or delete a file in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RenameFileApi">
            <summary>
            API to rename a file in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFilesApi">
            <summary>
            API to retrieve the list of files in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFoldersApi">
            <summary>
            API to retrieve the list of accessible top-level folders.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetKnownFoldersAsync">
            <summary>
            Gets a list of Known Folders on the device. 
            </summary>
            <returns>List of known folders available on this device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFolderContentsAsync(System.String,System.String,System.String)">
            <summary>
            Gets a list of files in a Known Folder (e.g. LocalAppData).
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Contents of the requested folder.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Gets a file from LocalAppData or another Known Folder on the device. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are downloading.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Stream to the downloaded file.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UploadFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Uploads a file to a Known Folder (e.g. LocalAppData)
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filepath">The path to the file we are uploading.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the upload request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a file from a Known Folder. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are deleting.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the delete request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RenameFileAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Renames a file in a Known Folder. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are renaming.</param>
            <param name="newFilename">The new name for this file.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the rename request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BuildCommonFilePayload(System.String,System.String,System.String)">
            <summary>
            Do some common parsing and validation of file explorer parameters.
            </summary>
            <param name="knownFolderId">The known folder id.</param>
            <param name="subPath">The optional subpath for the folder.</param>
            <param name="packageFullName">The packagefullname if using LocalAppData.</param>
            <returns>Dictionary of param name to value.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders">
            <summary>
            Known Folders object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders.Folders">
            <summary>
            Gets the list of known folders.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders.ToString">
            <summary>
            Overridden ToString method providing a user readable
            list of known folders.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents">
            <summary>
            Folder contents object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents.Contents">
            <summary>
            Gets the list of folders and files in this folder.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents.ToString">
            <summary>
            Overridden ToString method providing a user readable
            display of a folder's contents. Tries to match the formatting
            of regular DIR commands.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation">
            <summary>
            Details about a folder or file.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.CurrentDir">
            <summary>
            Gets the current directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.DateCreated">
            <summary>
            Gets the current directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Id">
            <summary>
            Gets the Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Name">
            <summary>
            Gets the Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.SubPath">
            <summary>
            Gets the SubPath (equivalent to CurrentDir for files).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Type">
            <summary>
            Gets the Type.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.SizeInBytes">
            <summary>
            Gets the size of the file (0 for folders).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.IsFolder">
            <summary>
            Gets a value indicating whether the current item is a folder by checking for FILE_ATTRIBUTE_DIRECTORY
            See https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.ToString">
            <summary>
            Overridden ToString method providing a user readable
            display of a file or folder. Tries to match the formatting
            of regular DIR commands.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstalledDevicesApi">
            <summary>
            API to retrieve list of installed devices.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceListAsync">
            <summary>
            Get a listing of installed devices
            </summary>
            <returns>List of installed devices</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceList">
            <summary>
            Object representing a device entry
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceList.Devices">
            <summary>
            Gets the Device Class
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device">
            <summary>
            Object representing a device entry
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Class">
            <summary>
            Gets the Device Class
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Description">
            <summary>
            Gets the Device Description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.FriendlyName">
            <summary>
            Gets the friendly (human-readable) name for the device.  Usually more descriptive than Description. Does not apply to all Devices.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ID">
            <summary>
            Gets the Device ID
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Manufacturer">
            <summary>
            Gets the Device Manufacturer
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ParentID">
            <summary>
            Gets the Device ParentID, used for pairing 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ProblemCode">
            <summary>
            Gets the Device Problem Code
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.StatusCode">
            <summary>
            Gets the Device Status Code
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TagApi">
            <summary>
            API to add or delete a tag to the DNS-SD advertisement.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TagsApi">
            <summary>
            API to retrieve or delete the currently applied tags for the device.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetServiceTagsAsync">
            <summary>
            Gets a list of DNS-SD tags being broadcast by this device. 
            </summary>
            <returns>Array of strings, each one an individual tag.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AddServiceTagAsync(System.String)">
            <summary>
            Adds a tag to this device's DNS-SD broadcast. 
            </summary>
            <param name="tagValue">The tag to assign to the device.</param>
            <returns>Task tracking adding the tag.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAllTagsAsync">
            <summary>
            Delete all tags from the device's DNS-SD broadcast. 
            </summary>
            <returns>Task tracking deletion of all tags.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteTagAsync(System.String)">
            <summary>
            Delete a specific tag from the device's DNS-SD broadcast. 
            </summary>
            <param name="tagValue">The tag to delete from the device broadcast.</param>
            <returns>Task tracking deletion of the tag.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceTags">
            <summary>
            Service tags object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceTags.Tags">
            <summary>
            Gets the DNS-SD service tags
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBugChecksApi">
            <summary>
            API to retrieve list of the available bugcheck minidumps.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BugcheckFileApi">
            <summary>
            API to download a bugcheck minidump file.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BugcheckSettingsApi">
            <summary>
            API to control bugcheck minidump settings.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LiveKernelDumpApi">
            <summary>
            API to retrieve a live kernel dump.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LiveProcessDumpApi">
            <summary>
            API to retrieve a live dump from a running user mode process.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpfileListAsync">
            <summary>
            Get a list of dumpfiles on the system. 
            </summary>
            <returns>List of Dumpfiles.  Use GetDumpFile to download the file. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpFileAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile)">
            <summary>
            Download a dumpfile from the system. 
            </summary>
            <param name="crashdump"> Dumpfile object to be downloaded</param>
            <returns>Stream of the dump file </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetLiveKernelDumpAsync">
            <summary>
            Takes a live kernel dump of the device.  This does not reboot the device. 
            </summary>
            <returns>Stream of the kernel dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetLiveProcessDumpAsync(System.Int32)">
            <summary>
            Take a live dump of a process on the system. 
            </summary>
            <param name="pid"> PID of the process to get a live dump of.</param>
            <returns>Stream of the process live dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpFileSettingsAsync">
            <summary>
            Get information on how and when dump files are saved on the device. 
            </summary>
            <returns>Dumpfile settings object.  This can be edited and returned to the device to alter the settings.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDumpFileSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings)">
            <summary>
            Set how and when dump files are saved on the device. 
            </summary>
            <param name="dfs">Altered DumpFileSettings object to set on the device</param>
            <returns>Task tracking completion of the request</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings">
            <summary>
            DumpFileSettings object.  Used to get and set how and when a dump is saved on the device. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes">
            <summary>
            The 3 types of dumps  that can be saved on the device (or not saved at all). 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.Disabled">
            <summary>
            Don't collect device crash dumps
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.CompleteMemoryDump">
            <summary>
            Collect all in use memory
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.KernelDump">
            <summary>
            Don't include usermode memory in the dump
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.Minidump">
            <summary>
            Limited kernel dump
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.AutoReboot">
            <summary>
            Gets or sets a value indicating whether the device should restart after a crash dump is taken.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpType">
            <summary>
            Gets or sets the type of dump to be saved when a bugcheck occurs.  
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.MaxDumpCount">
            <summary>
            Gets or sets the max number of dumps to be saved on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.Overwrite">
            <summary>
            Gets or sets a value indicating whether new dumps should overwrite older dumps. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileList">
            <summary>
            Gets a list of kernel dumps on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileList.DumpFiles">
            <summary>
            Gets a list of kernel dumps on the device. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile">
            <summary>
            Represents a dumpfile stored on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileDateAsString">
            <summary>
            Gets the timestamp of the crash as a string.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileDate">
            <summary>
            Gets the timestamp of the crash.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.Filename">
            <summary>
            Gets the filename of the crash file. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileSizeInBytes">
            <summary>
            Gets the size of the crash dump, in bytes
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RealtimeEtwSessionApi">
            <summary>
            API to create a realtime ETW session.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CustomEtwProvidersApi">
            <summary>
            API to get the list of registered custom ETW providers.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProvidersApi">
            <summary>
            API to get the list of registered ETW providers.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.realtimeEventsWebSocket">
            <summary>
            Web socket to get ETW events.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.isListeningForRealtimeEvents">
            <summary>
            Determines if the event listener has been registered
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RealtimeEventsMessageReceived">
            <summary>
            The ETW event message received handler
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetCustomEtwProvidersAsync">
            <summary>
            Returns the current set of registered custom ETW providers.
            </summary>
            <returns>EtwProviders object containing a list of providers, friendly name and GUID</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetEtwProvidersAsync">
            <summary>
            Returns the current set of registered ETW providers.
            </summary>
            <returns>EtwProviders object containing a list of providers, friendly name and GUID</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ToggleEtwProviderAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo,System.Boolean,System.Int32)">
            <summary>
            Toggles the listening state of a specific provider on the realtime events WebSocket.
            </summary>
            <param name="etwProvider">The provider to update the listening state of.</param>
            <param name="isEnabled">Determines whether the listening state should be enabled or disabled.</param>
            /// <param name="level">Verbosity level - 1 for least, 5 for most verbose. </param>
            <returns>Task for toggling the listening state of the specified provider.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ToggleEtwProviderAsync(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Toggles the listening state of a specific provider on the realtime events WebSocket.
            </summary>
            <param name="etwProvider">The GUID of the provider to update the listening state of.</param>
            <param name="isEnabled">Determines whether the listening state should be enabled or disabled.</param>
            <param name="level">Verbosity level - 1 for least, 5 for most verbose. </param>
            <returns>Task for toggling the listening state of the specified provider.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForEtwEventsAsync">
            <summary>
            Starts listening for ETW events with it being returned via the RealtimeEventsMessageReceived event handler.
            </summary>
            <returns>Task for connecting to the WebSocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForEtwEventsAsync">
            <summary>
            Stop listening for ETW events.
            </summary>
            <returns>Task for stop listening for ETW events and disconnecting from the WebSocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InitializeRealtimeEventsWebSocketAsync">
            <summary>
            Creates a new <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> if it hasn't already been initialized.
            </summary>
            <returns>Task for connecting the ETW realtime event WebSocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventsReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents})">
            <summary>
            Handler for the ETW received event that passes the event to the RealtimeEventsMessageReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents">
            <summary>
            ETW Events.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.stashedList">
            <summary>
            Saves the downconverted list of events 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.Events">
            <summary>
            Gets the list of ETW Events that occured in the last second. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.Frequency">
            <summary>
            Gets the event frequency. 
            This is always 10 million (10000000) in RS2 devices.  
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.RawEvents">
            <summary>
            Gets or sets the raw list of events.  Not for straight usage, as it's entirely unformatted. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo">
            <summary>
            ETW Events Info. Allows strongly typed access to guaranteed fields 
            like ID or Timestamp, and raw (as string) access to all other 
            payload data, like Latency or PID. 
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo" /> class.  Used by the DataContract at access time. 
            </summary>
            <param name="dictionary">Base dictionary used to populate the object. </param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.ID">
            <summary>
            Gets the event identifer.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Keyword">
            <summary>
            Gets the event keyword.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Level">
            <summary>
            Gets the event level.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Provider">
            <summary>
            Gets the event provider name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Timestamp">
            <summary>
            Gets the event timestamp. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviders">
            <summary>
            ETW Providers.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviders.Providers">
            <summary>
            Gets list of ETW providers
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo">
            <summary>
            ETW Provider Info. Contains the Name and GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo.GUID">
            <summary>
            Gets provider guid.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo.Name">
            <summary>
            Gets provider name.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfigApi">
            <summary>
            API for getting IP config data.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetIpConfigAsync">
            <summary>
            Gets the IP configuration data of the device.
            </summary>
            <returns>object containing details of the device's network configuration.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp">
            <summary>
            DHCP object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseExpiresRaw">
            <summary>
             Gets the time at which the lease will expire, in ticks.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseObtainedRaw">
            <summary>
            Gets the time at which the lease was obtained, in ticks.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.Address">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseExpires">
            <summary>
            Gets the lease expiration time.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseObtained">
            <summary>
            Gets the lease obtained time.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo">
            <summary>
            IP Address info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo.Address">
            <summary>
            Gets the address
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo.SubnetMask">
            <summary>
            Gets the subnet mask
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration">
            <summary>
            IP Configuration object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration.Adapters">
            <summary>
            Gets the list of networking adapters
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo">
            <summary>
            Networking adapter info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Description">
            <summary>
            Gets the description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.MacAddress">
            <summary>
            Gets the hardware address
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Index">
            <summary>
            Gets the index
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Id">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.AdapterType">
            <summary>
            Gets the type
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Dhcp">
            <summary>
            Gets DHCP info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Gateways">
            <summary>
            Gets Gateway info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.IpAddresses">
            <summary>
            Gets the list of IP addresses
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceFamilyApi">
            <summary>
            API for getting the device family.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MachineNameApi">
            <summary>
            API for getting the machine name.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OsInfoApi">
            <summary>
            API for getting the OS information.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms">
            <summary>
            Device portal platforms
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Unknown">
            <summary>
            Unknown platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Windows">
            <summary>
            Windows platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Mobile">
            <summary>
            Mobile platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.HoloLens">
            <summary>
            HoloLens platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.HoloLens2">
            <summary>
            HoloLens 2 platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.XboxOne">
            <summary>
            Xbox One platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTDragonboard410c">
            <summary>
            Windows IoT on Dragonboard 410c
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTMinnowboardMax">
            <summary>
            Windows IoT on Minnowboard Max
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTRaspberryPi2">
            <summary>
            Windows IoT on Raspberry Pi 2
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTRaspberryPi3">
            <summary>
            Windows IoT on Raspberry Pi 3
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.VirtualMachine">
            <summary>
            A virtual machine. This may or may not be an emulator.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceFamilyAsync">
            <summary>
            Gets the family name (ex: Windows.Holographic) of the device.
            </summary>
            <returns>String containing the device's family.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceNameAsync">
            <summary>
            Gets the name of the device.
            </summary>
            <returns>String containing the device's name.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetOperatingSystemInformationAsync">
            <summary>
            Gets information about the device's operating system.
            </summary>
            <returns>OperatingSystemInformation object containing details of the installed operating system.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDeviceNameAsync(System.String)">
            <summary>
            Sets the device's name
            </summary>
            <param name="name">The name to assign to the device.</param>
            <remarks>The new name does not take effect until the device has been restarted.</remarks>
            <returns>Task tracking setting the device name completion.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceName">
            <summary>
            Device name object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceName.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceOsFamily">
            <summary>
            Device family object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceOsFamily.Family">
            <summary>
            Gets the device family name.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation">
            <summary>
            Operating system information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.Name">
            <summary>
             Gets the OS name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.Language">
            <summary>
            Gets the language
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.OsEdition">
            <summary>
            Gets the edition
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.OsEditionId">
            <summary>
            Gets the edition Id
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.OsVersionString">
            <summary>
            Gets the OS version
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.PlatformName">
            <summary>
            Gets the raw platform type
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemInformation.Platform">
            <summary>
            Gets the platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ActivePowerSchemeApi">
            <summary>
            API for getting or setting the active power scheme.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryStateApi">
            <summary>
            API for getting battery state.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PowerSchemeSubValueApi">
            <summary>
            API for getting or setting a power scheme's sub-value.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PowerStateApi">
            <summary>
            API for controlling power state.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SleepStudyReportApi">
            <summary>
            API for getting a sleep study report.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SleepStudyReportsApi">
            <summary>
            API for getting the list of sleep study reports.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SleepStudyTransformApi">
            <summary>
            API for getting a sleep study report.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetActivePowerSchemeAsync">
            <summary>
            Returns the current active power scheme.
            </summary>
            <returns>The power scheme identifier.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetBatteryStateAsync">
            <summary>
            Returns the current state of the device's battery.
            </summary>
            <returns>BatteryState object containing details such as the current battery level.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetPowerStateAsync">
            <summary>
            Gets the device's current power state.
            </summary>
            <returns>PowerState object containing details such as whether or not the device is in low power mode.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ActivePowerScheme">
            <summary>
            Battery state.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ActivePowerScheme.Id">
            <summary>
            Gets the active power scheme identifier.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState">
            <summary>
            Battery state.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.IsOnAcPower">
            <summary>
            Gets a value indicating whether the device is on AC power.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.IsBatteryPresent">
            <summary>
            Gets a value indicating whether a battery is present.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.IsCharging">
            <summary>
            Gets a value indicating whether the device is charging.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.DefaultAlert1">
            <summary>
            Gets the default alert.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.DefaultAlert2">
            <summary>
            Gets the default alert.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.EstimatedTimeRaw">
            <summary>
            Gets estimated battery time left in seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.MaximumCapacity">
            <summary>
            Gets maximum capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.RemainingCapacity">
            <summary>
            Gets remaining capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.Level">
            <summary>
            Gets the battery level as a percentage of the maximum capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BatteryState.EstimatedTime">
            <summary>
            Gets the remaining battery time left, as a TimeSpan. 
            Will be 0 if the device has no battery. 
            Will be 0xFFFF,FFFF (around 138 years) if the device is charging. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PowerState">
            <summary>
            Power state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PowerState.InLowPowerState">
            <summary>
            Gets a value indicating whether the device is in a lower power mode
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PowerState.IsLowPowerStateAvailable">
            <summary>
            Gets a value indicating whether the device supports a lower power mode
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RebootApi">
            <summary>
            API for rebooting the device.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ShutdownApi">
            <summary>
            API for shutting down the device.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RebootAsync">
            <summary>
            Reboots the device.
            </summary>
            <returns>
            Task tracking reboot completion.
            </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ShutdownAsync">
            <summary>
            Shuts down the device.
            </summary>
            <returns>
            Task tracking shutdown completion.
            </returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcessApi">
            <summary>
            API for getting all running processes
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerfApi">
            <summary>
            API for getting system performance
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.deviceProcessesWebSocket">
            <summary>
            Web socket to get running processes.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.systemPerfWebSocket">
            <summary>
            Web socket to get the system perf of the device.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcessesMessageReceived">
            <summary>
            The running processes message received handler.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerfMessageReceived">
            <summary>
            The system perf message received handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetRunningProcessesAsync">
            <summary>
            Gets the collection of processes running on the device.
            </summary>
            <returns>RunningProcesses object containing the list of running processes.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForRunningProcessesAsync">
            <summary>
            Starts listening for the running processes on the device with them being returned via the RunningProcessesMessageReceived event handler.
            </summary>
            <returns>Task for connecting to the websocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForRunningProcessesAsync">
            <summary>
            Stop listening for the running processes on the device.
            </summary>
            <returns>Task for stop listening for processes and disconnecting from the websocket .</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetSystemPerfAsync">
            <summary>
            Gets system performance information for the device.
            </summary>
            <returns>SystemPerformanceInformation object containing information such as memory usage.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForSystemPerfAsync">
            <summary>
            Starts listening for the system performance information for the device with it being returned via the SystemPerfMessageReceived event handler.
            </summary>
            <returns>Task for connecting to the websocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForSystemPerfAsync">
            <summary>
            Stop listening for the system performance information for the device.
            </summary>
            <returns>Task for stop listening for system perf and disconnecting from the websocket .</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcessesReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses})">
            <summary>
            Handler for the processes received event that passes the event to the RunningProcessesMessageReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerfReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation})">
            <summary>
            Handler for the system performance information received event that passes the event to the SystemPerfMessageReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppVersion">
            <summary>
            Object representing the app version.  Only present if the process is an app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppVersion.Major">
            <summary>
            Gets the major version number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppVersion.Minor">
            <summary>
            Gets the minor version number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppVersion.Build">
            <summary>
            Gets the build number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppVersion.Revision">
            <summary>
            Gets the revision number
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo">
            <summary>
            Process Info.  Contains app information if the process is an app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.AppName">
            <summary>
            Gets the app name. Only present if the process is an app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.CpuUsage">
            <summary>
            Gets CPU Usage as a percentage of available CPU resources (0-100)
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.Name">
            <summary>
            Gets the image name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.ProcessId">
            <summary>
            Gets the process id (pid)
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.UserName">
            <summary>
            Gets the user the process is running as. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.PackageFullName">
            <summary>
            Gets the package full name.  Only present if the process is an app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.PageFile">
            <summary>
            Gets the Page file usage info, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.WorkingSet">
            <summary>
            Gets the working set size, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.PrivateWorkingSet">
            <summary>
            Gets package working set, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.SessionId">
            <summary>
            Gets session id
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.TotalCommit">
            <summary>
            Gets total commit, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.VirtualSize">
            <summary>
            Gets virtual size, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.IsRunning">
            <summary>
            Gets a value indicating whether or not the app is running 
            (versus suspended). Only present if the process is an app.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.Publisher">
            <summary>
            Gets publisher. Only present if the process is an app.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.Version">
            <summary>
            Gets version. Only present if the process is an app.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.IsXAP">
            <summary>
            Gets a value indicating whether or not the package is a XAP 
            package. Only present if the process is an app.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceProcessInfo.ToString">
            <summary>
            String representation of a process
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter">
            <summary>
            GPU Adaptors
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.DedicatedMemory">
            <summary>
            Gets total Dedicated memory in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.DedicatedMemoryUsed">
            <summary>
            Gets used Dedicated memory in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.Description">
            <summary>
            Gets description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.SystemMemory">
            <summary>
            Gets system memory in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.SystemMemoryUsed">
            <summary>
            Gets memory used in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuAdapter.EnginesUtilization">
            <summary>
            Gets engines utilization as percent of maximum. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuPerformanceData">
            <summary>
            GPU performance data
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GpuPerformanceData.Adapters">
            <summary>
            Gets list of available adapters
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkPerformanceData">
            <summary>
            Network performance data
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkPerformanceData.BytesIn">
            <summary>
            Gets current download speed in bytes per second
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkPerformanceData.BytesOut">
            <summary>
             Gets current upload speed in bytes per second
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses">
            <summary>
            Running processes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses.Processes">
            <summary>
            Gets list of running processes.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses.Contains(System.Int32)">
            <summary>
            Checks to see if this process Id is in the list of processes
            </summary>
            <param name="processId">Process to look for</param>
            <returns>whether the process id was found</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunningProcesses.Contains(System.String,System.Boolean)">
            <summary>
            Checks for a given package name
            </summary>
            <param name="packageName">Name of the package to look for</param>
            <param name="caseSensitive">Whether we should be case sensitive in our search</param>
            <returns>Whether the package was found</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation">
            <summary>
            System performance information
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.AvailablePages">
            <summary>
            Gets available pages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.CommitLimit">
            <summary>
            Gets commit limit in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.CommittedPages">
            <summary>
            Gets committed pages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.CpuLoad">
            <summary>
            Gets CPU load as percent of maximum (0 - 100)
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.IoOtherSpeed">
            <summary>
            Gets IO Other Speed in bytes per second
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.IoReadSpeed">
            <summary>
            Gets IO Read speed in bytes per second. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.IoWriteSpeed">
            <summary>
            Gets IO write speed in bytes per second
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.NonPagedPoolPages">
            <summary>
            Gets Non paged pool pages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.PageSize">
            <summary>
            Gets page size
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.PagedPoolPages">
            <summary>
            Gets paged pool pages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.TotalInstalledKb">
            <summary>
            Gets total installed in KB
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.TotalPages">
            <summary>
            Gets total pages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.GpuData">
            <summary>
            Gets GPU data
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation.NetworkData">
            <summary>
            Gets Networking data
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TaskManagerApi">
            <summary>
            API for starting or stopping a modern application.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LaunchApplicationAsync(System.String,System.String)">
            <summary>
            Starts running the specified application.
            </summary>
            <param name="appid">Application ID</param>
            <param name="packageName">The name of the application package.</param>
            <returns>Process identifier for the application instance.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TerminateApplicationAsync(System.String)">
            <summary>
            Stops the specified application from running.
            </summary>
            <param name="packageName">The name of the application package.</param>
            <returns>
            Task for tracking termination completion
            </returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterfacesApi">
            <summary>
            API for getting the WiFi interfaces.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkApi">
            <summary>
            API for the controlling the WiFi network.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworksApi">
            <summary>
            API for getting available WiFi networks.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ConnectToWifiNetworkAsync(System.Guid,System.String,System.String)">
            <summary>
            Connect to a WiFi network using a given network adapter and SSID. 
            </summary>
            <param name="networkAdapter">Network adaptor GUID.</param>
            <param name="ssid">SSID of the network.</param>
            <param name="networkKey">Network key.</param>
            <returns>Task tracking connection status.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetWifiInterfacesAsync">
            <summary>
            Gets WiFi interfaces.
            </summary>
            <returns>List of WiFi interfaces.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetWifiNetworksAsync(System.Guid)">
            <summary>
            Gets WiFi networks as seen from a WiFi interface.
            </summary>
            <param name="interfaceGuid">Interface to get networks from.</param>
            <returns>List of available networks.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterface">
            <summary>
            WiFi interface.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterface.Description">
            <summary>
            Gets description.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterface.Guid">
            <summary>
            Gets GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterface.Index">
            <summary>
            Gets index.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterface.Profiles">
            <summary>
            Gets profiles list.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterfaces">
            <summary>
            WiFi interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiInterfaces.Interfaces">
            <summary>
            Gets the list of interfaces.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworks">
            <summary>
            WiFi networks.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworks.AvailableNetworks">
            <summary>
            Gets the list of available networks.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo">
            <summary>
            WiFi network info.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.IsConnected">
            <summary>
            Gets a value indicating whether the device is already connected to this network.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.AuthenticationAlgorithm">
            <summary>
            Gets the authentication algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.Channel">
            <summary>
            Gets the channel.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.CipherAlgorithm">
            <summary>
            Gets the cipher algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.IsConnectable">
            <summary>
            Gets a value indicating whether this network is connectable
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.InfrastructureType">
            <summary>
            Gets the infrastructure type - ad hoc or standard. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.IsProfileAvailable">
            <summary>
            Gets a value indicating whether a profile is available.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.ProfileName">
            <summary>
            Gets the profile name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.Ssid">
            <summary>
            Gets the SSID.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.IsSecurityEnabled">
            <summary>
            Gets a value indicating whether security is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.SignalQuality">
            <summary>
            Gets the signal quality.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.Bssid">
            <summary>
            Gets the BSSID.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkInfo.NetworkTypes">
            <summary>
            Gets physical types.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkProfile">
            <summary>
            WiFi network profile.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkProfile.IsGroupPolicyProfile">
            <summary>
            Gets a value indicating whether this is a group policy profile.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkProfile.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WifiNetworkProfile.IsPerUserProfile">
            <summary>
            Gets a value indicating whether this is a per user profile.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsErrorReportingFileApi">
            <summary>
            API for downloading a Windows error reporting file.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsErrorReportingFilesApi">
            <summary>
            API for getting the list of files in a Windows error report.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsErrorReportsApi">
            <summary>
            API for getting the list of Windows error reports.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetWindowsErrorReportsAsync">
            <summary>
            Gets the list of Windows Error Reporting (WER) reports.
            </summary>
            <returns>The list of Windows Error Reporting (WER) reports.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetWindowsErrorReportingFileListAsync(System.String,System.String,System.String)">
            <summary>
            Gets the list of files in a Windows Error Reporting (WER) report.
            </summary>
            <param name="user">The user associated with the report.</param>
            <param name="type">The type of report. This can be either 'queried' or 'archived'.</param>
            <param name="name">The name of the report.</param>
            <returns>The list of files.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetWindowsErrorReportingFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the specified file from a Windows Error Reporting (WER) report.
            </summary>
            <param name="user">The user associated with the report.</param>
            <param name="type">The type of report. This can be either 'queried' or 'archived'.</param>
            <param name="name">The name of the report.</param>
            <param name="file">The name of the file to download from the report.</param>
            <returns>Byte array containing the file data</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CheckPlatformSupport">
            <summary>
            Checks if the Windows Error Reporting (WER) APIs are being called on a supported platform.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerFiles">
            <summary>
            A list of all files contained within a Windows Error Reporting (WER) report.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerFiles.Files">
            <summary>
            Gets a list of all files contained within a Windows Error Reporting (WER) report.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerFileInformation">
            <summary>
            Information about a Windows Error Reporting (WER) report file.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerFileInformation.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerFileInformation.Size">
            <summary>
            Gets the size of the file (in bytes).
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerDeviceReports">
            <summary>
            A list of all Windows Error Reporting (WER) reports on a device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerDeviceReports.UserReports">
            <summary>
             Gets a list of all Windows Error Reporting (WER) reports on a 
             device.  The SYSTEM user account usually holds the bulk of the 
             error reports. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerDeviceReports.SystemErrorReports">
            <summary>
            Gets system error reports - Convenience accessor for the System error reports - this is 
            where most error reports end up. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerUserReports">
            <summary>
            A list of Windows Error Reporting (WER) reports for a specific user.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerUserReports.UserName">
            <summary>
            Gets the user name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerUserReports.Reports">
            <summary>
            Gets a list of Windows Error Reporting (WER) reports
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerReportInformation">
            <summary>
            Information about a Windows Error Reporting (WER) report.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerReportInformation.CreationTime">
            <summary>
            Gets the creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerReportInformation.Name">
            <summary>
            Gets the report name (not base64 encoded).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WerReportInformation.Type">
            <summary>
            Gets the report type ("Queue" or "Archive").
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsPerformanceBootTraceApi">
            <summary>
            API for starting and stopping a Windows performance recorder boot performance trace session.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsPerformanceCustomTraceApi">
            <summary>
            API for starting a Windows performance recorder trace using a custom profile.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsPerformanceTraceApi">
            <summary>
            API for starting and stopping a Windows performance recorder trace session.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WindowsPerformanceTraceStatusApi">
            <summary>
            API for getting the status of a Windows performance recorder trace session.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalCertificateIssuer">
            <summary>
            Issuer for the device certificate.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RootCertificateEndpoint">
            <summary>
            Endpoint used to access the certificate.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ExpectedOSVersionSections">
            <summary>
            Expected number of OS version sections once the OS version is split by period characters
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TargetOSVersionSection">
            <summary>
            The target OS version section index once the OS version is split by periods 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.deviceConnection">
            <summary>
            Device connection object.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.#ctor(Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal" /> class.
            </summary>
            <param name="connection">Implementation of a connection object.</param>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ConnectionStatus">
            <summary>
            Handler for reporting connection status.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods">
            <summary>
            HTTP Methods
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods.Get">
            <summary>
            The HTTP Get method.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods.Put">
            <summary>
            The HTTP Put method.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods.Post">
            <summary>
            The HTTP Post method.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods.Delete">
            <summary>
            The HTTP Delete method.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods.WebSocket">
            <summary>
            The HTTP WebSocket method.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Address">
            <summary>
            Gets the device address.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ConnectionHttpStatusCode">
            <summary>
            Gets the status code for establishing our connection.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ConnectionFailedDescription">
            <summary>
            Gets a description of why the connection failed.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceFamily">
            <summary>
            Gets the device operating system family.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OperatingSystemVersion">
            <summary>
            Gets the operating system version.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Platform">
            <summary>
            Gets the device platform.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PlatformName">
            <summary>
            Gets the device platform name.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ConnectAsync(System.String,System.String,System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Connects to the device pointed to by IDevicePortalConnection provided in the constructor.
            </summary>
            <param name="ssid">Optional network SSID.</param>
            <param name="ssidKey">Optional network key.</param>
            <param name="updateConnection">Indicates whether we should update this connection's IP address after connecting.</param>
            <param name="manualCertificate">A manually provided X509 Certificate for trust validation against this device.</param>
            <remarks>Connect sends ConnectionStatus events to indicate the current progress in the connection process.
            Some applications may opt to not register for the ConnectionStatus event and await on Connect.</remarks>
            <returns>Task for tracking the connect.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SaveEndpointResponseToFileAsync(System.String,System.String,Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods,System.IO.Stream,System.String)">
            <summary>
            Helper method used for saving the content of a response to a file.
            This allows unittests to easily generate real data to use as mock responses.
            </summary>
            <param name="endpoint">API endpoint we are calling.</param>
            <param name="directory">Directory to store our file.</param>
            <param name="httpMethod">The http method to be performed.</param>
            <param name="requestBody">An optional stream to use for the request body content.</param>
            <param name="requestBodyContentType">The content type of the request stream.</param>
            <returns>Task waiting for HTTP call to return and file copy to complete.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SendConnectionStatus(Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus,Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase,System.String)">
            <summary>
            Sends the connection status back to the caller
            </summary>
            <param name="status">Status of the connect attempt.</param>
            <param name="phase">Current phase of the connection attempt.</param>
            <param name="message">Optional message describing the connection status.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IsUsingHttps">
            <summary>
            Helper method to determine if our connection is using HTTPS
            </summary>
            <returns>Whether we are using HTTPS</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicIpdApi">
            <summary>
            API for getting or setting Interpupilary distance
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicServicesApi">
            <summary>
            API for getting a list of running HoloLens specific services.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicWebManagementHttpSettingsApi">
            <summary>
            API for getting or setting HTTPS setting
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ProcessStatus">
            <summary>
            Enumeration describing the status of a process
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ProcessStatus.Running">
            <summary>
            The process is running
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ProcessStatus.Stopped">
            <summary>
            The process is stopped
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicServiceState">
            <summary>
            Gets the status of the Holographic Services on this HoloLens.
            </summary>
            <returns>HolographicServices object describing the state of the Holographic services.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetInterPupilaryDistanceAsync">
            <summary>
            Gets the interpupilary distance registered on the device.
            </summary>
            <returns>Interpupilary distance, in millimeters.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetIsHttpsRequiredAsync(System.Boolean)">
            <summary>
            Sets the WiFi http security requirements for communication with the device.
            </summary>
            <param name="httpsRequired">Desired value for HTTPS communication</param>
            <returns>True if WiFi based communication requires a secure connection, false otherwise.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetInterPupilaryDistanceAsync(System.Single)">
            <summary>
            Sets the interpupilary distance registered on the device.
            </summary>
            <param name="ipd">Interpupilary distance, in millimeters.</param>
            <returns>Task for tracking the POST call</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetIsHttpsRequiredAsync">
            <summary>
            Gets the WiFi http security requirements for communication with the device.
            </summary>
            <returns>True if WiFi based communication requires a secure connection, false otherwise.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicServices">
            <summary>
            Object reporesentation of the status of the Holographic services
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicServices.Status">
            <summary>
            Gets the status for the collection of holographic services
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus">
            <summary>
            Object representation of the collection of holographic services.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.Dwm">
            <summary>
            Gets the status of dwm.exe
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.HoloShellApp">
            <summary>
            Gets the status of holoshellapp.exe
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.HoloSi">
            <summary>
            Gets the status of holosi.exe
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.MixedRealitytCapture">
            <summary>
            Gets the status of mixedrealitycapture.exe
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.SiHost">
            <summary>
            Gets the status of sihost.exe
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSoftwareStatus.Spectrum">
            <summary>
            Gets the status of spectrum.exe
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InterPupilaryDistance">
            <summary>
            Object representation for Interpupilary distance
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InterPupilaryDistance.IpdRaw">
            <summary>
            Gets the raw interpupilary distance
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InterPupilaryDistance.Ipd">
            <summary>
            Gets or sets the interpupilary distance
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceStatus">
            <summary>
            Object representation of the status of a  service
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceStatus.ExpectedRaw">
            <summary>
            Gets the raw value returned for the expected service status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceStatus.ObservedRaw">
            <summary>
            Gets the raw value returned for the observed service status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceStatus.Expected">
            <summary>
            Gets the the expected service status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceStatus.Observed">
            <summary>
            Gets the the observed service status
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WebManagementHttpSettings">
            <summary>
            Object representation for HTTP settings
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.WebManagementHttpSettings.IsHttpsRequired">
            <summary>
            Gets a value indicating whether HTTPS is required
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicPerceptionClient">
            <summary>
            API for running a Perception client.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationModeApi">
            <summary>
            API for getting or setting the Holographic Perception Simulation control mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationStreamApi">
            <summary>
            API for controlling the Holographic Perception Simulation control stream.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlMode">
            <summary>
            Enumeration defining the control modes used by the Holographic Perception Simulation.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlMode.Default">
            <summary>
            Default mode.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlMode.Simulation">
            <summary>
            Simulation mode.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlStreamPriority">
            <summary>
            Enumeration defining the priority levels for the Holographic Perception Simulation control stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlStreamPriority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlStreamPriority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CreatePerceptionSimulationControlStreamAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlStreamPriority)">
            <summary>
            Creates a simulation control stream.
            </summary>
            <param name="priority">The control stream priority.</param>
            <returns>The identifier of the created stream.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeletePerceptionSimulationControlStreamAsync(System.String)">
            <summary>
            Deletes a simulation control stream.
            </summary>
            <param name="streamId">The identifier of the stream to be deleted.</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetPerceptionSimulationControlModeAsync">
            <summary>
            Gets the perception simulation control mode.
            </summary>
            <returns>The simulation control mode.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetPerceptionSimulationControlModeAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlMode)">
            <summary>
            Sets the perception simulation control mode.
            </summary>
            <param name="mode">The simulation control mode.</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.VerifySimulationControlModeAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.SimulationControlMode)">
            <summary>
            Compares the current simulation control mode with the expected mode.
            </summary>
            <param name="expectedMode">The simulation control mode that we expect the device to be in.</param>
            <returns>The simulation control mode.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PerceptionSimulationControlMode">
            <summary>
            Object representation of Perception Simulation control mode.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PerceptionSimulationControlMode.Mode">
            <summary>
            Gets the control mode.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PerceptionSimulationControlStreamId">
            <summary>
            Object representation of the response recevied when creating a Perception Simulation control stream.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PerceptionSimulationControlStreamId.StreamId">
            <summary>
            Gets the stream identifier.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ThermalStageApi">
            <summary>
            API for getting the thermal stage
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetThermalStageAsync">
            <summary>
            Gets the current thermal stage reading from the device.
            </summary>
            <returns>ThermalStages enum value.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ThermalStage">
            <summary>
            Object representation of thermal stage
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ThermalStage.StageRaw">
            <summary>
            Gets the raw stage value
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ThermalStage.Stage">
            <summary>
            Gets the enumeration value of the thermal stage
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileApi">
            <summary>
             API for getting or deleting a Mixed Reality Capture file.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileListApi">
            <summary>
            API for getting the list of Holographic Mixed Reality Capture files.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcPhotoApi">
            <summary>
            API for taking a Mixed Reality Capture photo.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettingsApi">
            <summary>
            API for getting or setting the default Mixed Reality Capture settings.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStartRecordingApi">
            <summary>
            API for starting a Holographic Mixed Reality Capture recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStatusApi">
            <summary>
            API for getting the Holographic Mixed Reality Capture status.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStopRecordingApi">
            <summary>
            API for stopping a Holographic Mixed Reality Capture recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcLiveStreamApi">
            <summary>
            API for getting a live Holographic Mixed Reality Capture stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcLiveStreamHighResApi">
            <summary>
            API for getting a high resolution live Holographic Mixed Reality Capture stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcLiveStreamLowResApi">
            <summary>
            API for getting a low resolution live Holographic Mixed Reality Capture stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcLiveStreamMediumResApi">
            <summary>
            API for getting a medium resolution live Holographic Mixed Reality Capture stream.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcThumbnailApi">
            <summary>
            API for getting a mixed reality capture thumbnail
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteMrcFileAsync(System.String)">
            <summary>
            Removes a Mixed Reality Capture file from the device's local storage.
            </summary>
            <param name="fileName">The name of the file to be deleted.</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHighResolutionMrcLiveStreamUri(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieve the Uri for the high resolution Mixed Reality Capture live stream.
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <param name="includeMicrophone">Specifies whether or not to include microphone data</param>
            <param name="includeAudio">Specifies whether or not to include audio data</param>
            <returns>Uri used to retreive the Mixed Reality Capture stream.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetLowResolutionMrcLiveStreamUri(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieve the Uri for the low resolution Mixed Reality Capture live stream.
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <param name="includeMicrophone">Specifies whether or not to include microphone data</param>
            <param name="includeAudio">Specifies whether or not to include audio data</param>
            <returns>Uri used to retreive the Mixed Reality Capture stream.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMediumResolutionMrcLiveStreamUri(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieve the Uri for the medium resolution Mixed Reality Capture live stream.
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <param name="includeMicrophone">Specifies whether or not to include microphone data</param>
            <param name="includeAudio">Specifies whether or not to include audio data</param>
            <returns>Uri used to retreive the Mixed Reality Capture stream.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcFileDataAsync(System.String,System.Boolean)">
            <summary>
            Gets the capture file data
            </summary>
            <param name="fileName">Name of the file to retrieve.</param>
            <param name="isThumbnailRequest">Specifies whether or not we are requesting a thumbnail image.</param>
            <returns>Byte array containing the file data.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcFileListAsync">
            <summary>
            Gets the list of capture files
            </summary>
            <returns>List of the capture files</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcLiveStreamUri(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieve the Uri for the Mixed Reality Capture live stream using the default resolution.
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <param name="includeMicrophone">Specifies whether or not to include microphone data</param>
            <param name="includeAudio">Specifies whether or not to include audio data</param>
            <returns>Uri used to retreive the Mixed Reality Capture stream.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcSettingsAsync">
            <summary>
            Gets the current Mixed Reality Capture settings
            </summary>
            <returns>MrcSettings object containing the current settings</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcStatusAsync">
            <summary>
            Gets the status of the reality capture
            </summary>
            <returns>Status of the capture</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetMrcThumbnailDataAsync(System.String)">
            <summary>
            Gets thumbnail data for the capture
            </summary>
            <param name="fileName">Name of the capture file</param>
            <returns>Byte array containing the thumbnail image data</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetMrcSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings)">
            <summary>
            Sets the default Mixed Reality Capture settings
            </summary>
            <param name="settings">Mixed Reality Capture settings to be used as the default.</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartMrcRecordingAsync(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Starts a Mixed Reality Capture recording.
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <param name="includeMicrophone">Specifies whether or not to include microphone data</param>
            <param name="includeAudio">Specifies whether or not to include audio data</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopMrcRecordingAsync">
            <summary>
            Stops the Mixed Reality Capture recording
            </summary>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TakeMrcPhotoAsync(System.Boolean,System.Boolean)">
            <summary>
            Take a Mixed Reality Capture photo
            </summary>
            <param name="includeHolograms">Specifies whether or not to include holograms</param>
            <param name="includeColorCamera">Specifies whether or not to include the color camera</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileList">
            <summary>
            Object representation of the capture file list
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileList.Files">
            <summary>
            Gets the list of files
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation">
            <summary>
            Object representation of an individual capture file
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation.CreationTimeRaw">
            <summary>
            Gets the raw creation time
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation.FileName">
            <summary>
            Gets the filename
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation.FileSize">
            <summary>
            Gets the file size
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation.Thumbnail">
            <summary>
            Gets the thumbnail
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcFileInformation.Created">
            <summary>
            Gets the creation time
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStatus">
            <summary>
            Object representation of the Capture status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStatus.IsRecording">
            <summary>
            Gets a value indicating whether the device is recording
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcStatus.Status">
            <summary>
            Gets the recording status
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcProcessStatus">
            <summary>
            Object representation of the Mixed Reality Capture process status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcProcessStatus.MrcProcessRaw">
            <summary>
            Gets the raw data for the Mixed Reality Capture process status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcProcessStatus.MrcProcess">
            <summary>
            Gets the status of the Mixed Reality Capture process
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSetting">
            <summary>
            Object representation of a Mixed Reality Capture setting.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSetting.Setting">
            <summary>
            Gets or sets the name of the setting
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSetting.Value">
            <summary>
            Gets or sets the value of the setting
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings">
            <summary>
            Object representing the collection of Mixed Reality Capture settings
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.Settings">
            <summary>
            Gets the collection of settings
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.IncludeHolograms">
            <summary>
            Gets or sets a value indicating whether or not holograms are included.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.IncludeColorCamera">
            <summary>
            Gets or sets a value indicating whether or not color camera data is included.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.IncludeMicrophone">
            <summary>
            Gets or sets a value indicating whether or not microphone audio is included.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.IncludeAudio">
            <summary>
            Gets or sets a value indicating whether or not audio is included.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.VideoStabilizationBuffer">
            <summary>
            Gets or sets the size, in frames, of the video stabilization buffer.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.GetSetting(System.String)">
            <summary>
            Gets the value of a setting
            </summary>
            <param name="settingName">The name of the setting</param>
            <returns>The value of the setting, or if not found, null.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MrcSettings.SetSetting(System.String,System.Object)">
            <summary>
            Sets the value of a Mixed Reality Capture setting.
            </summary>
            <param name="settingName">The name of the setting</param>
            <param name="value">The value of the setting</param>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackSessionFileApi">
            <summary>
            API for loading or unloading a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackPauseApi">
            <summary>
            API for pausing a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackFileApi">
            <summary>
            API for uploading or deleting a Holographic Perception Simulation recording file.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackFilesApi">
            <summary>
            API for retrieving a list of a Holographic Perception Simulation recording files.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackPlayApi">
            <summary>
            API for starting playback of a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackSessionFilesApi">
            <summary>
            API for getting the list of loaded Holographic Perception Simulation files.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStateApi">
            <summary>
            API for retrieving the playback state of a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStopApi">
            <summary>
            API for starting playback of a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackDataTypesApi">
            <summary>
            API for retrieving the types of data in a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates">
            <summary>
            Enumeration describing the available Holgraphic Simulation playback states.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates.Stopped">
            <summary>
            The simulation has been stopped.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates.Playing">
            <summary>
            The simulation is playing.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates.Paused">
            <summary>
            The simulation has been paused.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates.Complete">
            <summary>
            Playback has completed.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackStates.Unexpected">
            <summary>
            Playback is in an unexpected / unknown state.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Deletes the specified Holographic Simulation recording.
            </summary>
            <param name="name">The name of the recording to delete (ex: testsession.xef).</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationPlaybackFilesAsync">
            <summary>
            Gets the collection of Holographic Perception Simulation files on this HoloLens.
            </summary>
            <returns>HolographicSimulationPlaybackFiles object representing the files on the HoloLens</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationPlaybackSessionFilesAsync">
            <summary>
            Gets the collection of loaded Holographic Perception Simulation files on this HoloLens.
            </summary>
            <returns>HolographicSimulationPlaybackFiles object representing the files loaded on the HoloLens</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationPlaybackSessionDataTypesAsync(System.String)">
            <summary>
            Gets the types of data that are in a loaded Holographic Perception Simulation file.
            </summary>
            <param name="recordingName">Name of the recording file, with extension.</param>
            <returns>HolographicSimulationDataTypes object representing they types of data in the file</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationPlaybackStateAsync(System.String)">
            <summary>
            Gets the playback state of a Holographic Simulation recording.
            </summary>
            <param name="name">The name of the recording (ex: testsession.xef).</param>
            <returns>HolographicSimulationPlaybackStates enum value describing the state of the recording.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LoadHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Loads the specified Holographic Simulation recording.
            </summary>
            <param name="recordingName">The name of the recording to load (ex: testsession.xef).</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PauseHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Pauses playback of a Holographic Perception Simulation recording
            </summary>
            <param name="recordingName">The name of the recording to pause</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PlayHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Starts playback of a Holographic Perception Simulation recording
            </summary>
            <param name="recordingName">The name of the recording to play</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Stops playback of a Holographic Perception Simulation recording
            </summary>
            <param name="recordingName">The name of the recording to stop</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UnloadHolographicSimulationRecordingAsync(System.String)">
            <summary>
            Unloads the specified Holographic Simulation recording.
            </summary>
            <param name="recordingName">The name of the recording to unload (ex: testsession.xef).</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationPlaybackFilesPrivateAsync(System.Boolean)">
            <summary>
            Gets the collection of Holographic Perception Simulation files
            </summary>
            <param name="session">Value indicating whether or not to return loaded files.</param>
            <returns>Collection of Holographic Perception simulation file names</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationDataTypes">
            <summary>
            Object representing the data types in a Holographic Perception Simulation file
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationDataTypes.IncludesHands">
            <summary>
            Gets a value indicating whether or not the file contains hand data.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationDataTypes.IncludesHead">
            <summary>
            Gets a value indicating whether or not the file contains head data.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationDataTypes.IncludesEnvironment">
            <summary>
            Gets a value indicating whether or not the file contains environmentatl data.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationDataTypes.IncludesSpatialMapping">
            <summary>
            Gets a value indicating whether or not the file contains spatial mapping data.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackFiles">
            <summary>
            Object representation of the Holographic Perception Simulation files collection
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackFiles.Files">
            <summary>
            Gets the list of recording file names.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackSessionState">
            <summary>
            Object representation of the Holographic Perception Simulation playback state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackSessionState.StateRaw">
            <summary>
            Gets the state value as a string
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationPlaybackSessionState.State">
            <summary>
            Gets the playback session state
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationRecordingStatusApi">
            <summary>
            API for getting a Holographic Perception Simulation recording status.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartHolographicSimulationRecordingApi">
            <summary>
            API for starting a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopHolographicSimulationRecordingApi">
            <summary>
            API for stopping a Holographic Perception Simulation recording.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHolographicSimulationRecordingStatusAsync">
            <summary>
            Gets the holographic simulation recording status.
            </summary>
            <returns>True if recording, false otherwise.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartHolographicSimulationRecordingAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Starts a Holographic Simulation recording session.
            </summary>
            <param name="name">The name of the recording.</param>
            <param name="recordHead">Should head data be recorded? The default value is true.</param>
            <param name="recordHands">Should hand data be recorded? The default value is true.</param>
            <param name="recordSpatialMapping">Should Spatial Mapping data be recorded? The default value is true.</param>
            <param name="recordEnvironment">Should environment data be recorded? The default value is true.</param>
            <returns>Task tracking completion of the REST call.</returns>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopHolographicSimulationRecordingAsync">
            <summary>
            Stops a Holographic Simulation recording session.
            </summary>
            <returns>Byte array containing the recorded data.</returns>
            <exception cref="T:System.InvalidOperationException">No recording was in progress.</exception>
            <remarks>This method is only supported on HoloLens.</remarks>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationError">
            <summary>
            Object representation of a Holographic Simulation (playback or recording) error.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationError.Reason">
            <summary>
            Gets the Reason string.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationRecordingStatus">
            <summary>
            Object representation of Holographic Simulation recording status.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HolographicSimulationRecordingStatus.IsRecording">
            <summary>
            Gets a value indicating whether the simulation is recording.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CopyFileToRequestStream(System.IO.FileInfo,System.IO.Stream)">
            <summary>
            Copies a file to the specified stream and prepends the necessary content information
            required to be part of a multipart form data request.
            </summary>
            <param name="file">The file to be copied.</param>
            <param name="stream">The stream to which the file will be copied.</param>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SysPerfInfoErrorPrefix">
            <summary>
            The prefix for the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation" /> JSON formatting error.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SysPerfInfoErrorPostfix">
            <summary>
            The postfix for the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SystemPerformanceInformation" /> JSON formatting error.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ReadJsonStream``1(System.IO.Stream,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
            <summary>
            Reads dataStream as T.
            </summary>
            <typeparam name="T">Return type for the JSON message</typeparam>
            <param name="dataStream">The stream that contains the JSON message to be checked.</param>
            <param name="settings">Optional settings for JSON serialization.</param>
            <returns>Read data</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.JsonFormatCheck``1(System.IO.Stream)">
            <summary>
            Checks the JSON for any known formatting errors and fixes them.
            </summary>
            <typeparam name="T">Return type for the JSON message</typeparam>
            <param name="jsonStream">The stream that contains the JSON message to be checked.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NullResponse">
            <summary>
            A null response class when we don't care about the response
            body.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ContentTypeHeaderName">
            <summary>
            Header name for Content Type of a request body.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CsrfTokenName">
            <summary>
            Header name for a CSRF-Token.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserAgentName">
            <summary>
            Header name for a User-Agent.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserAgentValue">
            <summary>
            Header value for User-Agent for the WDPW Open Source project.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.csrfToken">
            <summary>
            CSRF token retrieved by GET calls and used on subsequent POST/DELETE/PUT calls.
            This token is intended to prevent a security vulnerability from cross site forgery.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ApplyCSRFHeader(System.Net.Http.HttpClient,Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods)">
            <summary>
            Applies the CSRF token to the HTTP client.
            </summary>
            <param name="client">The HTTP client on which to have the header set.</param>
            <param name="method">The HTTP method (ex: POST) that will be called on the client.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ApplyHttpHeaders(System.Net.Http.HttpClient,Microsoft.Tools.WindowsDevicePortal.DevicePortal.HttpMethods)">
            <summary>
            Applies any needed headers to the HTTP client.
            </summary>
            <param name="client">The HTTP client on which to have the headers set.</param>
            <param name="method">The HTTP method (ex: POST) that will be called on the client.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ApplyUserAgentHeader(System.Net.Http.HttpClient)">
            <summary>
            Adds the User-Agent string to a request to identify it
            as coming from the WDPW Open Source project.
            </summary>
            <param name="client">The HTTP client on which to have the header set.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RetrieveCsrfToken(System.Net.Http.HttpResponseMessage)">
            <summary>
            Retrieves the CSRF token from the HTTP response and stores it.
            </summary>
            <param name="response">The HTTP response from which to retrieve the header.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAsync(System.String,System.String)">
            <summary>
            Calls the specified API with the provided payload. This signature leaves
            off the optional response so callers who don't need a response body
            don't need to specify a type for it.
            </summary>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the HTTP completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAsync``1(System.String,System.String)">
            <summary>
            Calls the specified API with the provided payload.
            </summary>
            <typeparam name="T">The type of the data for the HTTP response body (if present).</typeparam>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the HTTP completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAsync``1(System.String,System.String)">
            <summary>
            Calls the specified API with the provided payload.
            </summary>
            <typeparam name="T">Return type for the GET call</typeparam>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>An object of the specified type containing the data returned by the request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Calls the specified API with the provided body. This signature leaves
            off the optional response so callers who don't need a response body
            don't need to specify a type for it.
            </summary>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="files">List of files that we want to include in the post request.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the POST completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync(System.String,System.String)">
            <summary>
            Calls the specified API with the provided body. This signature leaves
            off the optional response so callers who don't need a response body
            don't need to specify a type for it.
            </summary>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the POST completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync``1(System.String,System.String,System.IO.Stream,System.String)">
            <summary>
            Calls the specified API with the provided payload.
            </summary>
            <typeparam name="T">The type of the data for the HTTP response body (if present).</typeparam>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <param name="requestStream">Optional stream containing data for the request body.</param>
            <param name="requestStreamContentType">The type of that request body data.</param>
            <returns>Task tracking the POST completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PutAsync``1(System.String,``0,System.String)">
            <summary>
            Calls the specified API with the provided body. This signature leaves
            off the optional response so callers who don't need a response body
            don't need to specify a type for it, which also would force them
            to explicitly declare their bodyData type instead of letting it
            be implied implicitly.
            </summary>
            <typeparam name="K">The type of the data for the HTTP request body.</typeparam>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="bodyData">The data to be used for the HTTP request body.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the PUT completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PutAsync``2(System.String,``1,System.String)">
            <summary>
            Calls the specified API with the provided body.
            </summary>
            <typeparam name="T">The type of the data for the HTTP response body (if present).</typeparam>
            <typeparam name="K">The type of the data for the HTTP request body.</typeparam>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="bodyData">The data to be used for the HTTP request body.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task tracking the PUT completion, optional response body.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBluetoothDevicesApi">
            <summary>
            Available bluetooth device list API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDevicesApi">
            <summary>
            Paired bluetooth devices list API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDevicesApi">
            <summary>
            API to pair a bluetooth device.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UnpairBluetoothDevicesApi">
            <summary>
            API to unpair a bluetooth device.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.bluetoothWebSocket">
            <summary>
            Web socket to get list of bluetooth devices.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.pairedBluetoothWebSocket">
            <summary>
            Web socket to get list of paired bluetooth devices.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.pairBluetoothWebSocket">
            <summary>
            Web socket to get the results of bluetooth device pairing.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BluetoothDeviceListReceived">
            <summary>
            Gets or sets the list of bluetooth devices received handler.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDeviceListReceived">
            <summary>
            Gets or sets the list of paired bluetooth devices received handler.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDeviceListReceived">
            <summary>
            Gets the results of pairing bluetooth device received handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAvailableBluetoothDevicesInfoAsync">
            <summary>
            Gets the available bluetooth device information.
            </summary>
            <returns>List of Available bluetooth devices</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetPairedBluetoothDevicesInfoAsync">
            <summary>
            Gets the paired bluetooth device information.
            </summary>
            <returns>List of paired bluetooth devices</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetPairBluetoothDevicesInfoAsync(System.String)">
            <summary>
            Gets the results for pairing a bluetooth device.
            </summary>
            <param name="deviceId">Device Id.</param>
            <returns>Results of pairing a bluetooth device</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForBluetoothAsync(System.String)">
            <summary>
            Starts listening for bluetooth list of devices returned from the BluetoothDeviceListReceived handler.
            </summary>
            <param name="bluetoothApi">The relative portion of the uri path that specifies the API to call.</param>
            <returns>Task for connecting to the websocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForBluetoothAsync">
            <summary>
            Stop listening for the list of bluetooth device.
            </summary>
            <returns>Task to stop listening for bluetooth devices and disconnecting from the websocket .</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForPairedBluetoothAsync(System.String)">
            <summary>
            Starts listening for paired bluetooth list of devices returned from the PairedBluetoothDeviceListReceived handler.
            </summary>
            <param name="bluetoothApi">The relative portion of the uri path that specifies the API to call.</param>
            <returns>Task for connecting to the websocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForPairedBluetoothAsync">
            <summary>
            Stop listening for the list of paired bluetooth device.
            </summary>
            <returns>Task to stop listening for bluetooth devices and disconnecting from the websocket .</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForPairBluetoothAsync(System.String,System.String)">
            <summary>
            Starts listening for the result to pair the bluetooth device returned from the PairBluetoothDeviceListReceived handler.
            </summary>
            <param name="bluetoothApi">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>Task for connecting to the websocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForPairBluetoothAsync">
            <summary>
            Stop listening for the results for pairing bluetooth device.
            </summary>
            <returns>Task to stop listening for the bluetooth device and disconnecting from the websocket .</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UnPairBluetoothDeviceAsync(System.String)">
            <summary>
            Unpairs the bluetooth device.
            </summary>
            <param name="deviceId">Device Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BluetoothReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBluetoothDevicesInfo},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBluetoothDevicesInfo})">
            <summary>
            Handler for the list of bluetooth devices received event to pass it on to the BluetoothDeviceListReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDevicesInfo},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDevicesInfo})">
            <summary>
            Handler for the list of paired bluetooth devices received event to pass it on to the PairedBluetoothDeviceListReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDevicesInfo},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDevicesInfo})">
            <summary>
            Handler for the results to pair a bluetooth device received event to pass it on to the PairBluetoothDeviceListReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBluetoothDevicesInfo">
            <summary>
            List of available bluetooth devices.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBluetoothDevicesInfo.AvailableDevices">
            <summary>
            Gets a list of available devices
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BluetoothDeviceInfo">
            <summary>
            Information about a bluetooth device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BluetoothDeviceInfo.ID">
            <summary>
            Gets the bluetooth device ID
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BluetoothDeviceInfo.Name">
            <summary>
            Gets the bluetooth device name
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDevicesInfo">
            <summary>
            List of paired bluetooth devices.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairedBluetoothDevicesInfo.PairedDevices">
            <summary>
            Gets a list of paired devices
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDevicesInfo">
            <summary>
            Information about device to be paired.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairBluetoothDevicesInfo.PairResult">
            <summary>
            Gets the pair results
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairResult">
            <summary>
            Information about device pairing.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairResult.Result">
            <summary>
            Gets the result about the device pairing
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairResult.DeviceId">
            <summary>
            Gets the deviceId to be paired
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PairResult.Pin">
            <summary>
            Gets the pin
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsApi">
            <summary>
            TPM settings API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAcpiTablesApi">
            <summary>
            Advanced Configuration and Power Interface(ACPI) information API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAzureTokenApi">
            <summary>
            TPM Azure Token API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetTpmSettingsInfoAsync">
            <summary>
            Gets Tpm Settings information.
            </summary>
            <returns>String containing theTpm Settings information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetTpmAcpiTablesInfoAsync(System.String)">
            <summary>
            Sets TPM ACPI Tables information.
            </summary>
            <param name="acpiTableIndex">ACPI Table Index.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetTpmAcpiTablesInfoAsync">
            <summary>
            Gets TPM ACPI Tables information.
            </summary>
            <returns>List of string containing the TPM ACPI Tables information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetTpmLogicalDeviceSettingsInfoAsync(System.Int32)">
            <summary>
            Gets TPM Logical Device Settings information.
            </summary>
            <param name="logicalDeviceId">The device id</param>
            <returns>String containing the TPM Logical Device Settings information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetTpmLogicalDeviceSettingsInfoAsync(System.Int32,System.String,System.String)">
            <summary>
            Sets TPM Logical Device Settings information.
            </summary>
            <param name="logicalDeviceId">Logical Device Id.</param>
            <param name="azureUri">Azure Uri.</param>
            <param name="azureKey">Azure Key.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ResetTpmLogicalDeviceSettingsInfoAsync(System.Int32)">
            <summary>
            Resets TPM Logical Device Settings information.
            </summary>
            <param name="logicalDeviceId">Logical Device Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetTpmAzureTokenInfoAsync(System.Int32,System.String)">
            <summary>
            Gets TPM Azure Token information.
            </summary>
            <param name="logicalDeviceId">The device id</param>
            <param name="validity">Validity of the token</param>
            <returns>String containing the TPM Azure Token information.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo">
            <summary>
            TPM Status information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMStatus">
            <summary>
            Gets TPM Status. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMFamily">
            <summary>
            Gets TPM Family. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMFirmware">
            <summary>
            Gets TPM Firmware. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMRevision">
            <summary>
            Gets TPM Revision. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMTypes">
            <summary>
            Gets TPM Status. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMVendor">
            <summary>
            Gets TPM Vendor. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmSettingsInfo.TPMManufacturer">
            <summary>
            Gets TPM Manufacturer. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAcpiTablesInfo">
            <summary>
            TPM ACPI Tables information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAcpiTablesInfo.AcpiTables">
            <summary>
            Gets TPM ACPI Tables. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmLogicalDeviceSettingsInfo">
            <summary>
            TPM Logical Device Settings information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmLogicalDeviceSettingsInfo.AzureUri">
            <summary>
            Gets Azure Uri. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmLogicalDeviceSettingsInfo.DeviceId">
            <summary>
            Gets Device Id. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAzureTokenInfo">
            <summary>
            TPM Azure Token information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TpmAzureTokenInfo.AzureToken">
            <summary>
            Gets Azure Token. 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppsListApi">
            <summary>
            IoT device application list API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HeadlessAppsListApi">
            <summary>
            IoT device headless application list API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HeadlessStartupAppApi">
            <summary>
            IoT device headless startup application API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ActivatePackageApi">
            <summary>
            IoT device package activation API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppsListInfoAsync">
            <summary>
            Gets List of apps.
            </summary>
            <returns>Object containing the list of applications.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetHeadlessAppsListInfoAsync">
            <summary>
            Gets list of headless apps.
            </summary>
            <returns>Object containing the list of headless applications.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateStartupAppAsync(System.String)">
            <summary>
            Sets selected app as the startup app.
            </summary>
            <param name="appId">App Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateHeadlessStartupAppAsync(System.String)">
            <summary>
            Sets the selected app as the headless startup app.
            </summary>
            <param name="appId">App Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoveHeadlessStartupAppAsync(System.String)">
            <summary>
            Removes the selected app from the headless startup app list.
            </summary>
            <param name="appId">App Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ActivatePackageAsync(System.String)">
            <summary>
            Activiates the selected app package.
            </summary>
            <param name="appId">App Id.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppsListInfo">
            <summary>
            Application list info.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppsListInfo.DefaultApp">
            <summary>
            Gets the default application 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppsListInfo.AppPackages">
            <summary>
            Gets the application packages
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage">
            <summary>
            Application package.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage.IsStartup">
            <summary>
            Gets a value indicating whether the app is the startup app
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage.PackageFullName">
            <summary>
            Gets the complate package name
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HeadlessAppsListInfo">
            <summary>
            Headless app list information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.HeadlessAppsListInfo.AppPackages">
            <summary>
            Gets the list of headless application packages
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListApi">
            <summary>
            List Audio Devices API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetRenderVolumeApi">
            <summary>
            API to set render volume on audio devices connected to IoT Core devices.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetCaptureVolumeApi">
            <summary>
            API to set capture volume on audio devices connected to IoT Core devices.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAudioDeviceListInfoAsync">
            <summary>
            Gets the Audio Device List Information.
            </summary>
            <returns>String containing the Audio Device List information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetRenderVolumeAsync(System.String)">
            <summary>
            Sets volume for the audio devices.
            </summary>
            <param name="renderVolume">Render Volume.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetCaptureVolumeAsync(System.String)">
            <summary>
            Sets volume for the audio devices.
            </summary>
            <param name="captureVolume">Capture Volume.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo">
            <summary>
            Audio Device List information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.RenderName">
            <summary>
            Gets the audio device name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.RenderVolume">
            <summary>
             Gets the audio device volume
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.CaptureName">
            <summary>
            Gets the microphones name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.CaptureVolume">
            <summary>
             Gets the microphones volume
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.LabelStatus">
            <summary>
             Gets the status of a failed devices 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AudioDeviceListInfo.LabelErrorCode">
            <summary>
             Gets the error code for the device failure 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandApi">
            <summary>
            IOT Run Command API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandWithoutOutputApi">
            <summary>
            IOT Run Command Without Output API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandAsync(System.String,System.String)">
            <summary>
            Runs the command.
            </summary>
            <param name="command">The command.</param>
            <param name="runAsDefaultAccount">Run As Default Account.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandWithoutOutputAsync(System.String,System.String,System.String)">
            <summary>
            Runs the command.
            </summary>
            <param name="commandWithoutOutput">Command Without Output.</param>
            <param name="runAsDefaultAccount">Run As Default Account.</param>
            <param name="timeout">The timeout value.</param>
            <returns>String containing the output after the command is executed.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandOutputInfo">
            <summary>
            Run command output.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RunCommandOutputInfo.Output">
            <summary>
            Gets the output for the command executed.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IcsInterfacesApi">
            <summary>
            IOT ICS Interface API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IcSharingApi">
            <summary>
            IOT ICS Sharing API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetIcsInterfacesInfoAsync">
            <summary>
            Gets the internet connection sharing(ICS) interfaces .
            </summary>
            <returns>String containing the internet connection sharing(ICS) interfaces.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IcSharingStartAsync(System.String,System.String)">
            <summary>
            Starts internet connection sharing(ICS).
            </summary>
            <param name="privateInterface">Private Interface.</param>
            <param name="publicInterface">Public Interface.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IcSharingStopAsync(System.String,System.String)">
            <summary>
             Stops internet connection sharing(ICS).
            </summary>
            <param name="privateInterface">Private Interface.</param>
            <param name="publicInterface">Public Interface.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IscInterfacesInfo">
            <summary>
             internet connection sharing(ICS) interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IscInterfacesInfo.PrivateInterfaces">
            <summary>
            Gets the internet connection sharing(ICS) private interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IscInterfacesInfo.PublicInterfaces">
            <summary>
             Gets the internet connection sharing(ICS) public interfaces.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SoftAPSettingsApi">
            <summary>
            IOT SoftAP Settings API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsApi">
            <summary>
            IOT  AllJoyn Settings API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetSoftAPSettingsInfoAsync">
            <summary>
            Retrieves the Soft AP Settings Info.
            </summary>
            <returns>SoftAPSettingsInfo for this device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAllJoynSettingsInfoAsync">
            <summary>
            Retrieves the All Joyn Settings Info.
            </summary>
            <returns>AllJoynSettingsInfo for this device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetSoftApSettingsAsync(System.String,System.String,System.String)">
            <summary>
            Sets SoftAp Settings.
            </summary>
            <param name="softApStatus">SoftAp Status.</param>
            <param name="softApSsid">SoftAp Ssid.</param>
            /// <param name="softApPassword">SoftAp Password.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetAllJoynSettingsAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Sets AllJoyn Settings.
            </summary>
            <param name="allJoynStatus">AllJoyn Status.</param>
            <param name="allJoynDescription">AllJoyn Description.</param>
            <param name="allJoynManufacturer"> AllJoyn Manufacturer.</param>
            <param name="allJoynModelNumber"> AllJoyn Number.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SoftAPSettingsInfo">
            <summary>
            Object representation for Soft AP Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SoftAPSettingsInfo.SoftAPEnabled">
            <summary>
            Gets whether Soft AP is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SoftAPSettingsInfo.SoftApPassword">
            <summary>
            Gets the Soft AP Password.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SoftAPSettingsInfo.SoftApSsid">
            <summary>
            Gets the Soft AP SSID.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsInfo">
            <summary>
            Object represenation of All Joyn Settings.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsInfo.AllJoynOnboardingDefaultDescription">
            <summary>
            Gets the Default description.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsInfo.AllJoynOnboardingDefaultManufacturer">
            <summary>
            Gets the Default Manufacturer.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsInfo.AllJoynOnboardingEnabled">
            <summary>
            Gets whether this is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AllJoynSettingsInfo.AllJoynOnboardingModelNumber">
            <summary>
            Gets the model number.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsStatusApi">
            <summary>
            Remote status API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsEnableApi">
            <summary>
            Enable Remote Settings API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsDisableApi">
            <summary>
            Disable Remote Settings API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetRemoteSettingsStatusInfoAsync">
            <summary>
            Gets the Remote Settings Status Information.
            </summary>
            <returns>String containing the Remote Settings Status information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsEnableAsync">
            <summary>
            Enables the remote settings.
            </summary>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsDisableAsync">
            <summary>
            Disables the remote settings.
            </summary>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsStatusInfo">
            <summary>
            Remote Settings Status information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsStatusInfo.IsRunning">
            <summary>
            Gets a value indicating whether the service is running.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RemoteSettingsStatusInfo.IsScheduled">
            <summary>
             Gets a value indicating whether the service is scheduled.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IoTOsInfoApi">
            <summary>
            IOT device information API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TimezoneInfoApi">
            <summary>
            IOT device timezone API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeInfoApi">
            <summary>
            IOT device datetime API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ControllerDriverApi">
            <summary>
            IOT device Controller Driver API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayResolutionApi">
            <summary>
            IOT display resolution API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayOrientationApi">
            <summary>
            IOT display orientation API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceNameApi">
            <summary>
            IOT device name API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ResetPasswordApi">
            <summary>
            IOT Device password API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NewRemoteDebuggingPinApi">
            <summary>
            IOT remote debugging pin API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetTimeZoneApi">
            <summary>
            IOT set timezone API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetIoTOSInfoAsync">
            <summary>
            Gets the IoT OS Information.
            </summary>
            <returns>String containing the OS information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetTimezoneInfoAsync">
            <summary>
            Gets the Timezone information.
            </summary>
            <returns>String containing the timezone information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDateTimeInfoAsync">
            <summary>
            Gets the datetime information.
            </summary>
            <returns>String containing the datetime information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetControllerDriverInfoAsync">
            <summary>
            Gets the controller driver information.
            </summary>
            <returns>String containing the controller driver information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDisplayOrientationInfoAsync">
            <summary>
            Gets the dispaly orientation information.
            </summary>
            <returns>String containing the dispaly orientation information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDisplayResolutionInfoAsync">
            <summary>
            Gets the dispaly resolution information.
            </summary>
            <returns>String containing the dispaly resolution information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetIoTDeviceNameAsync(System.String)">
            <summary>
            Sets the Device Name.
            </summary>
            <param name="name">Name to set for the device.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetNewPasswordAsync(System.String,System.String)">
            <summary>
            Sets a new password.
            </summary>
            <param name="oldPassword">Old password.</param>
            <param name="newPassword">New desired password.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetNewRemoteDebuggingPinAsync(System.String)">
            <summary>
            Sets a new remote debugging pin.
            </summary>
            <param name="newPin">New pin.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetControllersDriversAsync(System.String)">
            <summary>
            Sets controllers drivers.
            </summary>
            <param name="newDriver">Driver to set.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetTimeZoneAsync(System.Int32)">
            <summary>
            Sets Timezone.
            </summary>
            <param name="index">Timezone index.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDisplayResolutionAsync(System.String)">
            <summary>
            Sets display resolution.
            </summary>
            <param name="displayResolution">New display resolution.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDisplayOrientationAsync(System.String)">
            <summary>
            Set display orientation.
            </summary>
            <param name="displayOrientation">Desired orientation.</param>
            <returns>Task tracking completion of the REST call.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IoTOSInfo">
            <summary>
            Operating system information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IoTOSInfo.Model">
            <summary>
            Gets the device model
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IoTOSInfo.Name">
            <summary>
             Gets the device name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IoTOSInfo.OSVersion">
            <summary>
            Gets the OS version
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TimezoneInfo">
            <summary>
            Timezone information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TimezoneInfo.CurrentTimeZone">
            <summary>
            Gets the current timezone
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TimezoneInfo.Timezones">
            <summary>
            Gets the list of all timezones
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Timezone">
            <summary>
            Timezone specifications.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Timezone.Description">
            <summary>
            Gets the timezone description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Timezone.Index">
            <summary>
            Gets the timezone index
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Timezone.Name">
            <summary>
            Gets the timezone name
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeInfo">
            <summary>
            DateTime information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeInfo.CurrentDateTime">
            <summary>
            Gets the current date time
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription">
            <summary>
            Current Datetime information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Day">
            <summary>
            Gets the current day
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Hour">
            <summary>
            Gets the current hour 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Min">
            <summary>
            Gets the current minute
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Month">
            <summary>
            Gets the current month 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Sec">
            <summary>
            Gets the current second 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DateTimeDescription.Year">
            <summary>
            Gets the current year 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ControllerDriverInfo">
            <summary>
            Controller Driver information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ControllerDriverInfo.CurrentDriver">
            <summary>
            Gets the current driver information
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ControllerDriverInfo.ControllersDrivers">
            <summary>
            Gets the list of all the controller drivers information
            </summary>         
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ControllerDriverInfo.RequestReboot">
            <summary>
            Gets the request for reboot
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayOrientationInfo">
            <summary>
            Dispaly orientation information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayOrientationInfo.Orientation">
            <summary>
            Gets the dispaly orientation information
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayResolutionInfo">
            <summary>
            Dispaly resolution information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayResolutionInfo.CurrentResolution">
            <summary>
            Gets the current display resolution
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisplayResolutionInfo.Resolutions">
            <summary>
            Gets the list of resolution specifications
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Resolution">
            <summary>
            Dispaly resolution specifications.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Resolution.ResolutionDetail">
            <summary>
            Gets the list of supported display resolutions 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Resolution.Index">
            <summary>
            Gets the index for the resolution information
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ErrorInformation">
            <summary>
            Error information if a request fails.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ErrorInformation.ErrorCode">
            <summary>
            Gets the error code
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ErrorInformation.Status">
            <summary>
            Gets the status of the request
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallTimeApi">
            <summary>
            Install time API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusApi">
            <summary>
            Update status API.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetStatusInfoAsync">
            <summary>
            Gets Status information.
            </summary>
            <returns>String containing the status information.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetUpdateInstallTimeAsync">
            <summary>
            Gets the update install time information.
            </summary>
            <returns>String containing the update install time information.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo">
            <summary>
            Status information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.LastCheckTime">
            <summary>
            Gets last update check time. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.StagingProgress">
            <summary>
            Gets the staging progress. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.LastUpdateTime">
            <summary>
             Gets last update time.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.LastFailTime">
            <summary>
             Gets last fail time.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.UpdateState">
            <summary>
             Gets update status.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StatusInfo.UpdateStatusMessage">
            <summary>
             Gets update status message.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateInstallTimeInfo">
            <summary>
            Update install time information.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateInstallTimeInfo.RebootScheduled">
            <summary>
            Gets whether a reboot is scheduled. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateInstallTimeInfo.RebootScheduledTimeAsString">
            <summary>
            Gets the time when a reboot is scheduled. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateInstallTimeInfo.RebootScheduledTime">
            <summary>
            Gets the time when a reboot is scheduled in DateTime format.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxLiveSandboxApi">
            <summary>
            Endpoint for getting or changing the Xbox Live sandbox for the device.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetXboxLiveSandboxAsync">
            <summary>
            Gets the current Xbox Live sandbox value for this device.
            </summary>
            <returns>The value of the current sandbox this device is in.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetXboxLiveSandboxAsync(System.String)">
            <summary>
            Sets the Xbox Live sandbox on the device.
            </summary>
            <param name="newSandbox">The new sandbox to move this device into.</param>
            <returns>Task tracking completion. A reboot will be required may be required before the sandbox change takes effect on some devices.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Sandbox">
            <summary>
            Xbox Live Sandbox representation
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Sandbox.Value">
            <summary>
            Gets or sets the sandbox value
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Sandbox.ToString">
            <summary>
            Returns a string representation of this Sandbox object
            </summary>
            <returns>String representation of the Sandbox object</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetSmbShareInfoApi">
            <summary>
            Endpoint for SMB share info
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetSmbShareInfoAsync">
            <summary>
            Gets the SMB Share info for the device
            </summary>
            <returns>The SMB path, username, and password.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SmbInfo">
            <summary>
            SMB Info representation
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SmbInfo.Path">
            <summary>
            Gets path
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SmbInfo.Username">
            <summary>
            Gets Username
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SmbInfo.Password">
            <summary>
            Gets Password
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SmbInfo.ToString">
            <summary>
            Returns a string representation of this SMB info object
            </summary>
            <returns>String representation of the SMB Info object</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxLiveUserApi">
            <summary>
            Endpoint for User management REST calls
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetXboxLiveUsersAsync">
            <summary>
            Gets the Xbox Live user info for all users present on the device
            </summary>
            <returns>UserList object containing a List of UserInfo objects representing the users on the device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateXboxLiveUsersAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList)">
            <summary>
            Updates info for the Xbox Live users present on the device
            </summary>
            <param name="users">List of users to be updated.</param>
            <returns>Task for tracking async completion.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList">
            <summary>
            List of users
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList.Users">
            <summary>
             Gets the Users list
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList.ToString">
            <summary>
            Returns a string representation of a user list
            </summary>
            <returns>String representation of a user list</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserList.Add(Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo)">
            <summary>
            Adds a new user
            </summary>
            <param name="newUser">New User to be added</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo">
            <summary>
            UserInfo object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.UserId">
            <summary>
            Gets or sets the UserId
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.EmailAddress">
            <summary>
            Gets or sets the EmailAddress
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.Password">
            <summary>
            Gets or sets the Password
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.AutoSignIn">
            <summary>
            Gets or sets Auto sign-in for the user
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.Gamertag">
            <summary>
            Gets the gamer tag
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.SignedIn">
            <summary>
            Gets or sets the user as signed in
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.Delete">
            <summary>
            Gets or sets if the user should be deleted
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.SponsoredUser">
            <summary>
            Gets or sets if this is a sponsored user
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.XboxUserId">
            <summary>
            Gets the Xbox User Id.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UserInfo.ToString">
            <summary>
            Returns a string representation of a user
            </summary>
            <returns>String representation of a user</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RegisterPackageApi">
            <summary>
            REST endpoint for registering a package from a loose folder
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UploadPackageFolderApi">
            <summary>
            REST endpoint for uploading a folder to the DevelopmentFiles loose folder.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RegisterApplicationAsync(System.String)">
            <summary>
            Registers a loose app on the console
            </summary>
            <param name="folderName">Relative folder path where the app can be found.</param>
            <returns>Task for tracking async completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UploadPackageFolderAsync(System.String,System.String)">
            <summary>
            Uploads a folder to the DevelopmentFiles loose folder.
            </summary>
            <param name="sourceFolder">The source folder to upload.</param>
            <param name="destinationFolder">The destination path to upload it to.</param>
            <returns>Task for tracking async completion.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FiddlerSetupApi">
            <summary>
            Endpoint for enabling and disabling a Fiddler proxy.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EnableFiddlerTracingAsync(System.String,System.String,System.String)">
            <summary>
            Enables Fiddler on the console with the specified proxy.
            </summary>
            <param name="proxyAddress">The address of the proxy.</param>
            <param name="proxyPort">The port the proxy is listening on.</param>
            <param name="certFilePath">An optional path to the cert file to use.</param>
            <returns>Task tracking completion. A reboot will be required before the tracing begins.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DisableFiddlerTracingAsync">
            <summary>
            Disables Fiddler on the console.
            </summary>
            <returns>Task tracking completion. A reboot will be required before tracing stops.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetXboxScreenshotApi">
            <summary>
            Endpoint for getting a screenshot.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TakeXboxScreenshotAsync">
            <summary>
            Takes a current screenshot of the device.
            </summary>
            <returns>A stream of the screenshot in PNG form.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingsApi">
            <summary>
            Endpoint for Xbox settings management REST calls.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetXboxSettingsAsync">
            <summary>
            Gets the Xbox Settings info for all settings which can be controlled on the device.
            </summary>
            <returns>XboxSettingList object containing a List of XboxSetting objects representing the settings on the device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetXboxSettingAsync(System.String)">
            <summary>
            Gets the value for a single setting.
            </summary>
            <param name="settingName">Name of the setting we want to retrieve.</param>
            <returns>XboxSetting object containing a information about the settings on the device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UpdateXboxSettingAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting)">
            <summary>
            Updates info for the given Xbox setting.
            </summary>
            <param name="setting">Setting to be updated.</param>
            <returns>Task for tracking async completion.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingList">
            <summary>
            List of settings.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingList"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingList.Settings">
            <summary>
             Gets the Settings list.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSettingList.ToString">
            <summary>
            Returns a string representation of a Settings list.
            </summary>
            <returns>String representation of a settings list.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting">
            <summary>
            XboxSetting object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting.Name">
            <summary>
            Gets or sets the name identifying this setting.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting.Value">
            <summary>
            Gets or sets the value for this setting.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting.Category">
            <summary>
            Gets the category for this setting.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting.RequiresReboot">
            <summary>
            Gets whether changing this setting.
            requires a reboot to take effect.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.XboxSetting.ToString">
            <summary>
            Returns a string representation of a Setting.
            </summary>
            <returns>String representation of a setting.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection">
            <summary>
            Default implementation of the IDevicePortalConnection interface.
            This implementation is designed to be compatibile with all device families.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.deviceCertificate">
            <summary>
            The device's root certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection" /> class.
            </summary>
            <param name="address">The fully qualified (ex: "https:/1.2.3.4:4321") address of the device.</param>
            <param name="userName">The user name used in the connection credentials.</param>
            <param name="password">The password used in the connection credentials.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.#ctor(System.String,System.String,System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection"/> class, using a SecureString to secure the password.
            </summary>
            <param name="address">device identifier</param>
            <param name="userName">WDP username</param>
            <param name="password">WDP password</param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.Connection">
            <summary>
            Gets the URI used to connect to the device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.WebSocketConnection">
            <summary>
            Gets Web Socket Connection property
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.Credentials">
            <summary>
            Gets the credentials used to connect to the device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.Family">
            <summary>
            Gets or sets the device's operating system family.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.OsInfo">
            <summary>
            Gets or sets the operating system information.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.GetDeviceCertificate">
            <summary>
            Gets the provided device certificate.
            </summary>
            <returns>Stored device certificate.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.SetDeviceCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Stores a manually provided device certificate.
            </summary>
            <param name="certificate">The device's root certificate.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.UpdateConnection(System.Boolean)">
            <summary>
            Updates the device's connection Uri.
            </summary>
            <param name="requiresHttps">Indicates whether or not to always require a secure connection.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DefaultDevicePortalConnection.UpdateConnection(Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration,System.Boolean,System.Boolean)">
            <summary>
            Updates the device's connection Uri.
            </summary>
            <param name="ipConfig">Object that describes the current network configuration.</param>
            <param name="requiresHttps">True if an https connection is required, false otherwise.</param>
            <param name="preservePort">True if the previous connection's port is to continue to be used, false otherwise.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.UnvalidatedCertEventHandler">
            <summary>
            Handler for when an unvalidated cert is received.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="certificate">The server's certificate.</param>
            <param name="chain">The cert chain.</param>
            <param name="sslPolicyErrors">Policy Errors.</param>
            <returns>whether the cert should still pass validation.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent">
            <summary>
            This class mimicks <see cref="!:HttpMultipartContent"/>, with two main differences
            1. Simplifies posting files by taking file names instead of managing streams.
            2. Does not quote the boundaries, due to a bug in the device portal
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.items">
            <summary>
            List of items to transfer
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.boundaryString">
            <summary>
            Boundary string
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent" /> class.
            </summary>
            <param name="boundary">The boundary string for file content.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.Add(System.String)">
            <summary>
            Adds a file to the list of items to transfer
            </summary>
            <param name="filename">The name of the file to add</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a range of files to the list of items to transfer
            </summary>
            <param name="filenames">List of files to add</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            Serializes the stream.
            </summary>
            <param name="outStream">Serialized Stream</param>
            <param name="context">The Transport Context</param>
            <returns>Task tracking progress</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.TryComputeLength(System.Int64@)">
            <summary>
            Computes required length for the transfer.
            </summary>
            <param name="length">The computed length value</param>
            <returns>Whether or not the length was successfully computed</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.HttpMultipartFileContent.GetFileHeader(System.IO.FileInfo)">
            <summary>
            Gets the file header for the transfer
            </summary>
            <param name="info">Information about the file</param>
            <returns>A byte array with the file header information</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1">
            <summary>
            HTTP Websocket Wrapper
            </summary>
            <typeparam name="T">Return type for the websocket messages.</typeparam>
            <summary>
            HTTP Websocket Wrapper
            </summary>
            <typeparam name="T">Return type for the websocket messages.</typeparam>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.WSAECONNRESET">
            <summary>
            The hresult for the connection being reset by the peer.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.MaxChunkSizeInBytes">
            <summary>
            The maximum number of bytes that can be received in a single chunk.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.websocket">
            <summary>
            The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> that is being wrapped.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.receivingMessagesTask">
            <summary>
            <see cref="T:System.Threading.Tasks.Task" /> for receiving messages.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.serverCertificateValidationHandler">
            <summary>
            The handler used to validate server certificates.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.#ctor(Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection,System.Func{System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1" /> class.
            </summary>
            <param name="connection">Implementation of a connection object.</param>
            <param name="serverCertificateValidationHandler">Server certificate handler.</param>
            <param name="sendStreams">specifies whether the web socket should send streams (useful for creating mock data).</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.ConnectInternalAsync(System.Uri)">
            <summary>
            Opens a connection to the specified websocket API.
            </summary>
            <param name="endpoint">The uri that the weboscket should connect to</param>
            <returns>The task of opening a connection to the websocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.CloseInternalAsync">
            <summary>
            Closes the connection to the websocket.
            </summary>
            <returns>The task of closing the websocket connection.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.StopListeningForMessagesInternalAsync">
            <summary>
            Stops listening for messages.
            </summary>
            <returns>The task of closing the websocket connection.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.StartListeningForMessagesInternalAsync">
            <summary>
            Starts listening for messages from the websocket. Once they are received they are parsed and the WebSocketMessageReceived event is raised.
            </summary>
            <returns>The task of listening for messages from the websocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.StartListeningForMessagesInternal">
            <summary>
            Starts listening for messages from the websocket. Once they are received they are parsed and the WebSocketMessageReceived event is raised.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.SendMessageInternalAsync(System.String)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="message">The message to send.</param>
            <returns>The task of sending a message to the websocket.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.deviceConnection">
            <summary>
            The device that the <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1" /> is connected to.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.sendStreams">
            <summary>
            Indicates whether the web socket should send streams instead of parsed <see cref="!:T" /> objects
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.WebSocketMessageReceived">
            <summary>
            Gets or sets the message received handler.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.WebSocketStreamReceived">
            <summary>
            Gets or sets the stream received handler.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.IsConnected">
            <summary>
            Gets a value indicating whether the web socket is connected.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.IsListeningForMessages">
            <summary>
            Gets a value indicating whether the web socket is listening for messages.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.ConnectAsync(System.String,System.String)">
            <summary>
            Initialize a connection to the websocket.
            </summary>
            <param name="apiPath">The relative portion of the uri path that specifies the API to call.</param>
            <param name="payload">The query string portion of the uri path that provides the parameterized data.</param>
            <returns>The task of opening the websocket connection.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.CloseAsync">
            <summary>
            Closes the connection to the websocket and stop listening for messages.
            </summary>
            <returns>The task of closing the websocket connection.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.ReceiveMessagesAsync">
            <summary>
            Starts listening for messages from the websocket. Once they are received they are parsed and the WebSocketMessageReceived event is raised.
            </summary>
            <returns>The task of listening for messages from the websocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.SendMessageAsync(System.String)">
            <summary>
            Sends a message to the server.
            </summary>
            <param name="message">The message to send.</param>
            <returns>The task of sending a message to the websocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocket`1.ConvertStreamToMessage(System.IO.Stream)">
            <summary>
            Converts received stream to a parsed <see cref="!:T" /> object and passes it to
            the WebSocketMessageReceived handler. The sendstreams property can be used to
            override this and send the <see cref="T:System.IO.Stream" /> instead via the WebSocketStreamReceived handler.
            </summary>
            <param name="stream">The received stream.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventHandler">
            <summary>
            Application install status event handler
            </summary>
            <param name="sender">sender object</param>
            <param name="args">install args</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus">
            <summary>
            Application install status
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus.None">
            <summary>
            No install status
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus.InProgress">
            <summary>
            Installation is in progress
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus.Completed">
            <summary>
            Installation is completed
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus.Failed">
            <summary>
            Installation failed
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase">
            <summary>
            Install phase
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase.Idle">
            <summary>
            Idle phase
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase.UninstallingPreviousVersion">
            <summary>
            Uninstalling the previous version
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase.CopyingFile">
            <summary>
            Copying the package file
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase.Installing">
            <summary>
            Installing the package
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs">
            <summary>
            Application install status event args
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs.#ctor(Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus,Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs"/> class.
            </summary>
            <param name="status">Install status</param>
            <param name="phase">Install phase</param>
            <param name="message">Install message</param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs.Status">
            <summary>
            Gets the install status
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs.Phase">
            <summary>
            Gets the install phase
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatusEventArgs.Message">
            <summary>
            Gets the install message
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventHandler">
            <summary>
            Handler for reporting on device connection status
            </summary>
            <param name="sender">sender object</param>
            <param name="args">connection status details</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus">
            <summary>
            Connection status enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus.None">
            <summary>
            No status
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus.Connecting">
            <summary>
            Currently Connecting
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus.Connected">
            <summary>
            Connection complete
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus.Failed">
            <summary>
            Connection failed
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase">
            <summary>
            Connection phase enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.Idle">
            <summary>
            Idle phase
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.AcquiringCertificate">
            <summary>
            Acquiring the device certificate
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.DeterminingConnectionRequirements">
            <summary>
            Determining the device connection requirements
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.RequestingOperatingSystemInformation">
            <summary>
            Getting some basic information about the device OS
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.ConnectingToTargetNetwork">
            <summary>
            Connecting the device to a provided network
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase.UpdatingDeviceAddress">
            <summary>
            Updating the device address to reflect the new network
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs">
            <summary>
            Contains the details about the connection status
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs.#ctor(Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatus,Microsoft.Tools.WindowsDevicePortal.DeviceConnectionPhase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs"/> class.
            </summary>
            <param name="status">Status of the connection</param>
            <param name="phase">Phase of the connection</param>
            <param name="message">Optional message describing our connection/phase</param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs.Status">
            <summary>
            Gets the status of the connection attempt
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs.Phase">
            <summary>
            Gets the phase of the connection
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DeviceConnectionStatusEventArgs.Message">
            <summary>
            Gets a message describing the connection status/phase
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventHandler`1">
            <summary>
            Web socket message received event handler
            </summary>
            <param name="sender">Sender <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal"/> object</param>
            <param name="args">Web socket message received args</param>
            <typeparam name="T">Return type for the websocket messages.</typeparam>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs`1">
            <summary>
            Web socket message received event args
            </summary>
            <typeparam name="T">Return type for the websocket messages.</typeparam>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs`1"/> class.
            </summary>
            <param name="message">The message from the web socket.</param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs`1.Message">
            <summary>
            Gets the web socket message
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortalException">
            <summary>
            Base exception class for a Device Portal exception
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.#ctor(System.Net.HttpStatusCode,Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse,System.Uri,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortalException"/> class.
            </summary>
            <param name="statusCode">The Http status code.</param>
            <param name="errorResponse">Http parsed error response message.</param>
            <param name="requestUri">Request URI which threw the exception.</param>
            <param name="message">Optional exception message.</param>
            <param name="innerException">Optional inner exception.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.#ctor(System.Net.HttpStatusCode,System.String,System.Uri,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortalException"/> class.
            </summary>
            <param name="statusCode">Http status code.</param>
            <param name="reason">Reason for exception.</param>
            <param name="requestUri">Request URI which threw the exception.</param>
            <param name="message">Optional message.</param>
            <param name="innerException">Optional inner exception.</param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.StatusCode">
            <summary>
            Gets the HTTP Status code.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.Reason">
            <summary>
            Gets a reason for the exception.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.RequestUri">
            <summary>
            Gets the request URI that threw the exception.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.CreateAsync(System.Net.Http.HttpResponseMessage,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortalException"/> class.
            </summary>
            <param name="responseMessage">Http response message.</param>
            <param name="message">Optional exception message.</param>
            <param name="innerException">Optional inner exception.</param>
            <returns>async task</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data override
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse">
            <summary>
            Object containing additional error information from
            an HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse.ErrorCode">
            <summary>
            Gets the ErrorCode
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse.Code">
            <summary>
            Gets the Code (used by some endpoints instead of ErrorCode).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse.ErrorMessage">
            <summary>
            Gets the ErrorMessage
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse.Reason">
            <summary>
            Gets the Reason (used by some endpoints instead of ErrorMessage).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortalException.HttpErrorResponse.Success">
            <summary>
            Gets a value indicating whether the operation succeeded. For an error this should generally be false if present.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.ThermalStages">
            <summary>
            Thermal State enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ThermalStages.Normal">
            <summary>
            No thermal stage
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ThermalStages.Warm">
            <summary>
            Warm stage
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ThermalStages.Critical">
            <summary>
            Critical stage
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.ThermalStages.Unknown">
            <summary>
            Unknown stage
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventInternalHandler`1">
            <summary>
            Internal Web socket message received event handler
            </summary>
            <param name="sender">sender <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object</param>
            <param name="args">Web socket message received args</param>
            <typeparam name="T">Return type for the websocket messages.</typeparam>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.WebSocketStreamReceivedEventInternalHandler`1">
            <summary>
            Internal Web socket stream received event handler
            </summary>
            <param name="sender">sender <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object</param>
            <param name="args">Web socket message received args</param>
            <typeparam name="T">Return type for the websocket.</typeparam>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection">
            <summary>
            Interface for creating a connection with the device portal.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.Connection">
            <summary>
            Gets the base uri (ex: http://localhost) used to communicate with the device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.WebSocketConnection">
            <summary>
            Gets the base uri (ex: ws://localhost) used to communicate with web sockets on the device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.Credentials">
            <summary>
            Gets the credentials used when communicating with the device.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.Family">
            <summary>
            Gets or sets the family of the device (ex: Windows.Holographic).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.OsInfo">
            <summary>
            Gets or sets information describing the operating system installed on the device.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.UpdateConnection(System.Boolean)">
            <summary>
            Updates the http security requirements for device communication.
            </summary>
            <param name="requiresHttps">True if an https connection is required, false otherwise.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.IDevicePortalConnection.UpdateConnection(Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration,System.Boolean,System.Boolean)">
            <summary>
            Updates the connection details (IP address) and http security requirements used when communicating with the device.
            </summary>
            <param name="ipConfig">Object that describes the current network configuration.</param>
            <param name="requiresHttps">True if an https connection is required, false otherwise.</param>
            <param name="preservePort">True if the previous connection's port is to continue to be used, false otherwise.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.Utilities">
            <summary>
            Utility class for common functions
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.Utilities.BuildEndpoint(System.Uri,System.String,System.String)">
            <summary>
            Constructs a fully formed REST API endpoint uri.
            </summary>
            <param name="baseUri">The base uri (typically, just scheme and authority).</param>
            <param name="path">The path to the REST API method (ex: api/control/restart).</param>
            <param name="payload">Parameterized data required by the REST API.</param>
            <returns>Uri object containing the complete path and query string required to issue the REST API call.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.Utilities.BuildQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a query string from key value pairs.
            </summary>
            <param name="payload">The key value pairs containing the query parameters.</param>
            <returns>Properly formatted query string.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.Utilities.Hex64Encode(System.String)">
            <summary>
            Encodes the specified string as a base64 value.
            </summary>
            <param name="str">The string to encode.</param>
            <returns>Base64 encoded version of the string data.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.Utilities.IsHoloLens(Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms,System.String)">
            <summary>
            Checks if this device is a hololens.
            </summary>
            <param name="platform">The platform.</param>
            <param name="deviceFamily">The device family.</param>
            <returns>Whether this is a hololens.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.Utilities.ModifyEndpointForFilename(System.String@)">
            <summary>
            Modifies an endpoint to match the way we store it in a file.
            This involves replacing a number of characters with underscores.
            </summary>
            <param name="endpoint">The endpoint that is being modified.</param>
        </member>
    </members>
</doc>
