// Copyright Epic Games, Inc. All Rights Reserved.

#include "Common.ush"
#include "WaveOpUtil.ush"

#ifdef OVERRIDE_SHADERBUNDLE_USH
#include "/Platform/Private/ShaderBundle.ush"

struct FUERootConstants
{
	uint  RecordCount;
	uint3 PlatformData;
};

#if PLATFORM_SUPPORTS_SHADER_ROOT_CONSTANTS

#include "/Engine/Shared/HLSLReservedSpaces.h"

ConstantBuffer<FUERootConstants> UERootConstants : UE_HLSL_REGISTER(b, 0, UE_HLSL_SPACE_SHADER_ROOT_CONSTANTS);

#else

FUERootConstants UERootConstants;

#endif

ByteAddressBuffer RecordArgBuffer;
ByteAddressBuffer RecordDataBuffer;
RWByteAddressBuffer RWExecutionBuffer;

#endif

[numthreads(THREADGROUP_SIZEX, 1, 1)]
void DispatchShaderBundleEntry(uint RecordIndex : SV_DispatchThreadID) 
{
#ifdef OVERRIDE_SHADERBUNDLE_USH
	// Note: Make sure the process record call is not under flow control
	ProcessShaderBundleRecord(
		UERootConstants.PlatformData,
		RecordIndex,
		UERootConstants.RecordCount,
		RecordArgBuffer,
		RecordDataBuffer,
		RWExecutionBuffer);
#endif
}
