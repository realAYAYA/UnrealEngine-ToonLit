// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	ScreenPixelShader.usf: Filter pixel shader source.
=============================================================================*/

#include "Common.ush"

#ifndef SCREEN_PS_FROM_SLICE0
	#define SCREEN_PS_FROM_SLICE0   0
#endif

#if SCREEN_PS_FROM_SLICE0
	Texture2DArray InTexture;

	// if source is an array, we only need the first slice
	#define TexOrArr2DSample(Tex, S, UV)			Tex.Sample(S, float3(UV.x, UV.y, 0))
	#define TexOrArr2DSampleLevel(Tex, S, UV, L)	Tex.SampleLevel(S, float3(UV.x, UV.y, 0), L)
#else
	Texture2D InTexture;

	#define TexOrArr2DSample(Tex, S, UV)			Texture2DSample(Tex, S, UV)
	#define TexOrArr2DSampleLevel(Tex, S, UV, L)	Texture2DSampleLevel(Tex, S, UV, L)
#endif

SamplerState InTextureSampler;
int MipLevel;

void Main(
	FScreenVertexOutput Input,
	out float4 OutColor : SV_Target0
	)
{
	OutColor = TexOrArr2DSample(InTexture, InTextureSampler, Input.UV);
}

void MainInvertAlpha(
	FScreenVertexOutput Input,
	out float4 OutColor : SV_Target0
	)
{
	OutColor = TexOrArr2DSample(InTexture, InTextureSampler, Input.UV);
	OutColor.a = 1.f - OutColor.a;
}

void MainsRGBSource(
	FScreenVertexOutput Input,
	out float4 OutColor : SV_Target0
	)
{
	OutColor = TexOrArr2DSample(InTexture, InTextureSampler, Input.UV);
	OutColor.rgb = pow( OutColor.rgb, 1.0f / 2.2f );
}

void MainMipLevel(
	FScreenVertexOutput Input,
	out float4 OutColor : SV_Target0
	)
{
	OutColor = TexOrArr2DSampleLevel(InTexture, InTextureSampler, Input.UV, MipLevel);
}

void MainsRGBSourceMipLevel(
	FScreenVertexOutput Input,
	out float4 OutColor : SV_Target0
	)
{
	OutColor = TexOrArr2DSampleLevel(InTexture, InTextureSampler, Input.UV, MipLevel);
	OutColor.rgb = pow( OutColor.rgb, 1.0f / 2.2f );
}
