// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeAreaLight : FDatasmithFacadeSpotLight {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeAreaLight(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeAreaLight obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeAreaLight(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FDatasmithFacadeAreaLight(string InElementName) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeAreaLight(InElementName), true) {
  }

  public FDatasmithFacadeAreaLight.EAreaLightShape GetLightShape() {
    FDatasmithFacadeAreaLight.EAreaLightShape ret = (FDatasmithFacadeAreaLight.EAreaLightShape)DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_GetLightShape(swigCPtr);
    return ret;
  }

  public void SetLightShape(FDatasmithFacadeAreaLight.EAreaLightShape Shape) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_SetLightShape(swigCPtr, (int)Shape);
  }

  public void SetLightType(FDatasmithFacadeAreaLight.EAreaLightType LightType) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_SetLightType(swigCPtr, (int)LightType);
  }

  public FDatasmithFacadeAreaLight.EAreaLightType GetLightType() {
    FDatasmithFacadeAreaLight.EAreaLightType ret = (FDatasmithFacadeAreaLight.EAreaLightType)DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_GetLightType(swigCPtr);
    return ret;
  }

  public void SetWidth(float InWidth) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_SetWidth(swigCPtr, InWidth);
  }

  public float GetWidth() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_GetWidth(swigCPtr);
    return ret;
  }

  public void SetLength(float InLength) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_SetLength(swigCPtr, InLength);
  }

  public float GetLength() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeAreaLight_GetLength(swigCPtr);
    return ret;
  }

  public enum EAreaLightShape {
    Rectangle,
    Disc,
    Sphere,
    Cylinder,
    None
  }

  public enum EAreaLightType {
    Point,
    Spot,
    IES_DEPRECATED,
    Rect
  }

}
