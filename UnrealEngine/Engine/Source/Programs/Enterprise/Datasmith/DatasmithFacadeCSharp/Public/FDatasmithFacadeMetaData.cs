// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeMetaData : FDatasmithFacadeElement {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeMetaData(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeMetaData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeMetaData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FDatasmithFacadeMetaData(string InElementName) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeMetaData(InElementName), true) {
  }

  public void AddPropertyBoolean(string InPropertyName, bool bInPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyBoolean(swigCPtr, InPropertyName, bInPropertyValue);
  }

  public void AddPropertyColor(string InPropertyName, byte InR, byte InG, byte InB, byte InA) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyColor(swigCPtr, InPropertyName, InR, InG, InB, InA);
  }

  public void AddPropertyFloat(string InPropertyName, float InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyFloat(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddPropertyString(string InPropertyName, string InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyString(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddPropertyTexture(string InPropertyName, string InTextureFilePath) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyTexture(swigCPtr, InPropertyName, InTextureFilePath);
  }

  public void AddPropertyVector(string InPropertyName, string InPropertyValue) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddPropertyVector(swigCPtr, InPropertyName, InPropertyValue);
  }

  public void AddProperty(FDatasmithFacadeKeyValueProperty InProperty) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_AddProperty(swigCPtr, FDatasmithFacadeKeyValueProperty.getCPtr(InProperty));
  }

  public int GetPropertiesCount() {
    int ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_GetPropertiesCount(swigCPtr);
    return ret;
  }

  public FDatasmithFacadeKeyValueProperty GetProperty(int PropertyIndex) {
	global::System.IntPtr objectPtr = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_GetProperty(swigCPtr, PropertyIndex);
	if(objectPtr == global::System.IntPtr.Zero)
	{
		return null;
	}
	else
	{
		return new FDatasmithFacadeKeyValueProperty(objectPtr, true);
	}
}

  public void SetAssociatedElement(FDatasmithFacadeElement Element) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_SetAssociatedElement(swigCPtr, FDatasmithFacadeElement.getCPtr(Element));
  }

  public void RemoveProperty(FDatasmithFacadeKeyValueProperty Property) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_RemoveProperty(swigCPtr, FDatasmithFacadeKeyValueProperty.getCPtr(Property));
  }

  public void ResetProperties() {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeMetaData_ResetProperties(swigCPtr);
  }

}
