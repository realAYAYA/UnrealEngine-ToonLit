// Copyright Epic Games, Inc. All Rights Reserved.

//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FDatasmithFacadeActorCamera : FDatasmithFacadeActor {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FDatasmithFacadeActorCamera(global::System.IntPtr cPtr, bool cMemoryOwn) : base(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FDatasmithFacadeActorCamera obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DatasmithFacadeCSharpPINVOKE.delete_FDatasmithFacadeActorCamera(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FDatasmithFacadeActorCamera(string InElementName) : this(DatasmithFacadeCSharpPINVOKE.new_FDatasmithFacadeActorCamera(InElementName), true) {
  }

  public void SetCameraPosition(double InX, double InY, double InZ) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetCameraPosition(swigCPtr, InX, InY, InZ);
  }

  public void SetCameraRotation(double InForwardX, double InForwardY, double InForwardZ, double InUpX, double InUpY, double InUpZ) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetCameraRotation(swigCPtr, InForwardX, InForwardY, InForwardZ, InUpX, InUpY, InUpZ);
  }

  public void SetSensorWidth(float InSensorWidth) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetSensorWidth(swigCPtr, InSensorWidth);
  }

  public float GetSensorWidth() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetSensorWidth(swigCPtr);
    return ret;
  }

  public void SetAspectRatio(float InAspectRatio) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetAspectRatio(swigCPtr, InAspectRatio);
  }

  public float GetAspectRatio() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetAspectRatio(swigCPtr);
    return ret;
  }

  public void SetFocusDistance(float InTargetX, float InTargetY, float InTargetZ) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetFocusDistance__SWIG_0(swigCPtr, InTargetX, InTargetY, InTargetZ);
  }

  public void SetFocusDistance(float InFocusDistance) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetFocusDistance__SWIG_1(swigCPtr, InFocusDistance);
  }

  public float GetFocusDistance() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetFocusDistance(swigCPtr);
    return ret;
  }

  public void SetFocalLength(float InFocalLength) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetFocalLength__SWIG_0(swigCPtr, InFocalLength);
  }

  public void SetFocalLength(float InFOV, bool bInVerticalFOV) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetFocalLength__SWIG_1(swigCPtr, InFOV, bInVerticalFOV);
  }

  public float GetFocalLength() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetFocalLength(swigCPtr);
    return ret;
  }

  public void SetLookAtActor(string InActorName) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetLookAtActor(swigCPtr, InActorName);
  }

  public string GetLookAtActor() {
    string ret = global::System.Runtime.InteropServices.Marshal.PtrToStringUni(DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetLookAtActor(swigCPtr));
    return ret;
  }

  public void SetLookAtAllowRoll(bool bInAllow) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetLookAtAllowRoll(swigCPtr, bInAllow);
  }

  public bool GetLookAtAllowRoll() {
    bool ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetLookAtAllowRoll(swigCPtr);
    return ret;
  }

  public bool GetEnableDepthOfField() {
    bool ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetEnableDepthOfField(swigCPtr);
    return ret;
  }

  public void SetEnableDepthOfField(bool bInEnableDepthOfField) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetEnableDepthOfField(swigCPtr, bInEnableDepthOfField);
  }

  public float GetFStop() {
    float ret = DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_GetFStop(swigCPtr);
    return ret;
  }

  public void SetFStop(float InFStop) {
    DatasmithFacadeCSharpPINVOKE.FDatasmithFacadeActorCamera_SetFStop(swigCPtr, InFStop);
  }

}
