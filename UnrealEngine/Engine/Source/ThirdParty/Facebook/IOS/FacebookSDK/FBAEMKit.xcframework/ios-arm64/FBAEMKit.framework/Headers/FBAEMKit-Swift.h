// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef FBAEMKIT_SWIFT_H
#define FBAEMKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#import <FBAEMKit/FBAEMKit.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FBAEMKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;

SWIFT_PROTOCOL_NAMED("SKAdNetworkReporting")
@protocol FBSKAdNetworkReporting
- (BOOL)shouldCutoff SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isReportingEvent:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
- (void)checkAndRevokeTimer;
@end

enum FBAEMAdvertiserRuleOperator : NSInteger;
@class NSCoder;

/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMAdvertiserMultiEntryRule")
@interface FBAEMAdvertiserMultiEntryRule : NSObject <FBAEMAdvertiserRuleMatching, NSCopying, NSSecureCoding>
- (nonnull instancetype)initWithOperator:(enum FBAEMAdvertiserRuleOperator)operator_ rules:(NSArray<id <FBAEMAdvertiserRuleMatching>> * _Nonnull)rules OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isMatchedEventParameters:(NSDictionary<NSString *, id> * _Nullable)eventParams SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
/// Describes anything that can provide instances of <code>AEMAdvertiserRuleMatching</code>
SWIFT_PROTOCOL_NAMED("_AEMAdvertiserRuleProviding")
@protocol FBAEMAdvertiserRuleProviding
- (id <FBAEMAdvertiserRuleMatching> _Nullable)createRuleWithJson:(NSString * _Nullable)json SWIFT_WARN_UNUSED_RESULT;
- (id <FBAEMAdvertiserRuleMatching> _Nullable)createRuleWithDict:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMAdvertiserRuleFactory")
@interface FBAEMAdvertiserRuleFactory : NSObject <FBAEMAdvertiserRuleProviding>
- (id <FBAEMAdvertiserRuleMatching> _Nullable)createRuleWithJson:(NSString * _Nullable)json SWIFT_WARN_UNUSED_RESULT;
- (id <FBAEMAdvertiserRuleMatching> _Nullable)createRuleWithDict:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
typedef SWIFT_ENUM_NAMED(NSInteger, FBAEMAdvertiserRuleOperator, "_AEMAdvertiserRuleOperator", open) {
  FBAEMAdvertiserRuleOperatorUnknown = 0,
  FBAEMAdvertiserRuleOperatorAnd = 1,
  FBAEMAdvertiserRuleOperatorOr = 2,
  FBAEMAdvertiserRuleOperatorNot = 3,
  FBAEMAdvertiserRuleOperatorContains = 4,
  FBAEMAdvertiserRuleOperatorNotContains = 5,
  FBAEMAdvertiserRuleOperatorStartsWith = 6,
  FBAEMAdvertiserRuleOperatorCaseInsensitiveContains = 7,
  FBAEMAdvertiserRuleOperatorCaseInsensitiveNotContains = 8,
  FBAEMAdvertiserRuleOperatorCaseInsensitiveStartsWith = 9,
  FBAEMAdvertiserRuleOperatorRegexMatch = 10,
  FBAEMAdvertiserRuleOperatorEqual = 11,
  FBAEMAdvertiserRuleOperatorNotEqual = 12,
  FBAEMAdvertiserRuleOperatorLessThan = 13,
  FBAEMAdvertiserRuleOperatorLessThanOrEqual = 14,
  FBAEMAdvertiserRuleOperatorGreaterThan = 15,
  FBAEMAdvertiserRuleOperatorGreaterThanOrEqual = 16,
  FBAEMAdvertiserRuleOperatorCaseInsensitiveIsAny = 17,
  FBAEMAdvertiserRuleOperatorCaseInsensitiveIsNotAny = 18,
  FBAEMAdvertiserRuleOperatorIsAny = 19,
  FBAEMAdvertiserRuleOperatorIsNotAny = 20,
};


@class NSNumber;

/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMAdvertiserSingleEntryRule")
@interface FBAEMAdvertiserSingleEntryRule : NSObject <FBAEMAdvertiserRuleMatching, NSCopying, NSSecureCoding>
@property (nonatomic, readonly, getter=operator) enum FBAEMAdvertiserRuleOperator operator_;
@property (nonatomic, readonly, copy) NSString * _Nonnull paramKey;
@property (nonatomic, readonly, copy) NSString * _Nullable linguisticCondition;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable arrayCondition;
- (nonnull instancetype)initWithOperator:(enum FBAEMAdvertiserRuleOperator)operator_ paramKey:(NSString * _Nonnull)paramKey linguisticCondition:(NSString * _Nullable)linguisticCondition numericalCondition:(NSNumber * _Nullable)numericalCondition arrayCondition:(NSArray<NSString *> * _Nullable)arrayCondition;
- (BOOL)isMatchedEventParameters:(NSDictionary<NSString *, id> * _Nullable)eventParams SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
+ (void)setSupportsSecureCoding:(BOOL)value;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class FBAEMRule;

/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMConfiguration")
@interface FBAEMConfiguration : NSObject <NSCopying, NSSecureCoding>
@property (nonatomic, readonly) NSInteger cutoffTime;
/// The UNIX timestamp of configuration’s valid date and works as a unqiue identifier of the configuration
@property (nonatomic, readonly) NSInteger validFrom;
@property (nonatomic, readonly, copy) NSString * _Nonnull defaultCurrency;
@property (nonatomic, readonly, copy) NSString * _Nonnull mode;
@property (nonatomic, readonly, copy) NSString * _Nullable businessID;
@property (nonatomic, readonly, strong) id <FBAEMAdvertiserRuleMatching> _Nullable matchingRule;
@property (nonatomic, readonly, copy) NSArray<FBAEMRule *> * _Nonnull conversionValueRules;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull eventSet;
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull currencySet;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) id <FBAEMAdvertiserRuleProviding> _Nullable ruleProvider;)
+ (id <FBAEMAdvertiserRuleProviding> _Nullable)ruleProvider SWIFT_WARN_UNUSED_RESULT;
+ (void)configureWithRuleProvider:(id <FBAEMAdvertiserRuleProviding> _Nonnull)ruleProvider;
- (nullable instancetype)initWithJSON:(NSDictionary<NSString *, id> * _Nullable)dict OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isSameValidFrom:(NSInteger)validFrom businessID:(NSString * _Nullable)businessID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isSameBusinessID:(NSString * _Nullable)businessID SWIFT_WARN_UNUSED_RESULT;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMEvent")
@interface FBAEMEvent : NSObject <NSCopying, NSSecureCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull eventName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable values;
- (nullable instancetype)initWithJSON:(NSDictionary<NSString *, id> * _Nullable)dict OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMInvocation")
@interface FBAEMInvocation : NSObject <NSSecureCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull campaignID;
@property (nonatomic, readonly, copy) NSString * _Nonnull acsToken;
@property (nonatomic, readonly, copy) NSString * _Nullable acsConfigurationID;
@property (nonatomic, readonly, copy) NSString * _Nullable businessID;
@property (nonatomic, readonly, copy) NSString * _Nullable catalogID;
@property (nonatomic, readonly) BOOL isTestMode;
@property (nonatomic) BOOL hasStoreKitAdNetwork;
@property (nonatomic) BOOL isConversionFilteringEligible;
/// The unique identifier of the configuration, it’s the same as configuration’s validFrom
@property (nonatomic, readonly) NSInteger configurationID;
@property (nonatomic, readonly) NSInteger conversionValue;
@property (nonatomic) BOOL isAggregated;
- (nullable instancetype)initWithAppLinkData:(NSDictionary * _Nullable)appLinkData;
- (BOOL)attributeEvent:(NSString * _Nonnull)event currency:(NSString * _Nullable)potentialValueCurrency value:(NSNumber * _Nullable)potentialValue parameters:(NSDictionary<NSString *, id> * _Nullable)parameters configurations:(NSDictionary<NSString *, NSArray<FBAEMConfiguration *> *> * _Nullable)configurations shouldUpdateCache:(BOOL)shouldUpdateCache isRuleMatchInServer:(BOOL)isRuleMatchInServer;
- (BOOL)updateConversionValueWithConfigurations:(NSDictionary<NSString *, NSArray<FBAEMConfiguration *> *> * _Nullable)configurations event:(NSString * _Nonnull)event shouldBoostPriority:(BOOL)shouldBoostPriority SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isOptimizedEvent:(NSString * _Nonnull)event configurations:(NSDictionary<NSString *, NSArray<FBAEMConfiguration *> *> * _Nullable)configurations SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isOutOfWindowWithConfigurations:(NSDictionary<NSString *, NSArray<FBAEMConfiguration *> *> * _Nullable)configurations SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getHMACWithDelay:(NSInteger)delay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)encoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMNetworker")
@interface FBAEMNetworker : NSObject <FBAEMNetworking, NSURLSessionDataDelegate>
@property (nonatomic, copy) NSString * _Nullable userAgentSuffix;
- (void)startGraphRequestWithGraphPath:(NSString * _Nonnull)graphPath parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters tokenString:(NSString * _Nullable)tokenString HTTPMethod:(NSString * _Nullable)method completion:(FBGraphRequestCompletion _Nonnull)completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;

/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMRequestBody")
@interface FBAEMRequestBody : NSObject
/// Compressed version of <code>data</code>
- (NSData * _Nullable)compressedData SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
- (void)appendWithKey:(NSString * _Nullable)key formValue:(NSString * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMRule")
@interface FBAEMRule : NSObject <NSCopying, NSSecureCoding>
@property (nonatomic, readonly) NSInteger conversionValue;
@property (nonatomic, readonly) NSInteger priority;
@property (nonatomic, readonly, copy) NSArray<FBAEMEvent *> * _Nonnull events;
- (nullable instancetype)initWithJSON:(NSDictionary<NSString *, id> * _Nonnull)dict OBJC_DESIGNATED_INITIALIZER;
/// Check if event contains target event with name
/// \param event Event name to check for
///
///
/// returns:
/// Boolean
- (BOOL)containsEvent:(NSString * _Nonnull)event SWIFT_WARN_UNUSED_RESULT;
/// Check if recorded events and values match <code>events</code>
/// \param recordedEvents Recorded events to check
///
/// \param recordedValues Recorded values to check
///
///
/// returns:
/// Boolean
- (BOOL)isMatchedWithRecordedEvents:(NSSet<NSString *> * _Nullable)recordedEvents recordedValues:(NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nullable)recordedValues SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Internal Type exposed to facilitate transition to Swift.
/// API Subject to change or removal without warning. Do not use.
/// @warning INTERNAL - DO NOT USE
SWIFT_CLASS_NAMED("_AEMSettings")
@interface FBAEMSettings : NSObject
+ (NSString * _Nullable)appID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS_NAMED("_AEMUtility")
@interface FBAEMUtility : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FBAEMUtility * _Nonnull sharedUtility;)
+ (FBAEMUtility * _Nonnull)sharedUtility SWIFT_WARN_UNUSED_RESULT;
- (FBAEMInvocation * _Nullable)getMatchedInvocation:(NSArray<FBAEMInvocation *> * _Nonnull)invocations businessID:(NSString * _Nullable)businessID SWIFT_WARN_UNUSED_RESULT;
- (NSNumber * _Nonnull)getInSegmentValue:(NSDictionary<NSString *, id> * _Nullable)parameters matchingRule:(id <FBAEMAdvertiserRuleMatching> _Nullable)matchingRule SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getContent:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getContentID:(NSDictionary<NSString *, id> * _Nullable)parameters SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getBusinessIDsInOrder:(NSArray<FBAEMInvocation *> * _Nonnull)invocations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
