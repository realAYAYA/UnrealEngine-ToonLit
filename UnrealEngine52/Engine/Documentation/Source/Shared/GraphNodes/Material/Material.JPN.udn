INTSourceChangelist:3151861
Availability:NoPublish
Title:
Crumbs:
Description:

[EXCERPT:UMaterialExpressionAtmosphericFogColor]
Atmospheric Fog Material 表現式は、ワールド空間のどの位置からでも、レベルの Atmospheric Fog の現在の色を問い合わせることができます。ワールド位置が表現式へ入力されない場合、問い合わせたピクセルのワールド位置を使用します。マテリアルを、遠方の霧の色に薄れていくように見せる必要がある場合に役立ちます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericFogColor]

[EXCERPT:UMaterialExpressionAtmosphericLightVector]
Atmospheric Light Vector は、'Atmosphere Sun Light' のチェックボックスにチェックを入れると、シーンの Directional Light の Light Vector を返します。太陽の Light Vector を使ってカスタム シェーディングを実行したいエフェクト マテリアルに便利です。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericLightVector]

[EXCERPT:UMaterialExpressionAtmosphericLightColor]
Atmospheric Light Color は、'Atmosphere Sun Light' のチェックボックスにチェックを入れると、シーンの Directional Light の Light Color を返します。太陽の Light Color を使ってカスタム シェーディングを実行したいエフェクト マテリアルに便利です。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Atmosphere
[/VAR]
[/EXCERPT:UMaterialExpressionAtmosphericLightColor]


[EXCERPT:UMaterialExpressionDesaturation]
Desaturation 表現式は入力をデサチュレート (非飽和) にする、または入力された色を一定のパーセンテージに基づいてグレーの影へ変換します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Color#desaturation
[/VAR]
[/EXCERPT:UMaterialExpressionDesaturation]


[EXCERPT:UMaterialExpressionConstant]
Constant 表現式は単精度浮動小数点値を出力します。Constant は、最もよく使用される表現式の 1 つで、入力が想定されるチャンネル数に関係なくどの入力にでも接続できます。例えば、 3 Vector が想定されるひとつの入力へ Constant を接続した場合、その定数値は 3 つのすべてのエレメントに使用されます。ひとつの数だけ入れた場合は、説明領域の小さな三角のアイコンを使ってノードを折りたたむと便利です。 
[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant
[/VAR]
[/EXCERPT:UMaterialExpressionConstant]

[EXCERPT:UMaterialExpressionConstant2Vector]
Constant2Vector は、 2 チャンネルのベクター値を出力します。つまり、 2 つの定数です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant2vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant2Vector]

[EXCERPT:UMaterialExpressionConstant3Vector]
Constant3Vector 表現式は、3 チャンネルのベクター値を出力します。つまり、3 つの定数です。RGB カラーは各チャンネルが色 (赤、緑、青) に割り当てられる Constant3Vector として考えられます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant3vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant3Vector]

[EXCERPT:UMaterialExpressionConstant4Vector]
Constant4Vector 表現式は、4 チャンネルのベクター値を出力します。つまり、4 つの定数です。RGBA カラーは各チャンネルが色 (赤、緑、青、アルファ) に割り当てられるConstant4Vector として考えられます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#constant4vector
[/VAR]
[/EXCERPT:UMaterialExpressionConstant4Vector]

[EXCERPT:UMaterialExpressionDistanceCullFade]
DistanceCullFade 表現式は、黒から白へフェードさせるスカラー値を出力し、オブジェクトがカリング距離内に入ったらオブジェクトをフェードインさせることが出来ます。これは、オブジェクトをフェードアウトさせないことにご注意ください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#distancecullfade
[/VAR]
[/EXCERPT:UMaterialExpressionDistanceCullFade]

[EXCERPT:UMaterialExpressionParticleColor]
ParticleColor 表現式は、Cascade 内で定義されたパーティクルごとのカラーデータをもとに任意のパーティクルの現在のカラーに結合します。これは適切なチャンネル (エミッシブ カラー) に接続しなくてはいけません。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlecolor
[/VAR]
[/EXCERPT:UMaterialExpressionParticleColor]

[EXCERPT:UMaterialExpressionParticleDirection]
ParticleDirection 表現式はパーティクルごとに 3vector (RGB) データを出力します。これは任意のパーティクルが現在移動している方向を表します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particledirection
[/VAR]
[/EXCERPT:UMaterialExpressionParticleDirection]


[EXCERPT:UMaterialExpressionParticleMotionBlurFade]
ParticleMotionBlurFade 式は、モーションブラーの結果としてパーティクル上でフェードする量を値で出力します。1 の値はブラーが無いことを表し、黒は完全なブラーを表します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlemotionblurfade
[/VAR]
[/EXCERPT:UMaterialExpressionParticleMotionBlurFade]

[EXCERPT:UMaterialExpressionParticleRadius]
ParticleRadius 表現式は、各パーティクルの半径をアンリアル単位で個別に出力します。例えば、半径がある特定のポイントに到達すると、マテリアルに変化をもたらすことができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particleradius
[/VAR]
[/EXCERPT:UMaterialExpressionParticleRadius]

[EXCERPT:UMaterialExpressionParticleRelativeTime]
ParticleRelativeTime 表現式は、パーティクルの寿命を表す 0 か 1の値を出力します。 0 はパーティクルの誕生の瞬間を表し、 1 はパーティクルの消滅の瞬間を表します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlerelativetime
[/VAR]
[/EXCERPT:UMaterialExpressionParticleRelativeTime]


[EXCERPT:UMaterialExpressionParticleSize]
Particle Size 表現式は、パーティクル スプライトの X と Y のサイズを出力します。これは、マテリアルの一部の操作に使用できます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlesize
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSize]

[EXCERPT:UMaterialExpressionParticleSpeed]
ParticleSpeed は、各パーティクルの現在の移動速度をアンリアル単位 / 秒で測定して出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#particlespeed
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSpeed]

[EXCERPT:UMaterialExpressionPerInstanceFadeAmount]
PerInstanceFadeAmount 表現式は、例えばフォリッジのような、インスタンス化されたスタティックメッシュに適用されるフェード量に関連した float 値を出力します。これは定数ですが、メッシュの個々のインスタンスに対し異なる数値になります。 

注意：InstancedStaticMesh アクタ、または InstancedStaticMeshComponents を利用する別のアクタに適用時のみ機能します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#perinstancefadeamount
[/VAR]
[/EXCERPT:UMaterialExpressionPerInstanceFadeAmount]

[EXCERPT:UMaterialExpressionPerInstanceRandom]
PerInstanceRandom 表現式は、マテリアルが適用されるスタティックメッシュのインスタンスごとに異なるランダムな float 値を出力します。InstancedStaticMeshComponent はランダムな float 値をインスタンスに設定しますが、必要に応じて何にでも利用できるようにエクスポーズされます (例えば窓の背後のランダムな光源レベル)。これは定数ですが、メッシュの各インスタンスで異なる値となります。

出力値は、ターゲット プラットフォームに対して 0 から RAND_MAX との間の整数になります。 

注意：InstancedStaticMesh アクタ、または InstancedStaticMeshComponents を利用する別のアクタに適用時のみ機能します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#perinstancerandom
[/VAR]
[/EXCERPT:UMaterialExpressionPerInstanceRandom]

[EXCERPT:UMaterialExpressionTime]
Time ノードは、マテリアルに時間の推移を追加する際に使用します。例えば、Panner、Cosine、またはその他の時間に依存する演算があります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#time
[/VAR]
[/EXCERPT:UMaterialExpressionTime]

[EXCERPT:UMaterialExpressionTwoSidedSign]
TwoSidedSign 表現式は、Phong の機能と一致させるために両面カスタム ライティング マテリアルの背面で法線を反転させる場合に使うと便利です。＋1 は表面へ、-1 は、両面マテリアルの背面へ反転します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#twosidedsign
[/VAR]
[/EXCERPT:UMaterialExpressionTwoSidedSign]

[EXCERPT:UMaterialExpressionVertexColor]
VertexColor 表現式は、スプライト パーティクル エミッターに影響を及ぼすカラー モジュールの出力を目的とした、マテリアルのアクセス ポイントです。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#vertexcolor
[/VAR]
[/EXCERPT:UMaterialExpressionVertexColor]

[EXCERPT:UMaterialExpressionActorPositionWS]
ActorPositionWS は、マテリアルが設定されたオブジェクトのワールド空間の位置を表す 3vector (RGB) データを出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#actorpositionws
[/VAR]
[/EXCERPT:UMaterialExpressionActorPositionWS]

[EXCERPT:UMaterialExpressionCameraPositionWS]
CameraWorldPosition 表現式は、ワールド空間のカメラ位置を表す 3 つのチャンネルのベクター値を出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#camerapositionws
[/VAR]
[/EXCERPT:UMaterialExpressionCameraPositionWS]

[EXCERPT:UMaterialExpressionLightmapUVs]
LightmapUVs 表現式は、2 チャンネルのベクター値形式でライトマップの UV テクスチャ座標を出力します。ライトマップ UV が利用不可能な場合、2 チャンネルのベクター値 (0、0) を出力します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#lightmapuvs
[/VAR]
[/EXCERPT:UMaterialExpressionLightmapUVs]

[EXCERPT:UMaterialExpressionObjectOrientation]
ObjectOrientation 表現式は、オブジェクトのワールド空間の Up ベクターを出力します。つまり、マテリアルが適用されたオブジェクトが指しているローカルの正の Z 軸方向です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#objectorientation
[/VAR]
[/EXCERPT:UMaterialExpressionObjectOrientation]

[EXCERPT:UMaterialExpressionObjectPositionWS]
ObjectPositionWS 表現式は、オブジェクト範囲のワールド空間の中心位置を出力します。例えばフォリッジに球状のライティングを作成する際に便利です。 

[VAR:ToolTipFullLink]
# ObjectPositionWS
[/VAR]
[/EXCERPT:UMaterialExpressionObjectPositionWS]

[EXCERPT:UMaterialExpressionObjectRadius]
ObjectRadius は、アンリアル単位の任意のオブジェクトの半径と同等の値を出力します。スケーリングが考慮され、個々のオブジェクトに対して固有の結果となります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#objectradius
[/VAR]
[/EXCERPT:UMaterialExpressionObjectRadius]

[EXCERPT:UMaterialExpressionPanner]
Panner 表現式はテクスチャのパニング、または移動に使用する UV テクスチャ座標を出力します。 

Panner は Time の入力値によって変化する UV を生成します。Coordinate 入力値は、Panner ノードによって生成された UV を操作 (例えばオフセット) する際に利用します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#panner
[/VAR]
[/EXCERPT:UMaterialExpressionPanner]

[EXCERPT:UMaterialExpressionParticlePositionWS]
ParticlePositionWS 表現式は、ワールド空間における各パーティクルの位置を表す 3vector (RGB) データを出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#particlepositionws
[/VAR]
[/EXCERPT:UMaterialExpressionParticlePositionWS]

[EXCERPT:UMaterialExpressionPixelNormalWS]
PixelNormalWS 表現式は、現法線に基づきピクセルが向いている方向を表すベクターデータを出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#pixelnormalws
[/VAR]
[/EXCERPT:UMaterialExpressionPixelNormalWS]

[EXCERPT:UMaterialExpressionRotator]
Rotator 表現式は回転テクスチャの作成に使用できる、2 チャンネルのベクター値形式で UV テクスチャ座標を出力します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#rotator
[/VAR]
[/EXCERPT:UMaterialExpressionRotator]

[EXCERPT:UMaterialExpressionSceneTexelSize]
SceneTexelSize 表現式は、SceneColor や SceneDepth の表現式の使用時と同様に、Texel サイズでオフセットすることができます。これは多重解像度システムでエッジを検出する際に便利です。この計算を使用しない場合、小さな静的な値の使用が強制され、低解像度で一貫性のない結果になります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#scenetexelsize
[/VAR]
[/EXCERPT:UMaterialExpressionSceneTexelSize]

[EXCERPT:UMaterialExpressionScreenPosition]
ScreenPosition 表現式は、現在レンダリング中のピクセルのスクリーン スペースの位置を出力します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#screenposition
[/VAR]
[/EXCERPT:UMaterialExpressionScreenPosition]

[EXCERPT:UMaterialExpressionTextureCoordinate]
TextureCoordinate 表現式は、2 チャンネルのベクター値形式で UV テクスチャ座標を出力し、マテリアルが様々な UV チャンネルを使用できるようにし、タイリング処理を指定したり、メッシュの UV で動作するようにします。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#texturecoordinate
[/VAR]
[/EXCERPT:UMaterialExpressionTextureCoordinate]

[EXCERPT:UMaterialExpressionVertexNormalWS]
VertexNormalWS 表現式はワールド空間の頂点法線を出力します。WorldPositionOffset など頂点シェーダーで実行するマテリアル入力としてのみ使用することができます。メッシュを拡大または収縮させるのに便利です。法線に沿ってオフセットすると UV のシームに沿ってジオメトリが割れる原因になることに注意してください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#vertexnormalws
[/VAR]
[/EXCERPT:UMaterialExpressionVertexNormalWS]

[EXCERPT:UMaterialExpressionViewProperty]
ViewProperty 表現式は、ビューに従属する定数のプロパティを出力します。アクセスするビュー プロパティは設定可能であり、出力のタイプは、こうして設定しアクセスしたプロパティに依存します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Constant#viewproperty
[/VAR]
[/EXCERPT:UMaterialExpressionViewProperty]

[EXCERPT:UMaterialExpressionViewSize]
ViewSize 表現式は、現在のビューサイズをピクセルで表した 2D ベクター値を出力します。スクリーンの現在の解像度を元に、様々な変化をマテリアルにもたらす際に役立ちます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#viewsize
[/VAR]
[/EXCERPT:UMaterialExpressionViewSize]

[EXCERPT:UMaterialExpressionWorldPosition]
WorldPosition 表現式は、ワールド空間の現在のピクセル位置を出力します。視覚化するには、出力値を単に Emissive に接続します。 

一般的な使用方法は、カメラからピクセル (PixelDepth から直行距離と対照的に) までの放射距離を求めます。WorldPosition はテクスチャ座標としての使用や、関連のないメッシュが近距離にある場合にこのテクスチャ座標を使って合わせるのに便利です。これはテクスチャの平面マップに WorldPosition.xy を使用した基本例となります。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Coordinates#worldposition
[/VAR]
[/EXCERPT:UMaterialExpressionWorldPosition]

[EXCERPT:UMaterialExpressionCustom]
Custom は、任意量の入力を実行するカスタム HLSL シェーダーコードを書いて、実行結果を出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Custom#custom
[/VAR]
[/EXCERPT:UMaterialExpressionCustom]

[EXCERPT:UMaterialExpressionCustomTexture]
CustomTexture 表現式は、Custom 表現式内の HLSL コードにあるテクスチャを参照します。通常は tex2D や類似関数を使用して、テクスチャを HLSL コード内でサンプリングします。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Custom#customtexture
[/VAR]
[/EXCERPT:UMaterialExpressionCustomTexture]

[EXCERPT:UMaterialExpressionDecalDerivative]
DecalDerivative は、カスタム UV がないことを前提に、デカールのテクスチャ座標系の微分係数を明示的に計算するために使用します。これは、デカールが投影されるエッジ上で 2x2 ピクセルのミップマップ アーティファクトを生じないようにするためのものですが、異方性フィルタリングをサポートします。

[VAR:ToolTipFullLink]
Engine/Actors/DecalActor
[/VAR]
[/EXCERPT:UMaterialExpressionDecalDerivative]

[EXCERPT:UMaterialExpressionDecalMipmapLevel]
非推奨になりました。代わりに DecalDerivative を使用してください。

[VAR:ToolTipFullLink]
Engine/Actors/DecalActor
[/VAR]
[/EXCERPT:UMaterialExpressionDecalMipmapLevel]

[EXCERPT:UMaterialExpressionDepthFade]
DepthFade 表現式は、半透明オブジェクトが不透明なオブジェクトと交わった時に生じる目障りな継ぎ目を非表示にする際に使用します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#depthfade
[/VAR]
[/EXCERPT:UMaterialExpressionDepthFade]

[EXCERPT:UMaterialExpressionPixelDepth]
PixelDepth 表現式は、現在レンダリングされているピクセルのカメラからの深度または距離を出力します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#pixeldepth
[/VAR]
[/EXCERPT:UMaterialExpressionPixelDepth]

[EXCERPT:UMaterialExpressionSceneDepth]
SceneDepth 表現式は、既存シーンの深度を出力します。PixelDepth と似た機能ですが、PixelDepth は現在描画中のピクセルのサンプリングのみが可能ですが、SceneDepth はどの位置の深度もサンプリングできます。 

注意：SceneDepth は半透明なマテリアルのみに利用されます。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Depth#scenedepth
[/VAR]
[/EXCERPT:UMaterialExpressionSceneDepth]

[EXCERPT:UMaterialExpressionFontSample]
FontSample 表現式は、通常の 2D テクスチャとしてフォント リソースからテクスチャ ページのサンプルを作成します。フォントのアルファ チャンネルには、フォント アウトライン値が格納されます。有効なフォントページのみを指定できます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Font#fontsample
[/VAR]
[/EXCERPT:UMaterialExpressionFontSample]

[EXCERPT:UMaterialExpressionFontSampleParameter]
FontSampleParameter 表現式は、マテリアル インスタンス定数でフォントベースのパラメータをエクスポーズする手段を提供することで、様々なインスタンスで様々なフォントを簡単に使用できるようにします。フォントのアルファ チャンネルには、フォント アウトライン値が格納されます。有効なフォントページのみを指定できます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Font#fontsampleparameter
[/VAR]
[/EXCERPT:UMaterialExpressionFontSampleParameter]

[EXCERPT:UMaterialExpressionMaterialFunctionCall]
MaterialFunctionCall 表現式では、別のマテリアルまたは関数から外部マテリアル関数を使用することができます。外部関数の入出力ノードは関数呼び出しノードの入出力になります。こうした式を配置する場合に、コンテンツ ブラウザ でマテリアル関数が選択されると、自動的に割り当てられます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#materialfunctioncall
[/VAR]
[/EXCERPT:UMaterialExpressionMaterialFunctionCall]

[EXCERPT:UMaterialExpressionStaticBool]
StaticBool 表現式は、関数内のスタティック bool 関数入力のデフォルトの bool 値を与えるために使用されます。このノードは切り替えをしないため、StaticSwitch ノードを併用しなくてはいけません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#staticbool
[/VAR]
[/EXCERPT:UMaterialExpressionStaticBool]

[EXCERPT:UMaterialExpressionStaticSwitch]
StaticSwitch 表現式は、スイッチだけを実装し、パラメータを作成しないという点を除いて、 StaticSwitchParameter 表現式のように機能します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#staticswitch
[/VAR]
[/EXCERPT:UMaterialExpressionStaticSwitch]

[EXCERPT:UMaterialExpressionTextureObject]
TextureObject 表現式を使用して、サンプリングするデフォルトのテクスチャを提供します。TextureObject から実際にサンプリングするには、TextureSample ノードと併用しなくてはいけません。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Functions#textureobject
[/VAR]
[/EXCERPT:UMaterialExpressionTextureObject]


[EXCERPT:UMaterialExpressionLandscapeLayerBlend]
LandscapeLayerBlend ノードを使うと、単一ノードで複数のランドスケープ レイヤーを、テクスチャあるいはマテリアル ネットワークの入力として一緒にブレンドすることができます。詳細は、Using LandscapeLayerBlend Nodes をご覧ください。 

LandscapeLayerBlend ノードのプロパティは、 [詳細] パネルで設定できます。このノードのプロパティには、配列が含まれており、ブレンドするレイヤーに関する情報を入力することができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerblend
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerBlend]

[EXCERPT:UMaterialExpressionLandscapeLayerCoords]
LandscapeLayerCoords ノードは、マテリアル ネットワークをランドスケープ テレインにマッピングするために使用できる UV 座標を生成します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayercoords
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerCoords]

[EXCERPT:UMaterialExpressionLandscapeLayerSwitch]
LandscapeLayerSwitch ノードを使用することによって、ある特定のレイヤーがランドスケープのある領域に寄与していない場合に、マテリアルの演算をいくつか除外するこができます。これにより、特定のレイヤーのウエイトが 0 である場合に不要な計算を削除して、マテリアルを最適化することができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerswitch
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerSwitch]

[EXCERPT:UMaterialExpressionLandscapeLayerWeight]
LandscapeLayerWeight 式は、マテリアル ネットワークを、マテリアルが適用されるランドスケープから取得される関連レイヤーのウエイトに基いてブレンドできるようにします。詳細は、Using LandscapeLayerWeight Node をご覧ください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapelayerweight
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeLayerWeight]

[EXCERPT:UMaterialExpressionLandscapeVisibilityMask]
LandscapeVisibilityMask ノードを使って、ランドスケープで可視化されている部分を取り除き、例えば洞窟などの穴を作成できるようにします。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Landscape#landscapevisibilitymask
[/VAR]
[/EXCERPT:UMaterialExpressionLandscapeVisibilityMask]

[EXCERPT:UMaterialExpressionBreakMaterialAttributes]
Break Material Attributes 表現式は、マテリアル関数システムの特徴である Layered Material を使用する場合に理想的な式です。マテリアル内で Material Layer 関数をする時に、レイヤーの片面のみに使いたい場合があります。 

例えば、スチールのような見栄えの良い一般的なマテリアルを定義するきれいなマテリアル レイヤーがあるとします。全ての属性を使用するのではなく、最終マテリアルのレイヤーから Roughness と Base Color の属性のみを使用するのがいいかもしれません。 

そのような場合、マテリアル レイヤーが受け取る属性全てを個別に分ける Break Material Attributes ノードを使用して、必要な属性のみを接続します。さまざまなマテリアル属性を複雑にブレンドすることも可能になります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/MaterialAttributes#breakmaterialattributes
[/VAR]
[/EXCERPT:UMaterialExpressionBreakMaterialAttributes]

[EXCERPT:UMaterialExpressionMakeMaterialAttributes]
Make Material Attributes ノードは Break Material Attriutes ノードと正反対の機能を持ちます。属性を分割するのではなく、属性をひとつにまとめます。出力のために全ての一般的な属性にアクセス可能となるため、独自の Material Layer 関数を作成する場合に役立ちます。 

複数の Material タイプを定義し、すべてひとつのマテリアル内で一緒にブレンドするなど、複雑な Material 設定にも使用できます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/MaterialAttributes#makematerialattributes
[/VAR]
[/EXCERPT:UMaterialExpressionMakeMaterialAttributes]

[EXCERPT:UMaterialExpressionAbs]
Abs は、数学用語「absolute value」 (絶対値) の略語です。Abs 表現式は絶対値、符号なしの値、または受け取った入力値を出力します。つまり、基本的にマイナス符号を取り除くことで負の数を正の数に変えます。正の数と 0 の場合は変化しません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#abs
[/VAR]
[/EXCERPT:UMaterialExpressionAbs]

[EXCERPT:UMaterialExpressionAdd]
Add 表現式は、2 つの入力値を受け取り、2 つを足して結果を出力します。この加法演算はチャンネル毎に実行されます。つまり、R チャンネルへの入力が加算され、G チャンネルが加算され、そして B チャンネルが加算されるなどのようになります。入力の片方が単一の Constant 値でない限り、両入力は同数のチャンネル数を持っていなくてはいけません。Constant は入力数に関係なくベクターに加法できます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#add
[/VAR]
[/EXCERPT:UMaterialExpressionAdd]

[EXCERPT:UMaterialExpressionAppendVector]
AppendVector 表現式は、チャンネルを結合して、オリジナルよりも多いチャンネルでベクターを作成することができます。例えば、2 つの個別の Constant 値を受け取り、これらを加えて 2 チャンネルのConstant2Vector 値を作成します。単一テクスチャ内でチャンネルの再順序付けをしたり、複数のグレースケール テクスチャを 1 つの RGB カラーテクスチャに結合する際に役立ちます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#appendvector
[/VAR]
[/EXCERPT:UMaterialExpressionAppendVector]

[EXCERPT:UMaterialExpressionCeil]
Ceil 表現式は、値を受け取り、一番近い整数へ 切り上げて 結果を出力します。Floor と Frac も参照してください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#ceil
[/VAR]
[/EXCERPT:UMaterialExpressionCeil]

[EXCERPT:UMaterialExpressionClamp]
Clamp 表現式は、最小値と最大値が定義された指定範囲に受け取った値を制限します。0.0 の最小値と 0.5 の最大値は、結果値が決して 0.0 より小さく、および 0.5 より大きくならないことを意味します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#clamp
[/VAR]
[/EXCERPT:UMaterialExpressionClamp]

[EXCERPT:UMaterialExpressionComponentMask]
ComponentMask 表現式は、入力から出力へ渡すための特定のチャンネル サブセット (R、G、B、および/または A) を選択できます。入力に存在しないチャンネルを通過しようとすると、入力値が単一の定数値でない限りエラーが生じます。その場合、単一値が各チャンネルを通過します。値が通過するチャンネルとして現在選択されたチャンネルは、表現式のタイトルバーに表示されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#componentmask
[/VAR]
[/EXCERPT:UMaterialExpressionComponentMask]

[EXCERPT:UMaterialExpressionCosine]
Cosine 表現式は入力値 (ラジアン単位) のコサインを出力します。通常、この関数は、 Time 表現式をその入力に接続して継続的な振動の波形を出力するために使用します。出力値は -1 と 1 の周期を行ったり来たりします。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#cosine
[/VAR]
[/EXCERPT:UMaterialExpressionCosine]

[EXCERPT:UMaterialExpressionCrossProduct]
CrossProduct 表現式は、3 チャンネルのベクター値の 2 つの入力値の外積を計算し、結果として 3 チャンネルのベクター値を計算します。空間に 2 つのライン (またはベクター) が与えられ、外積は両方の入力に対して垂直なライン (またはベクター) となります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#crossproduct
[/VAR]
[/EXCERPT:UMaterialExpressionCrossProduct]

[EXCERPT:UMaterialExpressionDivide]
Divide 表現式は、2 つの入力値を受け取り、1 番目の値を 2 番目の値で割った結果を出力します。除算はチャンネルごとに計算されます。つまり、最初の R チャンネルが 2 番目のチャンネルによって、最初の G チャンネルが 2 番目のチャンネルによって除算される形です。約数が single float 値でない限り、両方の入力値は同等でなければなりません。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#divide
[/VAR]
[/EXCERPT:UMaterialExpressionDivide]

[EXCERPT:UMaterialExpressionDotProduct]
DotProduct 表現式は、 dot product (内積) 、もしくは別のベクターに投影されたあるベクターの長さを計算します。この計算は、フォールオフの計算に頻繁に使用される技術です。DotProduct は、両方のベクター入力値に同等のチャンネル数を必要とします。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#dotproduct
[/VAR]
[/EXCERPT:UMaterialExpressionDotProduct]

[EXCERPT:UMaterialExpressionFloor]
Floor 表現式は、値を受け取り前の整数へ 切り下げて 結果を出力します。Ceil と Frac も参照してください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#floor
[/VAR]
[/EXCERPT:UMaterialExpressionFloor]

[EXCERPT:UMaterialExpressionFmod]
FMod 表現式は、2 つの入力値を除算した後の浮動小数点値余りを返します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#fmod
[/VAR]
[/EXCERPT:UMaterialExpressionFmod]

[EXCERPT:UMaterialExpressionFrac]
Frac 表現式は、値を受け取り、受け取った値の小数部分を出力します。Ceil と Floor も参照してください。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#frac
[/VAR]
[/EXCERPT:UMaterialExpressionFrac]

[EXCERPT:UMaterialExpressionIf]
If 表現式は、2 つの入力値を比較し、比較結果に基づいて他の 3 つの値のうち 1 つを渡します。比較される 2 つの入力値は single float 値でなければいけません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#if
[/VAR]
[/EXCERPT:UMaterialExpressionIf]

[EXCERPT:UMaterialExpressionLinearInterpolate]
LinearInterpolate 表現式はマスクに使用された第 3 の入力値に基づいて 2 つの入力値をブレンドします。これは Photoshop のレイヤーマスクのように、2 つのテクスチャ間のトランジションを定義するマスクのようなものです。マスク アルファの輝度は、二つの入力値から受け取るカラーの割合を決定します。 

アルファ値が 0.0/black (黒) の場合は最初の入力値が使用されます。アルファ値が 1.0/white (白) の場合は 2 番目の入力値が使用されます。アルファ値がグレー (0.0 と 1.0 の間にある値) の場合、出力値は 2 つの入力値のブレンドになります。ブレンドはチャンネル毎に処理されることにご注意ください。アルファ値が RGB カラーの時、アルファの赤のチャンネル値によって A と B の赤のチャンネル間のブレンドが定義されます。これは、 A と B の緑のチャンネルの間のブレンドを定義する、アルファの緑のチャンネルとは 無関係 です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#linearinterpolate
[/VAR]
[/EXCERPT:UMaterialExpressionLinearInterpolate]

[EXCERPT:UMaterialExpressionMultiply]
Multiply 表現式は、 2 つの入力値を受け取り、その入力値を掛け合わせて結果を出力します。Photoshop のレイヤーのブレンドモードの乗算に似た機能です。乗算はチャンネルごとに計算されます。つまり最初の R チャンネルが 2 番目の値と掛けられ、最初の G チャンネルが 2 番目の値と掛けられるというようになります。片方の値が single float 値でない限り、両方の入力は同等の入力値でなくてはいけません。 

注意：UE のマテリアルは [0,1] に制限されていないことを忘れないでください！カラー / 値が 1 より大きい場合、Multiply 表現式は実際にカラーを明るくします。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#multiply
[/VAR]
[/EXCERPT:UMaterialExpressionMultiply]

[EXCERPT:UMaterialExpressionNormalize]
Normalize 表現式は、入力の標準値を計算して出力します。これは入力値の各コンポーネントが、ベクターの L-2 ノルム (長さ) で割られることを意味します。 

注意：Normal マテリアル出力値に接続された表現式は、標準化する必要はありません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#normalize
[/VAR]
[/EXCERPT:UMaterialExpressionNormalize]

[EXCERPT:UMaterialExpressionOneMinus]
OneMinus 表現式は、入力値を受け取り、1 からその値を引いて出力します。演算はチャンネルごとに実行されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#oneminus
[/VAR]
[/EXCERPT:UMaterialExpressionOneMinus]

[EXCERPT:UMaterialExpressionPower]
Power は、2 つの入力値を受け取り、Base を Exp 乗の累乗をして結果を出力します。言い換えると、Base がその値によって Exp 回乗算されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#power
[/VAR]
[/EXCERPT:UMaterialExpressionPower]

[EXCERPT:UMaterialExpressionLogarithm2]
この対数の式は、2 つの入力を取り、X の対数の底 2 を計算し、その結果を出力します。つまり、X を見つけるために 2 で累乗する回数です。対数の計算はチャンネル毎に行われます。片方の値が single float 値でない限り、両方の入力は同等の入力値でなくてはいけません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#logarithm2
[/VAR]
[/EXCERPT:UMaterialExpressionLogarithm2]

[EXCERPT:UMaterialExpressionSine]
Sine 表現式は入力値 (ラジアン単位) の正弦を出力します。通常、この関数は、 Time 表現式をその入力に接続して継続的な振動の波形を出力するために使用します。出力値は -1 と 1 の周期を行ったり来たりします。この表現式の結果と Cosine 表現式の出力値の違いは、出力波形がほぼ半分にオフセットされることです。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#sine
[/VAR]
[/EXCERPT:UMaterialExpressionSine]

[EXCERPT:UMaterialExpressionSquareRoot]
SquareRoot 表現式は入力値の平方根を出力します。SquareRoot は、single float 入力値のみ演算することが出来ます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#squareroot
[/VAR]
[/EXCERPT:UMaterialExpressionSquareRoot]

[EXCERPT:UMaterialExpressionSubtract]
Subtract ノードは 2 つの入力値を受け取り、最初の入力値から 2 番目の値を減算し差分を出力します。減算はチャンネルごとに実行されます。つまり、 2 番目の入力の R チャンネルが最初の入力値から減算され、 2 番目の入力の G チャンネルから最初の入力値が減算される、といった具合です。 

2 番目の入力値が単一の定数値でない限り、両入力値は同数のチャンネルを持たなくてはいけません。定数は、ベクターのさまざまな入力値から減算されます。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#subtract
[/VAR]
[/EXCERPT:UMaterialExpressionSubtract]

[EXCERPT:UMaterialExpressionCollectionParameter]
Collection Parameter 表現式は、Parameter Collection アセットを参照するために使用します。マテリアル、ブループリントなどの様々なアセットで簡単に再利用できるパラメータ グループです。Parameter Collections の詳細については、Parameter Collections のドキュメントを必ずお読みください。

注意：マテリアルは最大で 2 つの異なる MaterialParameterCollection を参照することができます。ひとつは通常ゲーム全体の値に使用され、もうひとつはレベル固有のパラメータとして使用されます。コレクションは最大で 1024 のスカラー パラメータと、 1024 のベクター パラメータを持つことができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#collectionparameters
[/VAR]
[/EXCERPT:UMaterialExpressionCollectionParameter]

[EXCERPT:UMaterialExpressionDynamicParameter]
DynamicParameter 表現式は、パーティクル エミッタにルートを提供します。このルートから、どんな方法でも使用が可能な最大 4 つの値をマテリアルへ送り込みます。これらの値は、エミッタに配置されている ParameterDynamic モジュールを経由して カスケード に設定されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#dynamicparameter
[/VAR]
[/EXCERPT:UMaterialExpressionDynamicParameter]

[EXCERPT:UMaterialExpressionScalarParameter]
ScalarParameter 表現式は、アクセス可能な single float 値 (Constant) を出力し、これはマテリアルのインスタンス、またはコードでオンザフライで変更することができます。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#scalarparameter
[/VAR]
[/EXCERPT:UMaterialExpressionScalarParameter]

[EXCERPT:UMaterialExpressionStaticBoolParameter]
StaticBoolParameter 表現式は、 Bool 型パラメータのみを作成する点とスイッチを実装しない点を除いて、 StaticSwitchParameter 表現式のように機能します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticboolparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticBoolParameter]

[EXCERPT:UMaterialExpressionStaticSwitchParameter]
StaticSwitchParameter 表現式は 2 つの入力値を受け取り、パラメータの値が True の時、最初の入力値を出力します。 False の場合は 2 番目の入力値を出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticswitchparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticSwitchParameter]

[EXCERPT:UMaterialExpressionVectorParameter]
VectorParameter 表現式は、マテリアルのインスタンスやコードで修正できるパラメータである点を除いて Constant4Vector と全く同じです。VectorParameter の良い点の一つに、カラーピッカーで値を設定できる点があります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#vectorparameter
[/VAR]
[/EXCERPT:UMaterialExpressionVectorParameter]

[EXCERPT:UMaterialExpressionTextureObjectParameter]
TextureObjectParameter 表現式はテクスチャ パラメータを定義します。そしてテクスチャ入力と関数を呼び出すマテリアルに用いるテクスチャ オブジェクトを出力します。このノードはテクスチャを実際にサンプリングしないので、TextureSample ノードを併用しなくてはいけません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#textureobjectparameter
[/VAR]
[/EXCERPT:UMaterialExpressionTextureObjectParameter]

[EXCERPT:UMaterialExpressionTextureSampleParameter2D]
TextureSampleParameter2D 表現式は、マテリアルのインスタンスやコードで修正できるパラメータである点を除いて TextureSample と同一です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparameter2d
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameter2D]

[EXCERPT:UMaterialExpressionTextureSampleParameterCube]
TextureSampleParameterCube 表現式は、キューブマップのみを受け取る点と、マテリアルのインスタンスやコードを通じて修正できるパラメータである点を除いて TextureSample と全く同一です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparametercube
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameterCube]

[EXCERPT:UMaterialExpressionTextureSampleParameterSubUV]
TextureSampleParameterSubUV 表現式は、マテリアルのインスタンスやコードを通じて修正可能な点を除き、ParticleSubUV と同一です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#texturesampleparametersubuv
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSampleParameterSubUV]

[EXCERPT:UMaterialExpressionParticleMacroUV]
ParticleMacroUV は、連続的に 2D テクスチャをパーティクル システム全体へマップする際に使用する UV のテクスチャ座標を出力します。つまり、パーティクル全体でテクスチャがシームレスな動作となります。 

UV は、MacroUVPosition (MacroUV カテゴリにある ParticleSystem 、 Cascade で指定) を中心に配置され、MacroUVRadius は UV がタイル処理されるワールド空間の半径を決定します。

ParticleMacroUV ノードは、法線テクスチャ座標で各パーティクル上にテクスチャをマッピングすることによってパターン化を解消し、パーティクル上に連続的なノイズをマッピングするのに役立ちます。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#particlemacrouv
[/VAR]
[/EXCERPT:UMaterialExpressionParticleMacroUV]

[EXCERPT:UMaterialExpressionParticleSubUV]
ParticleSubUV 表現式は、テクスチャのサブイメージをパーティクルへレンダリングする際に使用します。ParticleSubUV はテクスチャ アニメーションを Cascade で操作できるという点を除いて、フリップブックと似ています。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#particlesubuv
[/VAR]
[/EXCERPT:UMaterialExpressionParticleSubUV]

[EXCERPT:UMaterialExpressionSphericalParticleOpacity]
SphericalParticleOpacity 表現式は、スプライト パーティクルを球体に表示させるプロシージャル オパシティ マップを作成します。インポート テクスチャマップで類似エフェクトを作成するよりも非常にシンプルです。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Particles#sphericalparticleopacity
[/VAR]
[/EXCERPT:UMaterialExpressionSphericalParticleOpacity]

[EXCERPT:UMaterialExpressionSceneColor]
SceneColor 表現式は、既存シーンの色を出力します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#scenecolor
[/VAR]
[/EXCERPT:UMaterialExpressionSceneColor]

[EXCERPT:UMaterialExpressionTextureSample]
TextureSample 表現式は、テクスチャからカラー値を出力します。テクスチャは、通常の Texture2D (法線マップを含む) 、キューブマップまたはムービー テクスチャとなります。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#texturesample
[/VAR]
[/EXCERPT:UMaterialExpressionTextureSample]

[EXCERPT:UMaterialExpressionTextureProperty]
TextureProperty 表現式はテクスチャのサイズやテクセル サイズなどのテクスチャのプロパティを公開します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#textureproperty
[/VAR]
[/EXCERPT:UMaterialExpressionTextureProperty]

[EXCERPT:UMaterialExpressionBlackBody]
Black Body の表現式は、マテリアル内の black body の放射のエフェクトをシミュレーションする式です。ユーザーが温度 (ケルビン単位) を入力すると、その結果得られるカラーと強度を使用して Base Color (基本色) と Emissive (発光色) の値を操作し、物理的に正確な結果を得ることができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#blackbody
[/VAR]
[/EXCERPT:UMaterialExpressionBlackBody]

[EXCERPT:UMaterialExpressionBumpOffset]
BumpOffset は一般的に「視差マッピング」の名で知られているアンリアル エンジン の用語です。BumpOffset 表現式は、ジオメトリを追加することなく深度の錯覚を与えることができます。

 BumpOffset マテリアルはグレースケールの高さマップを使用して深度情報を与えます。高さマップの値が明るいほどマテリアルが「飛び出し」、カメラがサーフェスを移動するとその領域は視差 (シフト) します。高さマップの暗い領域は「遠く離れた」部分で、ほとんどシフトしません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#bumpoffset
[/VAR]
[/EXCERPT:UMaterialExpressionBumpOffset]

[EXCERPT:UMaterialExpressionConstantBiasScale]
ConstantBiasScale 表現式は入力値を受け取り、バイアス値を加算して、スケーリング係数を掛けて結果を出力します。例えば入力データを [-1,1] から [0,1] へ変換する場合、バイアス値に 1.0 、スケーリング係数に 0.5 を使います。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#constantbiasscale
[/VAR]
[/EXCERPT:UMaterialExpressionConstantBiasScale]

[EXCERPT:UMaterialExpressionDDX]
DDX 表現式は DDX 派生の計算を公開します。ピクセル シェーダーの計算で使用される GPU ハードウェア機能です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#ddx
[/VAR]
[/EXCERPT:UMaterialExpressionDDX]

[EXCERPT:UMaterialExpressionDDY]
DDY 表現式は DDY 微分係数の計算を公開します。ピクセル シェーダーの計算で使用される GPU ハードウェア機能です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#ddy
[/VAR]
[/EXCERPT:UMaterialExpressionDDY]

[EXCERPT:UMaterialExpressionDepthOfFieldFunction]
Depth of Field Function 表現式によって、被写界深度によってぼやけたマテリアルをアーティストが調節することができます。0 から 1 の値を出力します。0 は「ピントがあっている」、1 は「完全にぼやけている」ことを表します。

例えば、テクスチャーの鮮明なバージョンとぼやけているバージョンでの補間に役立ちます。深度の入力によって、シーンの被写界深度の既存の計算結果を他の計算でオーバーライドすることができます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#depthoffieldfunction
[/VAR]
[/EXCERPT:UMaterialExpressionDepthOfFieldFunction]

[EXCERPT:UMaterialExpressionDistance]
Distance 表現式は 2 つのポイント間の (ユークリッド) 距離、カラー、位置、ベクターを計算し、その結果の値を出力します。これは 1、 2、 3、 4 つの成分のベクターに機能しますが、表現式への両入力値が同数のチャンネルを持っていなくてはいけません。  

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#distance
[/VAR]
[/EXCERPT:UMaterialExpressionDistance]

[EXCERPT:UMaterialExpressionFresnel]
Fresnel は、表面法線の内積とカメラの方向に基づいてフォールオフを計算します。表面法線が直接カメラに向いている時、0 の値が出力されます。 

表面法線がカメラに垂直に向き合っている時は、1 の値が出力されます。結果は [0,1] にクランプされるため、真ん中にネガティブカラーを持ちません。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#fresnel
[/VAR]
[/EXCERPT:UMaterialExpressionFresnel]

[EXCERPT:UMaterialExpressionLightmassReplace]
LightmassReplace 表現式は、通常のレンダリング目的のマテリアル コンパイル時に Realtime 入力を通過し、グローバル イルミネーション処理の際にマテリアルを Lightmass へエクスポートする時、 Lightmass 入力を通過します。

これは、 WorldPosition のようなエクスポートされたバージョンが正常に処理されない際などマテリアル表現式の回避策として有益です。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#lightmassreplace
[/VAR]
[/EXCERPT:UMaterialExpressionLightmassReplace]

[EXCERPT:UMaterialExpressionNoise]
Noise 表現式は、生成方法について制御できるプロシージャルなノイズ フィールドを作成します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#noise
[/VAR]
[/EXCERPT:UMaterialExpressionNoise]

[EXCERPT:UMaterialExpressionQualitySwitch]
QualitySwitch 表現式は、よりローエンドのデバイス上で低いクオリティを使用するなどエンジンが異なるクオリティ レベルで切り替わった場合に、異なる表現式ネットワークを使用できるようにします。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#qualityswitch
[/VAR]
[/EXCERPT:UMaterialExpressionQualitySwitch]

[EXCERPT:UMaterialExpressionRotateAboutAxis]
RotateAboutAxis 表現式は回転軸、軸の点、回転角度を与えられた 3 チャンネルのベクター入力値を回転させます。簡素なシアよりも高い品質の WorldPositionOffset を使用しているアニメーションで役立ちます。 

注意：Absolute World Position ノードは、RotateAboutAxis ノードが追加されると自動的に作成されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#rotateaboutaxis
[/VAR]
[/EXCERPT:UMaterialExpressionRotateAboutAxis]

[EXCERPT:UMaterialExpressionAntialiasedTextureMask]
AntialiasedTextureMask 表現式は、ソフト (アンチエイリアス化) 遷移マスクを使用したマテリアルを作成します。マスクは 2 つの複雑なマテリアル プロパティのブレンドや、アルファブレンドされたマテリアル (SoftMasked と相性が良い) のフェードアウトに使用します。 

Simple はあるチャンネル (赤、緑、青、アルファ) で特定されたマスクと共にテクスチャを指定し、使用チャンネルを表現式に設定し、比較値を特定します。

チャンネルが 0＝黒から 1＝白の範囲でグレースケール値を格納するとすれば、比較機能はマスクが 0 か 1 かを決定します。表現式はパラメータなので、Texture プロパティは子の MaterialInstances によってオーバーライドされます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#antialiasedtexturemask
[/VAR]
[/EXCERPT:UMaterialExpressionAntialiasedTextureMask]

[EXCERPT:UMaterialExpressionDeriveNormalZ]
DeriveNormal Z 表現式は、 X 成分と Y 成分が入力されてタンジェント空間法線の Z 成分を導き、結果として 3 チャンネルのタンジェント空間法線を出力します。Z は、「Z = sqrt(1 - (x x + y y));」として演算されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#derivenormalz
[/VAR]
[/EXCERPT:UMaterialExpressionDeriveNormalZ]

[EXCERPT:UMaterialExpressionTransform]
Transform 表現式は、3 チャンネル ベクター値をある参照座標系から別の系に変換します。 

デフォルト設定で、マテリアルの全てのシェーダー計算はタンジェント空間で実行されます。ベクター定数、カメラ ベクター、ライト ベクターなどは、マテリアルで使用される前に全てタンジェント空間へ変換されます。

Transform 表現式は、これらのベクターをタンジェント空間からワールド空間、ローカル空間、またはビュー空間の座標系への変換を可能にします。また、ワールド空間ベクターとローカル空間ベクターを他の参照座標系への変換も可能にします。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#transform
[/VAR]
[/EXCERPT:UMaterialExpressionTransform]

[EXCERPT:UMaterialExpressionTransformPosition]
TransformPosition 表現式は、スクリーン スペースから式の TransformType 変数で指定された変換先へ、どんなポジションの変換も有効にします。現時点では、ワールド空間への変換のみをサポートしています。

この表現式は、マテリアルのワールド空間座標の取得に使用します。ワールド位置を視覚化するには、エミッシブへ直接接続します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/VectorOps#transformposition
[/VAR]
[/EXCERPT:UMaterialExpressionTransformPosition]

[EXCERPT:UMaterialExpressionCameraVectorWS]
CameraVector 表現式は、サーフェスに対するカメラ方向、つまり、ピクセルからカメラへの方向を表す 3 つのチャンネルのベクター値を出力します。 

使用例：CameraVector は多くの場合、CameraVector を ComponentMask に接続して疑似的な環境マップに使用し、テクスチャ座標として CameraVector のX チャンネルと Y チャンネルを使用します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#cameravectorws
[/VAR]
[/EXCERPT:UMaterialExpressionCameraVectorWS]

[EXCERPT:UMaterialExpressionLightVector]
ライティングの演算はディファードで行われるため、この表現式は非推奨になっています。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#lightvector
[/VAR]
[/EXCERPT:UMaterialExpressionLightVector]

[EXCERPT:UMaterialExpressionObjectBounds]
Object Bounds 表現式は、各軸のオブジェクトのサイズを出力します。カラーとして使用すると、X 軸、Y 軸、および Z 軸はそれぞれ R、G、および B に対応します。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#objectbounds
[/VAR]
[/EXCERPT:UMaterialExpressionObjectBounds]

[EXCERPT:UMaterialExpressionReflectionVectorWS]
ReflectionVectorWS 表現式は CameraVectorWS と似た性質をもっていますが、サーフェス法線上に反射するカメラ方向を表す 3 チャンネルのベクター値を出力します。 

使用例：ReflectionVector は、反射ベクターの X、Y 成分がキューブマップ テクスチャへの UV として使用される環境マップで一般的に使用されます。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Vector#reflectionvectorws
[/VAR]
[/EXCERPT:UMaterialExpressionReflectionVectorWS]

[EXCERPT:UMaterialExpressionStaticComponentMaskParameter]
StaticComponentMaskParameter 表現式は、マスクの値をインスタンスで設定できる点を除いて、通常のコンポーネント マスクのような動作をします。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Parameters#staticcomponentmaskparameter
[/VAR]
[/EXCERPT:UMaterialExpressionStaticComponentMaskParameter]

[EXCERPT:UMaterialExpressionSpeedTree]
SpeedTree ノードでは、スピードツリーの風と滑らかな LOD の遷移を利用することができます。ジオメトリ タイプ、風のタイプ、LOD タイプ、およびビルボードの閾値は、[詳細] パネルで設定することができます。 

[VAR:ToolTipFullLink]
Engine/Content/SpeedTree/ImportingModelsIntoUE4
[/VAR]
[/EXCERPT:UMaterialExpressionSpeedTree]

[EXCERPT:UMaterialExpressionSceneTexture]
SceneTexture マテリアル表現式を使用して、この式のプロパティで参照するテクスチャを選択することができます。続いて、入出力ノードを使用して、現ピクセルとの隣接するピクセルの深度の違いを計算します (例えば、In=0.1 の時、下部のピクセルへデルタ値を返します)。 

[VAR:ToolTipFullLink]
Engine/Rendering/PostProcessEffects/PostProcessMaterials
[/VAR]
[/EXCERPT:UMaterialExpressionSceneTexture]

[EXCERPT:UMaterialExpressionFeatureLevelSwitch]
Feature Level Switch ノードで、性能が低めのデバイス向けに単純化したマテリアルを作成することができます。 

使用例：10 個のテクスチャがオーバーラップしている複雑な演算のマテリアルもありますが、モバイルの場合は静的なテクスチャが 1 つだけです (機能レベル ES2)。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#featurelevelswitch
[/VAR]
[/EXCERPT:UMaterialExpressionFeatureLevelSwitch]

[EXCERPT:UMaterialExpressionGIReplace]
GIReplace によりアーティストは、マテリアルを GI に使用中に、通常はより単純な別の表現式チェーンを指定することができます。  

使用例：Lightmass スタティック GI と LPV ダイナミック GI が使用します。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Utility#gireplace
[/VAR]
[/EXCERPT:UMaterialExpressionGIReplace]

[EXCERPT:UMaterialExpressionSpriteTextureSampler]
カスタム仕様のスプライト マテリアルの作成は、既存するマテリアルの 1 つを複製して作成、または コンテンツ ブラウザ で新規マテリアルを作成して行います。スプライトがレンダリングされると、スプライト アセットで定義されたテクスチャはマテリアルの「SpriteTexture」という名前が付いたテクスチャ パラメータに繋がります。SpriteTextureSampler ノードを配置することで、この作業が自動的に行えます。

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Textures#spritetexturesampler
[/VAR]
[/EXCERPT:UMaterialExpressionSpriteTextureSampler]

[EXCERPT:UMaterialExpressionMax]
Max 表現式は 2 つの入力を取り込み、この 2 つのうちの最大値を取ります。 

このノードは Photoshop の Lighten に似ています。 
[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#max
[/VAR]
[/EXCERPT:UMaterialExpressionMax]

[EXCERPT:UMaterialExpressionMin]
Min 表現式は 2 つの入力を取り込み、この 2 つのうちの最小値を取ります。 

このノードは Photoshop の Darken に似ています。 

[VAR:ToolTipFullLink]
Engine/Rendering/Materials/ExpressionReference/Math#min
[/VAR]
[/EXCERPT:UMaterialExpressionMin]
