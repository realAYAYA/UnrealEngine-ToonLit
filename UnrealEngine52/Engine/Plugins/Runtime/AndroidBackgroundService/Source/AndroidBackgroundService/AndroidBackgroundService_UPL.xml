<?xml version="1.0" encoding="utf-8"?>
<!-- Google Cloud Messaging plugin additions-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="AndroidBackgroundServices init"/>
	</init>
	
	<buildGradleAdditions>
		<insert>
//AndroidBackgroundService_UPL -- START
	dependencies {
		implementation('androidx.appcompat:appcompat:1.1.0')
		implementation('androidx.work:work-runtime:2.4.0')
		implementation('androidx.concurrent:concurrent-futures:1.1.0')
		implementation 'androidx.multidex:multidex:2.0.1'
		
		//Needed if we ever include guava to avoid conflicts with our use of androidx concurrent futures
		//implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
	}
//AndroidBackgroundService_UPL -- STOP
		</insert>
	</buildGradleAdditions>
	
	<!-- optional files or directories to copy or delete from Intermediate/Android/APK before ndk-build -->
	<prebuildCopies>
		<log text="Copying AndroidBackgroundServices files to staging"/>
		<copyDir src="$S(PluginDir)/Java" dst="$S(BuildDir)/src/com/epicgames/unreal" />
	</prebuildCopies>

	<!-- WorkManager requires compileSdk version 28 or higher -->
	<minimumSDKAPI>
		<insertValue value="28"/>
		<insertNewline/>
	</minimumSDKAPI>

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
			# AndroidBackgroundService UPL Additions -- START

			# Android Background Services Classes with native calls ...

			-keep class com.epicgames.unreal.workmanager.UEWorker {
			public *;
			}

			-keep class com.epicgames.unreal.workmanager.UEWorkManagerJavaInterface {
			public *;
			}

			-keep class com.epicgames.unreal.workmanager.UEWorkManagerJavaInterface$FWorkRequestParametersJavaInterface {
			public *;
			}

			# AndroidBackgroundService UPL Additions -- STOP
		</insert>
	</proguardAdditions>
	
	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>
			//AndroidBackgroundService_UPL -- START

			//Allows us to force load the static members of the GameActivity by accessing a static member since the UE lib is
			//loaded in a static block in GameActivity, thus calling this ensures.
			//Needed as UEWorker can be called without the GameActivity having ever been created in cases where its doing its work
			//either very very early during app init, or when the app is spun up by WorkManager to do the work without launching our activity
			
			private static boolean bLoadedThisClass = false;
			static
			{
				bLoadedThisClass = true;
			}
			public static void ForceLoadThisClass()
			{
				bLoadedThisClass = true;
			}


			//Used as a check if the GameActivity has actually been created and had OnCreate called on it or not
			public static boolean HasOnCreateBeenCalledOnGameActivity()
			{
				return (_activity != null);
			}

			//AndroidBackgroundService_UPL -- STOP
		</insert>
	</gameActivityClassAdditions>	
</root>
