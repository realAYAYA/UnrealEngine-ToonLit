<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Magick.NET-Q16-HDRI-AnyCPU</name>
    </assembly>
    <members>
        <member name="T:ImageMagick.MagickAnyCPU">
            <summary>
            Class that can be used to initialize the AnyCPU version of Magick.NET.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickAnyCPU.CacheDirectory">
            <summary>
            Gets or sets the directory that will be used by Magick.NET to store the embedded assemblies.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickAnyCPU.HasSharedCacheDirectory">
            <summary>
            Gets or sets a value indicating whether the security permissions of the embeded library
            should be changed when it is written to disk. Only set this to true when multiple
            application pools with different idententies need to execute the same library.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorBase">
            <summary>
            Base class for colors.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorBase.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorBase"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="P:ImageMagick.ColorBase.Color">
            <summary>
            Gets the actual color of this instance.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorBase.op_Equality(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.ColorBase"/> instances are considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.op_Inequality(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.ColorBase"/> instances are not considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.op_GreaterThan(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.ColorBase"/> is more than the second <see cref="T:ImageMagick.ColorBase"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.op_LessThan(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.ColorBase"/> is less than the second <see cref="T:ImageMagick.ColorBase"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.op_GreaterThanOrEqual(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.ColorBase"/> is more than or equal to the second <see cref="T:ImageMagick.ColorBase"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.op_LessThanOrEqual(ImageMagick.ColorBase,ImageMagick.ColorBase)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.ColorBase"/> is less than or equal to the second <see cref="T:ImageMagick.ColorBase"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.ColorBase"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.ColorBase.CompareTo(ImageMagick.ColorBase)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="other">The object to compare this color with.</param>
            <returns>A signed number indicating the relative values of this instance and value.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current instance.
            </summary>
            <param name="obj">The object to compare this color with.</param>
            <returns>True when the specified object is equal to the current instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.Equals(ImageMagick.ColorBase)">
            <summary>
            Determines whether the specified color is equal to the current color.
            </summary>
            <param name="other">The color to compare this color with.</param>
            <returns>True when the specified color is equal to the current instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.FuzzyEquals(ImageMagick.ColorBase,ImageMagick.Percentage)">
            <summary>
            Determines whether the specified color is fuzzy equal to the current color.
            </summary>
            <param name="other">The color to compare this color with.</param>
            <param name="fuzz">The fuzz factor.</param>
            <returns>True when the specified color is fuzzy equal to the current instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.ToMagickColor">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <returns>A <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.ToString">
            <summary>
            Converts the value of this instance to a hexadecimal string.
            </summary>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.ColorBase.UpdateColor">
            <summary>
            Updates the color value from an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorCMYK">
            <summary>
            Class that represents a CMYK color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorCMYK"/> class.
            </summary>
            <param name="cyan">Cyan component value of this color.</param>
            <param name="magenta">Magenta component value of this color.</param>
            <param name="yellow">Yellow component value of this color.</param>
            <param name="key">Key (black) component value of this color.</param>
        </member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorCMYK"/> class.
            </summary>
            <param name="cyan">Cyan component value of this color.</param>
            <param name="magenta">Magenta component value of this color.</param>
            <param name="yellow">Yellow component value of this color.</param>
            <param name="key">Key (black) component value of this color.</param>
            <param name="alpha">Alpha component value of this color.</param>
        </member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorCMYK"/> class.
            </summary>
            <param name="cyan">Cyan component value of this color.</param>
            <param name="magenta">Magenta component value of this color.</param>
            <param name="yellow">Yellow component value of this color.</param>
            <param name="key">Key (black) component value of this color.</param>
        </member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorCMYK"/> class.
            </summary>
            <param name="cyan">Cyan component value of this color.</param>
            <param name="magenta">Magenta component value of this color.</param>
            <param name="yellow">Yellow component value of this color.</param>
            <param name="key">Key (black) component value of this color.</param>
            <param name="alpha">Alpha component value of this color.</param>
        </member>
        <member name="M:ImageMagick.ColorCMYK.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorCMYK"/> class.
            </summary>
            <param name="color">The CMYK hex string or name of the color (http://www.imagemagick.org/script/color.php).
            For example: #F000, #FF000000, #FFFF000000000000.</param>
        </member>
        <member name="P:ImageMagick.ColorCMYK.A">
            <summary>
            Gets or sets the alpha component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorCMYK.C">
            <summary>
            Gets or sets the cyan component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorCMYK.K">
            <summary>
            Gets or sets the key (black) component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorCMYK.M">
            <summary>
            Gets or sets the magenta component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorCMYK.Y">
            <summary>
            Gets or sets the yellow component value of this color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorCMYK.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorCMYK">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorCMYK"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorCMYK.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorCMYK"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.ColorGray">
            <summary>
             Class that represents a gray color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorGray.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorGray"/> class.
            </summary>
            <param name="shade">Value between 0.0 - 1.0.</param>
        </member>
        <member name="P:ImageMagick.ColorGray.Shade">
            <summary>
            Gets or sets the shade of this color (value between 0.0 - 1.0).
            </summary>
        </member>
        <member name="M:ImageMagick.ColorGray.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorGray">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorGray"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorGray.FromMagickColor(ImageMagick.MagickColor)">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorGray"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorGray.UpdateColor">
            <summary>
            Updates the color value in an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorHSL">
            <summary>
            Class that represents a HSL color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorHSL.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorHSL"/> class.
            </summary>
            <param name="hue">Hue component value of this color.</param>
            <param name="saturation">Saturation component value of this color.</param>
            <param name="lightness">Lightness component value of this color.</param>
        </member>
        <member name="P:ImageMagick.ColorHSL.Hue">
            <summary>
            Gets or sets the hue component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorHSL.Lightness">
            <summary>
            Gets or sets the lightness component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorHSL.Saturation">
            <summary>
            Gets or sets the saturation component value of this color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorHSL.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorHSL">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorHSL"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorHSL.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorHSL"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorHSL.UpdateColor">
            <summary>
            Updates the color value in an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorHSV">
            <summary>
            Class that represents a HSV color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorHSV.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorHSV"/> class.
            </summary>
            <param name="hue">Hue component value of this color.</param>
            <param name="saturation">Saturation component value of this color.</param>
            <param name="value">Value component value of this color.</param>
        </member>
        <member name="P:ImageMagick.ColorHSV.Hue">
            <summary>
            Gets or sets the hue component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorHSV.Saturation">
            <summary>
            Gets or sets the saturation component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorHSV.Value">
            <summary>
            Gets or sets the value component value of this color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorHSV.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorHSV">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorHSV"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorHSV.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorHSV"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorHSV.HueShift(System.Double)">
            <summary>
            Performs a hue shift with the specified degrees.
            </summary>
            <param name="degrees">The degrees.</param>
        </member>
        <member name="M:ImageMagick.ColorHSV.UpdateColor">
            <summary>
            Updates the color value in an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorMono">
            <summary>
            Class that represents a monochrome color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorMono.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorMono"/> class.
            </summary>
            <param name="isBlack">Specifies if the color is black or white.</param>
        </member>
        <member name="P:ImageMagick.ColorMono.IsBlack">
            <summary>
            Gets or sets a value indicating whether the color is black or white.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorMono.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorMono">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorMono"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorMono.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorMono"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorMono.UpdateColor">
            <summary>
            Updates the color value in an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.ColorRGB">
            <summary>
            Class that represents a RGB color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorRGB.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorRGB"/> class.
            </summary>
            <param name="value">The color to use.</param>
        </member>
        <member name="M:ImageMagick.ColorRGB.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorRGB"/> class.
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
        </member>
        <member name="P:ImageMagick.ColorRGB.B">
            <summary>
            Gets or sets the blue component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorRGB.G">
            <summary>
            Gets or sets the green component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.ColorRGB.R">
            <summary>
            Gets or sets the red component value of this color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorRGB.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorRGB">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorRGB"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorRGB.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorRGB"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorRGB.ComplementaryColor">
            <summary>
            Returns the complementary color for this color.
            </summary>
            <returns>A <see cref="T:ImageMagick.ColorRGB"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.ColorYUV">
            <summary>
            Class that represents a YUV color.
            </summary>
        </member>
        <member name="M:ImageMagick.ColorYUV.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ColorYUV"/> class.
            </summary>
            <param name="y">Y component value of this color.</param>
            <param name="u">U component value of this color.</param>
            <param name="v">V component value of this color.</param>
        </member>
        <member name="P:ImageMagick.ColorYUV.U">
            <summary>
            Gets or sets the U component value of this color. (value beteeen -0.5 and 0.5).
            </summary>
        </member>
        <member name="P:ImageMagick.ColorYUV.V">
            <summary>
            Gets or sets the V component value of this color. (value beteeen -0.5 and 0.5).
            </summary>
        </member>
        <member name="P:ImageMagick.ColorYUV.Y">
            <summary>
            Gets or sets the Y component value of this color. (value beteeen 0.0 and 1.0).
            </summary>
        </member>
        <member name="M:ImageMagick.ColorYUV.op_Implicit(ImageMagick.MagickColor)~ImageMagick.ColorYUV">
            <summary>
            Converts the specified <see cref="T:ImageMagick.MagickColor"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorYUV"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorYUV.FromMagickColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Converts the specified <see cref="T:ImageMagick.IMagickColor`1"/> to an instance of this type.
            </summary>
            <param name="color">The color to use.</param>
            <returns>A <see cref="T:ImageMagick.ColorYUV"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.ColorYUV.UpdateColor">
            <summary>
            Updates the color value in an inherited class.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickColor">
            <summary>
            Class that represents a color.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
            <param name="red">Red component value of this color (0-65535).</param>
            <param name="green">Green component value of this color (0-65535).</param>
            <param name="blue">Blue component value of this color (0-65535).</param>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
            <param name="red">Red component value of this color (0-65535).</param>
            <param name="green">Green component value of this color (0-65535).</param>
            <param name="blue">Blue component value of this color (0-65535).</param>
            <param name="alpha">Alpha component value of this color (0-65535).</param>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
            <param name="cyan">Cyan component value of this color (0-65535).</param>
            <param name="magenta">Magenta component value of this color (0-65535).</param>
            <param name="yellow">Yellow component value of this color (0-65535).</param>
            <param name="black">Black component value of this color (0-65535).</param>
            <param name="alpha">Alpha component value of this color (0-65535).</param>
        </member>
        <member name="M:ImageMagick.MagickColor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColor"/> class.
            </summary>
            <param name="color">The RGBA/CMYK hex string or name of the color (http://www.imagemagick.org/script/color.php).
            For example: #F000, #FF000000, #FFFF000000000000.</param>
        </member>
        <member name="P:ImageMagick.MagickColor.A">
            <summary>
            Gets or sets the alpha component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColor.B">
            <summary>
            Gets or sets the blue component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColor.G">
            <summary>
            Gets or sets the green component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColor.IsCmyk">
            <summary>
            Gets a value indicating whether the color is a CMYK color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColor.K">
            <summary>
            Gets or sets the key (black) component value of this color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColor.R">
            <summary>
            Gets or sets the red component value of this color.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickColor.op_Equality(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickColor"/> instances are considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.op_Inequality(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickColor"/> instances are not considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.op_GreaterThan(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickColor"/> is more than the second <see cref="T:ImageMagick.MagickColor"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.op_LessThan(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickColor"/> is less than the second <see cref="T:ImageMagick.MagickColor"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.op_GreaterThanOrEqual(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickColor"/> is more than or equal to the second <see cref="T:ImageMagick.MagickColor"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.op_LessThanOrEqual(ImageMagick.MagickColor,ImageMagick.MagickColor)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickColor"/> is less than or equal to the second <see cref="T:ImageMagick.MagickColor"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickColor"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:ImageMagick.MagickColor"/> instance from the specified 8-bit color values (red, green,
            and blue). The alpha value is implicitly 255 (fully opaque).
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
            <returns>A <see cref="T:ImageMagick.MagickColor"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.FromRgba(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:ImageMagick.MagickColor"/> instance from the specified 8-bit color values (red, green,
            blue and alpha).
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
            <param name="alpha">Alpha component value of this color.</param>
            <returns>A <see cref="T:ImageMagick.MagickColor"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.CompareTo(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="other">The color to compare this color with.</param>
            <returns>A signed number indicating the relative values of this instance and value.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current color.
            </summary>
            <param name="obj">The object to compare this color with.</param>
            <returns>True when the specified object is equal to the current color.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.Equals(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Determines whether the specified color is equal to the current color.
            </summary>
            <param name="other">The color to compare this color with.</param>
            <returns>True when the specified color is equal to the current color.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.FuzzyEquals(ImageMagick.IMagickColor{System.Single},ImageMagick.Percentage)">
            <summary>
            Determines whether the specified color is fuzzy equal to the current color.
            </summary>
            <param name="other">The color to compare this color with.</param>
            <param name="fuzz">The fuzz factor.</param>
            <returns>True when the specified color is fuzzy equal to the current instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.SetFromBytes(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes the color with the specified bytes.
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
            <param name="alpha">Alpha component value of this color.</param>
        </member>
        <member name="M:ImageMagick.MagickColor.ToByteArray">
            <summary>
            Converts the value of this instance to a <see cref="T:System.Byte"/> array (RGBA or CMYKA).
            </summary>
            <returns>The <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.ToHexString">
            <summary>
            Converts the value of this instance to a hexadecimal string that will not include the alpha channel if it is opaque.
            </summary>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.ToShortString">
            <summary>
            Converts the value of this instance to a string representation that will not include the alpha channel if it is opaque.
            </summary>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickColor.ToString">
            <summary>
            Converts the value of this instance to a string representation.
            </summary>
            <returns>The <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:ImageMagick.MagickColors">
            <summary>
            Class that contains the same colors as System.Drawing.Colors.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.None">
            <summary>
            Gets a system-defined color that has an RGBA value of #00000000.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Transparent">
            <summary>
            Gets a system-defined color that has an RGBA value of #00000000.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.AliceBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #F0F8FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.AntiqueWhite">
            <summary>
            Gets a system-defined color that has an RGBA value of #FAEBD7FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Aqua">
            <summary>
            Gets a system-defined color that has an RGBA value of #00FFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Aquamarine">
            <summary>
            Gets a system-defined color that has an RGBA value of #7FFFD4FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Azure">
            <summary>
            Gets a system-defined color that has an RGBA value of #F0FFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Beige">
            <summary>
            Gets a system-defined color that has an RGBA value of #F5F5DCFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Bisque">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFE4C4FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Black">
            <summary>
            Gets a system-defined color that has an RGBA value of #000000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.BlanchedAlmond">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFEBCDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Blue">
            <summary>
            Gets a system-defined color that has an RGBA value of #0000FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.BlueViolet">
            <summary>
            Gets a system-defined color that has an RGBA value of #8A2BE2FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Brown">
            <summary>
            Gets a system-defined color that has an RGBA value of #A52A2AFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.BurlyWood">
            <summary>
            Gets a system-defined color that has an RGBA value of #DEB887FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.CadetBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #5F9EA0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Chartreuse">
            <summary>
            Gets a system-defined color that has an RGBA value of #7FFF00FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Chocolate">
            <summary>
            Gets a system-defined color that has an RGBA value of #D2691EFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Coral">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF7F50FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.CornflowerBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #6495EDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Cornsilk">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFF8DCFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Crimson">
            <summary>
            Gets a system-defined color that has an RGBA value of #DC143CFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Cyan">
            <summary>
            Gets a system-defined color that has an RGBA value of #00FFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #00008BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkCyan">
            <summary>
            Gets a system-defined color that has an RGBA value of #008B8BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkGoldenrod">
            <summary>
            Gets a system-defined color that has an RGBA value of #B8860BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #A9A9A9FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #006400FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkKhaki">
            <summary>
            Gets a system-defined color that has an RGBA value of #BDB76BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkMagenta">
            <summary>
            Gets a system-defined color that has an RGBA value of #8B008BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkOliveGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #556B2FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkOrange">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF8C00FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkOrchid">
            <summary>
            Gets a system-defined color that has an RGBA value of #9932CCFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkRed">
            <summary>
            Gets a system-defined color that has an RGBA value of #8B0000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkSalmon">
            <summary>
            Gets a system-defined color that has an RGBA value of #E9967AFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkSeaGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #8FBC8FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkSlateBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #483D8BFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkSlateGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #2F4F4FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkTurquoise">
            <summary>
            Gets a system-defined color that has an RGBA value of #00CED1FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DarkViolet">
            <summary>
            Gets a system-defined color that has an RGBA value of #9400D3FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DeepPink">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF1493FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DeepSkyBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #00BFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DimGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #696969FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.DodgerBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #1E90FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Firebrick">
            <summary>
            Gets a system-defined color that has an RGBA value of #B22222FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.FloralWhite">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFAF0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.ForestGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #228B22FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Fuchsia">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF00FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Gainsboro">
            <summary>
            Gets a system-defined color that has an RGBA value of #DCDCDCFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.GhostWhite">
            <summary>
            Gets a system-defined color that has an RGBA value of #F8F8FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Gold">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFD700FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Goldenrod">
            <summary>
            Gets a system-defined color that has an RGBA value of #DAA520FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Gray">
            <summary>
            Gets a system-defined color that has an RGBA value of #808080FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Green">
            <summary>
            Gets a system-defined color that has an RGBA value of #008000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.GreenYellow">
            <summary>
            Gets a system-defined color that has an RGBA value of #ADFF2FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Honeydew">
            <summary>
            Gets a system-defined color that has an RGBA value of #F0FFF0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.HotPink">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF69B4FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.IndianRed">
            <summary>
            Gets a system-defined color that has an RGBA value of #CD5C5CFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Indigo">
            <summary>
            Gets a system-defined color that has an RGBA value of #4B0082FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Ivory">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFFF0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Khaki">
            <summary>
            Gets a system-defined color that has an RGBA value of #F0E68CFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Lavender">
            <summary>
            Gets a system-defined color that has an RGBA value of #E6E6FAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LavenderBlush">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFF0F5FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LawnGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #7CFC00FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LemonChiffon">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFACDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #ADD8E6FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightCoral">
            <summary>
            Gets a system-defined color that has an RGBA value of #F08080FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightCyan">
            <summary>
            Gets a system-defined color that has an RGBA value of #E0FFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightGoldenrodYellow">
            <summary>
            Gets a system-defined color that has an RGBA value of #FAFAD2FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #90EE90FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #D3D3D3FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightPink">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFB6C1FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightSalmon">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFA07AFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightSeaGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #20B2AAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightSkyBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #87CEFAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightSlateGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #778899FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightSteelBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #B0C4DEFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LightYellow">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFFE0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Lime">
            <summary>
            Gets a system-defined color that has an RGBA value of #00FF00FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.LimeGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #32CD32FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Linen">
            <summary>
            Gets a system-defined color that has an RGBA value of #FAF0E6FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Magenta">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF00FFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Maroon">
            <summary>
            Gets a system-defined color that has an RGBA value of #800000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumAquamarine">
            <summary>
            Gets a system-defined color that has an RGBA value of #66CDAAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #0000CDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumOrchid">
            <summary>
            Gets a system-defined color that has an RGBA value of #BA55D3FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumPurple">
            <summary>
            Gets a system-defined color that has an RGBA value of #9370DBFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumSeaGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #3CB371FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumSlateBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #7B68EEFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumSpringGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #00FA9AFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumTurquoise">
            <summary>
            Gets a system-defined color that has an RGBA value of #48D1CCFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MediumVioletRed">
            <summary>
            Gets a system-defined color that has an RGBA value of #C71585FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MidnightBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #191970FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MintCream">
            <summary>
            Gets a system-defined color that has an RGBA value of #F5FFFAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.MistyRose">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFE4E1FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Moccasin">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFE4B5FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.NavajoWhite">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFDEADFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Navy">
            <summary>
            Gets a system-defined color that has an RGBA value of #000080FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.OldLace">
            <summary>
            Gets a system-defined color that has an RGBA value of #FDF5E6FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Olive">
            <summary>
            Gets a system-defined color that has an RGBA value of #808000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.OliveDrab">
            <summary>
            Gets a system-defined color that has an RGBA value of #6B8E23FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Orange">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFA500FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.OrangeRed">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF4500FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Orchid">
            <summary>
            Gets a system-defined color that has an RGBA value of #DA70D6FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PaleGoldenrod">
            <summary>
            Gets a system-defined color that has an RGBA value of #EEE8AAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PaleGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #98FB98FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PaleTurquoise">
            <summary>
            Gets a system-defined color that has an RGBA value of #AFEEEEFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PaleVioletRed">
            <summary>
            Gets a system-defined color that has an RGBA value of #DB7093FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PapayaWhip">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFEFD5FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PeachPuff">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFDAB9FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Peru">
            <summary>
            Gets a system-defined color that has an RGBA value of #CD853FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Pink">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFC0CBFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Plum">
            <summary>
            Gets a system-defined color that has an RGBA value of #DDA0DDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.PowderBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #B0E0E6FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Purple">
            <summary>
            Gets a system-defined color that has an RGBA value of #800080FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Red">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF0000FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.RosyBrown">
            <summary>
            Gets a system-defined color that has an RGBA value of #BC8F8FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.RoyalBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #4169E1FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SaddleBrown">
            <summary>
            Gets a system-defined color that has an RGBA value of #8B4513FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Salmon">
            <summary>
            Gets a system-defined color that has an RGBA value of #FA8072FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SandyBrown">
            <summary>
            Gets a system-defined color that has an RGBA value of #F4A460FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SeaGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #2E8B57FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SeaShell">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFF5EEFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Sienna">
            <summary>
            Gets a system-defined color that has an RGBA value of #A0522DFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Silver">
            <summary>
            Gets a system-defined color that has an RGBA value of #C0C0C0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SkyBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #87CEEBFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SlateBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #6A5ACDFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SlateGray">
            <summary>
            Gets a system-defined color that has an RGBA value of #708090FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Snow">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFAFAFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SpringGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #00FF7FFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.SteelBlue">
            <summary>
            Gets a system-defined color that has an RGBA value of #4682B4FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Tan">
            <summary>
            Gets a system-defined color that has an RGBA value of #D2B48CFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Teal">
            <summary>
            Gets a system-defined color that has an RGBA value of #008080FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Thistle">
            <summary>
            Gets a system-defined color that has an RGBA value of #D8BFD8FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Tomato">
            <summary>
            Gets a system-defined color that has an RGBA value of #FF6347FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Turquoise">
            <summary>
            Gets a system-defined color that has an RGBA value of #40E0D0FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Violet">
            <summary>
            Gets a system-defined color that has an RGBA value of #EE82EEFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Wheat">
            <summary>
            Gets a system-defined color that has an RGBA value of #F5DEB3FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.White">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFFFFFF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.WhiteSmoke">
            <summary>
            Gets a system-defined color that has an RGBA value of #F5F5F5FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.Yellow">
            <summary>
            Gets a system-defined color that has an RGBA value of #FFFF00FF.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickColors.YellowGreen">
            <summary>
            Gets a system-defined color that has an RGBA value of #9ACD32FF.
            </summary>
        </member>
        <member name="T:ImageMagick.Configuration.ConfigurationFiles">
            <summary>
            Encapsulates the configuration files of ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Default">
            <summary>
            Gets the default configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Colors">
            <summary>
            Gets the colors configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Configure">
            <summary>
            Gets the configure configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Delegates">
            <summary>
            Gets the delegates configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.English">
            <summary>
            Gets the english configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Locale">
            <summary>
            Gets the locale configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Log">
            <summary>
            Gets the log configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Policy">
            <summary>
            Gets the policy configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Thresholds">
            <summary>
            Gets the thresholds configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.Type">
            <summary>
            Gets the type configuration.
            </summary>
        </member>
        <member name="P:ImageMagick.Configuration.ConfigurationFiles.TypeGhostscript">
            <summary>
            Gets the type-ghostscript configuration.
            </summary>
        </member>
        <member name="T:ImageMagick.Defines.DefinesCreator">
            <summary>
            Base class that can create defines.
            </summary>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.#ctor(ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Defines.DefinesCreator"/> class.
            </summary>
            <param name="format">The format where the defines are for.</param>
        </member>
        <member name="P:ImageMagick.Defines.DefinesCreator.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="P:ImageMagick.Defines.DefinesCreator.Format">
            <summary>
            Gets the format where the defines are for.
            </summary>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,System.Boolean)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,System.Double)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,System.Int32)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,System.Int64)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,ImageMagick.IMagickGeometry)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine(System.String,System.String)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine``1(System.String,``0)">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <typeparam name="TEnum">The type of the enumeration.</typeparam>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Defines.DefinesCreator.CreateDefine``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create a define with the specified name and value.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
            <typeparam name="T">The type of the enumerable.</typeparam>
            <returns>A <see cref="T:ImageMagick.MagickDefine"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.Defines.ReadDefinesCreator">
            <summary>
            Base class that can create read defines.
            </summary>
        </member>
        <member name="M:ImageMagick.Defines.ReadDefinesCreator.#ctor(ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Defines.ReadDefinesCreator"/> class.
            </summary>
            <param name="format">The format where the defines are for.</param>
        </member>
        <member name="T:ImageMagick.Defines.WriteDefinesCreator">
            <summary>
            Base class that can create write defines.
            </summary>
        </member>
        <member name="M:ImageMagick.Defines.WriteDefinesCreator.#ctor(ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Defines.WriteDefinesCreator"/> class.
            </summary>
            <param name="format">The format where the defines are for.</param>
        </member>
        <member name="P:ImageMagick.Defines.WriteDefinesCreator.ImageMagick#IWriteDefines#Format">
            <summary>
            Gets the format where the defines are for.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickDefine">
            <summary>
            Class that implements <see cref="T:ImageMagick.IDefine"/>.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickDefine.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickDefine"/> class.
            </summary>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
        </member>
        <member name="M:ImageMagick.MagickDefine.#ctor(ImageMagick.MagickFormat,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickDefine"/> class.
            </summary>
            <param name="format">The format of the define.</param>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
        </member>
        <member name="P:ImageMagick.MagickDefine.Format">
            <summary>
            Gets the format to set the define for.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickDefine.Name">
            <summary>
            Gets the name of the define.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickDefine.Value">
            <summary>
            Gets the value of the define.
            </summary>
        </member>
        <member name="T:ImageMagick.DrawableAffine">
            <summary>
            Adjusts the current affine transformation matrix with the specified affine transformation
            matrix. Note that the current affine transform is adjusted rather than replaced.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAffine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableAffine"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAffine.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableAffine"/> class.
            </summary>
            <param name="scaleX">The X coordinate scaling element.</param>
            <param name="scaleY">The Y coordinate scaling element.</param>
            <param name="shearX">The X coordinate shearing element.</param>
            <param name="shearY">The Y coordinate shearing element.</param>
            <param name="translateX">The X coordinate of the translation element.</param>
            <param name="translateY">The Y coordinate of the translation element.</param>
        </member>
        <member name="P:ImageMagick.DrawableAffine.ScaleX">
            <summary>
            Gets or sets the X coordinate scaling element.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAffine.ScaleY">
            <summary>
            Gets or sets the Y coordinate scaling element.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAffine.ShearX">
            <summary>
            Gets or sets the X coordinate shearing element.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAffine.ShearY">
            <summary>
            Gets or sets the Y coordinate shearing element.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAffine.TranslateX">
            <summary>
            Gets or sets the X coordinate of the translation element.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAffine.TranslateY">
            <summary>
            Gets or sets the Y coordinate of the translation element.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAffine.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="M:ImageMagick.DrawableAffine.Reset">
            <summary>
            Reset to default.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAffine.TransformOrigin(System.Double,System.Double)">
            <summary>
            Sets the origin of coordinate system.
            </summary>
            <param name="translateX">The X coordinate of the translation element.</param>
            <param name="translateY">The Y coordinate of the translation element.</param>
        </member>
        <member name="M:ImageMagick.DrawableAffine.TransformRotation(System.Double)">
            <summary>
            Sets the rotation to use.
            </summary>
            <param name="angle">The angle of the rotation.</param>
        </member>
        <member name="M:ImageMagick.DrawableAffine.TransformScale(System.Double,System.Double)">
            <summary>
            Sets the scale to use.
            </summary>
            <param name="scaleX">The X coordinate scaling element.</param>
            <param name="scaleY">The Y coordinate scaling element.</param>
        </member>
        <member name="M:ImageMagick.DrawableAffine.TransformSkewX(System.Double)">
            <summary>
            Skew to use in X axis.
            </summary>
            <param name="skewX">The X skewing element.</param>
        </member>
        <member name="M:ImageMagick.DrawableAffine.TransformSkewY(System.Double)">
            <summary>
            Skew to use in Y axis.
            </summary>
            <param name="skewY">The Y skewing element.</param>
        </member>
        <member name="T:ImageMagick.DrawableAlpha">
            <summary>
            Paints on the image's alpha channel in order to set effected pixels to transparent.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAlpha.#ctor(System.Double,System.Double,ImageMagick.PaintMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableAlpha"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="paintMethod">The paint method to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableAlpha.PaintMethod">
            <summary>
            Gets or sets the <see cref="P:ImageMagick.DrawableAlpha.PaintMethod"/> to use.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAlpha.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableAlpha.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableAlpha.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableArc">
            <summary>
            Draws an arc falling within a specified bounding rectangle on the image.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableArc.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableArc"/> class.
            </summary>
            <param name="startX">The starting X coordinate of the bounding rectangle.</param>
            <param name="startY">The starting Y coordinate of thebounding rectangle.</param>
            <param name="endX">The ending X coordinate of the bounding rectangle.</param>
            <param name="endY">The ending Y coordinate of the bounding rectangle.</param>
            <param name="startDegrees">The starting degrees of rotation.</param>
            <param name="endDegrees">The ending degrees of rotation.</param>
        </member>
        <member name="P:ImageMagick.DrawableArc.EndDegrees">
            <summary>
            Gets or sets the ending degrees of rotation.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableArc.EndX">
            <summary>
            Gets or sets the ending X coordinate of the bounding rectangle.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableArc.EndY">
            <summary>
            Gets or sets the ending Y coordinate of the bounding rectangle.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableArc.StartDegrees">
            <summary>
            Gets or sets the starting degrees of rotation.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableArc.StartX">
            <summary>
            Gets or sets the starting X coordinate of the bounding rectangle.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableArc.StartY">
            <summary>
            Gets or sets the starting Y coordinate of the bounding rectangle.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableArc.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableBezier">
            <summary>
            Draws a bezier curve through a set of points on the image.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableBezier.#ctor(ImageMagick.PointD[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableBezier"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:ImageMagick.DrawableBezier.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableBezier"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="P:ImageMagick.DrawableBezier.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableBezier.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableBorderColor">
            <summary>
            Sets the border color to be used for drawing bordered objects.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableBorderColor.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableBorderColor"/> class.
            </summary>
            <param name="color">The color of the border.</param>
        </member>
        <member name="P:ImageMagick.DrawableBorderColor.Color">
            <summary>
            Gets or sets the color to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableBorderColor.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableCircle">
            <summary>
            Draws a circle on the image.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableCircle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableCircle"/> class.
            </summary>
            <param name="originX">The origin X coordinate.</param>
            <param name="originY">The origin Y coordinate.</param>
            <param name="perimeterX">The perimeter X coordinate.</param>
            <param name="perimeterY">The perimeter Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawableCircle.OriginX">
            <summary>
            Gets or sets the origin X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableCircle.OriginY">
            <summary>
            Gets or sets the origin X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableCircle.PerimeterX">
            <summary>
            Gets or sets the perimeter X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableCircle.PerimeterY">
            <summary>
            Gets or sets the perimeter X coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableCircle.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableClipPath">
            <summary>
            Associates a named clipping path with the image. Only the areas drawn on by the clipping path
            will be modified as ssize_t as it remains in effect.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableClipPath"/> class.
            </summary>
            <param name="clipPath">The ID of the clip path.</param>
        </member>
        <member name="P:ImageMagick.DrawableClipPath.ClipPath">
            <summary>
            Gets or sets the ID of the clip path.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipPath.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableClipRule">
            <summary>
            Sets the polygon fill rule to be used by the clipping path.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipRule.#ctor(ImageMagick.FillRule)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableClipRule"/> class.
            </summary>
            <param name="fillRule">The rule to use when filling drawn objects.</param>
        </member>
        <member name="P:ImageMagick.DrawableClipRule.FillRule">
            <summary>
            Gets or sets the rule to use when filling drawn objects.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipRule.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableClipUnits">
            <summary>
            Sets the interpretation of clip path units.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipUnits.#ctor(ImageMagick.ClipPathUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableClipUnits"/> class.
            </summary>
            <param name="units">The clip path units.</param>
        </member>
        <member name="P:ImageMagick.DrawableClipUnits.Units">
            <summary>
            Gets or sets the clip path units.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableClipUnits.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableColor">
            <summary>
            Draws color on image using the current fill color, starting at specified position, and using
            specified paint method.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableColor.#ctor(System.Double,System.Double,ImageMagick.PaintMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableColor"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="paintMethod">The paint method to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableColor.PaintMethod">
            <summary>
            Gets or sets the PaintMethod to use.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableColor.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableColor.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableColor.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableComposite">
            <summary>
            Encapsulation of the DrawableCompositeImage object.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableComposite.#ctor(System.Double,System.Double,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableComposite"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="image">The image to draw.</param>
        </member>
        <member name="M:ImageMagick.DrawableComposite.#ctor(System.Double,System.Double,ImageMagick.CompositeOperator,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableComposite"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="image">The image to draw.</param>
        </member>
        <member name="M:ImageMagick.DrawableComposite.#ctor(ImageMagick.IMagickGeometry,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableComposite"/> class.
            </summary>
            <param name="offset">The offset from origin.</param>
            <param name="image">The image to draw.</param>
        </member>
        <member name="M:ImageMagick.DrawableComposite.#ctor(ImageMagick.IMagickGeometry,ImageMagick.CompositeOperator,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableComposite"/> class.
            </summary>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="image">The image to draw.</param>
        </member>
        <member name="P:ImageMagick.DrawableComposite.Compose">
            <summary>
            Gets or sets the composition operator.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableComposite.Height">
            <summary>
            Gets or sets the height to scale the image to.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableComposite.Width">
            <summary>
            Gets or sets the width to scale the image to.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableComposite.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableComposite.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableComposite.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableDensity">
            <summary>
            Encapsulation of the DrawableDensity object.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableDensity.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableDensity"/> class.
            </summary>
            <param name="density">The vertical and horizontal resolution.</param>
        </member>
        <member name="M:ImageMagick.DrawableDensity.#ctor(ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableDensity"/> class.
            </summary>
            <param name="pointDensity">The vertical and horizontal resolution.</param>
        </member>
        <member name="P:ImageMagick.DrawableDensity.Density">
            <summary>
            Gets or sets the vertical and horizontal resolution.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableDensity.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableEllipse">
            <summary>
            Draws an ellipse on the image.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableEllipse.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableEllipse"/> class.
            </summary>
            <param name="originX">The origin X coordinate.</param>
            <param name="originY">The origin Y coordinate.</param>
            <param name="radiusX">The X radius.</param>
            <param name="radiusY">The Y radius.</param>
            <param name="startDegrees">The starting degrees of rotation.</param>
            <param name="endDegrees">The ending degrees of rotation.</param>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.EndDegrees">
            <summary>
            Gets or sets the ending degrees of rotation.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.OriginX">
            <summary>
            Gets or sets the origin X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.OriginY">
            <summary>
            Gets or sets the origin X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.RadiusX">
            <summary>
            Gets or sets the X radius.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.RadiusY">
            <summary>
            Gets or sets the Y radius.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableEllipse.StartDegrees">
            <summary>
            Gets or sets the starting degrees of rotation.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableEllipse.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFillColor">
            <summary>
            Sets the fill color to be used for drawing filled objects.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillColor.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFillColor"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableFillColor.Color">
            <summary>
            Gets or sets the color to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillColor.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFillOpacity">
            <summary>
            Sets the alpha to use when drawing using the fill color or fill texture.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillOpacity.#ctor(ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFillOpacity"/> class.
            </summary>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="P:ImageMagick.DrawableFillOpacity.Opacity">
            <summary>
            Gets or sets the alpha.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillOpacity.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFillPatternUrl">
            <summary>
            Sets the URL to use as a fill pattern for filling objects. Only local URLs("#identifier") are
            supported at this time. These local URLs are normally created by defining a named fill pattern
            with DrawablePushPattern/DrawablePopPattern.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillPatternUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFillPatternUrl"/> class.
            </summary>
            <param name="url">Url specifying pattern ID (e.g. "#pattern_id").</param>
        </member>
        <member name="P:ImageMagick.DrawableFillPatternUrl.Url">
            <summary>
            Gets or sets the url specifying pattern ID (e.g. "#pattern_id").
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillPatternUrl.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFillRule">
            <summary>
            Sets the fill rule to use while drawing polygons.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillRule.#ctor(ImageMagick.FillRule)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFillRule"/> class.
            </summary>
            <param name="fillRule">The rule to use when filling drawn objects.</param>
        </member>
        <member name="P:ImageMagick.DrawableFillRule.FillRule">
            <summary>
            Gets or sets the rule to use when filling drawn objects.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFillRule.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFont">
            <summary>
            Sets the font family, style, weight and stretch to use when annotating with text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFont.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFont"/> class.
            </summary>
            <param name="family">The font family or the full path to the font file.</param>
        </member>
        <member name="M:ImageMagick.DrawableFont.#ctor(System.String,ImageMagick.FontStyleType,ImageMagick.FontWeight,ImageMagick.FontStretch)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFont"/> class.
            </summary>
            <param name="family">The font family or the full path to the font file.</param>
            <param name="style">The style of the font.</param>
            <param name="weight">The weight of the font.</param>
            <param name="stretch">The font stretching type.</param>
        </member>
        <member name="P:ImageMagick.DrawableFont.Family">
            <summary>
            Gets or sets the font family or the full path to the font file.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableFont.Style">
            <summary>
            Gets or sets the style of the font.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableFont.Weight">
            <summary>
            Gets or sets the weight of the font.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableFont.Stretch">
            <summary>
            Gets or sets the font stretching.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFont.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableFontPointSize">
            <summary>
            Sets the font pointsize to use when annotating with text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFontPointSize.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableFontPointSize"/> class.
            </summary>
            <param name="pointSize">The point size.</param>
        </member>
        <member name="P:ImageMagick.DrawableFontPointSize.PointSize">
            <summary>
            Gets or sets the point size.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableFontPointSize.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableGravity">
            <summary>
            Encapsulation of the DrawableGravity object.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableGravity.#ctor(ImageMagick.Gravity)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableGravity"/> class.
            </summary>
            <param name="gravity">The gravity.</param>
        </member>
        <member name="P:ImageMagick.DrawableGravity.Gravity">
            <summary>
            Gets or sets the gravity.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableGravity.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableLine">
            <summary>
            Draws a line on the image using the current stroke color, stroke alpha, and stroke width.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableLine.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableLine"/> class.
            </summary>
            <param name="startX">The starting X coordinate.</param>
            <param name="startY">The starting Y coordinate.</param>
            <param name="endX">The ending X coordinate.</param>
            <param name="endY">The ending Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawableLine.EndX">
            <summary>
            Gets or sets the ending X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableLine.EndY">
            <summary>
            Gets or sets the ending Y coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableLine.StartX">
            <summary>
            Gets or sets the starting X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableLine.StartY">
            <summary>
            Gets or sets the starting Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableLine.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePath">
            <summary>
            Draws a set of paths.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePath.#ctor(ImageMagick.IPath[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePath"/> class.
            </summary>
            <param name="paths">The paths to use.</param>
        </member>
        <member name="M:ImageMagick.DrawablePath.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.IPath})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePath"/> class.
            </summary>
            <param name="paths">The paths to use.</param>
        </member>
        <member name="P:ImageMagick.DrawablePath.Paths">
            <summary>
            Gets the paths to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePath.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePoint">
            <summary>
            Draws a point using the current fill color.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePoint"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawablePoint.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawablePoint.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePoint.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePolygon">
            <summary>
            Draws a polygon using the current stroke, stroke width, and fill color or texture, using the
            specified array of coordinates.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePolygon.#ctor(ImageMagick.PointD[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePolygon"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:ImageMagick.DrawablePolygon.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePolygon"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:ImageMagick.DrawablePolygon.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePolyline">
            <summary>
            Draws a polyline using the current stroke, stroke width, and fill color or texture, using the
            specified array of coordinates.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePolyline.#ctor(ImageMagick.PointD[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePolyline"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:ImageMagick.DrawablePolyline.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePolyline"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:ImageMagick.DrawablePolyline.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePopClipPath">
            <summary>
            Terminates a clip path definition.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopClipPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePopClipPath"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopClipPath.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePopGraphicContext">
            <summary>
            destroys the current drawing wand and returns to the  previously pushed drawing wand. Multiple
            drawing wands may exist. It is an error to attempt to pop more drawing wands than have been
            pushed, and it is proper form to pop all drawing wands which have been pushed.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopGraphicContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePopGraphicContext"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopGraphicContext.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePopPattern">
            <summary>
            Terminates a pattern definition.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopPattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePopPattern"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePopPattern.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePushClipPath">
            <summary>
            Starts a clip path definition which is comprized of any number of drawing commands and
            terminated by a DrawablePopClipPath.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushClipPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePushClipPath"/> class.
            </summary>
            <param name="clipPath">The ID of the clip path.</param>
        </member>
        <member name="P:ImageMagick.DrawablePushClipPath.ClipPath">
            <summary>
            Gets or sets the ID of the clip path.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushClipPath.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePushGraphicContext">
            <summary>
            Clones the current drawing wand to create a new drawing wand. The original drawing wand(s)
            may be returned to by invoking DrawablePopGraphicContext. The drawing wands are stored on a
            drawing wand stack. For every Pop there must have already been an equivalent Push.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushGraphicContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePushGraphicContext"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushGraphicContext.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawablePushPattern">
            <summary>
            indicates that subsequent commands up to a DrawablePopPattern command comprise the definition
            of a named pattern. The pattern space is assigned top left corner coordinates, a width and
            height, and becomes its own drawing space. Anything which can be drawn may be used in a
            pattern definition. Named patterns may be used as stroke or brush definitions.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushPattern.#ctor(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawablePushPattern"/> class.
            </summary>
            <param name="id">The ID of the pattern.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:ImageMagick.DrawablePushPattern.ID">
            <summary>
            Gets or sets the ID of the pattern.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawablePushPattern.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawablePushPattern.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawablePushPattern.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawablePushPattern.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablePushPattern.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableRectangle">
            <summary>
            Draws a rectangle given two coordinates and using the current stroke, stroke width, and fill
            settings.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableRectangle"/> class.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawableRectangle.LowerRightX">
            <summary>
            Gets or sets the upper left X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRectangle.LowerRightY">
            <summary>
            Gets or sets the upper left Y coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRectangle.UpperLeftX">
            <summary>
            Gets or sets the upper left X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRectangle.UpperLeftY">
            <summary>
            Gets or sets the upper left Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRectangle.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableRotation">
            <summary>
            Applies the specified rotation to the current coordinate space.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRotation.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableRotation"/> class.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="P:ImageMagick.DrawableRotation.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRotation.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableRoundRectangle">
            <summary>
            Draws a rounted rectangle given two coordinates, x &amp; y corner radiuses and using the current
            stroke, stroke width, and fill settings.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRoundRectangle.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableRoundRectangle"/> class.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
            <param name="cornerWidth">The corner width.</param>
            <param name="cornerHeight">The corner height.</param>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CornerHeight">
            <summary>
            Gets or sets the corner height.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.CornerWidth">
            <summary>
            Gets or sets the corner width.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.LowerRightX">
            <summary>
            Gets or sets the lower right X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.LowerRightY">
            <summary>
            Gets or sets the lower right Y coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.UpperLeftX">
            <summary>
            Gets or sets the upper left X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableRoundRectangle.UpperLeftY">
            <summary>
            Gets or sets the upper left Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableRoundRectangle.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.Drawables">
            <summary>
            Class that can be used to chain draw actions.
            </summary>
        </member>
        <member name="M:ImageMagick.Drawables.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Drawables"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.Drawables.Draw(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Draw on the specified image.
            </summary>
            <param name="image">The image to draw on.</param>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FontTypeMetrics(System.String)">
            <summary>
            Obtain font metrics for text string given current font, pointsize, and density settings.
            </summary>
            <param name="text">The text to get the font metrics for.</param>
            <returns>The font metrics for text.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.Drawables.FontTypeMetrics(System.String,System.Boolean)">
            <summary>
            Obtain font metrics for text string given current font, pointsize, and density settings.
            </summary>
            <param name="text">The text to get the font metrics for.</param>
            <param name="ignoreNewlines">Specifies if newlines should be ignored.</param>
            <returns>The font metrics for text.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.Drawables.Paths">
            <summary>
            Creates a new <see cref="M:ImageMagick.Drawables.Paths"/> instance.
            </summary>
            <returns>A new <see cref="M:ImageMagick.Drawables.Paths"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Affine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableAffine operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="scaleX">The X coordinate scaling element.</param>
            <param name="scaleY">The Y coordinate scaling element.</param>
            <param name="shearX">The X coordinate shearing element.</param>
            <param name="shearY">The Y coordinate shearing element.</param>
            <param name="translateX">The X coordinate of the translation element.</param>
            <param name="translateY">The Y coordinate of the translation element.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Alpha(System.Double,System.Double,ImageMagick.PaintMethod)">
            <summary>
            Applies the DrawableAlpha operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="paintMethod">The paint method to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableArc operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="startX">The starting X coordinate of the bounding rectangle.</param>
            <param name="startY">The starting Y coordinate of thebounding rectangle.</param>
            <param name="endX">The ending X coordinate of the bounding rectangle.</param>
            <param name="endY">The ending Y coordinate of the bounding rectangle.</param>
            <param name="startDegrees">The starting degrees of rotation.</param>
            <param name="endDegrees">The ending degrees of rotation.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Bezier(ImageMagick.PointD[])">
            <summary>
            Applies the DrawableBezier operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Bezier(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Applies the DrawableBezier operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.BorderColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Applies the DrawableBorderColor operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="color">The color of the border.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Circle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableCircle operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="originX">The origin X coordinate.</param>
            <param name="originY">The origin Y coordinate.</param>
            <param name="perimeterX">The perimeter X coordinate.</param>
            <param name="perimeterY">The perimeter Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.ClipPath(System.String)">
            <summary>
            Applies the DrawableClipPath operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="clipPath">The ID of the clip path.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.ClipRule(ImageMagick.FillRule)">
            <summary>
            Applies the DrawableClipRule operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="fillRule">The rule to use when filling drawn objects.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.ClipUnits(ImageMagick.ClipPathUnit)">
            <summary>
            Applies the DrawableClipUnits operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="units">The clip path units.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Color(System.Double,System.Double,ImageMagick.PaintMethod)">
            <summary>
            Applies the DrawableColor operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="paintMethod">The paint method to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Composite(ImageMagick.IMagickGeometry,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Applies the DrawableComposite operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="offset">The offset from origin.</param>
            <param name="image">The image to draw.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Composite(System.Double,System.Double,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Applies the DrawableComposite operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="image">The image to draw.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Composite(ImageMagick.IMagickGeometry,ImageMagick.CompositeOperator,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Applies the DrawableComposite operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="image">The image to draw.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Composite(System.Double,System.Double,ImageMagick.CompositeOperator,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Applies the DrawableComposite operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="image">The image to draw.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Density(System.Double)">
            <summary>
            Applies the DrawableDensity operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="density">The vertical and horizontal resolution.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Density(ImageMagick.PointD)">
            <summary>
            Applies the DrawableDensity operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="pointDensity">The vertical and horizontal resolution.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableEllipse operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="originX">The origin X coordinate.</param>
            <param name="originY">The origin Y coordinate.</param>
            <param name="radiusX">The X radius.</param>
            <param name="radiusY">The Y radius.</param>
            <param name="startDegrees">The starting degrees of rotation.</param>
            <param name="endDegrees">The ending degrees of rotation.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FillColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Applies the DrawableFillColor operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="color">The color to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FillOpacity(ImageMagick.Percentage)">
            <summary>
            Applies the DrawableFillOpacity operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="opacity">The opacity.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FillPatternUrl(System.String)">
            <summary>
            Applies the DrawableFillPatternUrl operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="url">Url specifying pattern ID (e.g. "#pattern_id").</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FillRule(ImageMagick.FillRule)">
            <summary>
            Applies the DrawableFillRule operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="fillRule">The rule to use when filling drawn objects.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Font(System.String)">
            <summary>
            Applies the DrawableFont operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="family">The font family or the full path to the font file.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Font(System.String,ImageMagick.FontStyleType,ImageMagick.FontWeight,ImageMagick.FontStretch)">
            <summary>
            Applies the DrawableFont operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="family">The font family or the full path to the font file.</param>
            <param name="style">The style of the font.</param>
            <param name="weight">The weight of the font.</param>
            <param name="stretch">The font stretching type.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.FontPointSize(System.Double)">
            <summary>
            Applies the DrawableFontPointSize operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="pointSize">The point size.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Gravity(ImageMagick.Gravity)">
            <summary>
            Applies the DrawableGravity operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="gravity">The gravity.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Line(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableLine operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="startX">The starting X coordinate.</param>
            <param name="startY">The starting Y coordinate.</param>
            <param name="endX">The ending X coordinate.</param>
            <param name="endY">The ending Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Path(ImageMagick.IPath[])">
            <summary>
            Applies the DrawablePath operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="paths">The paths to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Path(System.Collections.Generic.IEnumerable{ImageMagick.IPath})">
            <summary>
            Applies the DrawablePath operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="paths">The paths to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Point(System.Double,System.Double)">
            <summary>
            Applies the DrawablePoint operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Polygon(ImageMagick.PointD[])">
            <summary>
            Applies the DrawablePolygon operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Polygon(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Applies the DrawablePolygon operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Polyline(ImageMagick.PointD[])">
            <summary>
            Applies the DrawablePolyline operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Polyline(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Applies the DrawablePolyline operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="coordinates">The coordinates.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PopClipPath">
            <summary>
            Applies the DrawablePopClipPath operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PopGraphicContext">
            <summary>
            Applies the DrawablePopGraphicContext operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PopPattern">
            <summary>
            Applies the DrawablePopPattern operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PushClipPath(System.String)">
            <summary>
            Applies the DrawablePushClipPath operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="clipPath">The ID of the clip path.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PushGraphicContext">
            <summary>
            Applies the DrawablePushGraphicContext operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.PushPattern(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawablePushPattern operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="id">The ID of the pattern.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Rectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableRectangle operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Rotation(System.Double)">
            <summary>
            Applies the DrawableRotation operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.RoundRectangle(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableRoundRectangle operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
            <param name="cornerWidth">The corner width.</param>
            <param name="cornerHeight">The corner height.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Scaling(System.Double,System.Double)">
            <summary>
            Applies the DrawableScaling operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">Horizontal scale factor.</param>
            <param name="y">Vertical scale factor.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.SkewX(System.Double)">
            <summary>
            Applies the DrawableSkewX operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.SkewY(System.Double)">
            <summary>
            Applies the DrawableSkewY operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="angle">The angle.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeAntialias(System.Boolean)">
            <summary>
            Applies the DrawableStrokeAntialias operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="isEnabled">True if stroke antialiasing is enabled otherwise false.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Applies the DrawableStrokeColor operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="color">The color to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeDashArray(System.Double[])">
            <summary>
            Applies the DrawableStrokeDashArray operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="dash">An array containing the dash information.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeDashOffset(System.Double)">
            <summary>
            Applies the DrawableStrokeDashOffset operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="offset">The dash offset.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeLineCap(ImageMagick.LineCap)">
            <summary>
            Applies the DrawableStrokeLineCap operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="lineCap">The line cap.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeLineJoin(ImageMagick.LineJoin)">
            <summary>
            Applies the DrawableStrokeLineJoin operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="lineJoin">The line join.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeMiterLimit(System.Int32)">
            <summary>
            Applies the DrawableStrokeMiterLimit operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="miterlimit">The miter limit.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeOpacity(ImageMagick.Percentage)">
            <summary>
            Applies the DrawableStrokeOpacity operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="opacity">The opacity.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokePatternUrl(System.String)">
            <summary>
            Applies the DrawableStrokePatternUrl operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="url">Url specifying pattern ID (e.g. "#pattern_id").</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.StrokeWidth(System.Double)">
            <summary>
            Applies the DrawableStrokeWidth operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="width">The width.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Text(System.Double,System.Double,System.String)">
            <summary>
            Applies the DrawableText operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="value">The text to draw.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextAlignment(ImageMagick.TextAlignment)">
            <summary>
            Applies the DrawableTextAlignment operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="alignment">Text alignment.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextAntialias(System.Boolean)">
            <summary>
            Applies the DrawableTextAntialias operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="isEnabled">True if text antialiasing is enabled otherwise false.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextDecoration(ImageMagick.TextDecoration)">
            <summary>
            Applies the DrawableTextDecoration operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="decoration">The text decoration.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextDirection(ImageMagick.TextDirection)">
            <summary>
            Applies the DrawableTextDirection operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="direction">Direction to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextEncoding(System.Text.Encoding)">
            <summary>
            Applies the DrawableTextEncoding operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="encoding">Encoding to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextInterlineSpacing(System.Double)">
            <summary>
            Applies the DrawableTextInterlineSpacing operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="spacing">Spacing to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextInterwordSpacing(System.Double)">
            <summary>
            Applies the DrawableTextInterwordSpacing operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="spacing">Spacing to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextKerning(System.Double)">
            <summary>
            Applies the DrawableTextKerning operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="kerning">Kerning to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.TextUnderColor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Applies the DrawableTextUnderColor operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="color">The color to use.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Translation(System.Double,System.Double)">
            <summary>
            Applies the DrawableTranslation operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Drawables.Viewbox(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the DrawableViewbox operation to the <see cref="T:ImageMagick.Drawables" />.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Drawables" /> instance.</returns>
        </member>
        <member name="T:ImageMagick.DrawableScaling">
            <summary>
            Adjusts the scaling factor to apply in the horizontal and vertical directions to the current
            coordinate space.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableScaling.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableScaling"/> class.
            </summary>
            <param name="x">Horizontal scale factor.</param>
            <param name="y">Vertical scale factor.</param>
        </member>
        <member name="P:ImageMagick.DrawableScaling.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableScaling.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableScaling.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableSkewX">
            <summary>
            Skews the current coordinate system in the horizontal direction.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableSkewX.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableSkewX"/> class.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="P:ImageMagick.DrawableSkewX.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableSkewX.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableSkewY">
            <summary>
            Skews the current coordinate system in the vertical direction.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableSkewY.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableSkewY"/> class.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="P:ImageMagick.DrawableSkewY.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableSkewY.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeAntialias">
            <summary>
            Controls whether stroked outlines are antialiased. Stroked outlines are antialiased by default.
            When antialiasing is disabled stroked pixels are thresholded to determine if the stroke color
            or underlying canvas color should be used.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeAntialias.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeAntialias"/> class.
            </summary>
            <param name="isEnabled">True if stroke antialiasing is enabled otherwise false.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeAntialias.IsEnabled">
            <summary>
            Gets or sets a value indicating whether stroke antialiasing is enabled or disabled.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeAntialias.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeColor">
            <summary>
            Sets the color used for stroking object outlines.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeColor.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeColor"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeColor.Color">
            <summary>
            Gets or sets the color to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeColor.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeDashArray">
            <summary>
            Specifies the pattern of dashes and gaps used to stroke paths. The stroke dash array
            represents an array of numbers that specify the lengths of alternating dashes and gaps in
            pixels. If an odd number of values is provided, then the list of values is repeated to yield
            an even number of values. To remove an existing dash array, pass a null dasharray. A typical
            stroke dash array might contain the members 5 3 2.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeDashArray.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeDashArray"/> class.
            </summary>
            <param name="dash">An array containing the dash information.</param>
        </member>
        <member name="M:ImageMagick.DrawableStrokeDashArray.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeDashOffset">
            <summary>
            Specifies the offset into the dash pattern to start the dash.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeDashOffset.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeDashOffset"/> class.
            </summary>
            <param name="offset">The dash offset.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeDashOffset.Offset">
            <summary>
            Gets or sets the dash offset.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeDashOffset.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeLineCap">
            <summary>
            Specifies the shape to be used at the end of open subpaths when they are stroked.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeLineCap.#ctor(ImageMagick.LineCap)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeLineCap"/> class.
            </summary>
            <param name="lineCap">The line cap.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeLineCap.LineCap">
            <summary>
            Gets or sets the line cap.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeLineCap.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeLineJoin">
            <summary>
            Specifies the shape to be used at the corners of paths (or other vector shapes) when they
            are stroked.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeLineJoin.#ctor(ImageMagick.LineJoin)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeLineJoin"/> class.
            </summary>
            <param name="lineJoin">The line join.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeLineJoin.LineJoin">
            <summary>
            Gets or sets the line join.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeLineJoin.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeMiterLimit">
            <summary>
            Specifies the miter limit. When two line segments meet at a sharp angle and miter joins have
            been specified for 'DrawableStrokeLineJoin', it is possible for the miter to extend far
            beyond the thickness of the line stroking the path. The 'DrawableStrokeMiterLimit' imposes a
            limit on the ratio of the miter length to the 'DrawableStrokeLineWidth'.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeMiterLimit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeMiterLimit"/> class.
            </summary>
            <param name="miterlimit">The miter limit.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeMiterLimit.Miterlimit">
            <summary>
            Gets or sets the miter limit.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeMiterLimit.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeOpacity">
            <summary>
            Specifies the alpha of stroked object outlines.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeOpacity.#ctor(ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeOpacity"/> class.
            </summary>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeOpacity.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeOpacity.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokePatternUrl">
            <summary>
            Sets the pattern used for stroking object outlines. Only local URLs("#identifier") are
            supported at this time. These local URLs are normally created by defining a named stroke
            pattern with DrawablePushPattern/DrawablePopPattern.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokePatternUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokePatternUrl"/> class.
            </summary>
            <param name="url">Url specifying pattern ID (e.g. "#pattern_id").</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokePatternUrl.Url">
            <summary>
            Gets or sets the url specifying pattern ID (e.g. "#pattern_id").
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokePatternUrl.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableStrokeWidth">
            <summary>
            Sets the width of the stroke used to draw object outlines.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeWidth.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableStrokeWidth"/> class.
            </summary>
            <param name="width">The width.</param>
        </member>
        <member name="P:ImageMagick.DrawableStrokeWidth.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableStrokeWidth.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableText">
            <summary>
            Draws text on the image.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableText.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableText"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="value">The text to draw.</param>
        </member>
        <member name="P:ImageMagick.DrawableText.Value">
            <summary>
            Gets or sets the text to draw.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableText.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableText.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableText.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextAlignment">
            <summary>
            Specifies a text alignment to be applied when annotating with text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextAlignment.#ctor(ImageMagick.TextAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextAlignment"/> class.
            </summary>
            <param name="alignment">Text alignment.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextAlignment.Alignment">
            <summary>
            Gets or sets text alignment.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextAlignment.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextAntialias">
            <summary>
            Controls whether text is antialiased. Text is antialiased by default.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextAntialias.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextAntialias"/> class.
            </summary>
            <param name="isEnabled">True if text antialiasing is enabled otherwise false.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextAntialias.IsEnabled">
            <summary>
            Gets or sets a value indicating whether text antialiasing is enabled or disabled.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextAntialias.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextDecoration">
            <summary>
            Specifies a decoration to be applied when annotating with text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextDecoration.#ctor(ImageMagick.TextDecoration)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextDecoration"/> class.
            </summary>
            <param name="decoration">The text decoration.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextDecoration.Decoration">
            <summary>
            Gets or sets the text decoration.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextDecoration.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextDirection">
            <summary>
            Specifies the direction to be used when annotating with text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextDirection.#ctor(ImageMagick.TextDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextDirection"/> class.
            </summary>
            <param name="direction">Direction to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextDirection.Direction">
            <summary>
            Gets or sets the direction to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextDirection.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextEncoding">
            <summary>
            Encapsulation of the DrawableTextEncoding object.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextEncoding.#ctor(System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextEncoding"/> class.
            </summary>
            <param name="encoding">Encoding to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextEncoding.Encoding">
            <summary>
            Gets or sets the encoding of the text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextEncoding.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextInterlineSpacing">
            <summary>
            Sets the spacing between line in text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextInterlineSpacing.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextInterlineSpacing"/> class.
            </summary>
            <param name="spacing">Spacing to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextInterlineSpacing.Spacing">
            <summary>
            Gets or sets the spacing to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextInterlineSpacing.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextInterwordSpacing">
            <summary>
            Sets the spacing between words in text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextInterwordSpacing.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextInterwordSpacing"/> class.
            </summary>
            <param name="spacing">Spacing to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextInterwordSpacing.Spacing">
            <summary>
            Gets or sets the spacing to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextInterwordSpacing.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextKerning">
            <summary>
            Sets the spacing between characters in text.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextKerning.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextKerning"/> class.
            </summary>
            <param name="kerning">Kerning to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextKerning.Kerning">
            <summary>
            Gets or sets the text kerning to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextKerning.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTextUnderColor">
            <summary>
            Specifies the color of a background rectangle to place under text annotations.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextUnderColor.#ctor(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTextUnderColor"/> class.
            </summary>
            <param name="color">The color to use.</param>
        </member>
        <member name="P:ImageMagick.DrawableTextUnderColor.Color">
            <summary>
            Gets or sets the color to use.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTextUnderColor.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableTranslation">
            <summary>
            Applies a translation to the current coordinate system which moves the coordinate system
            origin to the specified coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTranslation.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableTranslation"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawableTranslation.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableTranslation.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableTranslation.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DrawableViewbox">
            <summary>
            Sets the overall canvas size to be recorded with the drawing vector data. Usually this will
            be specified using the same size as the canvas image. When the vector data is saved to SVG
            or MVG formats, the viewbox is use to specify the size of the canvas image that a viewer
            will render the vector data on.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableViewbox.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DrawableViewbox"/> class.
            </summary>
            <param name="upperLeftX">The upper left X coordinate.</param>
            <param name="upperLeftY">The upper left Y coordinate.</param>
            <param name="lowerRightX">The lower right X coordinate.</param>
            <param name="lowerRightY">The lower right Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.DrawableViewbox.LowerRightX">
            <summary>
            Gets or sets the upper left X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableViewbox.LowerRightY">
            <summary>
            Gets or sets the upper left Y coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableViewbox.UpperLeftX">
            <summary>
            Gets or sets the upper left X coordinate.
            </summary>
        </member>
        <member name="P:ImageMagick.DrawableViewbox.UpperLeftY">
            <summary>
            Gets or sets the upper left Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawableViewbox.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.IDrawingWand">
            <summary>
            Interface for drawing on an wand.
            </summary>
        </member>
        <member name="M:ImageMagick.IDrawingWand.Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The wand to draw on.</param>
        </member>
        <member name="T:ImageMagick.Paths">
            <summary>
            Class that can be used to chain path actions.
            </summary>
        </member>
        <member name="M:ImageMagick.Paths.ArcAbs(ImageMagick.PathArc[])">
            <summary>
            Applies the PathArcAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.ArcAbs(System.Collections.Generic.IEnumerable{ImageMagick.PathArc})">
            <summary>
            Applies the PathArcAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.ArcRel(ImageMagick.PathArc[])">
            <summary>
            Applies the PathArcRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.ArcRel(System.Collections.Generic.IEnumerable{ImageMagick.PathArc})">
            <summary>
            Applies the PathArcRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.Close">
            <summary>
            Applies the PathClose operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.CurveToAbs(ImageMagick.PointD,ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
            <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
            <param name="end">Coordinate of the end of the curve.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.CurveToAbs(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x1">X coordinate of control point for curve beginning.</param>
            <param name="y1">Y coordinate of control point for curve beginning.</param>
            <param name="x2">X coordinate of control point for curve ending.</param>
            <param name="y2">Y coordinate of control point for curve ending.</param>
            <param name="x">X coordinate of the end of the curve.</param>
            <param name="y">Y coordinate of the end of the curve.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.CurveToRel(ImageMagick.PointD,ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
            <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
            <param name="end">Coordinate of the end of the curve.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.CurveToRel(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x1">X coordinate of control point for curve beginning.</param>
            <param name="y1">Y coordinate of control point for curve beginning.</param>
            <param name="x2">X coordinate of control point for curve ending.</param>
            <param name="y2">Y coordinate of control point for curve ending.</param>
            <param name="x">X coordinate of the end of the curve.</param>
            <param name="y">Y coordinate of the end of the curve.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToAbs(ImageMagick.PointD[])">
            <summary>
            Applies the PathLineToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToAbs(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Applies the PathLineToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToAbs(System.Double,System.Double)">
            <summary>
            Applies the PathLineToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToHorizontalAbs(System.Double)">
            <summary>
            Applies the PathLineToHorizontalAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToHorizontalRel(System.Double)">
            <summary>
            Applies the PathLineToHorizontalRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToRel(ImageMagick.PointD[])">
            <summary>
            Applies the PathLineToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToRel(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Applies the PathLineToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToRel(System.Double,System.Double)">
            <summary>
            Applies the PathLineToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToVerticalAbs(System.Double)">
            <summary>
            Applies the PathLineToVerticalAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.LineToVerticalRel(System.Double)">
            <summary>
            Applies the PathLineToVerticalRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.MoveToAbs(ImageMagick.PointD)">
            <summary>
            Applies the PathMoveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinate">The coordinate to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.MoveToAbs(System.Double,System.Double)">
            <summary>
            Applies the PathMoveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.MoveToRel(ImageMagick.PointD)">
            <summary>
            Applies the PathMoveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="coordinate">The coordinate to use.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.MoveToRel(System.Double,System.Double)">
            <summary>
            Applies the PathMoveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.QuadraticCurveToAbs(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathQuadraticCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPoint">Coordinate of control point.</param>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.QuadraticCurveToAbs(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathQuadraticCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x1">X coordinate of control point.</param>
            <param name="y1">Y coordinate of control point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.QuadraticCurveToRel(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathQuadraticCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPoint">Coordinate of control point.</param>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.QuadraticCurveToRel(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathQuadraticCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x1">X coordinate of control point.</param>
            <param name="y1">Y coordinate of control point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothCurveToAbs(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathSmoothCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPoint">Coordinate of second point.</param>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothCurveToAbs(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathSmoothCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x2">X coordinate of second point.</param>
            <param name="y2">Y coordinate of second point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothCurveToRel(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Applies the PathSmoothCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="controlPoint">Coordinate of second point.</param>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothCurveToRel(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Applies the PathSmoothCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x2">X coordinate of second point.</param>
            <param name="y2">Y coordinate of second point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothQuadraticCurveToAbs(ImageMagick.PointD)">
            <summary>
            Applies the PathSmoothQuadraticCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothQuadraticCurveToAbs(System.Double,System.Double)">
            <summary>
            Applies the PathSmoothQuadraticCurveToAbs operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothQuadraticCurveToRel(ImageMagick.PointD)">
            <summary>
            Applies the PathSmoothQuadraticCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="end">Coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.SmoothQuadraticCurveToRel(System.Double,System.Double)">
            <summary>
            Applies the PathSmoothQuadraticCurveToRel operation to the <see cref="T:ImageMagick.Paths" />.
            </summary>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
            <returns>The <see cref="T:ImageMagick.Paths" /> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Paths"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.Paths.Drawables">
            <summary>
            Converts this instance to a <see cref="T:ImageMagick.IDrawables`1"/> instance.
            </summary>
            <returns>A new <see cref="M:ImageMagick.Paths.Drawables"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.Paths.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:ImageMagick.Paths.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that iterates through the collection.</returns>
        </member>
        <member name="T:ImageMagick.PathArcAbs">
            <summary>
            Draws an elliptical arc from the current point to (X, Y) using absolute coordinates. The size
            and orientation of the ellipse are defined by two radii(RadiusX, RadiusY) and an RotationX,
            which indicates how the ellipse as a whole is rotated relative to the current coordinate
            system. The center of the ellipse is calculated automagically to satisfy the constraints
            imposed by the other parameters. UseLargeArc and UseSweep contribute to the automatic
            calculations and help determine how the arc is drawn. If UseLargeArc is true then draw the
            larger of the available arcs. If UseSweep is true, then draw the arc matching a clock-wise
            rotation.
            </summary>
        </member>
        <member name="M:ImageMagick.PathArcAbs.#ctor(ImageMagick.PathArc[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathArcAbs"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathArcAbs.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PathArc})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathArcAbs"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathArcAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathArcRel">
            <summary>
            Draws an elliptical arc from the current point to (X, Y) using relative coordinates. The size
            and orientation of the ellipse are defined by two radii(RadiusX, RadiusY) and an RotationX,
            which indicates how the ellipse as a whole is rotated relative to the current coordinate
            system. The center of the ellipse is calculated automagically to satisfy the constraints
            imposed by the other parameters. UseLargeArc and UseSweep contribute to the automatic
            calculations and help determine how the arc is drawn. If UseLargeArc is true then draw the
            larger of the available arcs. If UseSweep is true, then draw the arc matching a clock-wise
            rotation.
            </summary>
        </member>
        <member name="M:ImageMagick.PathArcRel.#ctor(ImageMagick.PathArc[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathArcRel"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathArcRel.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PathArc})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathArcRel"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathArcRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathClose">
            <summary>
            Adds a path element to the current path which closes the current subpath by drawing a straight
            line from the current point to the current subpath's most recent starting point (usually, the
            most recent moveto point).
            </summary>
        </member>
        <member name="M:ImageMagick.PathClose.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathClose"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.PathClose.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathCurveToAbs">
            <summary>
            Draws a cubic Bezier curve from the current point to (x, y) using (x1, y1) as the control point
            at the beginning of the curve and (x2, y2) as the control point at the end of the curve using
            absolute coordinates. At the end of the command, the new current point becomes the final (x, y)
            coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathCurveToAbs.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathCurveToAbs"/> class.
            </summary>
            <param name="x1">X coordinate of control point for curve beginning.</param>
            <param name="y1">Y coordinate of control point for curve beginning.</param>
            <param name="x2">X coordinate of control point for curve ending.</param>
            <param name="y2">Y coordinate of control point for curve ending.</param>
            <param name="x">X coordinate of the end of the curve.</param>
            <param name="y">Y coordinate of the end of the curve.</param>
        </member>
        <member name="M:ImageMagick.PathCurveToAbs.#ctor(ImageMagick.PointD,ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathCurveToAbs"/> class.
            </summary>
            <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
            <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
            <param name="end">Coordinate of the end of the curve.</param>
        </member>
        <member name="M:ImageMagick.PathCurveToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathCurveToRel">
            <summary>
            Draws a cubic Bezier curve from the current point to (x, y) using (x1,y1) as the control point
            at the beginning of the curve and (x2, y2) as the control point at the end of the curve using
            relative coordinates. At the end of the command, the new current point becomes the final (x, y)
            coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathCurveToRel.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathCurveToRel"/> class.
            </summary>
            <param name="x1">X coordinate of control point for curve beginning.</param>
            <param name="y1">Y coordinate of control point for curve beginning.</param>
            <param name="x2">X coordinate of control point for curve ending.</param>
            <param name="y2">Y coordinate of control point for curve ending.</param>
            <param name="x">X coordinate of the end of the curve.</param>
            <param name="y">Y coordinate of the end of the curve.</param>
        </member>
        <member name="M:ImageMagick.PathCurveToRel.#ctor(ImageMagick.PointD,ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathCurveToRel"/> class.
            </summary>
            <param name="controlPointStart">Coordinate of control point for curve beginning.</param>
            <param name="controlPointEnd">Coordinate of control point for curve ending.</param>
            <param name="end">Coordinate of the end of the curve.</param>
        </member>
        <member name="M:ImageMagick.PathCurveToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToAbs">
            <summary>
            Draws a line path from the current point to the given coordinate using absolute coordinates.
            The coordinate then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToAbs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToAbs"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:ImageMagick.PathLineToAbs.#ctor(ImageMagick.PointD[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToAbs"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathLineToAbs.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToAbs"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathLineToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToHorizontalAbs">
            <summary>
            Draws a horizontal line path from the current point to the target point using absolute
            coordinates. The target point then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToHorizontalAbs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToHorizontalAbs"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
        </member>
        <member name="P:ImageMagick.PathLineToHorizontalAbs.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToHorizontalAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToHorizontalRel">
            <summary>
            Draws a horizontal line path from the current point to the target point using relative
            coordinates. The target point then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToHorizontalRel.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToHorizontalRel"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
        </member>
        <member name="P:ImageMagick.PathLineToHorizontalRel.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToHorizontalRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToRel">
            <summary>
            Draws a line path from the current point to the given coordinate using relative coordinates.
            The coordinate then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToRel.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToRel"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:ImageMagick.PathLineToRel.#ctor(ImageMagick.PointD[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToRel"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathLineToRel.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.PointD})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToRel"/> class.
            </summary>
            <param name="coordinates">The coordinates to use.</param>
        </member>
        <member name="M:ImageMagick.PathLineToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToVerticalAbs">
            <summary>
            Draws a vertical line path from the current point to the target point using absolute
            coordinates. The target point then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToVerticalAbs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToVerticalAbs"/> class.
            </summary>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.PathLineToVerticalAbs.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToVerticalAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathLineToVerticalRel">
            <summary>
            Draws a vertical line path from the current point to the target point using relative
            coordinates. The target point then becomes the new current point.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToVerticalRel.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathLineToVerticalRel"/> class.
            </summary>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="P:ImageMagick.PathLineToVerticalRel.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathLineToVerticalRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathMoveToAbs">
            <summary>
            Starts a new sub-path at the given coordinate using absolute coordinates. The current point
            then becomes the specified coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathMoveToAbs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathMoveToAbs"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:ImageMagick.PathMoveToAbs.#ctor(ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathMoveToAbs"/> class.
            </summary>
            <param name="coordinate">The coordinate to use.</param>
        </member>
        <member name="M:ImageMagick.PathMoveToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathMoveToRel">
            <summary>
            Starts a new sub-path at the given coordinate using relative coordinates. The current point
            then becomes the specified coordinate.
            </summary>
        </member>
        <member name="M:ImageMagick.PathMoveToRel.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathMoveToRel"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:ImageMagick.PathMoveToRel.#ctor(ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathMoveToRel"/> class.
            </summary>
            <param name="coordinate">The coordinate to use.</param>
        </member>
        <member name="M:ImageMagick.PathMoveToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathQuadraticCurveToAbs">
            <summary>
            Draws a quadratic Bezier curve from the current point to (x, y) using (x1, y1) as the control
            point using absolute coordinates. At the end of the command, the new current point becomes
            the final (x, y) coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToAbs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathQuadraticCurveToAbs"/> class.
            </summary>
            <param name="x1">X coordinate of control point.</param>
            <param name="y1">Y coordinate of control point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToAbs.#ctor(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathQuadraticCurveToAbs"/> class.
            </summary>
            <param name="controlPoint">Coordinate of control point.</param>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathQuadraticCurveToRel">
            <summary>
            Draws a quadratic Bezier curve from the current point to (x, y) using (x1, y1) as the control
            point using relative coordinates. At the end of the command, the new current point becomes
            the final (x, y) coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToRel.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathQuadraticCurveToRel"/> class.
            </summary>
            <param name="x1">X coordinate of control point.</param>
            <param name="y1">Y coordinate of control point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToRel.#ctor(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathQuadraticCurveToRel"/> class.
            </summary>
            <param name="controlPoint">Coordinate of control point.</param>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathQuadraticCurveToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathSmoothCurveToAbs">
            <summary>
            Draws a cubic Bezier curve from the current point to (x,y) using absolute coordinates. The
            first control point is assumed to be the reflection of the second control point on the
            previous command relative to the current point. (If there is no previous command or if the
            previous command was not an PathCurveToAbs, PathCurveToRel, PathSmoothCurveToAbs or
            PathSmoothCurveToRel, assume the first control point is coincident with the current point.)
            (x2,y2) is the second control point (i.e., the control point at the end of the curve). At
            the end of the command, the new current point becomes the final (x,y) coordinate pair used
            in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToAbs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothCurveToAbs"/> class.
            </summary>
            <param name="x2">X coordinate of second point.</param>
            <param name="y2">Y coordinate of second point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToAbs.#ctor(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothCurveToAbs"/> class.
            </summary>
            <param name="controlPoint">Coordinate of second point.</param>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathSmoothCurveToRel">
            <summary>
            Draws a cubic Bezier curve from the current point to (x,y) using relative coordinates. The
            first control point is assumed to be the reflection of the second control point on the
            previous command relative to the current point. (If there is no previous command or if the
            previous command was not an PathCurveToAbs, PathCurveToRel, PathSmoothCurveToAbs or
            PathSmoothCurveToRel, assume the first control point is coincident with the current point.)
            (x2,y2) is the second control point (i.e., the control point at the end of the curve). At
            the end of the command, the new current point becomes the final (x,y) coordinate pair used
            in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToRel.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothCurveToRel"/> class.
            </summary>
            <param name="x2">X coordinate of second point.</param>
            <param name="y2">Y coordinate of second point.</param>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToRel.#ctor(ImageMagick.PointD,ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothCurveToRel"/> class.
            </summary>
            <param name="controlPoint">Coordinate of second point.</param>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothCurveToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathSmoothQuadraticCurveToAbs">
            <summary>
            Draws a quadratic Bezier curve (using absolute coordinates) from the current point to (X, Y).
            The control point is assumed to be the reflection of the control point on the previous
            command relative to the current point. (If there is no previous command or if the previous
            command was not a PathQuadraticCurveToAbs, PathQuadraticCurveToRel,
            PathSmoothQuadraticCurveToAbs or PathSmoothQuadraticCurveToRel, assume the control point is
            coincident with the current point.). At the end of the command, the new current point becomes
            the final (X,Y) coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToAbs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothQuadraticCurveToAbs"/> class.
            </summary>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToAbs.#ctor(ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothQuadraticCurveToAbs"/> class.
            </summary>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToAbs.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.PathSmoothQuadraticCurveToRel">
            <summary>
            Draws a quadratic Bezier curve (using relative coordinates) from the current point to (X, Y).
            The control point is assumed to be the reflection of the control point on the previous
            command relative to the current point. (If there is no previous command or if the previous
            command was not a PathQuadraticCurveToAbs, PathQuadraticCurveToRel,
            PathSmoothQuadraticCurveToAbs or PathSmoothQuadraticCurveToRel, assume the control point is
            coincident with the current point.). At the end of the command, the new current point becomes
            the final (X,Y) coordinate pair used in the polybezier.
            </summary>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToRel.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothQuadraticCurveToRel"/> class.
            </summary>
            <param name="x">X coordinate of final point.</param>
            <param name="y">Y coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToRel.#ctor(ImageMagick.PointD)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PathSmoothQuadraticCurveToRel"/> class.
            </summary>
            <param name="end">Coordinate of final point.</param>
        </member>
        <member name="M:ImageMagick.PathSmoothQuadraticCurveToRel.ImageMagick#IDrawingWand#Draw(ImageMagick.DrawingWand)">
            <summary>
            Draws this instance with the drawing wand.
            </summary>
            <param name="wand">The want to draw on.</param>
        </member>
        <member name="T:ImageMagick.DensityExtensions">
            <summary>
            Extension methods for the <see cref="T:ImageMagick.Density"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.DensityExtensions.ToGeometry(ImageMagick.Density,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:ImageMagick.MagickGeometry"/> based on the specified width and height.
            </summary>
            <param name="self">The density.</param>
            <param name="width">The width in cm or inches.</param>
            <param name="height">The height in cm or inches.</param>
            <returns>A <see cref="T:ImageMagick.MagickGeometry"/> based on the specified width and height in cm or inches.</returns>
        </member>
        <member name="T:ImageMagick.IExifProfileExtensions">
            <summary>
            Extension methods for the <see cref="T:ImageMagick.IExifProfile"/> interface.
            </summary>
        </member>
        <member name="M:ImageMagick.IExifProfileExtensions.CreateThumbnail(ImageMagick.IExifProfile)">
            <summary>
            Returns the thumbnail in the exif profile when available.
            </summary>
            <param name="self">The exif profile.</param>
            <returns>The thumbnail in the exif profile when available.</returns>
        </member>
        <member name="T:ImageMagick.DrawablesFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickColor`1"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.DrawablesFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IDrawables`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IDrawables`1"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.MagickColorFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickColor`1"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
            <param name="color">The color to use.</param>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <param name="red">Red component value of this color.</param>
            <param name="green">Green component value of this color.</param>
            <param name="blue">Blue component value of this color.</param>
            <param name="alpha">Alpha component value of this color.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <param name="cyan">Cyan component value of this color.</param>
            <param name="magenta">Magenta component value of this color.</param>
            <param name="yellow">Yellow component value of this color.</param>
            <param name="black">Black component value of this color.</param>
            <param name="alpha">Alpha component value of this colors.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickColorFactory.Create(System.String)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColor`1"/>.
            </summary>
            <param name="color">The RGBA/CMYK hex string or name of the color (http://www.imagemagick.org/script/color.php).
            For example: #F000, #FF000000, #FFFF000000000000.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.MagickFactory">
            <summary>
            Class that can be used to create various instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickFactory"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Color">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IMagickColorFactory`1"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Drawables">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IDrawables`1"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Geometry">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IMagickGeometry"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Image">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IMagickImage`1"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.ImageCollection">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IMagickImageCollection`1"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.ImageInfo">
            <summary>
            Gets a factory that can be used to create <see cref="T:ImageMagick.IMagickImageInfo"/> instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Matrix">
            <summary>
            Gets a factory that can be used to create various matrix instances.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.QuantumInfo">
            <summary>
            Gets the quantum information of this image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFactory.Settings">
            <summary>
            Gets a factory that can be used to create various settings.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickGeometryFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickGeometry"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="widthAndHeight">The width and height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the  height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(System.Int32,System.Int32,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the  height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.Create(System.String)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <param name="value">Geometry specifications in the form: &lt;width&gt;x&lt;height&gt;
            {+-}&lt;xoffset&gt;{+-}&lt;yoffset&gt; (where width, height, xoffset, and yoffset are numbers).</param>
            <returns>A new <see cref="T:ImageMagick.IMagickGeometry"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometryFactory.CreateFromPageSize(System.String)">
            <summary>
            Initializes a new <see cref="T:ImageMagick.IMagickGeometry"/> instance using the specified page size.
            </summary>
            <param name="pageSize">The page size.</param>
            <returns>A <see cref="T:ImageMagick.IMagickGeometry"/> instance that represents the specified page size.</returns>
        </member>
        <member name="T:ImageMagick.MagickImageCollectionFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickImageCollection`1"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.Byte[])">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.IO.FileInfo)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.Collections.Generic.IEnumerable{ImageMagick.IMagickImage{System.Single}})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="images">The images to add to the collection.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.IO.Stream)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.String)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollectionFactory.Create(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageCollection`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageCollection`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="T:ImageMagick.MagickImageFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickImage`1"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[])">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[],System.Int32,System.Int32,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.IMagickImage`1"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.Byte[],ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.FileInfo)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <returns>A new <see cref="T:ImageMagick.MagickImage"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.FileInfo,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="color">The color to fill the image with.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.Stream)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.IO.Stream,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.String)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageFactory.Create(System.String,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImage`1"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImage`1"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="T:ImageMagick.MagickImageInfoFactory">
            <summary>
            Class that can be used to create <see cref="T:ImageMagick.IMagickImageInfo"/> instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create(System.Byte[])">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create(System.IO.FileInfo)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <param name="file">The file to read the image from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create(System.IO.Stream)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfoFactory.Create(System.String)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickImageInfo"/>.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <returns>A new <see cref="T:ImageMagick.IMagickImageInfo"/> instance.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="T:ImageMagick.MatrixFactory">
            <summary>
            Class that can be used to create various matrix instances.
            </summary>
        </member>
        <member name="M:ImageMagick.MatrixFactory.CreateColorMatrix(System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColorMatrix"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickColorMatrix"/> instance.</returns>
            <param name="order">The order (1 to 6).</param>
        </member>
        <member name="M:ImageMagick.MatrixFactory.CreateColorMatrix(System.Int32,System.Double[])">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickColorMatrix"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickColorMatrix"/> instance.</returns>
            <param name="order">The order (1 to 6).</param>
            <param name="values">The values to initialize the matrix with.</param>
        </member>
        <member name="M:ImageMagick.MatrixFactory.CreateConvolveMatrix(System.Int32)">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IConvolveMatrix"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IConvolveMatrix"/> instance.</returns>
            <param name="order">The order (odd number).</param>
        </member>
        <member name="M:ImageMagick.MatrixFactory.CreateConvolveMatrix(System.Int32,System.Double[])">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IConvolveMatrix"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IConvolveMatrix"/> instance.</returns>
            <param name="order">The order (odd number).</param>
            <param name="values">The values to initialize the matrix with.</param>
        </member>
        <member name="T:ImageMagick.SettingsFactory">
            <summary>
            Class that can be used to create various settings.
            </summary>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateCompareSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.ICompareSettings`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.ICompareSettings`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateComplexSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IComplexSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IComplexSettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateConnectedComponentsSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IConnectedComponentsSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IConnectedComponentsSettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateDeskewSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IDeskewSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IDeskewSettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateDistortSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IDistortSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IDistortSettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateKmeansSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IKmeansSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IKmeansSettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateMagickReadSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMagickReadSettings`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickReadSettings`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateMontageSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMontageSettings`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMagickReadSettings`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateMorphologySettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IMorphologySettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IMorphologySettings"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreatePixelReadSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IPixelReadSettings`1"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IPixelReadSettings`1"/> instance.</returns>
        </member>
        <member name="M:ImageMagick.SettingsFactory.CreateQuantizeSettings">
            <summary>
            Initializes a new instance that implements <see cref="T:ImageMagick.IQuantizeSettings"/>.
            </summary>
            <returns>A new <see cref="T:ImageMagick.IQuantizeSettings"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.Formats.BmpReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Bmp"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.BmpReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.BmpReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.BmpReadDefines.IgnoreFileSize">
            <summary>
            Gets or sets a value indicating whether the file size should be ignored (bmp:ignore-filesize).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.BmpReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.BmpSubtype">
            <summary>
            Specifies bmp subtypes.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.BmpSubtype.ARGB1555">
            <summary>
            ARGB1555.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.BmpSubtype.ARGB4444">
            <summary>
            ARGB4444.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.BmpSubtype.RGB555">
            <summary>
            RGB555.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.BmpSubtype.RGB565">
            <summary>
            RGB565.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.BmpWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Bmp"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.BmpWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.BmpWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.BmpWriteDefines.Subtype">
            <summary>
            Gets or sets the subtype that will be used (bmp:subtype).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.BmpWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.CaptionReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Caption"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.CaptionReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.CaptionReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.CaptionReadDefines.MaxFontPointsize">
            <summary>
            Gets or sets a the maximum font pointsize (caption:max-pointsize).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.CaptionReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.DdsCompression">
            <summary>
            Specifies a limited set of the available dds compression methods.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DdsCompression.None">
            <summary>
            Do not compress the pixels.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DdsCompression.Dxt1">
            <summary>
            Use Dxt1 instead of the default compression.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.DdsReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Dds"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.DdsReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.DdsReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsReadDefines.SkipMipmaps">
            <summary>
            Gets or sets a value indicating wether mipmaps should be skipped (dds:skip-mipmaps).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.DdsWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Dds"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.DdsWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.DdsWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.ClusterFit">
            <summary>
            Gets or sets a value indicating whether cluser fit is enabled or disabled (dds:cluster-fit).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.Compression">
            <summary>
            Gets or sets the compression that will be used instead of the default compression. Only a limited set of the
            compression methods are available for this. (dds:compression).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.FastMipmaps">
            <summary>
            Gets or sets a value indicating whether the mipmaps should be resized faster but with a lower quality (dds:fast-mipmaps).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.Mipmaps">
            <summary>
            Gets or sets the the number of mipmaps, zero will disable writing mipmaps (dds:mipmaps).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.MipmapsFromCollection">
            <summary>
            Gets or sets a value indicating whether the mipmaps should be created from the images in the collection (dds:mipmaps=fromlist).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.Raw">
            <summary>
            Gets or sets a value indicating whether only the raw pixels should be written (dds:raw).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.WeightByAlpha">
            <summary>
            Gets or sets a value indicating whether weight by alpha is enabled or disabled when cluster fit is used (dds:weight-by-alpha).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DdsWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.DngOutputColor">
            <summary>
            Defines the dng output colors.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.Raw">
            <summary>
            Raw color (unique to each camera).
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.SRGB">
            <summary>
            sRGB D65 (default).
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.AdobeRGB">
            <summary>
            Adobe RGB (1998) D65.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.WideGamutRGB">
            <summary>
            Wide Gamut RGB D65.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.KodakProPhotoRGB">
            <summary>
            Kodak ProPhoto RGB D65.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.XYZ">
            <summary>
            XYZ.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.DngOutputColor.ACES">
            <summary>
            Academy Color Encoding System.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.DngReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Dng"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.DngReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.DngReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DngReadDefines.DisableAutoBrightness">
            <summary>
            Gets or sets a value indicating wether auto whitebalance should be used (dng:use_auto_wb).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DngReadDefines.OutputColor">
            <summary>
            Gets or sets the output color.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DngReadDefines.UseAutoWhitebalance">
            <summary>
            Gets or sets a value indicating wether auto whitebalance should be used (dng:use_auto_wb).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DngReadDefines.UseCameraWhitebalance">
            <summary>
            Gets or sets a value indicating wether the whitebalance of the camera should be used (dng:use_camera_wb).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.DngReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.HeicReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Heic"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.HeicReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.HeicReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.HeicReadDefines.DepthImage">
            <summary>
            Gets or sets a value indicating whether the depth image should be read (heic:depth-image).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.HeicReadDefines.PreserveOrientation">
            <summary>
            Gets or sets a value indicating whether the orientation should be preserved (heic:preserve-orientation).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.HeicReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.Jp2ProgressionOrder">
            <summary>
            Specifies jp2 progression orders.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.Jp2ProgressionOrder.LRCP">
            <summary>
            Layer-resolution-component-precinct order.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.Jp2ProgressionOrder.RLCP">
            <summary>
            Resolution-layer-component-precinct order.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.Jp2ProgressionOrder.RPCL">
            <summary>
            Resolution-precinct-component-layer order.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.Jp2ProgressionOrder.PCRL">
            <summary>
            Precinct-component-resolution-layer order.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.Jp2ProgressionOrder.CPRL">
            <summary>
            Component-precinct-resolution-layer order.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.Jp2ReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Jp2"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.Jp2ReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.Jp2ReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2ReadDefines.QualityLayers">
            <summary>
            Gets or sets the maximum number of quality layers to decode (jp2:quality-layers).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2ReadDefines.ReduceFactor">
            <summary>
            Gets or sets the number of highest resolution levels to be discarded (jp2:reduce-factor).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2ReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.Jp2WriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Jp2"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.Jp2WriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.Jp2WriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2WriteDefines.NumberResolutions">
            <summary>
            Gets or sets the number of resolutions to encode (jp2:number-resolutions).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2WriteDefines.ProgressionOrder">
            <summary>
            Gets or sets the progression order (jp2:progression-order).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2WriteDefines.Quality">
            <summary>
            Gets or sets the quality layer PSNR, given in dB. The order is from left to right in ascending order (jp2:quality).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2WriteDefines.Rate">
            <summary>
            Gets or sets the compression ratio values. Each value is a factor of compression, thus 20 means 20 times compressed.
            The order is from left to right in descending order. A final lossless quality layer is signified by the value 1 (jp2:rate).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.Jp2WriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JpegDctMethod">
            <summary>
            Specifies the DCT method.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegDctMethod.Fast">
            <summary>
            Fast.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegDctMethod.Float">
            <summary>
            Float.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegDctMethod.Slow">
            <summary>
            Slow.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JpegProfileTypes">
            <summary>
            Specifies profile types.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.App">
            <summary>
            App profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.EightBim">
            <summary>
            8bim profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.Exif">
            <summary>
            Exif profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.Icc">
            <summary>
            Icc profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.Iptc">
            <summary>
            Iptc profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegProfileTypes.Xmp">
            <summary>
            Xmp profile.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JpegReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Jpeg"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.JpegReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.JpegReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.BlockSmoothing">
            <summary>
            Gets or sets a value indicating whether block smoothing is enabled or disabled (jpeg:block-smoothing).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.Colors">
            <summary>
            Gets or sets the desired number of colors (jpeg:colors).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.DctMethod">
            <summary>
            Gets or sets the dtc method that will be used (jpeg:dct-method).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.FancyUpsampling">
            <summary>
            Gets or sets a value indicating whether fancy upsampling is enabled or disabled (jpeg:fancy-upsampling).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.Size">
            <summary>
            Gets or sets the size the scale the image to (jpeg:size). The output image won't be exactly
            the specified size. More information can be found here: http://jpegclub.org/djpeg/.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.SkipProfiles">
            <summary>
            Gets or sets the profile(s) that should be skipped when the image is read (profile:skip).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JpegSamplingFactor">
            <summary>
            Specifies the sampling factor.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio444">
            <summary>
            4:4:4.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio422">
            <summary>
            4:2:2.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio411">
            <summary>
            4:1:1.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio440">
            <summary>
            4:4:0.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio420">
            <summary>
            4:2:0.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.JpegSamplingFactor.Ratio410">
            <summary>
            4:1:0.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JpegWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Jpeg"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.JpegWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.JpegWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.ArithmeticCoding">
            <summary>
            Gets or sets a value indicating whether arithmetic coding is enabled or disabled (jpeg:arithmetic-coding).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.DctMethod">
            <summary>
            Gets or sets the dtc method that will be used (jpeg:dct-method).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.Extent">
            <summary>
            Gets or sets the compression quality that does not exceed the specified extent in kilobytes (jpeg:extent).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.OptimizeCoding">
            <summary>
            Gets or sets a value indicating whether optimize coding is enabled or disabled (jpeg:optimize-coding).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.QuantizationTables">
            <summary>
            Gets or sets the file name that contains custom quantization tables (jpeg:q-table).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.SamplingFactor">
            <summary>
            Gets or sets jpeg sampling factor (jpeg:sampling-factor).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JpegWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.JxlWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Jxl"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.JxlWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.JxlWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JxlWriteDefines.Effort">
            <summary>
            Gets or sets the jpeg-xl encoding effort. Valid values are in the range of 3 (falcon) to 9 (tortois) (jxl:dct-method).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.JxlWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PdfInfo">
            <summary>
            The info of a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfInfo.PageCount">
            <summary>
            Gets the page count of the file.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PdfInfo.Create(System.IO.FileInfo)">
            <summary>
            Creates info from a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.
            </summary>
            <param name="file">The pdf file to create the info from.</param>
            <returns>The info of a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.</returns>
        </member>
        <member name="M:ImageMagick.Formats.PdfInfo.Create(System.IO.FileInfo,System.String)">
            <summary>
            Creates info from a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.
            </summary>
            <param name="file">The pdf file to create the info from.</param>
            <param name="password">The password of the pdf file.</param>
            <returns>The info of a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.</returns>
        </member>
        <member name="M:ImageMagick.Formats.PdfInfo.Create(System.String)">
            <summary>
            Creates info from a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.
            </summary>
            <param name="fileName">The pdf file to create the info from.</param>
            <returns>The info of a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.</returns>
        </member>
        <member name="M:ImageMagick.Formats.PdfInfo.Create(System.String,System.String)">
            <summary>
            Creates info from a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.
            </summary>
            <param name="fileName">The pdf file to create the info from.</param>
            <param name="password">The password of the pdf file.</param>
            <returns>The info of a <see cref="F:ImageMagick.MagickFormat.Pdf"/> file.</returns>
        </member>
        <member name="T:ImageMagick.Formats.PdfReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Pdf"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PdfReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.PdfReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.FitPage">
            <summary>
            Gets or sets the size where the image should be scaled to fit the page (pdf:fit-page).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.Interpolate">
            <summary>
            Gets or sets a value indicating whether all images are forced to be interpolated at full device resolution.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.Password">
            <summary>
            Gets or sets the password that should be used to open the pdf (authenticate).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.UseCropBox">
            <summary>
            Gets or sets a value indicating whether use of the cropbox should be forced (pdf:use-trimbox).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.UseTrimBox">
            <summary>
            Gets or sets a value indicating whether use of the trimbox should be forced (pdf:use-trimbox).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PdfWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Pdf"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PdfWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.PdfWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfWriteDefines.Author">
            <summary>
            Gets or sets the author of the pdf document (pdf:author).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfWriteDefines.Producer">
            <summary>
            Gets or sets the producer of the pdf document (pdf:producer).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfWriteDefines.Title">
            <summary>
            Gets or sets the title of the pdf document (pdf:title).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PdfWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PngProfileTypes">
            <summary>
            Specifies profile types.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.App">
            <summary>
            App profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.EightBim">
            <summary>
            8bim profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.Exif">
            <summary>
            Exif profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.Icc">
            <summary>
            Icc profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.Iptc">
            <summary>
            Iptc profile.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PngProfileTypes.Xmp">
            <summary>
            Xmp profile.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PngReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Png"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PngReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.PngReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.ChunkCacheMax">
            <summary>
            Gets or sets the total number of sPLT, text, and unknown chunks that can be stored
            (png:chunk-cache-max). 0 means unlimited.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.ChunkMallocMax">
            <summary>
            Gets or sets the total memory that a zTXt, sPLT, iTXt, iCCP, or unknown chunk can occupy
            when decompressed (png:chuck-malloc-max). 0 means unlimited.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.PreserveiCCP">
            <summary>
            Gets or sets a value indicating whether the PNG decoder and encoder examine any ICC profile
            that is present. By default, the PNG decoder and encoder examine any ICC profile that is present,
            either from an iCCP chunk in the PNG input or supplied via an option, and if the profile is
            recognized to be the sRGB profile, converts it to the sRGB chunk. You can use this option
            to prevent this from happening; in such cases the iCCP chunk will be read. (png:preserve-iCCP).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.IgnoreCrc">
            <summary>
            Gets or sets a value indicating whether the PNG decoder should ignore the CRC when reading the
            image. (png:ignore-crc).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.SkipProfiles">
            <summary>
            Gets or sets the profile(s) that should be skipped when the image is read (profile:skip).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.SwapBytes">
            <summary>
            Gets or sets a value indicating whether the bytes should be swapped. The PNG specification
            requires that any multi-byte integers be stored in network byte order (MSB-LSB endian).
            This option allows you to fix any invalid PNG files that have 16-bit samples stored
            incorrectly in little-endian order (LSB-MSB). (png:swap-bytes).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PngReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PsdAdditionalInfo">
            <summary>
            The additional info of a <see cref="F:ImageMagick.MagickFormat.Psd"/> image.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PsdAdditionalInfo.LayerName">
            <summary>
            Gets the name of the layer.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PsdAdditionalInfo.FromImage(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Creates additional info from a <see cref="F:ImageMagick.MagickFormat.Psd"/> image.
            </summary>
            <param name="image">The image to create the additonal info from.</param>
            <returns>The additional info from a <see cref="F:ImageMagick.MagickFormat.Psd"/> image.</returns>
        </member>
        <member name="T:ImageMagick.Formats.PsdAdditionalInfoPart">
            <summary>
            Specifies which additional info should be written to the output file.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PsdAdditionalInfoPart.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PsdAdditionalInfoPart.All">
            <summary>
            All.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.PsdAdditionalInfoPart.Selective">
            <summary>
            Only select the info that does not use geometry.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PsdReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Psd"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PsdReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.PsdReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PsdReadDefines.AlphaUnblend">
            <summary>
            Gets or sets a value indicating whether alpha unblending should be enabled or disabled (psd:alpha-unblend).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PsdReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.PsdWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Psd"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.PsdWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.PsdWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PsdWriteDefines.AdditionalInfo">
            <summary>
            Gets or sets which additional info should be written to the output file.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.PsdWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.TiffAlpha">
            <summary>
            Specifies tiff alpha options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.TiffAlpha.Unspecified">
            <summary>
            Unspecified.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.TiffAlpha.Associated">
            <summary>
            Associated.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.TiffAlpha.Unassociated">
            <summary>
            Unassociated.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.TiffReadDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Tiff"/> image is read.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.TiffReadDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.TiffReadDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffReadDefines.IgnoreExifPoperties">
            <summary>
            Gets or sets a value indicating whether the exif profile should be ignored (tiff:exif-properties).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffReadDefines.IgnoreTags">
            <summary>
            Gets or sets the tiff tags that should be ignored (tiff:ignore-tags).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffReadDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.TiffWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.Tiff"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.TiffWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.TiffWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.Alpha">
            <summary>
            Gets or sets the tiff alpha (tiff:alpha).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.Endian">
            <summary>
            Gets or sets the endianness of the tiff file (tiff:endian).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.FillOrder">
            <summary>
            Gets or sets the endianness of the tiff file (tiff:fill-order).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.Predictor">
            <summary>
            Gets or sets the prediction scheme with LZW (tiff:predictor).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.PreserveCompression">
            <summary>
            Gets or sets a value indicating whether the compression of the image should be preserved (tiff:preserve-compression).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.RowsPerStrip">
            <summary>
            Gets or sets the rows per strip (tiff:rows-per-strip).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.TileGeometry">
            <summary>
            Gets or sets the tile geometry (tiff:tile-geometry).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.WriteLayers">
            <summary>
            Gets or sets a value indicating whether photoshop layers should be written (tiff:write-layers).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.TiffWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.VideoWriteDefines">
            <summary>
            Class for defines that are used when a video image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.VideoWriteDefines.#ctor(ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.VideoWriteDefines"/> class.
            </summary>
            <param name="format">The video format.</param>
        </member>
        <member name="P:ImageMagick.Formats.VideoWriteDefines.PixelFormat">
            <summary>
            Gets or sets the video pixel format (video:pixel-format).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.VideoWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPAlphaCompression">
            <summary>
            Specifies WebP alpha compression options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPAlphaCompression.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPAlphaCompression.Compressed">
            <summary>
            Compressed.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPAlphaFiltering">
            <summary>
            Specifies WebP alpha filtering options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPAlphaFiltering.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPAlphaFiltering.Fast">
            <summary>
            Fast.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPAlphaFiltering.Best">
            <summary>
            Best.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPFilterType">
            <summary>
            Specifies WebP filter type options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPFilterType.Simple">
            <summary>
            Simple.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPFilterType.Strong">
            <summary>
            Strong.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPImageHint">
            <summary>
            Specifies WebP image hint options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPImageHint.Default">
            <summary>
            Default preset.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPImageHint.Photo">
            <summary>
            Digital picture, like portrait, inner shot.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPImageHint.Picture">
            <summary>
            Outdoor photograph, with natural lighting.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPImageHint.Graph">
            <summary>
            Discrete tone image (graph, map-tile etc).
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPPreprocessing">
            <summary>
            Specifies WebP preprocessing options.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPPreprocessing.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPPreprocessing.SegmentSmooth">
            <summary>
            SegmentSmooth.
            </summary>
        </member>
        <member name="F:ImageMagick.Formats.WebPPreprocessing.PseudoRandom">
            <summary>
            PseudoRandom.
            </summary>
        </member>
        <member name="T:ImageMagick.Formats.WebPWriteDefines">
            <summary>
            Class for defines that are used when a <see cref="F:ImageMagick.MagickFormat.WebP"/> image is written.
            </summary>
        </member>
        <member name="M:ImageMagick.Formats.WebPWriteDefines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Formats.WebPWriteDefines"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.AlphaCompression">
            <summary>
            Gets or sets the encoding of the alpha plane (webp:alpha-compression).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.AlphaFiltering">
            <summary>
            Gets or sets the predictive filtering method for the alpha plane (webp:alpha-filtering).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.AlphaQuality">
            <summary>
            Gets or sets the compression value for alpha compression between 0 and 100. Lossless compression of alpha is achieved using a value of 100, while the lower values result in a lossy compression (webp:alpha-quality).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.AutoFilter">
            <summary>
            Gets or sets a value indicating wether the algorithm should spend additional time optimizing the filtering strength to reach a well-balanced quality (webp:auto-filter).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.EmulateJpegSize">
            <summary>
            Gets or sets a value indicating wether a similar compression to that of JPEG but with less degradation should be used. (webp:emulate-jpeg-size).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.FilterSharpness">
            <summary>
            Gets or sets strength of the filter sharpness, between 0 and 7 (least sharp) (webp:filter-sharpness).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.FilterStrength">
            <summary>
            Gets or sets strength of the deblocking filter, between 0 (no filtering) and 100 (maximum filtering). A value of 0 turns off any filtering. Higher values increase the strength of the filtering process applied after decoding the image. The higher the value, the smoother the image appears. Typical values are usually in the range of 20 to 50 (webp:filter-strength).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.FilterType">
            <summary>
            Gets or sets the filter type. (webp:filter-type).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.ImageHint">
            <summary>
            Gets or sets the hint about the image type. (webp:image-hint).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Lossless">
            <summary>
            Gets or sets a value indicating wether the image should be encoded without any loss (webp:lossless).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.LowMemory">
            <summary>
            Gets or sets a value indicating wether the memory usage should be reduced (webp:low-memory).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Method">
            <summary>
            Gets or sets the compression method to use. It controls the trade off between encoding speed and the compressed file size and quality. Possible values range from 0 to 6. Default value is 4. When higher values are utilized, the encoder spends more time inspecting additional encoding possibilities and decide on the quality gain. Lower value might result in faster processing time at the expense of larger file size and lower compression quality (webp:method).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.NearLossless">
            <summary>
            Gets or sets the near lossless encoding, between 0 (max-loss) and 100 (off) (webp:near-lossless).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.PartitionLimit">
            <summary>
            Gets or sets the partition limit. Choose 0 for no quality degradation and 100 for maximum degradation (webp:partition-limit).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Partitions">
            <summary>
            Gets or sets progressive decoding: choose 0 to 3 (webp:partitions).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Pass">
            <summary>
            Gets or sets the maximum number of passes to target compression size or PSNR (webp:pass).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Preprocessing">
            <summary>
            Gets or sets the preprocessing filter (webp:preprocessing).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Segment">
            <summary>
            Gets or sets  the maximum number of segments to use, choose from 1 to 4 (webp:segment).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.ShowCompressed">
            <summary>
            Gets or sets a value indicating wether the compressed picture should be exported back (webp:show-compressed).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.SnsStrength">
            <summary>
            Gets or sets he amplitude of the spatial noise shaping. Spatial noise shaping (SNS) refers to a general collection of built-in algorithms used to decide which area of the picture should use relatively less bits, and where else to better transfer these bits. The possible range goes from 0 (algorithm is off) to 100 (the maximal effect). The default value is 80 (webp:sns-strength).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.TargetPsnr">
            <summary>
            Gets or sets the desired minimal distortion (webp:target-psnr).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.TargetSize">
            <summary>
            Gets or sets the target size (in bytes) to try and reach for the compressed output.  The compressor makes several passes of partial encoding in order to get as close as possible to this target. (webp:target-size).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.ThreadLevel">
            <summary>
            Gets or sets a value indicating wether multi-threaded encoding should be enabled (webp:thread-level).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.UseSharpYuv">
            <summary>
            Gets or sets a value indicating wether sharp (and slow) RGB->YUV conversion should be used. (webp:use-sharp-yuv).
            </summary>
        </member>
        <member name="P:ImageMagick.Formats.WebPWriteDefines.Defines">
            <summary>
            Gets the defines that should be set as a define on an image.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickFormatInfo">
            <summary>
            Class that contains information about an image format.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.CanReadMultithreaded">
            <summary>
            Gets a value indicating whether the format can be read multithreaded.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.CanWriteMultithreaded">
            <summary>
            Gets a value indicating whether the format can be written multithreaded.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.Description">
            <summary>
            Gets the description of the format.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.Format">
            <summary>
            Gets the format.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.IsMultiFrame">
            <summary>
            Gets a value indicating whether the format supports multiple frames.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.IsReadable">
            <summary>
            Gets a value indicating whether the format is readable.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.IsWritable">
            <summary>
            Gets a value indicating whether the format is writable.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.MimeType">
            <summary>
            Gets the mime type.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickFormatInfo.ModuleFormat">
            <summary>
            Gets the module.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Create(System.IO.FileInfo)">
            <summary>
            Returns the format information. The extension of the supplied file is used to determine
            the format.
            </summary>
            <param name="file">The file to check.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Create(ImageMagick.MagickFormat)">
            <summary>
            Returns the format information of the specified format.
            </summary>
            <param name="format">The image format.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Create(System.String)">
            <summary>
            Returns the format information. The extension of the supplied file name is used to
            determine the format.
            </summary>
            <param name="fileName">The name of the file to check.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:ImageMagick.MagickFormatInfo"/>.
            </summary>
            <param name="obj">The object to compare this <see cref="T:ImageMagick.MagickFormatInfo"/> with.</param>
            <returns>True when the specified object is equal to the current <see cref="T:ImageMagick.MagickFormatInfo"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Equals(ImageMagick.IMagickFormatInfo)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.IMagickFormatInfo"/> is equal to the current <see cref="T:ImageMagick.MagickFormatInfo"/>.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.IMagickFormatInfo"/> to compare this <see cref="T:ImageMagick.MagickFormatInfo"/> with.</param>
            <returns>True when the specified <see cref="T:ImageMagick.IMagickFormatInfo"/> is equal to the current <see cref="T:ImageMagick.MagickFormatInfo"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.ToString">
            <summary>
            Returns a string that represents the current format.
            </summary>
            <returns>A string that represents the current format.</returns>
        </member>
        <member name="M:ImageMagick.MagickFormatInfo.Unregister">
            <summary>
            Unregisters this format.
            </summary>
            <returns>True when the format was found and unregistered.</returns>
        </member>
        <member name="T:ImageMagick.MagickImage">
            <summary>
            Class that represents an ImageMagick image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],System.Int32,System.Int32,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],System.Int32,System.Int32,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.Byte[],ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.FileInfo,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="color">The color to fill the image with.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="image">The image to create a copy of.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.IO.Stream,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.#ctor(System.String,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ImageMagick.MagickImage"/> class.
            </summary>
        </member>
        <member name="E:ImageMagick.MagickImage.Progress">
            <summary>
            Event that will be raised when progress is reported by this image.
            </summary>
        </member>
        <member name="E:ImageMagick.MagickImage.Warning">
            <summary>
            Event that will we raised when a warning is thrown by ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ImageMagick#INativeInstance#Instance">
            <inheritdoc/>
        </member>
        <member name="P:ImageMagick.MagickImage.AnimationDelay">
            <summary>
            Gets or sets the time in 1/100ths of a second which must expire before splaying the next image in an
            animated sequence.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.AnimationIterations">
            <summary>
            Gets or sets the number of iterations to loop an animation (e.g. Netscape loop extension) for.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.AnimationTicksPerSecond">
            <summary>
            Gets or sets the ticks per seconds for the animation delay.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ArtifactNames">
            <summary>
            Gets the names of the artifacts.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.AttributeNames">
            <summary>
            Gets the names of the attributes.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BackgroundColor">
            <summary>
            Gets or sets the background color of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BaseHeight">
            <summary>
            Gets the height of the image before transformations.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BaseWidth">
            <summary>
            Gets the width of the image before transformations.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BlackPointCompensation">
            <summary>
            Gets or sets a value indicating whether black point compensation should be used.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BorderColor">
            <summary>
            Gets or sets the border color of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.BoundingBox">
            <summary>
            Gets the smallest bounding box enclosing non-border pixels. The current fuzz value is used
            when discriminating between pixels.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ChannelCount">
            <summary>
            Gets the number of channels that the image contains.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Channels">
            <summary>
            Gets the channels of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ChromaBluePrimary">
            <summary>
            Gets or sets the chromaticity blue primary point.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ChromaGreenPrimary">
            <summary>
            Gets or sets the chromaticity green primary point.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ChromaRedPrimary">
            <summary>
            Gets or sets the chromaticity red primary point.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ChromaWhitePoint">
            <summary>
            Gets or sets the chromaticity white primary point.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ClassType">
            <summary>
            Gets or sets the image class (DirectClass or PseudoClass)
            NOTE: Setting a DirectClass image to PseudoClass will result in the loss of color information
            if the number of colors in the image is greater than the maximum palette size (either 256 (Q8)
            or 65536 (Q16).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ColorFuzz">
            <summary>
            Gets or sets the distance where colors are considered equal.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ColormapSize">
            <summary>
            Gets or sets the colormap size (number of colormap entries).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ColorSpace">
            <summary>
            Gets or sets the color space of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ColorType">
            <summary>
            Gets or sets the color type of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Comment">
            <summary>
            Gets or sets the comment text of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Compose">
            <summary>
            Gets or sets the composition operator to be used when composition is implicitly used (such as for image flattening).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Compression">
            <summary>
            Gets the compression method of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Density">
            <summary>
            Gets or sets the vertical and horizontal resolution in pixels of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Depth">
            <summary>
            Gets or sets the depth (bits allocated to red/green/blue components).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.EncodingGeometry">
            <summary>
            Gets the preferred size of the image when encoding.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="P:ImageMagick.MagickImage.Endian">
            <summary>
            Gets or sets the endianness (little like Intel or big like SPARC) for image formats which support
            endian-specific options.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.FileName">
            <summary>
            Gets the original file name of the image (only available if read from disk).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.FilterType">
            <summary>
            Gets or sets the filter to use when resizing image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Format">
            <summary>
            Gets or sets the format of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.FormatInfo">
            <summary>
            Gets the information about the format of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Gamma">
            <summary>
            Gets the gamma level of the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="P:ImageMagick.MagickImage.GifDisposeMethod">
            <summary>
            Gets or sets the gif disposal method.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.HasClippingPath">
            <summary>
            Gets a value indicating whether the image contains a clipping path.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.HasAlpha">
            <summary>
            Gets or sets a value indicating whether the image supports transparency (alpha channel).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Height">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Interlace">
            <summary>
            Gets or sets the type of interlacing to use.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Interpolate">
            <summary>
            Gets or sets the pixel color interpolate method to use.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.IsDisposed">
            <summary>
            Gets a value indicating whether the instance is disposed.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.IsOpaque">
            <summary>
            Gets a value indicating whether none of the pixels in the image have an alpha value other
            than OpaqueAlpha (QuantumRange).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Label">
            <summary>
            Gets or sets the label of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.MatteColor">
            <summary>
            Gets or sets the matte color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Orientation">
            <summary>
            Gets or sets the photo orientation of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Page">
            <summary>
            Gets or sets the preferred size and location of an image canvas.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.ProfileNames">
            <summary>
            Gets the names of the profiles.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Quality">
            <summary>
            Gets or sets the JPEG/MIFF/PNG compression level (default 75).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.RenderingIntent">
            <summary>
            Gets or sets the type of rendering intent.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Settings">
            <summary>
            Gets the settings for this MagickImage instance.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Signature">
            <summary>
            Gets the signature of this image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="P:ImageMagick.MagickImage.TotalColors">
            <summary>
            Gets the number of colors in the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.VirtualPixelMethod">
            <summary>
            Gets or sets the virtual pixel method.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImage.Width">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.op_Equality(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickImage"/> instances are considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.op_Inequality(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickImage"/> instances are not considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.op_GreaterThan(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickImage"/> is more than the second <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.op_LessThan(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickImage"/> is less than the second <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.op_GreaterThanOrEqual(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickImage"/> is more than or equal to the second <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.op_LessThanOrEqual(ImageMagick.MagickImage,ImageMagick.MagickImage)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickImage"/> is less than or equal to the second <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickImage"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.FromBase64(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImage"/> class using the specified base64 string.
            </summary>
            <param name="value">The base64 string to load the image from.</param>
            <returns>A new instance of the <see cref="T:ImageMagick.MagickImage"/> class.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveBlur">
            <summary>
            Adaptive-blur image with the default blur factor (0x1).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveBlur(System.Double)">
            <summary>
            Adaptive-blur image with specified blur factor.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveBlur(System.Double,System.Double)">
            <summary>
            Adaptive-blur image with specified blur factor.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveResize(System.Int32,System.Int32)">
            <summary>
            Resize using mesh interpolation. It works well for small resizes of less than +/- 50%
            of the original image size. For larger resizing on images a full filtered and slower resize
            function should be used instead.
            <para />
            Resize will fit the image into the requested size. It does NOT fill, the requested box size.
            Use the <see cref="T:ImageMagick.IMagickGeometry"/> overload for more control over the resulting size.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveResize(ImageMagick.IMagickGeometry)">
            <summary>
            Resize using mesh interpolation. It works well for small resizes of less than +/- 50%
            of the original image size. For larger resizing on images a full filtered and slower resize
            function should be used instead.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen">
            <summary>
            Adaptively sharpens the image by sharpening more intensely near image edges and less
            intensely far from edges.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(ImageMagick.Channels)">
            <summary>
            Adaptively sharpens the image by sharpening more intensely near image edges and less
            intensely far from edges.
            </summary>
            <param name="channels">The channel(s) that should be sharpened.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(System.Double,System.Double)">
            <summary>
            Adaptively sharpens the image by sharpening more intensely near image edges and less
            intensely far from edges.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveSharpen(System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Adaptively sharpens the image by sharpening more intensely near image edges and less
            intensely far from edges.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="channels">The channel(s) that should be sharpened.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,ImageMagick.Channels)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <param name="channels">The channel(s) that should be thresholded.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,System.Double)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <param name="bias">Constant to subtract from pixel neighborhood mean (+/-)(0-QuantumRange).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,System.Double,ImageMagick.Channels)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <param name="bias">Constant to subtract from pixel neighborhood mean (+/-)(0-QuantumRange).</param>
            <param name="channels">The channel(s) that should be thresholded.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,ImageMagick.Percentage)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <param name="biasPercentage">Constant to subtract from pixel neighborhood mean.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AdaptiveThreshold(System.Int32,System.Int32,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Local adaptive threshold image.
            http://www.dai.ed.ac.uk/HIPR2/adpthrsh.htm.
            </summary>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <param name="biasPercentage">Constant to subtract from pixel neighborhood mean.</param>
            <param name="channels">The channel(s) that should be thresholded.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType)">
            <summary>
            Add noise to image with the specified noise type.
            </summary>
            <param name="noiseType">The type of noise that should be added to the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType,ImageMagick.Channels)">
            <summary>
            Add noise to the specified channel of the image with the specified noise type.
            </summary>
            <param name="noiseType">The type of noise that should be added to the image.</param>
            <param name="channels">The channel(s) where the noise should be added.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType,System.Double)">
            <summary>
            Add noise to image with the specified noise type.
            </summary>
            <param name="noiseType">The type of noise that should be added to the image.</param>
            <param name="attenuate">Attenuate the random distribution.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AddNoise(ImageMagick.NoiseType,System.Double,ImageMagick.Channels)">
            <summary>
            Add noise to the specified channel of the image with the specified noise type.
            </summary>
            <param name="noiseType">The type of noise that should be added to the image.</param>
            <param name="attenuate">Attenuate the random distribution.</param>
            <param name="channels">The channel(s) where the noise should be added.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AffineTransform(ImageMagick.IDrawableAffine)">
            <summary>
            Affine Transform image.
            </summary>
            <param name="affineMatrix">The affine matrix to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Alpha(ImageMagick.AlphaOption)">
            <summary>
            Applies the specified alpha option.
            </summary>
            <param name="value">The option to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.IMagickGeometry)">
            <summary>
            Annotate using specified text, and bounding area.
            </summary>
            <param name="text">The text to use.</param>
            <param name="boundingArea">The bounding area.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.IMagickGeometry,ImageMagick.Gravity)">
            <summary>
            Annotate using specified text, bounding area, and placement gravity.
            </summary>
            <param name="text">The text to use.</param>
            <param name="boundingArea">The bounding area.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.IMagickGeometry,ImageMagick.Gravity,System.Double)">
            <summary>
            Annotate using specified text, bounding area, and placement gravity.
            </summary>
            <param name="text">The text to use.</param>
            <param name="boundingArea">The bounding area.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="angle">The rotation.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Annotate(System.String,ImageMagick.Gravity)">
            <summary>
            Annotate with text (bounding area is entire image) and placement gravity.
            </summary>
            <param name="text">The text to use.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoGamma">
            <summary>
            Extracts the 'mean' from the image and adjust the image to try make set its gamma.
            appropriatally.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoGamma(ImageMagick.Channels)">
            <summary>
            Extracts the 'mean' from the image and adjust the image to try make set its gamma.
            appropriatally.
            </summary>
            <param name="channels">The channel(s) to set the gamma for.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoLevel">
            <summary>
            Adjusts the levels of a particular image channel by scaling the minimum and maximum values
            to the full quantum range.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoLevel(ImageMagick.Channels)">
            <summary>
            Adjusts the levels of a particular image channel by scaling the minimum and maximum values
            to the full quantum range.
            </summary>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoOrient">
            <summary>
            Adjusts an image so that its orientation is suitable for viewing.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.AutoThreshold(ImageMagick.AutoThresholdMethod)">
            <summary>
            Automatically selects a threshold and replaces each pixel in the image with a black pixel if
            the image intentsity is less than the selected threshold otherwise white.
            </summary>
            <param name="method">The threshold method.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BilateralBlur(System.Int32,System.Int32)">
            <summary>
            Applies a non-linear, edge-preserving, and noise-reducing smoothing filter.
            </summary>
            <param name="width">The width of the neighborhood in pixels.</param>
            <param name="height">The height of the neighborhood in pixels.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.BilateralBlur(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Applies a non-linear, edge-preserving, and noise-reducing smoothing filter.
            </summary>
            <param name="width">The width of the neighborhood in pixels.</param>
            <param name="height">The height of the neighborhood in pixels.</param>
            <param name="intensitySigma">The sigma in the intensity space.</param>
            <param name="spatialSigma">The sigma in the coordinate space.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.BlackThreshold(ImageMagick.Percentage)">
            <summary>
            Forces all pixels below the threshold into black while leaving all pixels at or above
            the threshold unchanged.
            </summary>
            <param name="threshold">The threshold to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BlackThreshold(ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Forces all pixels below the threshold into black while leaving all pixels at or above
            the threshold unchanged.
            </summary>
            <param name="threshold">The threshold to use.</param>
            <param name="channels">The channel(s) to make black.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BlueShift">
            <summary>
            Simulate a scene at nighttime in the moonlight.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BlueShift(System.Double)">
            <summary>
            Simulate a scene at nighttime in the moonlight.
            </summary>
            <param name="factor">The factor to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BitDepth">
            <summary>
            Calculates the bit depth (bits allocated to red/green/blue components). Use the Depth
            property to get the current value.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The bit depth (bits allocated to red/green/blue components).</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.BitDepth(ImageMagick.Channels)">
            <summary>
            Calculates the bit depth (bits allocated to red/green/blue components) of the specified channel.
            </summary>
            <param name="channels">The channel to get the depth for.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The bit depth (bits allocated to red/green/blue components) of the specified channel.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.BitDepth(ImageMagick.Channels,System.Int32)">
            <summary>
            Set the bit depth (bits allocated to red/green/blue components) of the specified channel.
            </summary>
            <param name="channels">The channel to set the depth for.</param>
            <param name="value">The depth.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BitDepth(System.Int32)">
            <summary>
            Set the bit depth (bits allocated to red/green/blue components).
            </summary>
            <param name="value">The depth.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Blur">
            <summary>
            Blur image with the default blur factor (0x1).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Blur(ImageMagick.Channels)">
            <summary>
            Blur image the specified channel of the image with the default blur factor (0x1).
            </summary>
            <param name="channels">The channel(s) that should be blurred.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Blur(System.Double,System.Double)">
            <summary>
            Blur image with specified blur factor.
            </summary>
            <param name="radius">The radius of the Gaussian in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Blur(System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Blur image with specified blur factor and channel.
            </summary>
            <param name="radius">The radius of the Gaussian in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="channels">The channel(s) that should be blurred.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Border(System.Int32)">
            <summary>
            Border image (add border to image).
            </summary>
            <param name="size">The size of the border.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Border(System.Int32,System.Int32)">
            <summary>
            Border image (add border to image).
            </summary>
            <param name="width">The width of the border.</param>
            <param name="height">The height of the border.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BrightnessContrast(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Changes the brightness and/or contrast of an image. It converts the brightness and
            contrast parameters into slope and intercept and calls a polynomical function to apply
            to the image.
            </summary>
            <param name="brightness">The brightness.</param>
            <param name="contrast">The contrast.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.BrightnessContrast(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Changes the brightness and/or contrast of an image. It converts the brightness and
            contrast parameters into slope and intercept and calls a polynomical function to apply
            to the image.
            </summary>
            <param name="brightness">The brightness.</param>
            <param name="contrast">The contrast.</param>
            <param name="channels">The channel(s) that should be changed.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CannyEdge">
            <summary>
            Uses a multi-stage algorithm to detect a wide range of edges in images.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CannyEdge(System.Double,System.Double,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Uses a multi-stage algorithm to detect a wide range of edges in images.
            </summary>
            <param name="radius">The radius of the gaussian smoothing filter.</param>
            <param name="sigma">The sigma of the gaussian smoothing filter.</param>
            <param name="lower">Percentage of edge pixels in the lower threshold.</param>
            <param name="upper">Percentage of edge pixels in the upper threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Charcoal">
            <summary>
            Charcoal effect image (looks like charcoal sketch).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Charcoal(System.Double,System.Double)">
            <summary>
            Charcoal effect image (looks like charcoal sketch).
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Chop(ImageMagick.IMagickGeometry)">
            <summary>
            Chop image (remove vertical or horizontal subregion of image) using the specified geometry.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ChopHorizontal(System.Int32,System.Int32)">
            <summary>
            Chop image (remove horizontal subregion of image).
            </summary>
            <param name="offset">The X offset from origin.</param>
            <param name="width">The width of the part to chop horizontally.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ChopVertical(System.Int32,System.Int32)">
            <summary>
            Chop image (remove horizontal subregion of image).
            </summary>
            <param name="offset">The Y offset from origin.</param>
            <param name="height">The height of the part to chop vertically.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clahe(ImageMagick.Percentage,ImageMagick.Percentage,System.Int32,System.Double)">
            <summary>
            A variant of adaptive histogram equalization in which the contrast amplification is limited,
            so as to reduce this problem of noise amplification.
            </summary>
            <param name="xTiles">The percentage of tile divisions to use in horizontal direction.</param>
            <param name="yTiles">The percentage of tile divisions to use in vertical direction.</param>
            <param name="numberBins">The number of bins for histogram ("dynamic range").</param>
            <param name="clipLimit">The contrast limit for localised changes in contrast. A limit less than 1
            results in standard non-contrast limited AHE.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.Clahe(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            A variant of adaptive histogram equalization in which the contrast amplification is limited,
            so as to reduce this problem of noise amplification.
            </summary>
            <param name="xTiles">The number of tile divisions to use in horizontal direction.</param>
            <param name="yTiles">The number of tile divisions to use in vertical direction.</param>
            <param name="numberBins">The number of bins for histogram ("dynamic range").</param>
            <param name="clipLimit">The contrast limit for localised changes in contrast. A limit less than 1
            results in standard non-contrast limited AHE.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.Clamp">
            <summary>
            Set each pixel whose value is below zero to zero and any the pixel whose value is above
            the quantum range to the quantum range (Quantum.Max) otherwise the pixel value
            remains unchanged.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clamp(ImageMagick.Channels)">
            <summary>
            Set each pixel whose value is below zero to zero and any the pixel whose value is above
            the quantum range to the quantum range (Quantum.Max) otherwise the pixel value
            remains unchanged.
            </summary>
            <param name="channels">The channel(s) to clamp.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clip">
            <summary>
            Sets the image clip mask based on any clipping path information if it exists. The clipping
            path can be removed with <see cref="M:ImageMagick.MagickImage.RemoveWriteMask"/>.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clip(System.String,System.Boolean)">
            <summary>
            Sets the image clip mask based on any clipping path information if it exists. The clipping
            path can be removed with <see cref="M:ImageMagick.MagickImage.RemoveWriteMask"/>.
            </summary>
            <param name="pathName">Name of clipping path resource. If name is preceded by #, use
            clipping path numbered by name.</param>
            <param name="inside">Specifies if operations take effect inside or outside the clipping
            path.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clone">
            <summary>
            Creates a clone of the current image.
            </summary>
            <returns>A clone of the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Clone(ImageMagick.IMagickGeometry)">
            <summary>
            Creates a clone of the current image with the specified geometry.
            </summary>
            <param name="geometry">The area to clone.</param>
            <returns>A clone of the current image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clone(System.Int32,System.Int32)">
            <summary>
            Creates a clone of the current image.
            </summary>
            <param name="width">The width of the area to clone.</param>
            <param name="height">The height of the area to clone.</param>
            <returns>A clone of the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Clone(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a clone of the current image.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="width">The width of the area to clone.</param>
            <param name="height">The height of the area to clone.</param>
            <returns>A clone of the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Clut(ImageMagick.IMagickImage)">
            <summary>
            Apply a color lookup table (CLUT) to the image.
            </summary>
            <param name="image">The image to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clut(ImageMagick.IMagickImage,ImageMagick.PixelInterpolateMethod)">
            <summary>
            Apply a color lookup table (CLUT) to the image.
            </summary>
            <param name="image">The image to use.</param>
            <param name="method">Pixel interpolate method.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Clut(ImageMagick.IMagickImage,ImageMagick.PixelInterpolateMethod,ImageMagick.Channels)">
            <summary>
            Apply a color lookup table (CLUT) to the image.
            </summary>
            <param name="image">The image to use.</param>
            <param name="method">Pixel interpolate method.</param>
            <param name="channels">The channel(s) to clut.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ColorAlpha(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Sets the alpha channel to the specified color.
            </summary>
            <param name="color">The color to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ColorDecisionList(System.String)">
            <summary>
            Applies the color decision list from the specified ASC CDL file.
            </summary>
            <param name="fileName">The file to read the ASC CDL information from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Colorize(ImageMagick.IMagickColor{System.Single},ImageMagick.Percentage)">
            <summary>
            Colorize image with the specified color, using specified percent alpha.
            </summary>
            <param name="color">The color to use.</param>
            <param name="alpha">The alpha percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Colorize(ImageMagick.IMagickColor{System.Single},ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Colorize image with the specified color, using specified percent alpha for red, green,
            and blue quantums.
            </summary>
            <param name="color">The color to use.</param>
            <param name="alphaRed">The alpha percentage for red.</param>
            <param name="alphaGreen">The alpha percentage for green.</param>
            <param name="alphaBlue">The alpha percentage for blue.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ColorMatrix(ImageMagick.IMagickColorMatrix)">
            <summary>
            Apply a color matrix to the image channels.
            </summary>
            <param name="matrix">The color matrix to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ColorThreshold(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Forces all pixels in the color range to white otherwise black.
            </summary>
            <param name="startColor">The start color of the color range.</param>
            <param name="stopColor">The stop color of the color range.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage)">
            <summary>
            Compare current image with another image and returns error information.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <returns>The error information.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ErrorMetric)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="metric">The metric to use.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ErrorMetric,ImageMagick.Channels)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="metric">The metric to use.</param>
            <param name="channels">The channel(s) to compare.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ICompareSettings{System.Single},ImageMagick.IMagickImage)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="settings">The settings to use.</param>
            <param name="difference">The image that will contain the difference.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ErrorMetric,ImageMagick.IMagickImage)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="metric">The metric to use.</param>
            <param name="difference">The image that will contain the difference.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ErrorMetric,ImageMagick.IMagickImage,ImageMagick.Channels)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="metric">The metric to use.</param>
            <param name="difference">The image that will contain the difference.</param>
            <param name="channels">The channel(s) to compare.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Compare(ImageMagick.IMagickImage,ImageMagick.ICompareSettings{System.Single},ImageMagick.IMagickImage,ImageMagick.Channels)">
            <summary>
            Returns the distortion based on the specified metric.
            </summary>
            <param name="image">The other image to compare with this image.</param>
            <param name="settings">The settings to use.</param>
            <param name="difference">The image that will contain the difference.</param>
            <param name="channels">The channel(s) to compare.</param>
            <returns>The distortion based on the specified metric.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CompareTo(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Compares the current instance with another image. Only the size of the image is compared.
            </summary>
            <param name="other">The object to compare this image with.</param>
            <returns>A signed number indicating the relative values of this instance and value.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,System.Int32,System.Int32,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.PointD,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,System.Int32,System.Int32,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD,ImageMagick.CompositeOperator,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the 'In' operator.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Composite(ImageMagick.IMagickImage,ImageMagick.Gravity,ImageMagick.PointD,ImageMagick.CompositeOperator,System.String,ImageMagick.Channels)">
            <summary>
            Compose an image onto another at specified offset using the specified algorithm.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="offset">The offset from origin.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <param name="channels">The channel(s) to composite.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ConnectedComponents(System.Int32)">
            <summary>
            Determines the connected-components of the image.
            </summary>
            <param name="connectivity">How many neighbors to visit, choose from 4 or 8.</param>
            <returns>The connected-components of the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ConnectedComponents(ImageMagick.IConnectedComponentsSettings)">
            <summary>
            Determines the connected-components of the image.
            </summary>
            <param name="settings">The settings for this operation.</param>
            <returns>The connected-components of the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Contrast">
            <summary>
            Contrast image (enhance intensity differences in image).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Contrast(System.Boolean)">
            <summary>
            Contrast image (enhance intensity differences in image).
            </summary>
            <param name="enhance">Use true to enhance the contrast and false to reduce the contrast.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ContrastStretch(ImageMagick.Percentage)">
            <summary>
            A simple image enhancement technique that attempts to improve the contrast in an image by
            'stretching' the range of intensity values it contains to span a desired range of values.
            It differs from the more sophisticated histogram equalization in that it can only apply a
            linear scaling function to the image pixel values. As a result the 'enhancement' is less harsh.
            </summary>
            <param name="blackPoint">The black point.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ContrastStretch(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            A simple image enhancement technique that attempts to improve the contrast in an image by
            'stretching' the range of intensity values it contains to span a desired range of values.
            It differs from the more sophisticated histogram equalization in that it can only apply a
            linear scaling function to the image pixel values. As a result the 'enhancement' is less harsh.
            </summary>
            <param name="blackPoint">The black point.</param>
            <param name="whitePoint">The white point.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ContrastStretch(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            A simple image enhancement technique that attempts to improve the contrast in an image by
            'stretching' the range of intensity values it contains to span a desired range of values.
            It differs from the more sophisticated histogram equalization in that it can only apply a
            linear scaling function to the image pixel values. As a result the 'enhancement' is less harsh.
            </summary>
            <param name="blackPoint">The black point.</param>
            <param name="whitePoint">The white point.</param>
            <param name="channels">The channel(s) to constrast stretch.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ConvexHull">
            <summary>
            Returns the convex hull points of an image canvas.
            </summary>
            <returns>The convex hull points of an image canvas.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Convolve(ImageMagick.IConvolveMatrix)">
            <summary>
            Convolve image. Applies a user-specified convolution to the image.
            </summary>
            <param name="convolveMatrix">The convolution matrix.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage)">
            <summary>
            Copies pixels from the source image to the destination image.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.Channels)">
            <summary>
            Copies pixels from the source image to the destination image.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="channels">The channels to copy.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry)">
            <summary>
            Copies pixels from the source image to the destination image.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry,ImageMagick.Channels)">
            <summary>
            Copies pixels from the source image to the destination image.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <param name="channels">The channels to copy.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry,ImageMagick.PointD)">
            <summary>
            Copies pixels from the source image as defined by the geometry the destination image at
            the specified offset.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <param name="offset">The offset to copy the pixels to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry,ImageMagick.PointD,ImageMagick.Channels)">
            <summary>
            Copies pixels from the source image as defined by the geometry the destination image at
            the specified offset.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <param name="offset">The offset to start the copy from.</param>
            <param name="channels">The channels to copy.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry,System.Int32,System.Int32)">
            <summary>
            Copies pixels from the source image as defined by the geometry the destination image at
            the specified offset.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <param name="x">The X offset to start the copy from.</param>
            <param name="y">The Y offset to start the copy from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CopyPixels(ImageMagick.IMagickImage,ImageMagick.IMagickGeometry,System.Int32,System.Int32,ImageMagick.Channels)">
            <summary>
            Copies pixels from the source image as defined by the geometry the destination image at
            the specified offset.
            </summary>
            <param name="source">The source image to copy the pixels from.</param>
            <param name="geometry">The geometry to copy.</param>
            <param name="x">The X offset to copy the pixels to.</param>
            <param name="y">The Y offset to copy the pixels to.</param>
            <param name="channels">The channels to copy.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Crop(System.Int32,System.Int32)">
            <summary>
            Crop image (subregion of original image) using CropPosition.Center. You should call
            RePage afterwards unless you need the Page information.
            </summary>
            <param name="width">The width of the subregion.</param>
            <param name="height">The height of the subregion.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Crop(System.Int32,System.Int32,ImageMagick.Gravity)">
            <summary>
            Crop image (subregion of original image). You should call RePage afterwards unless you
            need the Page information.
            </summary>
            <param name="width">The width of the subregion.</param>
            <param name="height">The height of the subregion.</param>
            <param name="gravity">The position where the cropping should start from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Crop(ImageMagick.IMagickGeometry)">
            <summary>
            Crop image (subregion of original image). You should call RePage afterwards unless you
            need the Page information.
            </summary>
            <param name="geometry">The subregion to crop.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Crop(ImageMagick.IMagickGeometry,ImageMagick.Gravity)">
            <summary>
            Crop image (subregion of original image). You should call RePage afterwards unless you
            need the Page information.
            </summary>
            <param name="geometry">The subregion to crop.</param>
            <param name="gravity">The position where the cropping should start from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.CropToTiles(System.Int32,System.Int32)">
            <summary>
            Creates tiles of the current image in the specified dimension.
            </summary>
            <param name="width">The width of the tile.</param>
            <param name="height">The height of the tile.</param>
            <returns>New title of the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.CropToTiles(ImageMagick.IMagickGeometry)">
            <summary>
            Creates tiles of the current image in the specified dimension.
            </summary>
            <param name="geometry">The size of the tile.</param>
            <returns>New title of the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.CycleColormap(System.Int32)">
            <summary>
            Displaces an image's colormap by a given number of positions.
            </summary>
            <param name="amount">Displace the colormap this amount.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Decipher(System.String)">
            <summary>
            Converts cipher pixels to plain pixels.
            </summary>
            <param name="passphrase">The password that was used to encrypt the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Deskew(ImageMagick.Percentage)">
            <summary>
            Removes skew from the image. Skew is an artifact that occurs in scanned images because of
            the camera being misaligned, imperfections in the scanning or surface, or simply because
            the paper was not placed completely flat when scanned. The value of threshold ranges
            from 0 to QuantumRange.
            </summary>
            <param name="threshold">The threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The angle that was used.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Deskew(ImageMagick.IDeskewSettings)">
            <summary>
            Removes skew from the image. Skew is an artifact that occurs in scanned images because of
            the camera being misaligned, imperfections in the scanning or surface, or simply because
            the paper was not placed completely flat when scanned. The value of threshold ranges
            from 0 to QuantumRange.
            </summary>
            <param name="settings">The deskew settings.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The angle that was used.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Despeckle">
            <summary>
            Despeckle image (reduce speckle noise).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.DetermineColorType">
            <summary>
            Determines the color type of the image. This method can be used to automatically make the
            type GrayScale.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The color type of the image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Dispose">
            <summary>
            Disposes the instance.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.Distort(ImageMagick.DistortMethod,System.Double[])">
            <summary>
            Distorts an image using various distortion methods, by mapping color lookups of the source
            image to a new destination image of the same size as the source image.
            </summary>
            <param name="method">The distortion method to use.</param>
            <param name="arguments">An array containing the arguments for the distortion.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Distort(ImageMagick.DistortMethod,ImageMagick.IDistortSettings,System.Double[])">
            <summary>
            Distorts an image using various distortion methods, by mapping color lookups of the source
            image to a new destination image usually of the same size as the source image, unless
            'bestfit' is set to true.
            </summary>
            <param name="method">The distortion method to use.</param>
            <param name="settings">The settings for the distort operation.</param>
            <param name="arguments">An array containing the arguments for the distortion.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Draw(ImageMagick.IDrawables{System.Single})">
            <summary>
            Draw on image using one or more drawables.
            </summary>
            <param name="drawables">The drawable(s) to draw on the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Draw(ImageMagick.IDrawable[])">
            <summary>
            Draw on image using one or more drawables.
            </summary>
            <param name="drawables">The drawable(s) to draw on the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Draw(System.Collections.Generic.IEnumerable{ImageMagick.IDrawable})">
            <summary>
            Draw on image using a collection of drawables.
            </summary>
            <param name="drawables">The drawables to draw on the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Edge(System.Double)">
            <summary>
            Edge image (hilight edges in image).
            </summary>
            <param name="radius">The radius of the pixel neighborhood.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Emboss">
            <summary>
            Emboss image (hilight edges with 3D effect) with default value (0x1).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Emboss(System.Double,System.Double)">
            <summary>
            Emboss image (hilight edges with 3D effect).
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Encipher(System.String)">
            <summary>
            Converts pixels to cipher-pixels.
            </summary>
            <param name="passphrase">The password that to encrypt the image with.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Enhance">
            <summary>
            Applies a digital filter that improves the quality of a noisy image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Equalize">
            <summary>
            Applies a histogram equalization to the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="obj">The object to compare this <see cref="T:ImageMagick.MagickImage"/> with.</param>
            <returns>True when the specified object is equal to the current <see cref="T:ImageMagick.MagickImage"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Equals(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.IMagickImage`1"/> is equal to the current <see cref="T:ImageMagick.MagickImage"/>.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.IMagickImage`1"/> to compare this <see cref="T:ImageMagick.MagickImage"/> with.</param>
            <returns>True when the specified <see cref="T:ImageMagick.IMagickImage`1"/> is equal to the current <see cref="T:ImageMagick.MagickImage"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Evaluate(ImageMagick.Channels,ImageMagick.EvaluateFunction,System.Double[])">
            <summary>
            Apply an arithmetic or bitwise operator to the image pixel quantums.
            </summary>
            <param name="channels">The channel(s) to apply the operator on.</param>
            <param name="evaluateFunction">The function.</param>
            <param name="arguments">The arguments for the function.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Evaluate(ImageMagick.Channels,ImageMagick.EvaluateOperator,System.Double)">
            <summary>
            Apply an arithmetic or bitwise operator to the image pixel quantums.
            </summary>
            <param name="channels">The channel(s) to apply the operator on.</param>
            <param name="evaluateOperator">The operator.</param>
            <param name="value">The value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Evaluate(ImageMagick.Channels,ImageMagick.EvaluateOperator,ImageMagick.Percentage)">
            <summary>
            Apply an arithmetic or bitwise operator to the image pixel quantums.
            </summary>
            <param name="channels">The channel(s) to apply the operator on.</param>
            <param name="evaluateOperator">The operator.</param>
            <param name="percentage">The value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Evaluate(ImageMagick.Channels,ImageMagick.IMagickGeometry,ImageMagick.EvaluateOperator,System.Double)">
            <summary>
            Apply an arithmetic or bitwise operator to the image pixel quantums.
            </summary>
            <param name="channels">The channel(s) to apply the operator on.</param>
            <param name="geometry">The geometry to use.</param>
            <param name="evaluateOperator">The operator.</param>
            <param name="value">The value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Evaluate(ImageMagick.Channels,ImageMagick.IMagickGeometry,ImageMagick.EvaluateOperator,ImageMagick.Percentage)">
            <summary>
            Apply an arithmetic or bitwise operator to the image pixel quantums.
            </summary>
            <param name="channels">The channel(s) to apply the operator on.</param>
            <param name="geometry">The geometry to use.</param>
            <param name="evaluateOperator">The operator.</param>
            <param name="percentage">The value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32)">
            <summary>
            Extend the image as defined by the width and height.
            </summary>
            <param name="width">The width to extend the image to.</param>
            <param name="height">The height to extend the image to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Extend the image as defined by the width and height.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="width">The width to extend the image to.</param>
            <param name="height">The height to extend the image to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Extend the image as defined by the width and height.
            </summary>
            <param name="width">The width to extend the image to.</param>
            <param name="height">The height to extend the image to.</param>
            <param name="backgroundColor">The background color to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.Gravity)">
            <summary>
            Extend the image as defined by the width and height.
            </summary>
            <param name="width">The width to extend the image to.</param>
            <param name="height">The height to extend the image to.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(System.Int32,System.Int32,ImageMagick.Gravity,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Extend the image as defined by the width and height.
            </summary>
            <param name="width">The width to extend the image to.</param>
            <param name="height">The height to extend the image to.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="backgroundColor">The background color to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.IMagickGeometry)">
            <summary>
            Extend the image as defined by the rectangle.
            </summary>
            <param name="geometry">The geometry to extend the image to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.IMagickGeometry,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Extend the image as defined by the geometry.
            </summary>
            <param name="geometry">The geometry to extend the image to.</param>
            <param name="backgroundColor">The background color to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.IMagickGeometry,ImageMagick.Gravity)">
            <summary>
            Extend the image as defined by the geometry.
            </summary>
            <param name="geometry">The geometry to extend the image to.</param>
            <param name="gravity">The placement gravity.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Extent(ImageMagick.IMagickGeometry,ImageMagick.Gravity,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Extend the image as defined by the geometry.
            </summary>
            <param name="geometry">The geometry to extend the image to.</param>
            <param name="gravity">The placement gravity.</param>
            <param name="backgroundColor">The background color to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Flip">
            <summary>
            Flip image (reflect each scanline in the vertical direction).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(System.Single,System.Int32,System.Int32)">
            <summary>
            Floodfill pixels matching color (within fuzz factor) of target pixel(x,y) with replacement
            alpha value using method.
            </summary>
            <param name="alpha">The alpha to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32)">
            <summary>
            Flood-fill color across pixels that match the color of the  target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill color across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickColor{System.Single},ImageMagick.PointD)">
            <summary>
            Flood-fill color across pixels that match the color of the  target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickColor{System.Single},ImageMagick.PointD,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill color across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickImage{System.Single},System.Int32,System.Int32)">
            <summary>
            Flood-fill texture across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickImage{System.Single},System.Int32,System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickImage{System.Single},ImageMagick.PointD)">
            <summary>
            Flood-fill texture across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FloodFill(ImageMagick.IMagickImage{System.Single},ImageMagick.PointD,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Flop">
            <summary>
            Flop image (reflect each scanline in the horizontal direction).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FontTypeMetrics(System.String)">
            <summary>
            Obtain font metrics for text string given current font, pointsize, and density settings.
            </summary>
            <param name="text">The text to get the font metrics for.</param>
            <returns>The font metrics for text.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FontTypeMetrics(System.String,System.Boolean)">
            <summary>
            Obtain font metrics for text string given current font, pointsize, and density settings.
            </summary>
            <param name="text">The text to get the font metrics for.</param>
            <param name="ignoreNewlines">Specifies if newlines should be ignored.</param>
            <returns>The font metrics for text.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.FormatExpression(System.String)">
            <summary>
            Formats the specified expression, more info here: http://www.imagemagick.org/script/escape.php.
            </summary>
            <param name="expression">The expression, more info here: http://www.imagemagick.org/script/escape.php.</param>
            <returns>The result of the expression.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Frame">
            <summary>
            Frame image with the default geometry (25x25+6+6).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Frame(ImageMagick.IMagickGeometry)">
            <summary>
            Frame image with the specified geometry.
            </summary>
            <param name="geometry">The geometry of the frame.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Frame(System.Int32,System.Int32)">
            <summary>
            Frame image with the specified with and height.
            </summary>
            <param name="width">The width of the frame.</param>
            <param name="height">The height of the frame.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Frame(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Frame image with the specified with, height, innerBevel and outerBevel.
            </summary>
            <param name="width">The width of the frame.</param>
            <param name="height">The height of the frame.</param>
            <param name="innerBevel">The inner bevel of the frame.</param>
            <param name="outerBevel">The outer bevel of the frame.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Fx(System.String)">
            <summary>
            Applies a mathematical expression to the image.
            </summary>
            <param name="expression">The expression to apply.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Fx(System.String,ImageMagick.Channels)">
            <summary>
            Applies a mathematical expression to the image.
            </summary>
            <param name="expression">The expression to apply.</param>
            <param name="channels">The channel(s) to apply the expression to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GammaCorrect(System.Double)">
            <summary>
            Gamma correct image.
            </summary>
            <param name="gamma">The image gamma.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GammaCorrect(System.Double,ImageMagick.Channels)">
            <summary>
            Gamma correct image.
            </summary>
            <param name="gamma">The image gamma for the channel.</param>
            <param name="channels">The channel(s) to gamma correct.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GaussianBlur(System.Double,System.Double)">
            <summary>
            Gaussian blur image.
            </summary>
            <param name="radius">The number of neighbor pixels to be included in the convolution.</param>
            <param name="sigma">The standard deviation of the gaussian bell curve.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GaussianBlur(System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Gaussian blur image.
            </summary>
            <param name="radius">The number of neighbor pixels to be included in the convolution.</param>
            <param name="sigma">The standard deviation of the gaussian bell curve.</param>
            <param name="channels">The channel(s) to blur.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Get8BimProfile">
            <summary>
            Retrieve the 8bim profile from the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>The 8bim profile from the image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.GetArtifact(System.String)">
            <summary>
            Returns the value of the artifact with the specified name.
            </summary>
            <param name="name">The name of the artifact.</param>
            <returns>The value of the artifact with the specified name.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.GetAttribute(System.String)">
            <summary>
            Returns the value of a named image attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>The value of a named image attribute.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetClippingPath">
            <summary>
            Returns the default clipping path. Null will be returned if the image has no clipping path.
            </summary>
            <returns>The default clipping path. Null will be returned if the image has no clipping path.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetClippingPath(System.String)">
            <summary>
            Returns the clipping path with the specified name. Null will be returned if the image has no clipping path.
            </summary>
            <param name="pathName">Name of clipping path resource. If name is preceded by #, use clipping path numbered by name.</param>
            <returns>The clipping path with the specified name. Null will be returned if the image has no clipping path.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetColormap(System.Int32)">
            <summary>
            Returns the color at colormap position index.
            </summary>
            <param name="index">The position index.</param>
            <returns>he color at colormap position index.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetColorProfile">
            <summary>
            Retrieve the color profile from the image.
            </summary>
            <returns>The color profile from the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetExifProfile">
            <summary>
            Retrieve the exif profile from the image.
            </summary>
            <returns>The exif profile from the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.GetIptcProfile">
            <summary>
            Retrieve the iptc profile from the image.
            </summary>
            <returns>The iptc profile from the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetPixels">
            <summary>
            Returns a pixel collection that can be used to read or modify the pixels of this image.
            </summary>
            <returns>A pixel collection that can be used to read or modify the pixels of this image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetPixelsUnsafe">
            <summary>
            Returns a pixel collection that can be used to read or modify the pixels of this image. This instance
            will not do any bounds checking and directly call ImageMagick.
            </summary>
            <returns>A pixel collection that can be used to read or modify the pixels of this image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetProfile(System.String)">
            <summary>
            Retrieve a named profile from the image.
            </summary>
            <param name="name">The name of the profile (e.g. "ICM", "IPTC", or a generic profile name).</param>
            <returns>A named profile from the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetReadMask">
            <summary>
            Gets the associated read mask of the image.
            </summary>
            <returns>The associated read mask of the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetWriteMask">
            <summary>
            Gets the associated write mask of the image.
            </summary>
            <returns>The associated write mask of the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.GetXmpProfile">
            <summary>
            Retrieve the xmp profile from the image.
            </summary>
            <returns>The xmp profile from the image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Grayscale">
            <summary>
            Converts the colors in the image to gray.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Grayscale(ImageMagick.PixelIntensityMethod)">
            <summary>
            Converts the colors in the image to gray.
            </summary>
            <param name="method">The pixel intensity method to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.HasProfile(System.String)">
            <summary>
            Gets a value indicating whether a profile with the specified name already exists on the image.
            </summary>
            <param name="name">The name of the profile.</param>
            <returns>A value indicating whether a profile with the specified name already exists on the image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.HaldClut(ImageMagick.IMagickImage)">
            <summary>
            Apply a color lookup table (Hald CLUT) to the image.
            </summary>
            <param name="image">The image to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Histogram">
            <summary>
            Creates a color histogram.
            </summary>
            <returns>A color histogram.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.HoughLine">
            <summary>
            Identifies lines in the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.HoughLine(System.Int32,System.Int32,System.Int32)">
            <summary>
            Identifies lines in the image.
            </summary>
            <param name="width">The width of the neighborhood.</param>
            <param name="height">The height of the neighborhood.</param>
            <param name="threshold">The line count threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Implode(System.Double,ImageMagick.PixelInterpolateMethod)">
            <summary>
            Implode image (special effect).
            </summary>
            <param name="amount">The extent of the implosion.</param>
            <param name="method">Pixel interpolate method.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InterpolativeResize(System.Int32,System.Int32,ImageMagick.PixelInterpolateMethod)">
            <summary>
            Resize image to specified size using the specified interpolation method.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <param name="method">Pixel interpolate method.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(System.Single,System.Int32,System.Int32)">
            <summary>
            Floodfill pixels not matching color (within fuzz factor) of target pixel(x,y) with
            replacement alpha value using method.
            </summary>
            <param name="alpha">The alpha to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32)">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickColor{System.Single},ImageMagick.PointD)">
            <summary>
            Flood-fill color across pixels that match the color of the  target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickColor{System.Single},ImageMagick.PointD,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="color">The color to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickImage{System.Single},System.Int32,System.Int32)">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickImage{System.Single},System.Int32,System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that match the color of the target pixel and are neighbors
            of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickImage{System.Single},ImageMagick.PointD)">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseFloodFill(ImageMagick.IMagickImage{System.Single},ImageMagick.PointD,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flood-fill texture across pixels that do not match the color of the target pixel and are
            neighbors of the target pixel. Uses current fuzz setting when determining color match.
            </summary>
            <param name="image">The image to use.</param>
            <param name="coordinate">The position of the pixel.</param>
            <param name="target">The target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(System.Single,System.Single)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(System.Single,System.Single,ImageMagick.Channels)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(System.Single,System.Single,System.Double)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(ImageMagick.Percentage,ImageMagick.Percentage,System.Double)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(System.Single,System.Single,System.Double,ImageMagick.Channels)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevel(ImageMagick.Percentage,ImageMagick.Percentage,System.Double,ImageMagick.Channels)">
            <summary>
            Applies the reversed level operation to just the specific channels specified. It compresses
            the full range of color values, so that they lie between the given black and white points.
            Gamma is applied before the values are mapped.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="midpoint">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevelColors(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Maps the given color to "black" and "white" values, linearly spreading out the colors, and
            level values on a channel by channel bases, as per level(). The given colors allows you to
            specify different level ranges for each of the color channels separately.
            </summary>
            <param name="blackColor">The color to map black to/from.</param>
            <param name="whiteColor">The color to map white to/from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseLevelColors(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single},ImageMagick.Channels)">
            <summary>
            Maps the given color to "black" and "white" values, linearly spreading out the colors, and
            level values on a channel by channel bases, as per level(). The given colors allows you to
            specify different level ranges for each of the color channels separately.
            </summary>
            <param name="blackColor">The color to map black to/from.</param>
            <param name="whiteColor">The color to map white to/from.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseOpaque(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Changes any pixel that does not match the target with the color defined by fill.
            </summary>
            <param name="target">The color to replace.</param>
            <param name="fill">The color to replace opaque color with.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseTransparent(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Add alpha channel to image, setting pixels that don't match the specified color to transparent.
            </summary>
            <param name="color">The color that should not be made transparent.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.InverseTransparentChroma(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Add alpha channel to image, setting pixels that don't lie in between the given two colors to
            transparent.
            </summary>
            <param name="colorLow">The low target color.</param>
            <param name="colorHigh">The high target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Kmeans(ImageMagick.IKmeansSettings)">
            <summary>
            Applies k-means color reduction to an image. This is a colorspace clustering or segmentation technique.
            </summary>
            <param name="settings">The kmeans settings.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Kuwahara">
            <summary>
            An edge preserving noise reduction filter.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Kuwahara(System.Double,System.Double)">
            <summary>
            An edge preserving noise reduction filter.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,ImageMagick.Channels)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range. Uses a midpoint of 1.0.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,System.Double)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="gamma">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(ImageMagick.Percentage,ImageMagick.Percentage,System.Double)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="gamma">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(System.Single,System.Single,System.Double,ImageMagick.Channels)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range.
            </summary>
            <param name="blackPoint">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePoint">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="gamma">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Level(ImageMagick.Percentage,ImageMagick.Percentage,System.Double,ImageMagick.Channels)">
            <summary>
            Adjust the levels of the image by scaling the colors falling between specified white and
            black points to the full available quantum range.
            </summary>
            <param name="blackPointPercentage">The darkest color in the image. Colors darker are set to zero.</param>
            <param name="whitePointPercentage">The lightest color in the image. Colors brighter are set to the maximum quantum value.</param>
            <param name="gamma">The gamma correction to apply to the image. (Useful range of 0 to 10).</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Maps the given color to "black" and "white" values, linearly spreading out the colors, and
            level values on a channel by channel bases, as per level(). The given colors allows you to
            specify different level ranges for each of the color channels separately.
            </summary>
            <param name="blackColor">The color to map black to/from.</param>
            <param name="whiteColor">The color to map white to/from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LevelColors(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single},ImageMagick.Channels)">
            <summary>
            Maps the given color to "black" and "white" values, linearly spreading out the colors, and
            level values on a channel by channel bases, as per level(). The given colors allows you to
            specify different level ranges for each of the color channels separately.
            </summary>
            <param name="blackColor">The color to map black to/from.</param>
            <param name="whiteColor">The color to map white to/from.</param>
            <param name="channels">The channel(s) to level.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LinearStretch(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Discards any pixels below the black point and above the white point and levels the remaining pixels.
            </summary>
            <param name="blackPoint">The black point.</param>
            <param name="whitePoint">The white point.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(System.Int32,System.Int32)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <param name="deltaX">Maximum seam transversal step (0 means straight seams).</param>
            <param name="rigidity">Introduce a bias for non-straight seams (typically 0).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(ImageMagick.IMagickGeometry)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(ImageMagick.Percentage)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="percentage">The percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LiquidRescale(ImageMagick.Percentage,ImageMagick.Percentage,System.Double,System.Double)">
            <summary>
            Rescales image with seam carving.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <param name="deltaX">Maximum seam transversal step (0 means straight seams).</param>
            <param name="rigidity">Introduce a bias for non-straight seams (typically 0).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LocalContrast(System.Double,ImageMagick.Percentage)">
            <summary>
            Local contrast enhancement.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="strength">The strength of the blur mask.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.LocalContrast(System.Double,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Local contrast enhancement.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="strength">The strength of the blur mask.</param>
            <param name="channels">The channel(s) that should be changed.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Lower(System.Int32)">
            <summary>
            Lower image (lighten or darken the edges of an image to give a 3-D lowered effect).
            </summary>
            <param name="size">The size of the edges.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Magnify">
            <summary>
            Magnify image by integral size.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Map(System.Collections.Generic.IEnumerable{ImageMagick.IMagickColor{System.Single}})">
            <summary>
            Remap image colors with closest color from the specified colors.
            </summary>
            <param name="colors">The colors to use.</param>
            <returns>The error informaton.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Map(System.Collections.Generic.IEnumerable{ImageMagick.IMagickColor{System.Single}},ImageMagick.IQuantizeSettings)">
            <summary>
            Remap image colors with closest color from the specified colors.
            </summary>
            <param name="colors">The colors to use.</param>
            <param name="settings">Quantize settings.</param>
            <returns>The error informaton.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Map(ImageMagick.IMagickImage)">
            <summary>
            Remap image colors with closest color from reference image.
            </summary>
            <param name="image">The image to use.</param>
            <returns>The error informaton.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Map(ImageMagick.IMagickImage,ImageMagick.IQuantizeSettings)">
            <summary>
            Remap image colors with closest color from reference image.
            </summary>
            <param name="image">The image to use.</param>
            <param name="settings">Quantize settings.</param>
            <returns>The error informaton.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.MeanShift(System.Int32)">
            <summary>
            Delineate arbitrarily shaped clusters in the image.
            </summary>
            <param name="size">The width and height of the pixels neighborhood.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.MeanShift(System.Int32,ImageMagick.Percentage)">
            <summary>
            Delineate arbitrarily shaped clusters in the image.
            </summary>
            <param name="size">The width and height of the pixels neighborhood.</param>
            <param name="colorDistance">The color distance.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.MeanShift(System.Int32,System.Int32)">
            <summary>
            Delineate arbitrarily shaped clusters in the image.
            </summary>
            <param name="width">The width of the pixels neighborhood.</param>
            <param name="height">The height of the pixels neighborhood.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.MeanShift(System.Int32,System.Int32,ImageMagick.Percentage)">
            <summary>
            Delineate arbitrarily shaped clusters in the image.
            </summary>
            <param name="width">The width of the pixels neighborhood.</param>
            <param name="height">The height of the pixels neighborhood.</param>
            <param name="colorDistance">The color distance.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.MedianFilter">
            <summary>
            Filter image by replacing each pixel component with the median color in a circular neighborhood.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.MedianFilter(System.Int32)">
            <summary>
            Filter image by replacing each pixel component with the median color in a circular neighborhood.
            </summary>
            <param name="radius">The radius of the pixel neighborhood.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Minify">
            <summary>
            Reduce image by integral size.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.MinimumBoundingBox">
            <summary>
            Returns the points that form the minimum bounding box around the image foreground objects with
            the "Rotating Calipers" algorithm. he method also returns these properties: minimum-bounding-box:area,
            minimum-bounding-box:width, minimum-bounding-box:height, and minimum-bounding-box:angle.
            </summary>
            <returns>The points that form the minimum bounding box around the image foreground objects.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Modulate(ImageMagick.Percentage)">
            <summary>
            Modulate percent brightness of an image.
            </summary>
            <param name="brightness">The brightness percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Modulate(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Modulate percent saturation and brightness of an image.
            </summary>
            <param name="brightness">The brightness percentage.</param>
            <param name="saturation">The saturation percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Modulate(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Modulate percent hue, saturation, and brightness of an image.
            </summary>
            <param name="brightness">The brightness percentage.</param>
            <param name="saturation">The saturation percentage.</param>
            <param name="hue">The hue percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,ImageMagick.Channels)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,ImageMagick.Channels,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,System.String)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="arguments">Kernel arguments.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,System.String,ImageMagick.Channels)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="arguments">Kernel arguments.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,System.String,ImageMagick.Channels,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="arguments">Kernel arguments.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,ImageMagick.Kernel,System.String,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="kernel">Built-in kernel.</param>
            <param name="arguments">Kernel arguments.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,System.String)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="userKernel">User suplied kernel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,System.String,ImageMagick.Channels)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="userKernel">User suplied kernel.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,System.String,ImageMagick.Channels,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="userKernel">User suplied kernel.</param>
            <param name="channels">The channels to apply the kernel to.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.MorphologyMethod,System.String,System.Int32)">
            <summary>
            Applies a kernel to the image according to the given mophology method.
            </summary>
            <param name="method">The morphology method.</param>
            <param name="userKernel">User suplied kernel.</param>
            <param name="iterations">The number of iterations.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Morphology(ImageMagick.IMorphologySettings)">
            <summary>
            Applies a kernel to the image according to the given mophology settings.
            </summary>
            <param name="settings">The morphology settings.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Moments">
            <summary>
            Returns the normalized moments of one or more image channels.
            </summary>
            <returns>The normalized moments of one or more image channels.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.MotionBlur(System.Double,System.Double,System.Double)">
            <summary>
            Motion blur image with specified blur factor.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="angle">The angle the object appears to be comming from (zero degrees is from the right).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Negate">
            <summary>
            Negate colors in image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Negate(System.Boolean)">
            <summary>
            Negate colors in image.
            </summary>
            <param name="onlyGrayscale">Use true to negate only the grayscale colors.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Negate(System.Boolean,ImageMagick.Channels)">
            <summary>
            Negate colors in image for the specified channel.
            </summary>
            <param name="onlyGrayscale">Use true to negate only the grayscale colors.</param>
            <param name="channels">The channel(s) that should be negated.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Negate(ImageMagick.Channels)">
            <summary>
            Negate colors in image for the specified channel.
            </summary>
            <param name="channels">The channel(s) that should be negated.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Normalize">
            <summary>
            Normalize image (increase contrast by normalizing the pixel values to span the full range
            of color values).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.OilPaint">
            <summary>
            Oilpaint image (image looks like oil painting).
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.OilPaint(System.Double,System.Double)">
            <summary>
            Oilpaint image (image looks like oil painting).
            </summary>
            <param name="radius">The radius of the circular neighborhood.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Opaque(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Changes any pixel that matches target with the color defined by fill.
            </summary>
            <param name="target">The color to replace.</param>
            <param name="fill">The color to replace opaque color with.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.OrderedDither(System.String)">
            <summary>
            Perform a ordered dither based on a number of pre-defined dithering threshold maps, but over
            multiple intensity levels.
            </summary>
            <param name="thresholdMap">A string containing the name of the threshold dither map to use,
            followed by zero or more numbers representing the number of color levels tho dither between.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.OrderedDither(System.String,ImageMagick.Channels)">
            <summary>
            Perform a ordered dither based on a number of pre-defined dithering threshold maps, but over
            multiple intensity levels.
            </summary>
            <param name="thresholdMap">A string containing the name of the threshold dither map to use,
            followed by zero or more numbers representing the number of color levels tho dither between.</param>
            <param name="channels">The channel(s) to dither.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Perceptible(System.Double)">
            <summary>
            Set each pixel whose value is less than epsilon to epsilon or -epsilon (whichever is closer)
            otherwise the pixel value remains unchanged.
            </summary>
            <param name="epsilon">The epsilon threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Perceptible(System.Double,ImageMagick.Channels)">
            <summary>
            Set each pixel whose value is less than epsilon to epsilon or -epsilon (whichever is closer)
            otherwise the pixel value remains unchanged.
            </summary>
            <param name="epsilon">The epsilon threshold.</param>
            <param name="channels">The channel(s) to perceptible.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.PerceptualHash">
            <summary>
            Returns the perceptual hash of this image.
            </summary>
            <returns>The perceptual hash of this image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.Byte[])">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.IO.FileInfo)">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.IO.Stream)">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.String)">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Ping(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Polaroid(System.String,System.Double,ImageMagick.PixelInterpolateMethod)">
            <summary>
            Simulates a Polaroid picture.
            </summary>
            <param name="caption">The caption to put on the image.</param>
            <param name="angle">The angle of image.</param>
            <param name="method">Pixel interpolate method.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32)">
            <summary>
            Reduces the image to a limited number of colors for a "poster" effect.
            </summary>
            <param name="levels">Number of color levels allowed in each channel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,ImageMagick.DitherMethod)">
            <summary>
            Reduces the image to a limited number of colors for a "poster" effect.
            </summary>
            <param name="levels">Number of color levels allowed in each channel.</param>
            <param name="method">Dither method to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,ImageMagick.DitherMethod,ImageMagick.Channels)">
            <summary>
            Reduces the image to a limited number of colors for a "poster" effect.
            </summary>
            <param name="levels">Number of color levels allowed in each channel.</param>
            <param name="method">Dither method to use.</param>
            <param name="channels">The channel(s) to posterize.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Posterize(System.Int32,ImageMagick.Channels)">
            <summary>
            Reduces the image to a limited number of colors for a "poster" effect.
            </summary>
            <param name="levels">Number of color levels allowed in each channel.</param>
            <param name="channels">The channel(s) to posterize.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.PreserveColorType">
            <summary>
            Sets an internal option to preserve the color type.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Quantize(ImageMagick.IQuantizeSettings)">
            <summary>
            Quantize image (reduce number of colors).
            </summary>
            <param name="settings">Quantize settings.</param>
            <returns>The error information.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Raise(System.Int32)">
            <summary>
            Raise image (lighten or darken the edges of an image to give a 3-D raised effect).
            </summary>
            <param name="size">The size of the edges.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Changes the value of individual pixels based on the intensity of each pixel compared to a
            random threshold. The result is a low-contrast, two color image.
            </summary>
            <param name="percentageLow">The low threshold.</param>
            <param name="percentageHigh">The high threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Changes the value of individual pixels based on the intensity of each pixel compared to a
            random threshold. The result is a low-contrast, two color image.
            </summary>
            <param name="percentageLow">The low threshold.</param>
            <param name="percentageHigh">The high threshold.</param>
            <param name="channels">The channel(s) to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(System.Single,System.Single)">
            <summary>
            Changes the value of individual pixels based on the intensity of each pixel compared to a
            random threshold. The result is a low-contrast, two color image.
            </summary>
            <param name="low">The low threshold.</param>
            <param name="high">The high threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RandomThreshold(System.Single,System.Single,ImageMagick.Channels)">
            <summary>
            Changes the value of individual pixels based on the intensity of each pixel compared to a
            random threshold. The result is a low-contrast, two color image.
            </summary>
            <param name="low">The low threshold.</param>
            <param name="high">The high threshold.</param>
            <param name="channels">The channel(s) to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RangeThreshold(ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Applies soft and hard thresholding.
            </summary>
            <param name="percentageLowBlack">Defines the minimum black threshold value.</param>
            <param name="percentageLowWhite">Defines the minimum white threshold value.</param>
            <param name="percentageHighWhite">Defines the maximum white threshold value.</param>
            <param name="percentageHighBlack">Defines the maximum black threshold value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RangeThreshold(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Applies soft and hard thresholding.
            </summary>
            <param name="lowBlack">Defines the minimum black threshold value.</param>
            <param name="lowWhite">Defines the minimum white threshold value.</param>
            <param name="highWhite">Defines the maximum white threshold value.</param>
            <param name="highBlack">Defines the maximum black threshold value.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[])">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],System.Int32,System.Int32,ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.FileInfo)">
            <summary>
            Read single image frame.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.FileInfo,System.Int32,System.Int32)">
            <summary>
            Read single image frame.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(ImageMagick.IMagickColor{System.Single},System.Int32,System.Int32)">
            <summary>
            Read single image frame.
            </summary>
            <param name="color">The color to fill the image with.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.Stream)">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.String)">
            <summary>
            Read single image frame.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.String,System.Int32,System.Int32)">
            <summary>
            Read single image frame.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.String,ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Read(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadAsync(System.IO.Stream)">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadAsync(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadAsync(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read single image frame.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadPixels(System.Byte[],ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Read single image frame from pixel data.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadPixels(System.Byte[],System.Int32,System.Int32,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Read single image frame from pixel data.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadPixels(System.IO.FileInfo,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Read single image frame from pixel data.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadPixels(System.IO.Stream,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Read single image frame from pixel data.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReadPixels(System.String,ImageMagick.IPixelReadSettings{System.Single})">
            <summary>
            Read single image frame from pixel data.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="settings">The pixel settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReduceNoise">
            <summary>
            Reduce noise in image using a noise peak elimination filter.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ReduceNoise(System.Int32)">
            <summary>
            Reduce noise in image using a noise peak elimination filter.
            </summary>
            <param name="order">The order to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RegionMask(ImageMagick.IMagickGeometry)">
            <summary>
            Associates a mask with the image as defined by the specified region.
            </summary>
            <param name="region">The mask region.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveArtifact(System.String)">
            <summary>
            Removes the artifact with the specified name.
            </summary>
            <param name="name">The name of the artifact.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveAttribute(System.String)">
            <summary>
            Removes the attribute with the specified name.
            </summary>
            <param name="name">The name of the attribute.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveRegionMask">
            <summary>
            Removes the region mask of the image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveProfile(ImageMagick.IImageProfile)">
            <summary>
            Remove a profile from the image.
            </summary>
            <param name="profile">The profile to remove.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveProfile(System.String)">
            <summary>
            Remove a named profile from the image.
            </summary>
            <param name="name">The name of the profile (e.g. "ICM", "IPTC", or a generic profile name).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveReadMask">
            <summary>
            Removes the associated read mask of the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RemoveWriteMask">
            <summary>
            Removes the associated write mask of the image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RePage">
            <summary>
            Resets the page property of this image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resample(System.Double,System.Double)">
            <summary>
            Resize image in terms of its pixel size.
            </summary>
            <param name="resolutionX">The new X resolution.</param>
            <param name="resolutionY">The new Y resolution.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resample(ImageMagick.PointD)">
            <summary>
            Resize image in terms of its pixel size.
            </summary>
            <param name="density">The density to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resize(System.Int32,System.Int32)">
            <summary>
            Resize image to specified size.
            <para />
            Resize will fit the image into the requested size. It does NOT fill, the requested box size.
            Use the <see cref="T:ImageMagick.IMagickGeometry"/> overload for more control over the resulting size.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.IMagickGeometry)">
            <summary>
            Resize image to specified geometry.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.Percentage)">
            <summary>
            Resize image to specified percentage.
            </summary>
            <param name="percentage">The percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Resize(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Resize image to specified percentage.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Roll(System.Int32,System.Int32)">
            <summary>
            Roll image (rolls image vertically and horizontally).
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Rotate(System.Double)">
            <summary>
            Rotate image clockwise by specified number of degrees.
            </summary>
            <remarks>Specify a negative number for <paramref name="degrees"/> to rotate counter-clockwise.</remarks>
            <param name="degrees">The number of degrees to rotate (positive to rotate clockwise, negative to rotate counter-clockwise).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RotationalBlur(System.Double)">
            <summary>
            Rotational blur image.
            </summary>
            <param name="angle">The angle to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.RotationalBlur(System.Double,ImageMagick.Channels)">
            <summary>
            Rotational blur image.
            </summary>
            <param name="angle">The angle to use.</param>
            <param name="channels">The channel(s) to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sample(System.Int32,System.Int32)">
            <summary>
            Resize image by using pixel sampling algorithm.
            <para />
            Resize will fit the image into the requested size. It does NOT fill, the requested box size.
            Use the <see cref="T:ImageMagick.IMagickGeometry"/> overload for more control over the resulting size.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.IMagickGeometry)">
            <summary>
            Resize image by using pixel sampling algorithm.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.Percentage)">
            <summary>
            Resize image by using pixel sampling algorithm to the specified percentage.
            </summary>
            <param name="percentage">The percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sample(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Resize image by using pixel sampling algorithm to the specified percentage.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Scale(System.Int32,System.Int32)">
            <summary>
            Resize image by using simple ratio algorithm.
            <para />
            Resize will fit the image into the requested size. It does NOT fill, the requested box size.
            Use the <see cref="T:ImageMagick.IMagickGeometry"/> overload for more control over the resulting size.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.IMagickGeometry)">
            <summary>
            Resize image by using simple ratio algorithm.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.Percentage)">
            <summary>
            Resize image by using simple ratio algorithm to the specified percentage.
            </summary>
            <param name="percentage">The percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Scale(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Resize image by using simple ratio algorithm to the specified percentage.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Segment">
            <summary>
            Segment (coalesce similar image components) by analyzing the histograms of the color
            components and identifying units that are homogeneous with the fuzzy c-means technique.
            Also uses QuantizeColorSpace and Verbose image attributes.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Segment(ImageMagick.ColorSpace,System.Double,System.Double)">
            <summary>
            Segment (coalesce similar image components) by analyzing the histograms of the color
            components and identifying units that are homogeneous with the fuzzy c-means technique.
            Also uses QuantizeColorSpace and Verbose image attributes.
            </summary>
            <param name="quantizeColorSpace">Quantize colorspace.</param>
            <param name="clusterThreshold">This represents the minimum number of pixels contained in
            a hexahedra before it can be considered valid (expressed as a percentage).</param>
            <param name="smoothingThreshold">The smoothing threshold eliminates noise in the second
            derivative of the histogram. As the value is increased, you can expect a smoother second
            derivative.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SelectiveBlur(System.Double,System.Double,System.Double)">
            <summary>
            Selectively blur pixels within a contrast threshold. It is similar to the unsharpen mask
            that sharpens everything with contrast above a certain threshold.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="threshold">Only pixels within this contrast threshold are included in the blur operation.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SelectiveBlur(System.Double,System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Selectively blur pixels within a contrast threshold. It is similar to the unsharpen mask
            that sharpens everything with contrast above a certain threshold.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="threshold">Only pixels within this contrast threshold are included in the blur operation.</param>
            <param name="channels">The channel(s) to blur.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SelectiveBlur(System.Double,System.Double,ImageMagick.Percentage)">
            <summary>
            Selectively blur pixels within a contrast threshold. It is similar to the unsharpen mask
            that sharpens everything with contrast above a certain threshold.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="thresholdPercentage">Only pixels within this contrast threshold are included in the blur operation.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SelectiveBlur(System.Double,System.Double,ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Selectively blur pixels within a contrast threshold. It is similar to the unsharpen mask
            that sharpens everything with contrast above a certain threshold.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="thresholdPercentage">Only pixels within this contrast threshold are included in the blur operation.</param>
            <param name="channels">The channel(s) to blur.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Separate">
            <summary>
            Separates the channels from the image and returns it as grayscale images.
            </summary>
            <returns>The channels from the image as grayscale images.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Separate(ImageMagick.Channels)">
            <summary>
            Separates the specified channels from the image and returns it as grayscale images.
            </summary>
            <param name="channels">The channel(s) to separates.</param>
            <returns>The channels from the image as grayscale images.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SepiaTone">
            <summary>
            Applies a special effect to the image, similar to the effect achieved in a photo darkroom
            by sepia toning.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SepiaTone(ImageMagick.Percentage)">
            <summary>
            Applies a special effect to the image, similar to the effect achieved in a photo darkroom
            by sepia toning.
            </summary>
            <param name="threshold">The tone threshold.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetArtifact(System.String,System.String)">
            <summary>
            Inserts the artifact with the specified name and value into the artifact tree of the image.
            </summary>
            <param name="name">The name of the artifact.</param>
            <param name="value">The value of the artifact.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetArtifact(System.String,System.Boolean)">
            <summary>
            Inserts the artifact with the specified name and value into the artifact tree of the image.
            </summary>
            <param name="name">The name of the artifact.</param>
            <param name="flag">The value of the artifact.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetAttenuate(System.Double)">
            <summary>
            Lessen (or intensify) when adding noise to an image.
            </summary>
            <param name="attenuate">The attenuate value.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.SetAttribute(System.String,System.String)">
            <summary>
            Sets a named image attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attribute.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetAttribute(System.String,System.Boolean)">
            <summary>
            Sets a named image attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="flag">The value of the attribute.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetClippingPath(System.String)">
            <summary>
            Sets the default clipping path.
            </summary>
            <param name="value">The clipping path.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetClippingPath(System.String,System.String)">
            <summary>
            Sets the clipping path with the specified name.
            </summary>
            <param name="value">The clipping path.</param>
            <param name="pathName">Name of clipping path resource. If name is preceded by #, use clipping path numbered by name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetCompression(ImageMagick.CompressionMethod)">
            <summary>
            Sets the compression of the image. This method should only be used when the encoder uses the compression of the image. For
            most usecases Setting.Compression should be used instead.
            </summary>
            <param name="compression">The compression method.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.SetColormap(System.Int32,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Set color at colormap position index.
            </summary>
            <param name="index">The position index.</param>
            <param name="color">The color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetProfile(ImageMagick.IImageProfile)">
            <summary>
            Set the specified profile of the image. If a profile with the same name already exists it will be overwritten.
            </summary>
            <param name="profile">The profile to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetProfile(ImageMagick.IColorProfile)">
            <summary>
            Set the specified profile of the image. If a profile with the same name already exists it will be overwritten.
            </summary>
            <param name="profile">The profile to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetProfile(ImageMagick.IColorProfile,ImageMagick.ColorTransformMode)">
            <summary>
            Set the specified profile of the image. If a profile with the same name already exists it will be overwritten.
            </summary>
            <param name="profile">The profile to set.</param>
            <param name="mode">The color transformation mode.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetReadMask(ImageMagick.IMagickImage)">
            <summary>
            Sets the associated read mask of the image. The mask must be the same dimensions as the image and
            only contain the colors black and white.
            </summary>
            <param name="image">The image that contains the read mask.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SetWriteMask(ImageMagick.IMagickImage)">
            <summary>
            Sets the associated write mask of the image. The mask must be the same dimensions as the image and
            only contains the colors black and white.
            </summary>
            <param name="image">The image that contains the write mask.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>z
        </member>
        <member name="M:ImageMagick.MagickImage.Shade">
            <summary>
            Shade image using distant light source.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shade(System.Double,System.Double)">
            <summary>
            Shade image using distant light source.
            </summary>
            <param name="azimuth">The azimuth of the light source direction.</param>
            <param name="elevation">The elevation of the light source direction.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shade(System.Double,System.Double,System.Boolean)">
            <summary>
            Shade image using distant light source.
            </summary>
            <param name="azimuth">The azimuth of the light source direction.</param>
            <param name="elevation">The elevation of the light source direction.</param>
            <param name="colorShading">Specify true to shade the intensity of each pixel.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shade(System.Double,System.Double,System.Boolean,ImageMagick.Channels)">
            <summary>
            Shade image using distant light source.
            </summary>
            <param name="azimuth">The azimuth of the light source direction.</param>
            <param name="elevation">The elevation of the light source direction.</param>
            <param name="colorShading">Specify true to shade the intensity of each pixel.</param>
            <param name="channels">The channel(s) that should be shaded.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shadow">
            <summary>
            Simulate an image shadow.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shadow(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Simulate an image shadow.
            </summary>
            <param name="color">The color of the shadow.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shadow(System.Int32,System.Int32,System.Double,ImageMagick.Percentage)">
            <summary>
            Simulate an image shadow.
            </summary>
            <param name="x">the shadow x-offset.</param>
            <param name="y">the shadow y-offset.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="alpha">Transparency percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shadow(System.Int32,System.Int32,System.Double,ImageMagick.Percentage,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Simulate an image shadow.
            </summary>
            <param name="x ">the shadow x-offset.</param>
            <param name="y">the shadow y-offset.</param>
            <param name="sigma">The standard deviation of the Gaussian, in pixels.</param>
            <param name="alpha">Transparency percentage.</param>
            <param name="color">The color of the shadow.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sharpen">
            <summary>
            Sharpen pixels in image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sharpen(ImageMagick.Channels)">
            <summary>
            Sharpen pixels in image.
            </summary>
            <param name="channels">The channel(s) that should be sharpened.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sharpen(System.Double,System.Double)">
            <summary>
            Sharpen pixels in image.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sharpen(System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Sharpen pixels in image.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="channels">The channel(s) that should be sharpened.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.Shave(System.Int32,System.Int32)">
            <summary>
            Shave pixels from image edges.
            </summary>
            <param name="leftRight">The number of pixels to shave left and right.</param>
            <param name="topBottom">The number of pixels to shave top and bottom.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Shear(System.Double,System.Double)">
            <summary>
            Shear image (create parallelogram by sliding image by X or Y axis).
            </summary>
            <param name="xAngle">Specifies the number of x degrees to shear the image.</param>
            <param name="yAngle">Specifies the number of y degrees to shear the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Double)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="contrast">The contrast.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Boolean,System.Double)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="sharpen">Specifies if sharpening should be used.</param>
            <param name="contrast">The contrast.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Double,System.Double)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="contrast">The contrast to use.</param>
            <param name="midpoint">The midpoint to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Boolean,System.Double,System.Double)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="sharpen">Specifies if sharpening should be used.</param>
            <param name="contrast">The contrast to use.</param>
            <param name="midpoint">The midpoint to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Double,ImageMagick.Percentage)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="contrast">The contrast to use.</param>
            <param name="midpointPercentage">The midpoint to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SigmoidalContrast(System.Boolean,System.Double,ImageMagick.Percentage)">
            <summary>
            Adjust the image contrast with a non-linear sigmoidal contrast algorithm.
            </summary>
            <param name="sharpen">Specifies if sharpening should be used.</param>
            <param name="contrast">The contrast to use.</param>
            <param name="midpointPercentage">The midpoint to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SparseColor(ImageMagick.SparseColorMethod,System.Collections.Generic.IEnumerable{ImageMagick.ISparseColorArg{System.Single}})">
            <summary>
            Sparse color image, given a set of coordinates, interpolates the colors found at those
            coordinates, across the whole image, using various methods.
            </summary>
            <param name="method">The sparse color method to use.</param>
            <param name="args">The sparse color arguments.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SparseColor(ImageMagick.SparseColorMethod,ImageMagick.ISparseColorArg{System.Single}[])">
            <summary>
            Sparse color image, given a set of coordinates, interpolates the colors found at those
            coordinates, across the whole image, using various methods.
            </summary>
            <param name="method">The sparse color method to use.</param>
            <param name="args">The sparse color arguments.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SparseColor(ImageMagick.Channels,ImageMagick.SparseColorMethod,System.Collections.Generic.IEnumerable{ImageMagick.ISparseColorArg{System.Single}})">
            <summary>
            Sparse color image, given a set of coordinates, interpolates the colors found at those
            coordinates, across the whole image, using various methods.
            </summary>
            <param name="channels">The channel(s) to use.</param>
            <param name="method">The sparse color method to use.</param>
            <param name="args">The sparse color arguments.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SparseColor(ImageMagick.Channels,ImageMagick.SparseColorMethod,ImageMagick.ISparseColorArg{System.Single}[])">
            <summary>
            Sparse color image, given a set of coordinates, interpolates the colors found at those
            coordinates, across the whole image, using various methods.
            </summary>
            <param name="channels">The channel(s) to use.</param>
            <param name="method">The sparse color method to use.</param>
            <param name="args">The sparse color arguments.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sketch">
            <summary>
            Simulates a pencil sketch.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Sketch(System.Double,System.Double,System.Double)">
            <summary>
            Simulates a pencil sketch. We convolve the image with a Gaussian operator of the given
            radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma.
            Use a radius of 0 and sketch selects a suitable radius for you.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="angle">Apply the effect along this angle.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Solarize">
            <summary>
            Solarize image (similar to effect seen when exposing a photographic film to light during
            the development process).
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Solarize(System.Double)">
            <summary>
            Solarize image (similar to effect seen when exposing a photographic film to light during
            the development process).
            </summary>
            <param name="factor">The factor to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Solarize(ImageMagick.Percentage)">
            <summary>
            Solarize image (similar to effect seen when exposing a photographic film to light during
            the development process).
            </summary>
            <param name="factorPercentage">The factor to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SortPixels">
            <summary>
            Sort pixels within each scanline in ascending order of intensity.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Splice(ImageMagick.IMagickGeometry)">
            <summary>
            Splice the background color into the image.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Spread">
            <summary>
            Spread pixels randomly within image.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Spread(System.Double)">
            <summary>
            Spread pixels randomly within image by specified amount.
            </summary>
            <param name="radius">Choose a random pixel in a neighborhood of this extent.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Spread(ImageMagick.PixelInterpolateMethod,System.Double)">
            <summary>
            Spread pixels randomly within image by specified amount.
            </summary>
            <param name="method">Pixel interpolate method.</param>
            <param name="radius">Choose a random pixel in a neighborhood of this extent.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Statistic(ImageMagick.StatisticType,System.Int32,System.Int32)">
            <summary>
            Makes each pixel the min / max / median / mode / etc. of the neighborhood of the specified width
            and height.
            </summary>
            <param name="type">The statistic type.</param>
            <param name="width">The width of the pixel neighborhood.</param>
            <param name="height">The height of the pixel neighborhood.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Statistics">
            <summary>
            Returns the image statistics.
            </summary>
            <returns>The image statistics.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Stegano(ImageMagick.IMagickImage)">
            <summary>
            Add a digital watermark to the image (based on second image).
            </summary>
            <param name="watermark">The image to use as a watermark.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Stereo(ImageMagick.IMagickImage)">
            <summary>
            Create an image which appears in stereo when viewed with red-blue glasses (Red image on
            left, blue on right).
            </summary>
            <param name="rightImage">The image to use as the right part of the resulting image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Strip">
            <summary>
            Strips an image of all profiles and comments.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Swirl(System.Double)">
            <summary>
            Swirl image (image pixels are rotated by degrees).
            </summary>
            <param name="degrees">The number of degrees.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Swirl(ImageMagick.PixelInterpolateMethod,System.Double)">
            <summary>
            Swirl image (image pixels are rotated by degrees).
            </summary>
            <param name="method">Pixel interpolate method.</param>
            <param name="degrees">The number of degrees.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SubImageSearch(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Search for the specified image at EVERY possible location in this image. This is slow!
            very very slow.. It returns a similarity image such that an exact match location is
            completely white and if none of the pixels match, black, otherwise some gray level in-between.
            </summary>
            <param name="image">The image to search for.</param>
            <returns>The result of the search action.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SubImageSearch(ImageMagick.IMagickImage{System.Single},ImageMagick.ErrorMetric)">
            <summary>
            Search for the specified image at EVERY possible location in this image. This is slow!
            very very slow.. It returns a similarity image such that an exact match location is
            completely white and if none of the pixels match, black, otherwise some gray level in-between.
            </summary>
            <param name="image">The image to search for.</param>
            <param name="metric">The metric to use.</param>
            <returns>The result of the search action.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.SubImageSearch(ImageMagick.IMagickImage{System.Single},ImageMagick.ErrorMetric,System.Double)">
            <summary>
            Search for the specified image at EVERY possible location in this image. This is slow!
            very very slow.. It returns a similarity image such that an exact match location is
            completely white and if none of the pixels match, black, otherwise some gray level in-between.
            </summary>
            <param name="image">The image to search for.</param>
            <param name="metric">The metric to use.</param>
            <param name="similarityThreshold">Minimum distortion for (sub)image match.</param>
            <returns>The result of the search action.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Texture(ImageMagick.IMagickImage)">
            <summary>
            Channel a texture on image background.
            </summary>
            <param name="image">The image to use as a texture on the image background.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Threshold(ImageMagick.Percentage)">
            <summary>
            Threshold image.
            </summary>
            <param name="percentage">The threshold percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Threshold(ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Threshold image.
            </summary>
            <param name="percentage">The threshold percentage.</param>
            <param name="channels">The channel(s) that should be thresholded.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Thumbnail(System.Int32,System.Int32)">
            <summary>
            Resize image to thumbnail size.
            <para />
            Resize will fit the image into the requested size. It does NOT fill, the requested box size.
            Use the <see cref="T:ImageMagick.IMagickGeometry"/> overload for more control over the resulting size.
            </summary>
            <param name="width">The new width.</param>
            <param name="height">The new height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Thumbnail(ImageMagick.IMagickGeometry)">
            <summary>
            Resize image to thumbnail size.
            </summary>
            <param name="geometry">The geometry to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Thumbnail(ImageMagick.Percentage)">
            <summary>
            Resize image to thumbnail size.
            </summary>
            <param name="percentage">The percentage.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Thumbnail(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Resize image to thumbnail size.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the height.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Tile(ImageMagick.IMagickImage,ImageMagick.CompositeOperator)">
            <summary>
            Compose an image repeated across and down the image.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Tile(ImageMagick.IMagickImage,ImageMagick.CompositeOperator,System.String)">
            <summary>
            Compose an image repeated across and down the image.
            </summary>
            <param name="image">The image to composite with this image.</param>
            <param name="compose">The algorithm to use.</param>
            <param name="args">The arguments for the algorithm (compose:args).</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Tint(System.String)">
            <summary>
            Applies a color vector to each pixel in the image. The length of the vector is 0 for black
            and white and at its maximum for the midtones. The vector weighting function is
            f(x)=(1-(4.0*((x-0.5)*(x-0.5)))).
            </summary>
            <param name="opacity">A color value used for tinting.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Tint(System.String,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Applies a color vector to each pixel in the image. The length of the vector is 0 for black
            and white and at its maximum for the midtones. The vector weighting function is
            f(x)=(1-(4.0*((x-0.5)*(x-0.5)))).
            </summary>
            <param name="opacity">An opacity value used for tinting.</param>
            <param name="color">A color value used for tinting.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ToBase64">
            <summary>
            Converts this instance to a base64 <see cref="T:System.String"/>.
            </summary>
            <returns>A base64 <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ToBase64(ImageMagick.MagickFormat)">
            <summary>
            Converts this instance to a base64 <see cref="T:System.String"/>.
            </summary>
            <param name="format">The format to use.</param>
            <returns>A base64 <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ToBase64(ImageMagick.IWriteDefines)">
            <summary>
            Converts this instance to a base64 <see cref="T:System.String"/>.
            </summary>
            <param name="defines">The defines to set.</param>
            <returns>A base64 <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ToByteArray">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.ToByteArray(ImageMagick.IWriteDefines)">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="defines">The defines to set.</param>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ToByteArray(ImageMagick.MagickFormat)">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="format">The format to use.</param>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.ToString">
            <summary>
            Returns a string that represents the current image.
            </summary>
            <returns>A string that represents the current image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.TransformColorSpace(ImageMagick.IColorProfile)">
            <summary>
            Transforms the image from the colorspace of the source profile to the target profile. This
            requires the image to have a color profile. Nothing will happen if the image has no color profile.
            </summary>
            <param name="target">The target color profile.</param>
            <returns>True when the colorspace was transformed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.TransformColorSpace(ImageMagick.IColorProfile,ImageMagick.ColorTransformMode)">
            <summary>
            Transforms the image from the colorspace of the source profile to the target profile. This
            requires the image to have a color profile. Nothing will happen if the image has no color profile.
            </summary>
            <param name="target">The target color profile.</param>
            <param name="mode">The color transformation mode.</param>
            <returns>True when the colorspace was transformed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.TransformColorSpace(ImageMagick.IColorProfile,ImageMagick.IColorProfile)">
            <summary>
            Transforms the image from the colorspace of the source profile to the target profile. The
            source profile will only be used if the image does not contain a color profile. Nothing
            will happen if the source profile has a different colorspace then that of the image.
            </summary>
            <param name="source">The source color profile.</param>
            <param name="target">The target color profile.</param>
            <returns>True when the colorspace was transformed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.TransformColorSpace(ImageMagick.IColorProfile,ImageMagick.IColorProfile,ImageMagick.ColorTransformMode)">
            <summary>
            Transforms the image from the colorspace of the source profile to the target profile. The
            source profile will only be used if the image does not contain a color profile. Nothing
            will happen if the source profile has a different colorspace then that of the image.
            </summary>
            <param name="source">The source color profile.</param>
            <param name="target">The target color profile.</param>
            <param name="mode">The color transformation mode.</param>
            <returns>True when the colorspace was transformed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.Transparent(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Add alpha channel to image, setting pixels matching color to transparent.
            </summary>
            <param name="color">The color to make transparent.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.TransparentChroma(ImageMagick.IMagickColor{System.Single},ImageMagick.IMagickColor{System.Single})">
            <summary>
            Add alpha channel to image, setting pixels that lie in between the given two colors to
            transparent.
            </summary>
            <param name="colorLow">The low target color.</param>
            <param name="colorHigh">The high target color.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Transpose">
            <summary>
            Creates a horizontal mirror image by reflecting the pixels around the central y-axis while
            rotating them by 90 degrees.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Transverse">
            <summary>
            Creates a vertical mirror image by reflecting the pixels around the central x-axis while
            rotating them by 270 degrees.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Trim">
            <summary>
            Trim edges that are the background color from the image. The property <see cref="P:ImageMagick.MagickImage.BoundingBox"/> can be used to the
            coordinates of the area that will be extracted.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Trim(ImageMagick.Gravity[])">
            <summary>
            Trim the specified edges that are the background color from the image.
            </summary>
            <param name="edges">The edges that need to be trimmed.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Trim(ImageMagick.Percentage)">
            <summary>
            Trim edges that are the background color from the image. The property <see cref="P:ImageMagick.MagickImage.BoundingBox"/> can be used to the
            coordinates of the area that will be extracted.
            </summary>
            <param name="percentBackground">The percentage of background pixels permitted in the outer rows and columns.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.UniqueColors">
            <summary>
            Returns the unique colors of an image.
            </summary>
            <returns>The unique colors of an image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.UnsharpMask(System.Double,System.Double)">
            <summary>
            Replace image with a sharpened version of the original image using the unsharp mask algorithm.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.UnsharpMask(System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Replace image with a sharpened version of the original image using the unsharp mask algorithm.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="channels">The channel(s) that should be sharpened.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.UnsharpMask(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Replace image with a sharpened version of the original image using the unsharp mask algorithm.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="amount">The percentage of the difference between the original and the blur image
            that is added back into the original.</param>
            <param name="threshold">The threshold in pixels needed to apply the diffence amount.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.UnsharpMask(System.Double,System.Double,System.Double,System.Double,ImageMagick.Channels)">
            <summary>
            Replace image with a sharpened version of the original image using the unsharp mask algorithm.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="amount">The percentage of the difference between the original and the blur image
            that is added back into the original.</param>
            <param name="threshold">The threshold in pixels needed to apply the diffence amount.</param>
            <param name="channels">The channel(s) that should be sharpened.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Vignette">
            <summary>
            Softens the edges of the image in vignette style.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Vignette(System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Softens the edges of the image in vignette style.
            </summary>
            <param name="radius">The radius of the Gaussian, in pixels, not counting the center pixel.</param>
            <param name="sigma">The standard deviation of the Laplacian, in pixels.</param>
            <param name="x">The x ellipse offset.</param>
            <param name="y">the y ellipse offset.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Wave">
            <summary>
            Map image pixels to a sine wave.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Wave(ImageMagick.PixelInterpolateMethod,System.Double,System.Double)">
            <summary>
            Map image pixels to a sine wave.
            </summary>
            <param name="method">Pixel interpolate method.</param>
            <param name="amplitude">The amplitude.</param>
            <param name="length">The length of the wave.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.WaveletDenoise(System.Single)">
            <summary>
            Removes noise from the image using a wavelet transform.
            </summary>
            <param name="threshold">The threshold for smoothing.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.WaveletDenoise(System.Single,System.Double)">
            <summary>
            Removes noise from the image using a wavelet transform.
            </summary>
            <param name="threshold">The threshold for smoothing.</param>
            <param name="softness">Attenuate the smoothing threshold.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.WaveletDenoise(ImageMagick.Percentage)">
            <summary>
            Removes noise from the image using a wavelet transform.
            </summary>
            <param name="thresholdPercentage">The threshold for smoothing.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.WaveletDenoise(ImageMagick.Percentage,System.Double)">
            <summary>
            Removes noise from the image using a wavelet transform.
            </summary>
            <param name="thresholdPercentage">The threshold for smoothing.</param>
            <param name="softness">Attenuate the smoothing threshold.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.WhiteBalance">
            <summary>
            Apply a white balancing to an image according to a grayworld assumption in the LAB colorspace.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImage.WhiteBalance(ImageMagick.Percentage)">
            <summary>
            Apply a white balancing to an image according to a grayworld assumption in the LAB colorspace.
            </summary>
            <param name="vibrance">The vibrance.</param>
        </member>
        <member name="M:ImageMagick.MagickImage.WhiteThreshold(ImageMagick.Percentage)">
            <summary>
            Forces all pixels above the threshold into white while leaving all pixels at or below
            the threshold unchanged.
            </summary>
            <param name="threshold">The threshold to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.WhiteThreshold(ImageMagick.Percentage,ImageMagick.Channels)">
            <summary>
            Forces all pixels above the threshold into white while leaving all pixels at or below
            the threshold unchanged.
            </summary>
            <param name="threshold">The threshold to use.</param>
            <param name="channels">The channel(s) to make black.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.FileInfo)">
            <summary>
            Writes the image to the specified file.
            </summary>
            <param name="file">The file to write the image to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.FileInfo,ImageMagick.IWriteDefines)">
            <summary>
            Writes the image to the specified file.
            </summary>
            <param name="file">The file to write the image to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified file.
            </summary>
            <param name="file">The file to write the image to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.Stream)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.Stream,ImageMagick.IWriteDefines)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.String)">
            <summary>
            Writes the image to the specified file name.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.String,ImageMagick.IWriteDefines)">
            <summary>
            Writes the image to the specified file name.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.Write(System.String,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified file name.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImage.WriteAsync(System.IO.Stream)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.WriteAsync(System.IO.Stream,ImageMagick.IWriteDefines)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImage.WriteAsync(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:ImageMagick.MagickImageCollection">
            <summary>
            Represents the collection of images.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],System.Int32,System.Int32,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.Collections.Generic.IEnumerable{ImageMagick.IMagickImage{System.Single}})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="images">The images to add to the collection.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.String,ImageMagick.MagickFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.#ctor(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ImageMagick.MagickImageCollection"/> class.
            </summary>
        </member>
        <member name="E:ImageMagick.MagickImageCollection.Warning">
            <summary>
            Event that will we raised when a warning is thrown by ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageCollection.Count">
            <summary>
            Gets the number of images in the collection.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the image at the specified index.
            </summary>
            <param name="index">The index of the image to get.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Add(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Adds an image to the collection.
            </summary>
            <param name="item">The image to add.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Add(System.String)">
            <summary>
            Adds an image with the specified file name to the collection.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.Byte[])">
            <summary>
            Adds the image(s) from the specified byte array to the collection.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Adds the image(s) from the specified byte array to the collection.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.Collections.Generic.IEnumerable{ImageMagick.IMagickImage{System.Single}})">
            <summary>
            Adds the specified images to this collection.
            </summary>
            <param name="images">The images to add to the collection.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.String)">
            <summary>
            Adds the image(s) from the specified file name to the collection.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Adds the image(s) from the specified file name to the collection.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.IO.Stream)">
            <summary>
            Adds the image(s) from the specified stream to the collection.
            </summary>
            <param name="stream">The stream to read the images from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AddRange(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Adds the image(s) from the specified stream to the collection.
            </summary>
            <param name="stream">The stream to read the images from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AppendHorizontally">
            <summary>
            Creates a single image, by appending all the images in the collection horizontally (+append).
            </summary>
            <returns>A single image, by appending all the images in the collection horizontally (+append).</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.AppendVertically">
            <summary>
            Creates a single image, by appending all the images in the collection vertically (-append).
            </summary>
            <returns>A single image, by appending all the images in the collection vertically (-append).</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Coalesce">
            <summary>
            Merge a sequence of images. This is useful for GIF animation sequences that have page
            offsets and disposal methods.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Clear">
            <summary>
            Removes all images from the collection.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Clone">
            <summary>
            Creates a clone of the current image collection.
            </summary>
            <returns>A clone of the current image collection.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Combine">
            <summary>
            Combines the images into a single image. The typical ordering would be
            image 1 => Red, 2 => Green, 3 => Blue, etc.
            </summary>
            <returns>The images combined into a single image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Combine(ImageMagick.ColorSpace)">
            <summary>
            Combines the images into a single image. The grayscale value of the pixels of each image
            in the sequence is assigned in order to the specified channels of the combined image.
            The typical ordering would be image 1 => Red, 2 => Green, 3 => Blue, etc.
            </summary>
            <param name="colorSpace">The image colorspace.</param>
            <returns>The images combined into a single image.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Complex(ImageMagick.IComplexSettings)">
            <summary>
            Perform complex mathematics on an image sequence.
            </summary>
            <param name="complexSettings">The complex settings.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Contains(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Determines whether the collection contains the specified image.
            </summary>
            <param name="item">The image to check.</param>
            <returns>True when the collection contains the specified image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.CopyTo(ImageMagick.IMagickImage{System.Single}[],System.Int32)">
            <summary>
            Copies the images to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination.</param>
            <param name="arrayIndex">The zero-based index in 'destination' at which copying begins.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Deconstruct">
            <summary>
            Break down an image sequence into constituent parts. This is useful for creating GIF or
            MNG animation sequences.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Dispose">
            <summary>
            Disposes the <see cref="T:ImageMagick.MagickImageCollection"/> instance.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Evaluate(ImageMagick.EvaluateOperator)">
            <summary>
            Evaluate image pixels into a single image. All the images in the collection must be the
            same size in pixels.
            </summary>
            <param name="evaluateOperator">The operator.</param>
            <returns>The resulting image of the evaluation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Flatten">
            <summary>
            Use the virtual canvas size of first image. Images which fall outside this canvas is clipped.
            This can be used to 'fill out' a given virtual canvas.
            </summary>
            <returns>The resulting image of the flatten operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Flatten(ImageMagick.IMagickColor{System.Single})">
            <summary>
            Flatten this collection into a single image.
            This is useful for combining Photoshop layers into a single image.
            </summary>
            <param name="backgroundColor">The background color of the output image.</param>
            <returns>The resulting image of the flatten operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the images.
            </summary>
            <returns>An enumerator that iterates through the images.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.IndexOf(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Determines the index of the specified image.
            </summary>
            <param name="item">The image to check.</param>
            <returns>The index of the specified image.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Insert(System.Int32,ImageMagick.IMagickImage{System.Single})">
            <summary>
            Inserts an image into the collection.
            </summary>
            <param name="index">The index to insert the image.</param>
            <param name="item">The image to insert.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts an image with the specified file name into the collection.
            </summary>
            <param name="index">The index to insert the image.</param>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Map(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Remap image colors with closest color from reference image.
            </summary>
            <param name="image">The image to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Map(ImageMagick.IMagickImage{System.Single},ImageMagick.IQuantizeSettings)">
            <summary>
            Remap image colors with closest color from reference image.
            </summary>
            <param name="image">The image to use.</param>
            <param name="settings">Quantize settings.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Merge">
            <summary>
            Merge all layers onto a canvas just large enough to hold all the actual images. The virtual
            canvas of the first image is preserved but otherwise ignored.
            </summary>
            <returns>The resulting image of the merge operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Montage(ImageMagick.IMontageSettings{System.Single})">
            <summary>
            Create a composite image by combining the images with the specified settings.
            </summary>
            <param name="settings">The settings to use.</param>
            <returns>The resulting image of the montage operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Morph(System.Int32)">
            <summary>
            The Morph method requires a minimum of two images. The first image is transformed into
            the second by a number of intervening images as specified by frames.
            </summary>
            <param name="frames">The number of in-between images to generate.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Mosaic">
            <summary>
            Start with the virtual canvas of the first image, enlarging left and right edges to contain
            all images. Images with negative offsets will be clipped.
            </summary>
            <returns>The resulting image of the mosaic operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Optimize">
            <summary>
            Compares each image the GIF disposed forms of the previous image in the sequence. From
            this it attempts to select the smallest cropped image to replace each frame, while
            preserving the results of the GIF animation.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.OptimizePlus">
            <summary>
            OptimizePlus is exactly as Optimize, but may also add or even remove extra frames in the
            animation, if it improves the total number of pixels in the resulting GIF animation.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.OptimizeTransparency">
            <summary>
            Compares each image the GIF disposed forms of the previous image in the sequence. Any
            pixel that does not change the displayed result is replaced with transparency.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.Byte[])">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads only metadata and not the pixel data from all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Reads only metadata and not the pixel data from all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.IO.FileInfo)">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.IO.Stream)">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.String)">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Ping(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read only metadata and not the pixel data from all image frames.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Polynomial(System.Double[])">
            <summary>
            Returns a new image where each pixel is the sum of the pixels in the image sequence after applying its
            corresponding terms (coefficient and degree pairs).
            </summary>
            <param name="terms">The list of polynomial coefficients and degree pairs and a constant.</param>
            <returns>A new image where each pixel is the sum of the pixels in the image sequence after applying its
            corresponding terms (coefficient and degree pairs).</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Quantize">
            <summary>
            Quantize images (reduce number of colors).
            </summary>
            <returns>The resulting image of the quantize operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Quantize(ImageMagick.IQuantizeSettings)">
            <summary>
            Quantize images (reduce number of colors).
            </summary>
            <param name="settings">Quantize settings.</param>
            <returns>The resulting image of the quantize operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[])">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],System.Int32,System.Int32,ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],System.Int32,System.Int32,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.Byte[],ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="data">The byte array to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.FileInfo)">
            <summary>
            Read all image frames.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.FileInfo,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.Stream)">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.String)">
            <summary>
            Read all image frames.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.String,ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Read(System.String,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ReadAsync(System.IO.Stream)">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ReadAsync(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ReadAsync(System.IO.Stream,ImageMagick.IMagickReadSettings{System.Single})">
            <summary>
            Read all image frames.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <param name="readSettings">The settings to use when reading the image.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Remove(ImageMagick.IMagickImage{System.Single})">
            <summary>
            Removes the first occurrence of the specified image from the collection.
            </summary>
            <param name="item">The image to remove.</param>
            <returns>True when the image was found and removed.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the image at the specified index from the collection.
            </summary>
            <param name="index">The index of the image to remove.</param>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.RePage">
            <summary>
            Resets the page property of every image in the collection.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Reverse">
            <summary>
            Reverses the order of the images in the collection.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.SmushHorizontal(System.Int32)">
            <summary>
            Smush images from list into single image in horizontal direction.
            </summary>
            <param name="offset">Minimum distance in pixels between images.</param>
            <returns>The resulting image of the smush operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.SmushVertical(System.Int32)">
            <summary>
            Smush images from list into single image in vertical direction.
            </summary>
            <param name="offset">Minimum distance in pixels between images.</param>
            <returns>The resulting image of the smush operation.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ToByteArray">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ToByteArray(ImageMagick.IWriteDefines)">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="defines">The defines to set.</param>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ToByteArray(ImageMagick.MagickFormat)">
            <summary>
            Converts this instance to a <see cref="T:System.Byte"/> array.
            </summary>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ToBase64">
            <summary>
            Converts this instance to a base64 <see cref="T:System.String"/>.
            </summary>
            <returns>A base64 <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.ToBase64(ImageMagick.MagickFormat)">
            <summary>
            Converts this instance to a base64 string.
            </summary>
            <param name="format">The format to use.</param>
            <returns>A base64 <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.TrimBounds">
            <summary>
            Determine the overall bounds of all the image layers just as in <see cref="M:ImageMagick.MagickImageCollection.Merge"/>,
            then adjust the the canvas and offsets to be relative to those bounds,
            without overlaying the images.
            </summary>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.FileInfo)">
            <summary>
            Writes the images to the specified file. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="file">The file to write the image to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.FileInfo,ImageMagick.IWriteDefines)">
            <summary>
            Writes the images to the specified file. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="file">The file to write the image to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.FileInfo,ImageMagick.MagickFormat)">
            <summary>
            Writes the images to the specified file. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="file">The file to write the image to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.Stream)">
            <summary>
            Writes the imagse to the specified stream. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="stream">The stream to write the images to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.Stream,ImageMagick.IWriteDefines)">
            <summary>
            Writes the imagse to the specified stream. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="stream">The stream to write the images to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.String)">
            <summary>
            Writes the images to the specified file name. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.String,ImageMagick.IWriteDefines)">
            <summary>
            Writes the images to the specified file name. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.Write(System.String,ImageMagick.MagickFormat)">
            <summary>
            Writes the images to the specified file name. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.WriteAsync(System.IO.Stream)">
            <summary>
            Writes the imagse to the specified stream. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="stream">The stream to write the images to.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.WriteAsync(System.IO.Stream,ImageMagick.IWriteDefines)">
            <summary>
            Writes the imagse to the specified stream. If the output image's file format does not
            allow multi-image files multiple files will be written.
            </summary>
            <param name="stream">The stream to write the images to.</param>
            <param name="defines">The defines to set.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:ImageMagick.MagickImageCollection.WriteAsync(System.IO.Stream,ImageMagick.MagickFormat)">
            <summary>
            Writes the image to the specified stream.
            </summary>
            <param name="stream">The stream to write the image data to.</param>
            <param name="format">The format to use.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:ImageMagick.MagickImageInfo">
            <summary>
            Class that contains basic information about an image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickImageInfo"/> class.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.ColorSpace">
            <summary>
            Gets the color space of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Compression">
            <summary>
            Gets the compression method of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Density">
            <summary>
            Gets the density of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.FileName">
            <summary>
            Gets the original file name of the image (only available if read from disk).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Format">
            <summary>
            Gets the format of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Height">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Interlace">
            <summary>
            Gets the type of interlacing.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Quality">
            <summary>
            Gets the JPEG/MIFF/PNG compression level.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickImageInfo.Width">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.Byte[])">
            <summary>
            Read basic information about an image with multiple frames/pages.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <returns>A <see cref="T:ImageMagick.IMagickImageInfo"/> iteration.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read basic information about an image with multiple frames/pages.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>A <see cref="T:ImageMagick.IMagickImageInfo"/> iteration.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.IO.FileInfo)">
            <summary>
            Read basic information about an image with multiple frames/pages.
            </summary>
            <param name="file">The file to read the frames from.</param>
            <returns>A <see cref="T:ImageMagick.IMagickImageInfo"/> iteration.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.IO.Stream)">
            <summary>
            Read basic information about an image with multiple frames/pages.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <returns>A <see cref="T:ImageMagick.IMagickImageInfo"/> iteration.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.ReadCollection(System.String)">
            <summary>
            Read basic information about an image with multiple frames/pages.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <returns>A <see cref="T:ImageMagick.IMagickImageInfo"/> iteration.</returns>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.Byte[])">
            <summary>
            Read basic information about an image.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read basic information about an image.
            </summary>
            <param name="data">The byte array to read the information from.</param>
            <param name="offset">The offset at which to begin reading data.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.IO.FileInfo)">
            <summary>
            Read basic information about an image.
            </summary>
            <param name="file">The file to read the image from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.IO.Stream)">
            <summary>
            Read basic information about an image.
            </summary>
            <param name="stream">The stream to read the image data from.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="M:ImageMagick.MagickImageInfo.Read(System.String)">
            <summary>
            Read basic information about an image.
            </summary>
            <param name="fileName">The fully qualified name of the image file, or the relative image file name.</param>
            <exception cref="T:ImageMagick.MagickException">Thrown when an error is raised by ImageMagick.</exception>
        </member>
        <member name="T:ImageMagick.MagickNET">
            <summary>
            Class that can be used to initialize Magick.NET.
            </summary>
        </member>
        <member name="E:ImageMagick.MagickNET.Log">
            <summary>
            Event that will be raised when something is logged by ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.Delegates">
            <summary>
            Gets the ImageMagick delegate libraries.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.Features">
            <summary>
            Gets the ImageMagick features.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.SupportedFormats">
            <summary>
            Gets the information about the supported formats.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.FontFamilies">
            <summary>
            Gets the font families that are known by ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.FontNames">
            <summary>
            Gets the font names that are known by ImageMagick.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickNET.Version">
            <summary>
            Gets the version of Magick.NET.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickNET.GetFormatInformation(System.IO.FileInfo)">
            <summary>
            Returns the format information of the specified format based on the extension of the file.
            </summary>
            <param name="file">The file to get the format for.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickNET.GetFormatInformation(ImageMagick.MagickFormat)">
            <summary>
            Returns the format information of the specified format.
            </summary>
            <param name="format">The image format.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickNET.GetFormatInformation(System.String)">
            <summary>
            Returns the format information of the specified format based on the extension of the
            file. If that fails the format will be determined by 'pinging' the file.
            </summary>
            <param name="fileName">The name of the file to get the format for.</param>
            <returns>The format information.</returns>
        </member>
        <member name="M:ImageMagick.MagickNET.Initialize">
            <summary>
            Initializes ImageMagick.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickNET.Initialize(System.String)">
            <summary>
            Initializes ImageMagick with the xml files that are located in the specified path.
            </summary>
            <param name="path">The path that contains the ImageMagick xml files.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.Initialize(ImageMagick.Configuration.ConfigurationFiles)">
            <summary>
            Initializes ImageMagick with the specified configuration files and returns the path to the
            temporary directory where the xml files were saved.
            </summary>
            <param name="configFiles">The configuration files ot initialize ImageMagick with.</param>
            <returns>The path of the folder that was created and contains the configuration files.</returns>
        </member>
        <member name="M:ImageMagick.MagickNET.Initialize(ImageMagick.Configuration.ConfigurationFiles,System.String)">
            <summary>
            Initializes ImageMagick with the specified configuration files in the specified the path.
            </summary>
            <param name="configFiles">The configuration files ot initialize ImageMagick with.</param>
            <param name="path">The directory to save the configuration files in.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.ResetRandomSeed">
            <summary>
            Resets the pseudo-random number generator secret key.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickNET.SetDefaultFontFile(System.IO.FileInfo)">
            <summary>
            Set the path to the default font file.
            </summary>
            <param name="file">The file to use at the default font file.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetDefaultFontFile(System.String)">
            <summary>
            Set the path to the default font file.
            </summary>
            <param name="fileName">The file name to use at the default font file.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetFontConfigDirectory(System.String)">
            <summary>
            Sets the directory that contains the FontConfig configuration files.
            </summary>
            <param name="path">The path of the FontConfig directory.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetGhostscriptDirectory(System.String)">
            <summary>
            Sets the directory that contains the Ghostscript file gsdll32.dll / gsdll64.dll.
            </summary>
            <param name="path">The path of the Ghostscript directory.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetGhostscriptFontDirectory(System.String)">
            <summary>
            Sets the directory that contains the Ghostscript font files.
            </summary>
            <param name="path">The path of the Ghostscript font directory.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetLogEvents(ImageMagick.LogEvents)">
            <summary>
            Set the events that will be written to the log. The log will be written to the Log event
            and the debug window in VisualStudio. To change the log settings you must use a custom
            log.xml file.
            </summary>
            <param name="events">The events that will be logged.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetNativeLibraryDirectory(System.String)">
            <summary>
            Sets the directory that contains the Native library. This currently only works on Windows.
            </summary>
            <param name="path">The path of the directory that contains the native library.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetTempDirectory(System.String)">
            <summary>
            Sets the directory that will be used when ImageMagick does not have enough memory for the
            pixel cache.
            </summary>
            <param name="path">The path where temp files will be written.</param>
        </member>
        <member name="M:ImageMagick.MagickNET.SetRandomSeed(System.Int32)">
            <summary>
            Sets the pseudo-random number generator secret key.
            </summary>
            <param name="seed">The secret key.</param>
        </member>
        <member name="T:ImageMagick.ConvolveMatrix">
            <summary>
            Encapsulates a convolution kernel.
            </summary>
        </member>
        <member name="M:ImageMagick.ConvolveMatrix.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ConvolveMatrix"/> class.
            </summary>
            <param name="order">The order (odd number).</param>
        </member>
        <member name="M:ImageMagick.ConvolveMatrix.#ctor(System.Int32,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ConvolveMatrix"/> class.
            </summary>
            <param name="order">The order (odd number).</param>
            <param name="values">The values to initialize the matrix with.</param>
        </member>
        <member name="T:ImageMagick.DoubleMatrix">
            <summary>
            Encapsulates a matrix of doubles.
            </summary>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.#ctor(System.Int32,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.DoubleMatrix"/> class.
            </summary>
            <param name="order">The order.</param>
            <param name="values">The values to initialize the matrix with.</param>
        </member>
        <member name="P:ImageMagick.DoubleMatrix.Order">
            <summary>
            Gets the order of the matrix.
            </summary>
        </member>
        <member name="P:ImageMagick.DoubleMatrix.Item(System.Int32,System.Int32)">
            <summary>
            Get or set the value at the specified x/y position.
            </summary>
            <param name="x">The x position.</param>
            <param name="y">The y position.</param>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value at the specified x/y position.
            </summary>
            <param name="x">The x position.</param>
            <param name="y">The y position.</param>
            <returns>The value at the specified x/y position.</returns>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.SetColumn(System.Int32,System.Double[])">
            <summary>
            Set the column at the specified x position.
            </summary>
            <param name="x">The x position.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.SetRow(System.Int32,System.Double[])">
            <summary>
            Set the row at the specified y position.
            </summary>
            <param name="y">The y position.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.SetValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Set the value at the specified x/y position.
            </summary>
            <param name="x">The x position.</param>
            <param name="y">The y position.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ImageMagick.DoubleMatrix.ToArray">
            <summary>
            Returns a string that represents the current DoubleMatrix.
            </summary>
            <returns>The double array.</returns>
        </member>
        <member name="T:ImageMagick.MagickColorMatrix">
            <summary>
            Encapsulates a color matrix in the order of 1 to 6 (1x1 through 6x6).
            </summary>
        </member>
        <member name="M:ImageMagick.MagickColorMatrix.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColorMatrix"/> class.
            </summary>
            <param name="order">The order (1 to 6).</param>
        </member>
        <member name="M:ImageMagick.MagickColorMatrix.#ctor(System.Int32,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickColorMatrix"/> class.
            </summary>
            <param name="order">The order (1 to 6).</param>
            <param name="values">The values to initialize the matrix with.</param>
        </member>
        <member name="T:ImageMagick.INativeInstance">
            <summary>
            Interface for a native instance.
            </summary>
        </member>
        <member name="P:ImageMagick.INativeInstance.Instance">
            <summary>
            Gets a pointer to the native instance.
            </summary>
        </member>
        <member name="T:ImageMagick.OpenCL">
            <summary>
            Class that can be used to initialize OpenCL.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCL.IsEnabled">
            <summary>
            Gets or sets a value indicating whether OpenCL is enabled.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCL.Devices">
            <summary>
            Gets all the OpenCL devices.
            </summary>
            <returns>A <see cref="T:ImageMagick.IOpenCLDevice"/> iteration.</returns>
        </member>
        <member name="M:ImageMagick.OpenCL.SetCacheDirectory(System.String)">
            <summary>
            Sets the directory that will be used by ImageMagick to store OpenCL cache files.
            </summary>
            <param name="path">The path of the OpenCL cache directory.</param>
        </member>
        <member name="T:ImageMagick.OpenCLDevice">
            <summary>
            Represents an OpenCL device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.BenchmarkScore">
            <summary>
            Gets the benchmark score of the device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.DeviceType">
            <summary>
            Gets the type of the device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the device is enabled or disabled.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.KernelProfileRecords">
            <summary>
            Gets all the kernel profile records for this devices.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.Name">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.ProfileKernels">
            <summary>
            Gets or sets a value indicating whether kernel profiling is enabled.
            This can be used to get information about the OpenCL performance.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLDevice.Version">
            <summary>
            Gets the OpenCL version supported by the device.
            </summary>
        </member>
        <member name="T:ImageMagick.OpenCLKernelProfileRecord">
            <summary>
            Represents a kernel profile record for an OpenCL device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.AverageDuration">
            <summary>
            Gets the average duration of all executions in microseconds.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.Count">
            <summary>
            Gets the number of times that this kernel was executed.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.MaximumDuration">
            <summary>
            Gets the maximum duration of a single execution in microseconds.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.MinimumDuration">
            <summary>
            Gets the minimum duration of a single execution in microseconds.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.Name">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:ImageMagick.OpenCLKernelProfileRecord.TotalDuration">
            <summary>
            Gets the total duration of all executions in microseconds.
            </summary>
        </member>
        <member name="T:ImageMagick.ImageOptimizers.JpegOptimizer">
            <summary>
            Class that can be used to optimize jpeg files.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.JpegOptimizer.Format">
            <summary>
            Gets the format that the optimizer supports.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.JpegOptimizer.OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.JpegOptimizer.Progressive">
            <summary>
            Gets or sets a value indicating whether a progressive jpeg file will be created.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The jpeg file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.IO.FileInfo,System.Int32)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The jpeg file to compress.</param>
            <param name="quality">The jpeg quality.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the jpeg image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.String,System.Int32)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the jpeg image to compress.</param>
            <param name="quality">The jpeg quality.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the jpeg image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.Compress(System.IO.Stream,System.Int32)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="stream">The stream of the jpeg image to compress.</param>
            <param name="quality">The jpeg quality.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The jpeg file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the jpeg image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.JpegOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the jpeg image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.ImageOptimizers.GifOptimizer">
            <summary>
            Class that can be used to optimize gif files.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.GifOptimizer.Format">
            <summary>
            Gets the format that the optimizer supports.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.GifOptimizer.ImageMagick#ImageOptimizers#IImageOptimizer#OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The gif file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the gif image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the gif image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The gif file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the gif image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.GifOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the gif image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.ImageOptimizers.IcoOptimizer">
            <summary>
            Class that can be used to optimize ico files.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.IcoOptimizer.Format">
            <summary>
            Gets the format that the optimizer supports.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.IcoOptimizer.OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The ico file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the ico image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the ico image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The ico file to optimize.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The ico file to optimize.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IcoOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the ico image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.ImageOptimizers.IImageOptimizer">
            <summary>
            Interface for classes that can optimize an image.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.IImageOptimizer.Format">
            <summary>
            Gets the format that the optimizer supports.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.IImageOptimizer.OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The image file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The image file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.IImageOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.ImageOptimizers.PngOptimizer">
            <summary>
            Class that can be used to optimize png files.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.PngOptimizer.Format">
            <summary>
            Gets the format that the optimizer supports.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizers.PngOptimizer.OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The png file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the png image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the png image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The png file to optimize.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The png file to optimize.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizers.PngOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the png image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.Quantum">
            <summary>
            Class that can be used to acquire information about the Quantum.
            </summary>
        </member>
        <member name="P:ImageMagick.Quantum.Depth">
            <summary>
            Gets the quantum depth.
            </summary>
        </member>
        <member name="P:ImageMagick.Quantum.Max">
            <summary>
            Gets the maximum value of the quantum.
            </summary>
        </member>
        <member name="T:ImageMagick.ResourceLimits">
            <summary>
            Class that can be used to set the limits to the resources that are being used.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Area">
            <summary>
            Gets or sets the maximum width * height of an image that can reside in the pixel cache memory.
            Images that exceed the area limit are cached to disk.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Disk">
            <summary>
            Gets or sets the pixel cache limit in bytes. Requests for memory above this limit will fail.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Height">
            <summary>
            Gets or sets the maximum height of an image.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.ListLength">
            <summary>
            Gets or sets the maximum number of images in an image list.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Memory">
            <summary>
            Gets or sets the pixel cache limit in bytes. Once this memory limit is exceeded, all subsequent pixels cache
            operations are to/from disk.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Thread">
            <summary>
            Gets or sets the number of threads used in multithreaded operations.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Throttle">
            <summary>
            Gets or sets the time specified in milliseconds to periodically yield the CPU for.
            </summary>
        </member>
        <member name="P:ImageMagick.ResourceLimits.Width">
            <summary>
            Gets or sets the maximum width of an image.
            </summary>
        </member>
        <member name="M:ImageMagick.ResourceLimits.LimitMemory(ImageMagick.Percentage)">
            <summary>
            Set the maximum percentage of memory that can be used for image data. This also changes
            the <see cref="P:ImageMagick.ResourceLimits.Area"/> limit to twice the number of bytes.
            </summary>
            <param name="percentage">The percentage to use.</param>
        </member>
        <member name="T:ImageMagick.MagickSettings">
            <summary>
            Class that contains various settings.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Affine">
            <summary>
            Gets or sets the affine to use when annotating with text or drawing.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.AntiAlias">
            <summary>
            Gets or sets a value indicating whether anti-aliasing should be enabled (default true).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.BackgroundColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.ColorSpace">
            <summary>
            Gets or sets the color space.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.ColorType">
            <summary>
            Gets or sets the color type of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Compression">
            <summary>
            Gets or sets the compression method to use.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Debug">
            <summary>
            Gets or sets a value indicating whether printing of debug messages from ImageMagick is enabled when a debugger is attached.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Density">
            <summary>
            Gets or sets the vertical and horizontal resolution in pixels.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Depth">
            <summary>
            Gets or sets the depth (bits allocated to red/green/blue components).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Endian">
            <summary>
            Gets or sets the endianness (little like Intel or big like SPARC) for image formats which support
            endian-specific options.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FillPattern">
            <summary>
            Gets or sets the fill pattern.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FillRule">
            <summary>
            Gets or sets the rule to use when filling drawn objects.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Font">
            <summary>
            Gets or sets the text rendering font.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FontFamily">
            <summary>
            Gets or sets the text font family.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FontPointsize">
            <summary>
            Gets or sets the font point size.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.FontWeight">
            <summary>
            Gets or sets the font weight.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Format">
            <summary>
            Gets or sets the the format of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Page">
            <summary>
            Gets or sets the preferred size and location of an image canvas.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeAntiAlias">
            <summary>
            Gets or sets a value indicating whether stroke anti-aliasing is enabled or disabled.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeColor">
            <summary>
            Gets or sets the color to use when drawing object outlines.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeDashArray">
            <summary>
            Gets or sets the pattern of dashes and gaps used to stroke paths. This represents a
            zero-terminated array of numbers that specify the lengths of alternating dashes and gaps
            in pixels. If a zero value is not found it will be added. If an odd number of values is
            provided, then the list of values is repeated to yield an even number of values.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeDashOffset">
            <summary>
            Gets or sets the distance into the dash pattern to start the dash (default 0) while
            drawing using a dash pattern,.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeLineCap">
            <summary>
            Gets or sets the shape to be used at the end of open subpaths when they are stroked.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeLineJoin">
            <summary>
            Gets or sets the shape to be used at the corners of paths (or other vector shapes) when they
            are stroked.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeMiterLimit">
            <summary>
            Gets or sets the miter limit. When two line segments meet at a sharp angle and miter joins have
            been specified for 'lineJoin', it is possible for the miter to extend far beyond the thickness
            of the line stroking the path. The miterLimit' imposes a limit on the ratio of the miter
            length to the 'lineWidth'. The default value is 4.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokePattern">
            <summary>
            Gets or sets the pattern image to use while stroking object outlines.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.StrokeWidth">
            <summary>
            Gets or sets the stroke width for drawing lines, circles, ellipses, etc.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextAntiAlias">
            <summary>
            Gets or sets a value indicating whether Postscript and TrueType fonts should be anti-aliased (default true).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextDirection">
            <summary>
            Gets or sets text direction (right-to-left or left-to-right).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextEncoding">
            <summary>
            Gets or sets the text annotation encoding (e.g. "UTF-16").
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextGravity">
            <summary>
            Gets or sets the text annotation gravity.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextInterlineSpacing">
            <summary>
            Gets or sets the text inter-line spacing.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextInterwordSpacing">
            <summary>
            Gets or sets the text inter-word spacing.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextKerning">
            <summary>
            Gets or sets the text inter-character kerning.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.TextUnderColor">
            <summary>
            Gets or sets the text undercolor box.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Verbose">
            <summary>
            Gets or sets a value indicating whether verbose output os turned on or off.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Extract">
            <summary>
            Gets or sets the specified area to extract from the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.NumberScenes">
            <summary>
            Gets or sets the number of scenes.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Monochrome">
            <summary>
            Gets or sets a value indicating whether a monochrome reader should be used.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Scene">
            <summary>
            Gets or sets the active scene.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSettings.Scenes">
            <summary>
            Gets or sets scenes of the image.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickSettings.GetDefine(ImageMagick.MagickFormat,System.String)">
            <summary>
            Returns the value of a format-specific option.
            </summary>
            <param name="format">The format to get the option for.</param>
            <param name="name">The name of the option.</param>
            <returns>The value of a format-specific option.</returns>
        </member>
        <member name="M:ImageMagick.MagickSettings.GetDefine(System.String)">
            <summary>
            Returns the value of a format-specific option.
            </summary>
            <param name="name">The name of the option.</param>
            <returns>The value of a format-specific option.</returns>
        </member>
        <member name="M:ImageMagick.MagickSettings.RemoveDefine(ImageMagick.MagickFormat,System.String)">
            <summary>
            Removes the define with the specified name.
            </summary>
            <param name="format">The format to set the define for.</param>
            <param name="name">The name of the define.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.RemoveDefine(System.String)">
            <summary>
            Removes the define with the specified name.
            </summary>
            <param name="name">The name of the define.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.SetDefine(ImageMagick.MagickFormat,System.String,System.Boolean)">
            <summary>
            Sets a format-specific option.
            </summary>
            <param name="format">The format to set the define for.</param>
            <param name="name">The name of the define.</param>
            <param name="flag">The value of the define.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.SetDefine(ImageMagick.MagickFormat,System.String,System.Int32)">
            <summary>
            Sets a format-specific option.
            </summary>
            <param name="format">The format to set the define for.</param>
            <param name="name">The name of the define.</param>
            <param name="value">The value of the define.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.SetDefine(ImageMagick.MagickFormat,System.String,System.String)">
            <summary>
            Sets a format-specific option.
            </summary>
            <param name="format">The format to set the option for.</param>
            <param name="name">The name of the option.</param>
            <param name="value">The value of the option.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.SetDefine(System.String,System.String)">
            <summary>
            Sets a format-specific option.
            </summary>
            <param name="name">The name of the option.</param>
            <param name="value">The value of the option.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.SetDefines(ImageMagick.IDefines)">
            <summary>
            Sets format-specific options with the specified defines.
            </summary>
            <param name="defines">The defines to set.</param>
        </member>
        <member name="M:ImageMagick.MagickSettings.CopyFrom(ImageMagick.MagickSettings)">
            <summary>
            Copies the settings from the specified <see cref="T:ImageMagick.MagickSettings"/>.
            </summary>
            <param name="settings">The settings to copy the data from.</param>
        </member>
        <member name="T:ImageMagick.MontageSettings">
            <summary>
            Class that contains setting for the montage operation.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.BackgroundColor">
            <summary>
            Gets or sets the color of the background that thumbnails are composed on.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.BorderColor">
            <summary>
            Gets or sets the frame border color.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.BorderWidth">
            <summary>
            Gets or sets the pixels between thumbnail and surrounding frame.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Font">
            <summary>
            Gets or sets the label font.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.FontPointsize">
            <summary>
            Gets or sets the font point size.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.FrameGeometry">
            <summary>
            Gets or sets the frame geometry (width &amp; height frame thickness).
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Geometry">
            <summary>
            Gets or sets the thumbnail width &amp; height plus border width &amp; height.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Gravity">
            <summary>
            Gets or sets the thumbnail position (e.g. SouthWestGravity).
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Label">
            <summary>
            Gets or sets the thumbnail label (applied to image prior to montage).
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Shadow">
            <summary>
            Gets or sets a value indicating whether drop-shadows on thumbnails are enabled or disabled.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.StrokeColor">
            <summary>
            Gets or sets the outline color.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.TextureFileName">
            <summary>
            Gets or sets the background texture image.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.TileGeometry">
            <summary>
            Gets or sets the frame geometry (width &amp; height frame thickness).
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.Title">
            <summary>
            Gets or sets the montage title.
            </summary>
        </member>
        <member name="P:ImageMagick.MontageSettings.TransparentColor">
            <summary>
            Gets or sets the transparent color.
            </summary>
        </member>
        <member name="T:ImageMagick.QuantizeSettings">
            <summary>
            Class that contains setting for quantize operations.
            </summary>
        </member>
        <member name="M:ImageMagick.QuantizeSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.QuantizeSettings"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.QuantizeSettings.Colors">
            <summary>
            Gets or sets the maximum number of colors to quantize to.
            </summary>
        </member>
        <member name="P:ImageMagick.QuantizeSettings.ColorSpace">
            <summary>
            Gets or sets the colorspace to quantize in.
            </summary>
        </member>
        <member name="P:ImageMagick.QuantizeSettings.DitherMethod">
            <summary>
            Gets or sets the dither method to use.
            </summary>
        </member>
        <member name="P:ImageMagick.QuantizeSettings.MeasureErrors">
            <summary>
            Gets or sets a value indicating whether errors should be measured.
            </summary>
        </member>
        <member name="P:ImageMagick.QuantizeSettings.TreeDepth">
            <summary>
            Gets or sets the quantization tree-depth.
            </summary>
        </member>
        <member name="T:ImageMagick.ChannelMoments">
            <summary>
            The normalized moments of one image channels.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.Centroid">
            <summary>
            Gets the centroid.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.Channel">
            <summary>
            Gets the channel of this moment.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.EllipseAxis">
            <summary>
            Gets the ellipse axis.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.EllipseAngle">
            <summary>
            Gets the ellipse angle.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.EllipseEccentricity">
            <summary>
            Gets the ellipse eccentricity.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelMoments.EllipseIntensity">
            <summary>
            Gets the ellipse intensity.
            </summary>
        </member>
        <member name="M:ImageMagick.ChannelMoments.HuInvariants(System.Int32)">
            <summary>
            Returns the Hu invariants.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The Hu invariants.</returns>
        </member>
        <member name="T:ImageMagick.ChannelPerceptualHash">
            <summary>
            Contains the he perceptual hash of one image channel.
            </summary>
        </member>
        <member name="M:ImageMagick.ChannelPerceptualHash.#ctor(ImageMagick.PixelChannel,System.Double[],System.Double[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.ChannelPerceptualHash"/> class.
            </summary>
            <param name="channel">The channel.</param>
            <param name="srgbHuPhash">SRGB hu perceptual hash.</param>
            <param name="hclpHuPhash">Hclp hu perceptual hash.</param>
            <param name="hash">A string representation of this hash.</param>
        </member>
        <member name="P:ImageMagick.ChannelPerceptualHash.Channel">
            <summary>
            Gets the channel.
            </summary>
        </member>
        <member name="M:ImageMagick.ChannelPerceptualHash.SrgbHuPhash(System.Int32)">
            <summary>
            SRGB hu perceptual hash.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The SRGB hu perceptual hash.</returns>
        </member>
        <member name="M:ImageMagick.ChannelPerceptualHash.HclpHuPhash(System.Int32)">
            <summary>
            Hclp hu perceptual hash.
            </summary>
            <param name="index">The index to use.</param>
            <returns>The Hclp hu perceptual hash.</returns>
        </member>
        <member name="M:ImageMagick.ChannelPerceptualHash.SumSquaredDistance(ImageMagick.IChannelPerceptualHash)">
            <summary>
            Returns the sum squared difference between this hash and the other hash.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.ChannelPerceptualHash"/> to get the distance of.</param>
            <returns>The sum squared difference between this hash and the other hash.</returns>
        </member>
        <member name="M:ImageMagick.ChannelPerceptualHash.ToString">
            <summary>
            Returns a string representation of this hash.
            </summary>
            <returns>A string representation of this hash.</returns>
        </member>
        <member name="T:ImageMagick.ChannelStatistics">
            <summary>
            Encapsulation of the ImageMagick ImageChannelStatistics object.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Channel">
            <summary>
            Gets the channel.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Depth">
            <summary>
            Gets the depth of the channel.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Entropy">
            <summary>
            Gets the entropy.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Kurtosis">
            <summary>
            Gets the kurtosis.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Maximum">
            <summary>
            Gets the maximum value observed.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Mean">
            <summary>
            Gets the average (mean) value observed.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Minimum">
            <summary>
            Gets the minimum value observed.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Skewness">
            <summary>
            Gets the skewness.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.StandardDeviation">
            <summary>
            Gets the standard deviation, sqrt(variance).
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Sum">
            <summary>
            Gets the sum.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.SumCubed">
            <summary>
            Gets the sum cubed.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.SumFourthPower">
            <summary>
            Gets the sum fourth power.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.SumSquared">
            <summary>
            Gets the sum squared.
            </summary>
        </member>
        <member name="P:ImageMagick.ChannelStatistics.Variance">
            <summary>
            Gets the variance.
            </summary>
        </member>
        <member name="M:ImageMagick.ChannelStatistics.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:ImageMagick.ChannelStatistics"/>.
            </summary>
            <param name="obj">The object to compare this <see cref="T:ImageMagick.ChannelStatistics"/> with.</param>
            <returns>True when the specified object is equal to the current <see cref="T:ImageMagick.ChannelStatistics"/>.</returns>
        </member>
        <member name="M:ImageMagick.ChannelStatistics.Equals(ImageMagick.IChannelStatistics)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.IChannelStatistics"/> is equal to the current <see cref="T:ImageMagick.ChannelStatistics"/>.
            </summary>
            <param name="other">The channel statistics to compare this <see cref="T:ImageMagick.ChannelStatistics"/> with.</param>
            <returns>True when the specified <see cref="T:ImageMagick.IChannelStatistics"/> is equal to the current <see cref="T:ImageMagick.ChannelStatistics"/>.</returns>
        </member>
        <member name="M:ImageMagick.ChannelStatistics.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="T:ImageMagick.Moments">
            <summary>
            The normalized moments of one or more image channels.
            </summary>
        </member>
        <member name="M:ImageMagick.Moments.Composite">
            <summary>
            Gets the moments for the all the channels.
            </summary>
            <returns>The moments for the all the channels.</returns>
        </member>
        <member name="M:ImageMagick.Moments.GetChannel(ImageMagick.PixelChannel)">
            <summary>
            Gets the moments for the specified channel.
            </summary>
            <param name="channel">The channel to get the moments for.</param>
            <returns>The moments for the specified channel.</returns>
        </member>
        <member name="T:ImageMagick.PerceptualHash">
            <summary>
            Contains the he perceptual hash of one or more image channels.
            </summary>
        </member>
        <member name="M:ImageMagick.PerceptualHash.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PerceptualHash"/> class.
            </summary>
            <param name="hash">The hash.</param>
        </member>
        <member name="M:ImageMagick.PerceptualHash.GetChannel(ImageMagick.PixelChannel)">
            <summary>
            Returns the perceptual hash for the specified channel.
            </summary>
            <param name="channel">The channel to get the has for.</param>
            <returns>The perceptual hash for the specified channel.</returns>
        </member>
        <member name="M:ImageMagick.PerceptualHash.SumSquaredDistance(ImageMagick.IPerceptualHash)">
            <summary>
            Returns the sum squared difference between this hash and the other hash.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.PerceptualHash"/> to get the distance of.</param>
            <returns>The sum squared difference between this hash and the other hash.</returns>
        </member>
        <member name="M:ImageMagick.PerceptualHash.ToString">
            <summary>
            Returns a string representation of this hash.
            </summary>
            <returns>A <see cref="T:System.String"/>.</returns>
        </member>
        <member name="T:ImageMagick.Statistics">
            <summary>
            Encapsulation of the ImageMagick ImageStatistics object.
            </summary>
        </member>
        <member name="P:ImageMagick.Statistics.Channels">
            <summary>
            Gets the channels.
            </summary>
        </member>
        <member name="M:ImageMagick.Statistics.Composite">
            <summary>
            Returns the statistics for the all the channels.
            </summary>
            <returns>The statistics for the all the channels.</returns>
        </member>
        <member name="M:ImageMagick.Statistics.GetChannel(ImageMagick.PixelChannel)">
            <summary>
            Returns the statistics for the specified channel.
            </summary>
            <param name="channel">The channel to get the statistics for.</param>
            <returns>The statistics for the specified channel.</returns>
        </member>
        <member name="M:ImageMagick.Statistics.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:ImageMagick.Statistics"/>.
            </summary>
            <param name="obj">The object to compare this <see cref="T:ImageMagick.Statistics"/> with.</param>
            <returns>Truw when the specified object is equal to the current <see cref="T:ImageMagick.Statistics"/>.</returns>
        </member>
        <member name="M:ImageMagick.Statistics.Equals(ImageMagick.IStatistics)">
            <summary>
            Determines whether the specified image statistics is equal to the current <see cref="T:ImageMagick.Statistics"/>.
            </summary>
            <param name="other">The image statistics to compare this <see cref="T:ImageMagick.Statistics"/> with.</param>
            <returns>True when the specified image statistics is equal to the current <see cref="T:ImageMagick.Statistics"/>.</returns>
        </member>
        <member name="M:ImageMagick.Statistics.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="T:ImageMagick.ConnectedComponent">
            <summary>
            Encapsulation of the ImageMagick connected component object.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Area">
            <summary>
            Gets the pixel count of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Centroid">
            <summary>
            Gets the centroid of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Color">
            <summary>
            Gets the color of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Height">
            <summary>
            Gets the height of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Id">
            <summary>
            Gets the id of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Width">
            <summary>
            Gets the width of the area.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.X">
            <summary>
            Gets the X offset from origin.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponent.Y">
            <summary>
            Gets the Y offset from origin.
            </summary>
        </member>
        <member name="M:ImageMagick.ConnectedComponent.ToGeometry">
            <summary>
            Returns the geometry of the area of this connected component.
            </summary>
            <returns>The geometry of the area of this connected component.</returns>
        </member>
        <member name="M:ImageMagick.ConnectedComponent.ToGeometry(System.Int32)">
            <summary>
            Returns the geometry of the area of this connected component.
            </summary>
            <param name="extent">The number of pixels to extent the image with.</param>
            <returns>The geometry of the area of this connected component.</returns>
        </member>
        <member name="T:ImageMagick.MagickGeometry">
            <summary>
            Encapsulation of the ImageMagick geometry object.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified width and height.
            </summary>
            <param name="widthAndHeight">The width and height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified width and height.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified offsets, width and height.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified width and height.
            </summary>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the  height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.Int32,System.Int32,ImageMagick.Percentage,ImageMagick.Percentage)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified offsets, width and height.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="percentageWidth">The percentage of the width.</param>
            <param name="percentageHeight">The percentage of the  height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickGeometry"/> class using the specified geometry.
            </summary>
            <param name="value">Geometry specifications in the form: &lt;width&gt;x&lt;height&gt;
            {+-}&lt;xoffset&gt;{+-}&lt;yoffset&gt; (where width, height, xoffset, and yoffset are numbers).</param>
        </member>
        <member name="P:ImageMagick.MagickGeometry.AspectRatio">
            <summary>
            Gets a value indicating whether the value is an aspect ratio.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.FillArea">
            <summary>
            Gets or sets a value indicating whether the image is resized based on the smallest fitting dimension (^).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.Greater">
            <summary>
            Gets or sets a value indicating whether the image is resized if image is greater than size (&gt;).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.Height">
            <summary>
            Gets or sets the height of the geometry.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.IgnoreAspectRatio">
            <summary>
            Gets or sets a value indicating whether the image is resized without preserving aspect ratio (!).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.IsPercentage">
            <summary>
            Gets or sets a value indicating whether the width and height are expressed as percentages.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.Less">
            <summary>
            Gets or sets a value indicating whether the image is resized if the image is less than size (&lt;).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.LimitPixels">
            <summary>
            Gets or sets a value indicating whether the image is resized using a pixel area count limit (@).
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.Width">
            <summary>
            Gets or sets the width of the geometry.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.X">
            <summary>
            Gets or sets the X offset from origin.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickGeometry.Y">
            <summary>
            Gets or sets the Y offset from origin.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_Explicit(System.String)~ImageMagick.MagickGeometry">
            <summary>
            Converts the specified string to an instance of this type.
            </summary>
            <param name="value">Geometry specifications in the form: &lt;width&gt;x&lt;height&gt;
            {+-}&lt;xoffset&gt;{+-}&lt;yoffset&gt; (where width, height, xoffset, and yoffset are numbers).</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_Equality(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickGeometry"/> instances are considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_Inequality(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.MagickGeometry"/> instances are not considered equal.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_GreaterThan(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickGeometry"/>  is more than the second <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_LessThan(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickGeometry"/> is less than the second <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_GreaterThanOrEqual(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickGeometry"/> is more than or equal to the second <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.op_LessThanOrEqual(ImageMagick.MagickGeometry,ImageMagick.MagickGeometry)">
            <summary>
            Determines whether the first <see cref="T:ImageMagick.MagickGeometry"/> is less than or equal to the second <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="left">The first <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
            <param name="right"> The second <see cref="T:ImageMagick.MagickGeometry"/> to compare.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.FromPageSize(System.String)">
            <summary>
            Initializes a new <see cref="T:ImageMagick.IMagickGeometry"/> instance using the specified page size.
            </summary>
            <param name="pageSize">The page size.</param>
            <returns>A <see cref="T:ImageMagick.IMagickGeometry"/> instance that represents the specified page size.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.CompareTo(ImageMagick.IMagickGeometry)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="other">The object to compare this geometry with.</param>
            <returns>A signed number indicating the relative values of this instance and value.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="obj">The object to compare this <see cref="T:ImageMagick.MagickGeometry"/> with.</param>
            <returns>True when the specified object is equal to the current <see cref="T:ImageMagick.MagickGeometry"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.Equals(ImageMagick.IMagickGeometry)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.IMagickGeometry"/> is equal to the current <see cref="T:ImageMagick.MagickGeometry"/>.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.IMagickGeometry"/> to compare this <see cref="T:ImageMagick.MagickGeometry"/> with.</param>
            <returns>True when the specified <see cref="T:ImageMagick.IMagickGeometry"/> is equal to the current <see cref="T:ImageMagick.MagickGeometry"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.Initialize(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the geometry using the sepcified value.
            </summary>
            <param name="x">The X offset from origin.</param>
            <param name="y">The Y offset from origin.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:ImageMagick.MagickGeometry.ToPoint">
            <summary>
            Returns a <see cref="T:ImageMagick.PointD"/> that represents the position of the current <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <returns>A <see cref="T:ImageMagick.PointD"/> that represents the position of the current <see cref="T:ImageMagick.IMagickGeometry"/>.</returns>
        </member>
        <member name="M:ImageMagick.MagickGeometry.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:ImageMagick.IMagickGeometry"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:ImageMagick.IMagickGeometry"/>.</returns>
        </member>
        <member name="T:ImageMagick.PrimaryInfo">
            <summary>
            PrimaryInfo information.
            </summary>
        </member>
        <member name="M:ImageMagick.PrimaryInfo.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PrimaryInfo"/> class.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <param name="z">The z value.</param>
        </member>
        <member name="P:ImageMagick.PrimaryInfo.X">
            <summary>
            Gets the X value.
            </summary>
        </member>
        <member name="P:ImageMagick.PrimaryInfo.Y">
            <summary>
            Gets the Y value.
            </summary>
        </member>
        <member name="P:ImageMagick.PrimaryInfo.Z">
            <summary>
            Gets the Z value.
            </summary>
        </member>
        <member name="M:ImageMagick.PrimaryInfo.Equals(ImageMagick.IPrimaryInfo)">
            <summary>
            Determines whether the specified <see cref="T:ImageMagick.IPrimaryInfo"/> is equal to the current <see cref="T:ImageMagick.PrimaryInfo"/>.
            </summary>
            <param name="other">The <see cref="T:ImageMagick.IPrimaryInfo"/> to compare this <see cref="T:ImageMagick.PrimaryInfo"/> with.</param>
            <returns>True when the specified <see cref="T:ImageMagick.IPrimaryInfo"/> is equal to the current <see cref="T:ImageMagick.PrimaryInfo"/>.</returns>
        </member>
        <member name="M:ImageMagick.PrimaryInfo.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="T:ImageMagick.TypeMetric">
            <summary>
            Used to obtain font metrics for text string given current font, pointsize, and density settings.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.Ascent">
            <summary>
            Gets the ascent, the distance in pixels from the text baseline to the highest/upper grid coordinate
            used to place an outline point.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.Descent">
            <summary>
            Gets the descent, the distance in pixels from the baseline to the lowest grid coordinate used to
            place an outline point. Always a negative value.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.MaxHorizontalAdvance">
            <summary>
            Gets the maximum horizontal advance in pixels.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.TextHeight">
            <summary>
            Gets the text height in pixels.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.TextWidth">
            <summary>
            Gets the text width in pixels.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.UnderlinePosition">
            <summary>
            Gets the underline position.
            </summary>
        </member>
        <member name="P:ImageMagick.TypeMetric.UnderlineThickness">
            <summary>
            Gets the underline thickness.
            </summary>
        </member>
        <member name="T:ImageMagick.ImageOptimizer">
            <summary>
            Class that can be used to optimize an image.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizer.IgnoreUnsupportedFormats">
            <summary>
            Gets or sets a value indicating whether to skip unsupported files instead of throwing an exception.
            </summary>
        </member>
        <member name="P:ImageMagick.ImageOptimizer.OptimalCompression">
            <summary>
            Gets or sets a value indicating whether various compression types will be used to find
            the smallest file. This process will take extra time because the file has to be written
            multiple times.
            </summary>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.Compress(System.IO.FileInfo)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="file">The image file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.Compress(System.String)">
            <summary>
            Performs compression on the specified file. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new file size is not
            smaller the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.Compress(System.IO.Stream)">
            <summary>
            Performs compression on the specified stream. With some formats the image will be decoded
            and encoded and this will result in a small quality reduction. If the new size is not
            smaller the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.IsSupported(System.IO.FileInfo)">
            <summary>
            Returns true when the supplied file name is supported based on the extension of the file.
            </summary>
            <param name="file">The file to check.</param>
            <returns>True when the supplied file name is supported based on the extension of the file.</returns>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.IsSupported(ImageMagick.IMagickFormatInfo)">
            <summary>
            Returns true when the supplied formation information is supported.
            </summary>
            <param name="formatInfo">The format information to check.</param>
            <returns>True when the supplied formation information is supported.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.IsSupported(System.String)">
            <summary>
            Returns true when the supplied file name is supported based on the extension of the file.
            </summary>
            <param name="fileName">The name of the file to check.</param>
            <returns>True when the supplied file name is supported based on the extension of the file.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.IsSupported(System.IO.Stream)">
            <summary>
            Returns true when the supplied stream is supported.
            </summary>
            <param name="stream">The stream to check.</param>
            <returns>True when the supplied stream is supported.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.LosslessCompress(System.IO.FileInfo)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="file">The image file to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.LosslessCompress(System.String)">
            <summary>
            Performs lossless compression on the specified file. If the new file size is not smaller
            the file won't be overwritten.
            </summary>
            <param name="fileName">The file name of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="M:ImageMagick.ImageOptimizer.LosslessCompress(System.IO.Stream)">
            <summary>
            Performs lossless compression on the specified stream. If the new stream size is not smaller
            the stream won't be overwritten.
            </summary>
            <param name="stream">The stream of the image to compress.</param>
            <returns>True when the image could be compressed otherwise false.</returns>
        </member>
        <member name="T:ImageMagick.Pixel">
            <summary>
            Class that can be used to access an individual pixel of an image.
            </summary>
        </member>
        <member name="M:ImageMagick.Pixel.#ctor(System.Int32,System.Int32,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Pixel"/> class.
            </summary>
            <param name="x">The X coordinate of the pixel.</param>
            <param name="y">The Y coordinate of the pixel.</param>
            <param name="value">The value of the pixel.</param>
        </member>
        <member name="M:ImageMagick.Pixel.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.Pixel"/> class.
            </summary>
            <param name="x">The X coordinate of the pixel.</param>
            <param name="y">The Y coordinate of the pixel.</param>
            <param name="channels">The number of channels.</param>
        </member>
        <member name="P:ImageMagick.Pixel.Channels">
            <summary>
            Gets the number of channels that the pixel contains.
            </summary>
        </member>
        <member name="P:ImageMagick.Pixel.X">
            <summary>
            Gets the X coordinate of the pixel.
            </summary>
        </member>
        <member name="P:ImageMagick.Pixel.Y">
            <summary>
            Gets the Y coordinate of the pixel.
            </summary>
        </member>
        <member name="P:ImageMagick.Pixel.Item(System.Int32)">
            <summary>
            Returns the value of the specified channel.
            </summary>
            <param name="channel">The channel to get the value for.</param>
        </member>
        <member name="M:ImageMagick.Pixel.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current pixel.
            </summary>
            <param name="obj">The object to compare pixel color with.</param>
            <returns>True when the specified object is equal to the current pixel.</returns>
        </member>
        <member name="M:ImageMagick.Pixel.Equals(ImageMagick.IPixel{System.Single})">
            <summary>
            Determines whether the specified pixel is equal to the current pixel.
            </summary>
            <param name="other">The pixel to compare this color with.</param>
            <returns>True when the specified pixel is equal to the current pixel.</returns>
        </member>
        <member name="M:ImageMagick.Pixel.GetChannel(System.Int32)">
            <summary>
            Returns the value of the specified channel.
            </summary>
            <param name="channel">The channel to get the value of.</param>
            <returns>The value of the specified channel.</returns>
        </member>
        <member name="M:ImageMagick.Pixel.GetHashCode">
            <summary>
            Serves as a hash of this type.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:ImageMagick.Pixel.SetChannel(System.Int32,System.Single)">
            <summary>
            Set the value of the specified channel.
            </summary>
            <param name="channel">The channel to set the value of.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ImageMagick.Pixel.SetValues(System.Single[])">
            <summary>
            Sets the values of this pixel.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:ImageMagick.Pixel.ToArray">
            <summary>
            Returns the value of this pixel as an array.
            </summary>
            <returns>A <see cref="T:System.Single"/> array.</returns>
        </member>
        <member name="M:ImageMagick.Pixel.ToColor">
            <summary>
            Converts the pixel to a color. Assumes the pixel is RGBA.
            </summary>
            <returns>A <see cref="T:ImageMagick.IMagickColor`1"/> instance.</returns>
        </member>
        <member name="T:ImageMagick.CompareSettings">
            <summary>
            Class that contains setting for the compare operations.
            </summary>
        </member>
        <member name="P:ImageMagick.CompareSettings.Metric">
            <summary>
            Gets or sets the error metric to use.
            </summary>
        </member>
        <member name="P:ImageMagick.CompareSettings.HighlightColor">
            <summary>
            Gets or sets the color that emphasize pixel differences.
            </summary>
        </member>
        <member name="P:ImageMagick.CompareSettings.LowlightColor">
            <summary>
            Gets or sets the color that de-emphasize pixel differences.
            </summary>
        </member>
        <member name="P:ImageMagick.CompareSettings.MasklightColor">
            <summary>
            Gets or sets the color of pixels that are inside the read mask.
            </summary>
        </member>
        <member name="T:ImageMagick.ComplexSettings">
            <summary>
            Class that contains setting for the complex operation.
            </summary>
        </member>
        <member name="P:ImageMagick.ComplexSettings.ComplexOperator">
            <summary>
            Gets or sets the complex operator.
            </summary>
        </member>
        <member name="P:ImageMagick.ComplexSettings.SignalToNoiseRatio">
            <summary>
            Gets or sets the signal to noise ratio.
            </summary>
        </member>
        <member name="T:ImageMagick.ConnectedComponentsSettings">
            <summary>
            Class that contains setting for the connected components operation.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.AngleThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max angle threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.AreaThreshold">
            <summary>
            Gets or sets the threshold that eliminate small objects by merging them with their larger neighbors.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.CircularityThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max circularity threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.Connectivity">
            <summary>
            Gets or sets how many neighbors to visit, choose from 4 or 8.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.DiameterThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max diameter threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.EccentricityThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max eccentricity threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.MajorAxisThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max ellipse major threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.MeanColor">
            <summary>
            Gets or sets a value indicating whether the object color in the labeled image will be replaced with the mean-color from the source image.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.MinorAxisThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max ellipse minor threshold.
            </summary>
        </member>
        <member name="P:ImageMagick.ConnectedComponentsSettings.PerimeterThreshold">
            <summary>
            Gets or sets the threshold that merges any object not within the min and max perimeter threshold.
            </summary>
        </member>
        <member name="T:ImageMagick.DeskewSettings">
            <summary>
            Class that contains setting for the deskew operation.
            </summary>
        </member>
        <member name="P:ImageMagick.DeskewSettings.AutoCrop">
            <summary>
            Gets or sets a value indicating whether the image should be auto cropped after deskewing.
            </summary>
        </member>
        <member name="P:ImageMagick.DeskewSettings.Threshold">
            <summary>
            Gets or sets the threshold.
            </summary>
        </member>
        <member name="T:ImageMagick.DistortSettings">
            <summary>
            Class that contains setting for the distort operation.
            </summary>
        </member>
        <member name="P:ImageMagick.DistortSettings.Bestfit">
            <summary>
            Gets or sets a value indicating whether distort attempt to 'bestfit' the size of the resulting image.
            </summary>
        </member>
        <member name="P:ImageMagick.DistortSettings.Scale">
            <summary>
            Gets or sets a value to scale the size of the output canvas by this amount to provide a method of
            Zooming, and for super-sampling the results.
            </summary>
        </member>
        <member name="P:ImageMagick.DistortSettings.Viewport">
            <summary>
            Gets or sets the viewport that directly set the output image canvas area and offest to use for the
            resulting image, rather than use the original images canvas, or a calculated 'bestfit' canvas.
            </summary>
        </member>
        <member name="T:ImageMagick.KmeansSettings">
            <summary>
            Class that contains setting for the kmeans operation.
            </summary>
        </member>
        <member name="P:ImageMagick.KmeansSettings.SeedColors">
            <summary>
            Gets or sets the seed clusters from color list (e.g. red;green;blue).
            </summary>
        </member>
        <member name="P:ImageMagick.KmeansSettings.NumberColors">
            <summary>
            Gets or sets the number of colors to use as seeds.
            </summary>
        </member>
        <member name="P:ImageMagick.KmeansSettings.MaxIterations">
            <summary>
            Gets or sets the maximum number of iterations while converging.
            </summary>
        </member>
        <member name="P:ImageMagick.KmeansSettings.Tolerance">
            <summary>
            Gets or sets the maximum tolerance.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickReadSettings">
            <summary>
            Class that contains setting for when an image is being read.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickReadSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickReadSettings"/> class.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickReadSettings.#ctor(ImageMagick.IReadDefines)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MagickReadSettings"/> class with the specified defines.
            </summary>
            <param name="readDefines">The read defines to set.</param>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.Defines">
            <summary>
            Gets or sets the defines that should be set before the image is read.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.ExtractArea">
            <summary>
            Gets or sets the specified area to extract from the image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.FrameIndex">
            <summary>
            Gets or sets the index of the image to read from a multi layer/frame image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.FrameCount">
            <summary>
            Gets or sets the number of images to read from a multi layer/frame image.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.UseMonochrome">
            <summary>
            Gets or sets a value indicating whether the monochrome reader shoul be used. This is
            supported by: PCL, PDF, PS and XPS.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickReadSettings.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="T:ImageMagick.MorphologySettings">
            <summary>
            Class that contains setting for the morphology operation.
            </summary>
        </member>
        <member name="M:ImageMagick.MorphologySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.MorphologySettings"/> class.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.Channels">
            <summary>
            Gets or sets the channels to apply the kernel to.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.ConvolveBias">
            <summary>
            Gets or sets the bias to use when the method is Convolve.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.ConvolveScale">
            <summary>
            Gets or sets the scale to use when the method is Convolve.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.Iterations">
            <summary>
            Gets or sets the number of iterations.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.Kernel">
            <summary>
            Gets or sets built-in kernel.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.KernelArguments">
            <summary>
            Gets or sets kernel arguments.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.Method">
            <summary>
            Gets or sets the morphology method.
            </summary>
        </member>
        <member name="P:ImageMagick.MorphologySettings.UserKernel">
            <summary>
            Gets or sets user suplied kernel.
            </summary>
        </member>
        <member name="T:ImageMagick.PixelReadSettings">
            <summary>
            Class that contains setting for when pixels are read.
            </summary>
        </member>
        <member name="M:ImageMagick.PixelReadSettings.#ctor(System.Int32,System.Int32,ImageMagick.StorageType,ImageMagick.PixelMapping)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PixelReadSettings"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="storageType">The pixel storage type.</param>
            <param name="mapping">The mapping of the pixels.</param>
        </member>
        <member name="M:ImageMagick.PixelReadSettings.#ctor(System.Int32,System.Int32,ImageMagick.StorageType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.PixelReadSettings"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="storageType">The pixel storage type.</param>
            <param name="mapping">The mapping of the pixels (e.g. RGB/RGBA/ARGB).</param>
        </member>
        <member name="P:ImageMagick.PixelReadSettings.Mapping">
            <summary>
            Gets or sets the mapping of the pixels (e.g. RGB/RGBA/ARGB).
            </summary>
        </member>
        <member name="P:ImageMagick.PixelReadSettings.StorageType">
            <summary>
            Gets or sets the pixel storage type.
            </summary>
        </member>
        <member name="P:ImageMagick.PixelReadSettings.ReadSettings">
            <summary>
            Gets the settings to use when reading the image.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickErrorInfo">
            <summary>
            Encapsulates the error information.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickErrorInfo.MeanErrorPerPixel">
            <summary>
            Gets the mean error per pixel computed when an image is color reduced.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickErrorInfo.NormalizedMaximumError">
            <summary>
            Gets the normalized maximum error per pixel computed when an image is color reduced.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickErrorInfo.NormalizedMeanError">
            <summary>
            Gets the normalized mean error per pixel computed when an image is color reduced.
            </summary>
        </member>
        <member name="T:ImageMagick.MagickSearchResult">
            <summary>
            Result for a sub image search operation.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSearchResult.BestMatch">
            <summary>
            Gets the offset for the best match.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSearchResult.SimilarityImage">
            <summary>
            Gets the a similarity image such that an exact match location is completely white and if none of
            the pixels match, black, otherwise some gray level in-between.
            </summary>
        </member>
        <member name="P:ImageMagick.MagickSearchResult.SimilarityMetric">
            <summary>
            Gets the similarity metric.
            </summary>
        </member>
        <member name="M:ImageMagick.MagickSearchResult.Dispose">
            <summary>
            Disposes the <see cref="T:ImageMagick.MagickSearchResult"/> instance.
            </summary>
        </member>
        <member name="T:ImageMagick.SparseColorArg">
            <summary>
            Represents an argument for the SparseColor method.
            </summary>
        </member>
        <member name="M:ImageMagick.SparseColorArg.#ctor(System.Double,System.Double,ImageMagick.IMagickColor{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ImageMagick.SparseColorArg"/> class.
            </summary>
            <param name="x">The X position.</param>
            <param name="y">The Y position.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:ImageMagick.SparseColorArg.X">
            <summary>
            Gets or sets the X position.
            </summary>
        </member>
        <member name="P:ImageMagick.SparseColorArg.Y">
            <summary>
            Gets or sets the Y position.
            </summary>
        </member>
        <member name="P:ImageMagick.SparseColorArg.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
    </members>
</doc>
